/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 251);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyFunction = __webpack_require__(8);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var DOMProperty = __webpack_require__(13);
var ReactDOMComponentFlags = __webpack_require__(70);

var invariant = __webpack_require__(1);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(20);

var ReactCurrentOwner = __webpack_require__(11);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty
  // Strip regex characters so we can use it for regex
  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
  // Remove hasOwnProperty from the template to make it generic
  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs,

  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
    if (typeof console.reactStack !== 'function') {
      return;
    }

    var stack = [];
    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    try {
      if (isCreatingElement) {
        stack.push({
          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
          fileName: currentSource ? currentSource.fileName : null,
          lineNumber: currentSource ? currentSource.lineNumber : null
        });
      }

      while (id) {
        var element = ReactComponentTreeHook.getElement(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
        var source = element && element._source;
        stack.push({
          name: ownerName,
          fileName: source ? source.fileName : null,
          lineNumber: source ? source.lineNumber : null
        });
        id = parentID;
      }
    } catch (err) {
      // Internal state is messed up.
      // Stop building the stack (it's just a nice to have).
    }

    console.reactStack(stack);
  },
  popNonStandardWarningStack: function () {
    if (typeof console.reactStackEnd !== 'function') {
      return;
    }
    console.reactStackEnd();
  }
};

module.exports = ReactComponentTreeHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (process.env.NODE_ENV !== 'production') {
  var ReactDebugTool = __webpack_require__(174);
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var CallbackQueue = __webpack_require__(68);
var PooledClass = __webpack_require__(15);
var ReactFeatureFlags = __webpack_require__(73);
var ReactReconciler = __webpack_require__(18);
var Transaction = __webpack_require__(31);

var invariant = __webpack_require__(1);

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

module.exports = ReactCurrentOwner;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var PooledClass = __webpack_require__(15);

var emptyFunction = __webpack_require__(8);
var warning = __webpack_require__(2);

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {
  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(19);


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var ReactCurrentOwner = __webpack_require__(11);

var warning = __webpack_require__(2);
var canDefineProperty = __webpack_require__(34);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = __webpack_require__(94);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMNamespaces = __webpack_require__(39);
var setInnerHTML = __webpack_require__(33);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(46);
var setTextContent = __webpack_require__(87);

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactRef = __webpack_require__(188);
var ReactInstrumentation = __webpack_require__(9);

var warning = __webpack_require__(2);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
  {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }
};

module.exports = ReactReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var ReactBaseClasses = __webpack_require__(93);
var ReactChildren = __webpack_require__(227);
var ReactDOMFactories = __webpack_require__(228);
var ReactElement = __webpack_require__(16);
var ReactPropTypes = __webpack_require__(230);
var ReactVersion = __webpack_require__(232);

var createReactClass = __webpack_require__(234);
var onlyChild = __webpack_require__(236);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var lowPriorityWarning = __webpack_require__(55);
  var canDefineProperty = __webpack_require__(34);
  var ReactElementValidator = __webpack_require__(95);
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;
var createMixin = function (mixin) {
  return mixin;
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForSpread = false;
  var warnedForCreateMixin = false;
  __spread = function () {
    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
    warnedForSpread = true;
    return _assign.apply(null, arguments);
  };

  createMixin = function (mixin) {
    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {
  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: createReactClass,
  createFactory: createFactory,
  createMixin: createMixin,

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForCreateClass = false;
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function () {
        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
        warnedForCreateClass = true;
        return createReactClass;
      }
    });
  }

  // React.DOM factories are deprecated. Wrap these methods so that
  // invocations of the React.DOM namespace and alert users to switch
  // to the `react-dom-factories` package.
  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories).forEach(function (factory) {
    React.DOM[factory] = function () {
      if (!warnedForFactories) {
        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
        warnedForFactories = true;
      }
      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
    };
  });
}

module.exports = React;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KEY_PREFIX", function() { return KEY_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REHYDRATE", function() { return REHYDRATE; });
var KEY_PREFIX = 'reduxPersist:';
var REHYDRATE = 'persist/REHYDRATE';

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var EventPluginRegistry = __webpack_require__(28);
var EventPluginUtils = __webpack_require__(40);
var ReactErrorUtils = __webpack_require__(44);

var accumulateInto = __webpack_require__(80);
var forEachAccumulated = __webpack_require__(81);
var invariant = __webpack_require__(1);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {
  /**
   * Methods for injecting dependencies.
   */
  injection: {
    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }
};

module.exports = EventPluginHub;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(22);
var EventPluginUtils = __webpack_require__(40);

var accumulateInto = __webpack_require__(80);
var forEachAccumulated = __webpack_require__(81);
var warning = __webpack_require__(2);

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {
  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }
};

module.exports = ReactInstanceMap;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(12);

var getEventTarget = __webpack_require__(49);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(135);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(142);




/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__["a" /* default */])(value) || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value) != objectTag) {
    return false;
  }
  var proto = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__getPrototype_js__["a" /* default */])(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ __webpack_exports__["a"] = (isPlainObject);


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {
  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }
};

module.exports = EventPluginRegistry;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var EventPluginRegistry = __webpack_require__(28);
var ReactEventEmitterMixin = __webpack_require__(178);
var ViewportMetrics = __webpack_require__(79);

var getVendorPrefixedEventName = __webpack_require__(213);
var isEventSupported = __webpack_require__(50);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {
          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }
});

module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(25);
var ViewportMetrics = __webpack_require__(79);

var getEventModifierState = __webpack_require__(48);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /* eslint-disable space-before-function-paren */

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    /* eslint-enable space-before-function-paren */
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */



// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(6);
var DOMNamespaces = __webpack_require__(39);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = __webpack_require__(46);

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xfeff) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 35 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMLazyTree = __webpack_require__(17);
var Danger = __webpack_require__(151);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactInstrumentation = __webpack_require__(9);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(46);
var setInnerHTML = __webpack_require__(33);
var setTextContent = __webpack_require__(87);

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (process.env.NODE_ENV !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {
  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (process.env.NODE_ENV !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: {
                toIndex: update.toIndex,
                content: update.content.toString()
              }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }
};

module.exports = DOMChildrenOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactErrorUtils = __webpack_require__(44);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactPropTypesSecret = __webpack_require__(78);
var propTypesFactory = __webpack_require__(64);

var React = __webpack_require__(19);
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

var injected = false;

var ReactComponentEnvironment = {
  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }
};

module.exports = ReactComponentEnvironment;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactCurrentOwner = __webpack_require__(11);
var ReactInstanceMap = __webpack_require__(24);
var ReactInstrumentation = __webpack_require__(9);
var ReactUpdates = __webpack_require__(10);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }
};

module.exports = ReactUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */



/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(6);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var emptyFunction = __webpack_require__(8);
var warning = __webpack_require__(2);

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Provider__ = __webpack_require__(216);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__connect_connect__ = __webpack_require__(217);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Provider", function() { return __WEBPACK_IMPORTED_MODULE_0__components_Provider__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "createProvider", function() { return __WEBPACK_IMPORTED_MODULE_0__components_Provider__["b"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "connectAdvanced", function() { return __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return __WEBPACK_IMPORTED_MODULE_2__connect_connect__["a"]; });






/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = warning;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = lowPriorityWarning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(106);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "createStore", function() { return __WEBPACK_IMPORTED_MODULE_0__createStore__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "combineReducers", function() { return __WEBPACK_IMPORTED_MODULE_1__combineReducers__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return __WEBPACK_IMPORTED_MODULE_4__compose__["a"]; });







/*
* This is a dummy function to check if the function name has been altered by minification.
* If the function has been minified and NODE_ENV !== 'production', warn the user.
*/
function isCrushed() {}

if (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_warning__["a" /* default */])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
}


/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = getData;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var data = __webpack_require__(250); // TODO replace with fetch

function getData(orFilter, sorting) {
  var resData = data.filter(function (issue) {
    return orFilter.filter(function (andFilter) {
      return andFilter.length !== 0;
    }).some(function (andFilter) {
      return andFilter.every(function (filter) {
        return issueSatisfiesFilter(filter, issue);
      });
    });
  });
  if (sorting === 'story') {
    return resData;
  } else {
    return [].concat(_toConsumableArray(resData)).sort(function (a, b) {
      if (a.year !== b.year) {
        return a.year - b.year;
      }
      return a.id - b.id;
    });
  }
}

function issueSatisfiesFilter(f, i) {
  if (f.type === 'name') {
    return i.name.toLowerCase().includes(f.query.toLowerCase());
  }
  if (f.type === 'credit') {
    return i.credits.some(function (credit) {
      return credit.toLowerCase() === f.query.toLowerCase();
    });
  }
  if (f.type === 'character') {
    return i.characters.some(function (character) {
      return character.toLowerCase() === f.query.toLowerCase();
    });
  }
  console.error(f);
  throw new Error('Strange filter');
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(getData, 'getData', '/home/peepee/chronoomic/react/b/src/data.js');

  __REACT_HOT_LOADER__.register(issueSatisfiesFilter, 'issueSatisfiesFilter', '/home/peepee/chronoomic/react/b/src/data.js');
}();

;

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setRead = setRead;
exports.setUnread = setUnread;
exports.removeFilter = removeFilter;
exports.addFilter = addFilter;
exports.filterDone = filterDone;
function setRead(link) {
  return {
    type: 'SET_READ',
    link: link
  };
}

function setUnread(link) {
  return {
    type: 'SET_UNREAD',
    link: link
  };
}

function removeFilter(i, j) {
  return {
    type: 'REMOVE_FILTER',
    i: i,
    j: j
  };
}

function addFilter(filter, andFilter) {
  return {
    type: 'ADD_FILTER',
    andFilter: andFilter,
    filter: filter
  };
}

function filterDone() {
  return {
    type: 'FILTER_DONE'
  };
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(setRead, 'setRead', '/home/peepee/chronoomic/react/b/src/redux/actionCreators.js');

  __REACT_HOT_LOADER__.register(setUnread, 'setUnread', '/home/peepee/chronoomic/react/b/src/redux/actionCreators.js');

  __REACT_HOT_LOADER__.register(removeFilter, 'removeFilter', '/home/peepee/chronoomic/react/b/src/redux/actionCreators.js');

  __REACT_HOT_LOADER__.register(addFilter, 'addFilter', '/home/peepee/chronoomic/react/b/src/redux/actionCreators.js');

  __REACT_HOT_LOADER__.register(filterDone, 'filterDone', '/home/peepee/chronoomic/react/b/src/redux/actionCreators.js');
}();

;

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isIssueRead = isIssueRead;
function isIssueRead(issue, readIssues) {
  return readIssues.includes(issue);
}

var defaultState = exports.defaultState = {
  filters: [[]],
  results: [],
  sorting: 'story',
  readIssues: []
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(isIssueRead, 'isIssueRead', '/home/peepee/chronoomic/react/b/src/redux/state.js');

  __REACT_HOT_LOADER__.register(defaultState, 'defaultState', '/home/peepee/chronoomic/react/b/src/redux/state.js');
}();

;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(8);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(141);


/** Built-in value references. */
var Symbol = __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */].Symbol;

/* harmony default export */ __webpack_exports__["a"] = (Symbol);


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = __webpack_require__(65);
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(8);
var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var ReactPropTypesSecret = __webpack_require__(37);
var checkPropTypes = __webpack_require__(143);

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(
          false,
          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(65)(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(144)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = __webpack_require__(15);

var invariant = __webpack_require__(1);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(13);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactInstrumentation = __webpack_require__(9);

var quoteAttributeValueForBrowser = __webpack_require__(214);
var warning = __webpack_require__(2);

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {
  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }
};

module.exports = DOMPropertyOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var LinkedValueUtils = __webpack_require__(42);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactUpdates = __webpack_require__(10);

var warning = __webpack_require__(2);

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMSelection = __webpack_require__(169);

var containsNode = __webpack_require__(120);
var focusNode = __webpack_require__(61);
var getActiveElement = __webpack_require__(62);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {
  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var DOMLazyTree = __webpack_require__(17);
var DOMProperty = __webpack_require__(13);
var React = __webpack_require__(19);
var ReactBrowserEventEmitter = __webpack_require__(29);
var ReactCurrentOwner = __webpack_require__(11);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactDOMContainerInfo = __webpack_require__(161);
var ReactDOMFeatureFlags = __webpack_require__(163);
var ReactFeatureFlags = __webpack_require__(73);
var ReactInstanceMap = __webpack_require__(24);
var ReactInstrumentation = __webpack_require__(9);
var ReactMarkupChecksum = __webpack_require__(183);
var ReactReconciler = __webpack_require__(18);
var ReactUpdateQueue = __webpack_require__(45);
var ReactUpdates = __webpack_require__(10);

var emptyObject = __webpack_require__(26);
var instantiateReactComponent = __webpack_require__(85);
var invariant = __webpack_require__(1);
var setInnerHTML = __webpack_require__(33);
var shouldUpdateReactComponent = __webpack_require__(51);
var warning = __webpack_require__(2);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, {
      child: nextElement
    });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (process.env.NODE_ENV !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var React = __webpack_require__(19);

var invariant = __webpack_require__(1);

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ViewportMetrics = {
  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }
};

module.exports = ViewportMetrics;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactNodeTypes = __webpack_require__(77);

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(6);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentTree = __webpack_require__(5);

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(inst) {
  return inst._wrapperState.valueTracker;
}

function attachTracker(inst, tracker) {
  inst._wrapperState.valueTracker = tracker;
}

function detachTracker(inst) {
  delete inst._wrapperState.valueTracker;
}

function getValueFromNode(node) {
  var value;
  if (node) {
    value = isCheckable(node) ? '' + node.checked : node.value;
  }
  return value;
}

var inputValueTracking = {
  // exposed for testing
  _getTrackerFromNode: function (node) {
    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
  },


  track: function (inst) {
    if (getTracker(inst)) {
      return;
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var valueField = isCheckable(node) ? 'checked' : 'value';
    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

    var currentValue = '' + node[valueField];

    // if someone has already defined a value or Safari, then bail
    // and don't track value will cause over reporting of changes,
    // but it's better then a hard failure
    // (needed for certain tests that spyOn input values and Safari)
    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
      return;
    }

    Object.defineProperty(node, valueField, {
      enumerable: descriptor.enumerable,
      configurable: true,
      get: function () {
        return descriptor.get.call(this);
      },
      set: function (value) {
        currentValue = '' + value;
        descriptor.set.call(this, value);
      }
    });

    attachTracker(inst, {
      getValue: function () {
        return currentValue;
      },
      setValue: function (value) {
        currentValue = '' + value;
      },
      stopTracking: function () {
        detachTracker(inst);
        delete node[valueField];
      }
    });
  },

  updateValueIfChanged: function (inst) {
    if (!inst) {
      return false;
    }
    var tracker = getTracker(inst);

    if (!tracker) {
      inputValueTracking.track(inst);
      return true;
    }

    var lastValue = tracker.getValue();
    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

    if (nextValue !== lastValue) {
      tracker.setValue(nextValue);
      return true;
    }

    return false;
  },
  stopTracking: function (inst) {
    var tracker = getTracker(inst);
    if (tracker) {
      tracker.stopTracking();
    }
  }
};

module.exports = inputValueTracking;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var ReactCompositeComponent = __webpack_require__(158);
var ReactEmptyComponent = __webpack_require__(72);
var ReactHostComponent = __webpack_require__(74);

var getNextDebugID = __webpack_require__(235);
var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (process.env.NODE_ENV !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(6);
var escapeTextContentForBrowser = __webpack_require__(32);
var setInnerHTML = __webpack_require__(33);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactCurrentOwner = __webpack_require__(11);
var REACT_ELEMENT_TYPE = __webpack_require__(177);

var getIteratorFn = __webpack_require__(211);
var invariant = __webpack_require__(1);
var KeyEscapeUtils = __webpack_require__(41);
var warning = __webpack_require__(2);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = connectAdvanced;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__ = __webpack_require__(132);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(133);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__ = __webpack_require__(91);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }








var hotReloadingVersion = 0;
var dummyState = {};
function noop() {}
function makeSelectorStateful(sourceSelector, store) {
  // wrap the selector in an object that tracks its results between runs.
  var selector = {
    run: function runComponentSelector(props) {
      try {
        var nextProps = sourceSelector(store.getState(), props);
        if (nextProps !== selector.props || selector.error) {
          selector.shouldComponentUpdate = true;
          selector.props = nextProps;
          selector.error = null;
        }
      } catch (error) {
        selector.shouldComponentUpdate = true;
        selector.error = error;
      }
    }
  };

  return selector;
}

function connectAdvanced(
/*
  selectorFactory is a func that is responsible for returning the selector function used to
  compute new props from state, props, and dispatch. For example:
     export default connectAdvanced((dispatch, options) => (state, props) => ({
      thing: state.things[props.thingId],
      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
    }))(YourComponent)
   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
  outside of their selector as an optimization. Options passed to connectAdvanced are passed to
  the selectorFactory, along with displayName and WrappedComponent, as the second argument.
   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
  props. Do not use connectAdvanced directly without memoizing results between calls to your
  selector, otherwise the Connect component will re-render on every state or props change.
*/
selectorFactory) {
  var _contextTypes, _childContextTypes;

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$getDisplayName = _ref.getDisplayName,
      getDisplayName = _ref$getDisplayName === undefined ? function (name) {
    return 'ConnectAdvanced(' + name + ')';
  } : _ref$getDisplayName,
      _ref$methodName = _ref.methodName,
      methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
      _ref$renderCountProp = _ref.renderCountProp,
      renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
      _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
      shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
      _ref$storeKey = _ref.storeKey,
      storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
      _ref$withRef = _ref.withRef,
      withRef = _ref$withRef === undefined ? false : _ref$withRef,
      connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

  var subscriptionKey = storeKey + 'Subscription';
  var version = hotReloadingVersion++;

  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__["a" /* storeShape */], _contextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__["b" /* subscriptionShape */], _contextTypes);
  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__["b" /* subscriptionShape */], _childContextTypes);

  return function wrapWithConnect(WrappedComponent) {
    __WEBPACK_IMPORTED_MODULE_1_invariant___default()(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));

    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

    var displayName = getDisplayName(wrappedComponentName);

    var selectorFactoryOptions = _extends({}, connectOptions, {
      getDisplayName: getDisplayName,
      methodName: methodName,
      renderCountProp: renderCountProp,
      shouldHandleStateChanges: shouldHandleStateChanges,
      storeKey: storeKey,
      withRef: withRef,
      displayName: displayName,
      wrappedComponentName: wrappedComponentName,
      WrappedComponent: WrappedComponent
    });

    var Connect = function (_Component) {
      _inherits(Connect, _Component);

      function Connect(props, context) {
        _classCallCheck(this, Connect);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        _this.version = version;
        _this.state = {};
        _this.renderCount = 0;
        _this.store = props[storeKey] || context[storeKey];
        _this.propsMode = Boolean(props[storeKey]);
        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

        __WEBPACK_IMPORTED_MODULE_1_invariant___default()(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

        _this.initSelector();
        _this.initSubscription();
        return _this;
      }

      Connect.prototype.getChildContext = function getChildContext() {
        var _ref2;

        // If this component received store from props, its subscription should be transparent
        // to any descendants receiving store+subscription from context; it passes along
        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
        // Connect to control ordering of notifications to flow top-down.
        var subscription = this.propsMode ? null : this.subscription;
        return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
      };

      Connect.prototype.componentDidMount = function componentDidMount() {
        if (!shouldHandleStateChanges) return;

        // componentWillMount fires during server side rendering, but componentDidMount and
        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
        // To handle the case where a child component may have triggered a state change by
        // dispatching an action in its componentWillMount, we have to re-run the select and maybe
        // re-render.
        this.subscription.trySubscribe();
        this.selector.run(this.props);
        if (this.selector.shouldComponentUpdate) this.forceUpdate();
      };

      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        this.selector.run(nextProps);
      };

      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
        return this.selector.shouldComponentUpdate;
      };

      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
        if (this.subscription) this.subscription.tryUnsubscribe();
        this.subscription = null;
        this.notifyNestedSubs = noop;
        this.store = null;
        this.selector.run = noop;
        this.selector.shouldComponentUpdate = false;
      };

      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
        __WEBPACK_IMPORTED_MODULE_1_invariant___default()(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
        return this.wrappedInstance;
      };

      Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
        this.wrappedInstance = ref;
      };

      Connect.prototype.initSelector = function initSelector() {
        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
        this.selector = makeSelectorStateful(sourceSelector, this.store);
        this.selector.run(this.props);
      };

      Connect.prototype.initSubscription = function initSubscription() {
        if (!shouldHandleStateChanges) return;

        // parentSub's source should match where store came from: props vs. context. A component
        // connected to the store via props shouldn't use subscription from context, or vice versa.
        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
        this.subscription = new __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__["a" /* default */](this.store, parentSub, this.onStateChange.bind(this));

        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
        // the middle of the notification loop, where `this.subscription` will then be null. An
        // extra null check every change can be avoided by copying the method onto `this` and then
        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
        // listeners logic is changed to not call listeners that have been unsubscribed in the
        // middle of the notification loop.
        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
      };

      Connect.prototype.onStateChange = function onStateChange() {
        this.selector.run(this.props);

        if (!this.selector.shouldComponentUpdate) {
          this.notifyNestedSubs();
        } else {
          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
          this.setState(dummyState);
        }
      };

      Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
        // needs to notify nested subs. Once called, it unimplements itself until further state
        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
        // a boolean check every time avoids an extra method call most of the time, resulting
        // in some perf boost.
        this.componentDidUpdate = undefined;
        this.notifyNestedSubs();
      };

      Connect.prototype.isSubscribed = function isSubscribed() {
        return Boolean(this.subscription) && this.subscription.isSubscribed();
      };

      Connect.prototype.addExtraProps = function addExtraProps(props) {
        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
        // make a shallow copy so that fields added don't leak to the original selector.
        // this is especially important for 'ref' since that's a reference back to the component
        // instance. a singleton memoized selector would then be holding a reference to the
        // instance, preventing the instance from being garbage collected, and that would be bad
        var withExtras = _extends({}, props);
        if (withRef) withExtras.ref = this.setWrappedInstance;
        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
        return withExtras;
      };

      Connect.prototype.render = function render() {
        var selector = this.selector;
        selector.shouldComponentUpdate = false;

        if (selector.error) {
          throw selector.error;
        } else {
          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_react__["createElement"])(WrappedComponent, this.addExtraProps(selector.props));
        }
      };

      return Connect;
    }(__WEBPACK_IMPORTED_MODULE_2_react__["Component"]);

    Connect.WrappedComponent = WrappedComponent;
    Connect.displayName = displayName;
    Connect.childContextTypes = childContextTypes;
    Connect.contextTypes = contextTypes;
    Connect.propTypes = contextTypes;

    if (process.env.NODE_ENV !== 'production') {
      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
        var _this2 = this;

        // We are hot reloading!
        if (this.version !== version) {
          this.version = version;
          this.initSelector();

          // If any connected descendants don't hot reload (and resubscribe in the process), their
          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
          // listeners, this does mean that the old versions of connected descendants will still be
          // notified of state changes; however, their onStateChange function is a no-op so this
          // isn't a huge deal.
          var oldListeners = [];

          if (this.subscription) {
            oldListeners = this.subscription.listeners.get();
            this.subscription.tryUnsubscribe();
          }
          this.initSubscription();
          if (shouldHandleStateChanges) {
            this.subscription.trySubscribe();
            oldListeners.forEach(function (listener) {
              return _this2.subscription.listeners.subscribe(listener);
            });
          }
        }
      };
    }

    return __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default()(Connect, WrappedComponent);
  };
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["b"] = wrapMapToPropsConstant;
/* unused harmony export getDependsOnOwnProps */
/* harmony export (immutable) */ __webpack_exports__["a"] = wrapMapToPropsFunc;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(92);


function wrapMapToPropsConstant(getConstant) {
  return function initConstantSelector(dispatch, options) {
    var constant = getConstant(dispatch, options);

    function constantSelector() {
      return constant;
    }
    constantSelector.dependsOnOwnProps = false;
    return constantSelector;
  };
}

// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
// whether mapToProps needs to be invoked when props have changed.
// 
// A length of one signals that mapToProps does not depend on props from the parent component.
// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
// therefore not reporting its length accurately..
function getDependsOnOwnProps(mapToProps) {
  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
}

// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
// this function wraps mapToProps in a proxy function which does several things:
// 
//  * Detects whether the mapToProps function being called depends on props, which
//    is used by selectorFactory to decide if it should reinvoke on props changes.
//    
//  * On first call, handles mapToProps if returns another function, and treats that
//    new function as the true mapToProps for subsequent calls.
//    
//  * On first call, verifies the first result is a plain object, in order to warn
//    the developer that their mapToProps function is not returning a valid result.
//    
function wrapMapToPropsFunc(mapToProps, methodName) {
  return function initProxySelector(dispatch, _ref) {
    var displayName = _ref.displayName;

    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
    };

    // allow detectFactoryAndVerify to get ownProps
    proxy.dependsOnOwnProps = true;

    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
      proxy.mapToProps = mapToProps;
      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
      var props = proxy(stateOrDispatch, ownProps);

      if (typeof props === 'function') {
        proxy.mapToProps = props;
        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
        props = proxy(stateOrDispatch, ownProps);
      }

      if (process.env.NODE_ENV !== 'production') __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__["a" /* default */])(props, displayName, methodName);

      return props;
    };

    return proxy;
  };
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return subscriptionShape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return storeShape; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_prop_types__);


var subscriptionShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({
  trySubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  tryUnsubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  notifyNestedSubs: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  isSubscribed: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired
});

var storeShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({
  subscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  dispatch: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
  getState: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired
});

/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = verifyPlainObject;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__warning__ = __webpack_require__(54);



function verifyPlainObject(value, displayName, methodName) {
  if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__["a" /* default */])(value)) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__warning__["a" /* default */])(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
  }
}

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(20),
    _assign = __webpack_require__(4);

var ReactNoopUpdateQueue = __webpack_require__(96);

var canDefineProperty = __webpack_require__(34);
var emptyObject = __webpack_require__(26);
var invariant = __webpack_require__(1);
var lowPriorityWarning = __webpack_require__(55);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */



var ReactCurrentOwner = __webpack_require__(11);
var ReactComponentTreeHook = __webpack_require__(7);
var ReactElement = __webpack_require__(16);

var checkReactTypeSpec = __webpack_require__(233);

var canDefineProperty = __webpack_require__(34);
var getIteratorFn = __webpack_require__(97);
var warning = __webpack_require__(2);
var lowPriorityWarning = __webpack_require__(55);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {
  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
        ReactComponentTreeHook.popNonStandardWarningStack();
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }
};

module.exports = ReactElementValidator;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var warning = __webpack_require__(2);

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var BUFFERED_ACTION_RETURN = 'redux-action-buffer: buffered action'

var setImmediate = typeof global !== 'undefined' && typeof global.setImmediate !== 'undefined' ? global.setImmediate : setTimeout

module.exports = function bufferActions (breaker, cb) {
  var active = true
  var queue = []

  var breakerType = typeof breaker

  if (breakerType === 'string' || breakerType === 'symbol') {
    var actionType = breaker
    breaker = function (action) {
      if (action.type === actionType) return true
      else return false
    }
  }

  return function (store) {
    return function (next) {
      return function (action) {
        // console.log('next', next, action)
        if (!active) return next(action)
        if (breaker(action)) {
          active = false
          var result = next(action)
          setImmediate(function () {
            var queueResults = []
            queue.forEach(function (queuedAction) {
              var queuedActionResult = next(queuedAction)
              queueResults.push(queuedActionResult)
            })
            cb && cb(null, {
              results: queueResults,
              queue: queue
            })
          })
          return result
        } else {
          queue.push(action)
          // @TODO consider returning a dummy action, or maybe null for cleanliness
          return BUFFERED_ACTION_RETURN
        }
      }
    }
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = createPersistor;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__defaults_asyncLocalStorage__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__purgeStoredState__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_json_stringify_safe__ = __webpack_require__(134);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_json_stringify_safe___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_json_stringify_safe__);





function createPersistor(store, config) {
  // defaults
  var serializer = config.serialize === false ? function (data) {
    return data;
  } : defaultSerializer;
  var deserializer = config.serialize === false ? function (data) {
    return data;
  } : defaultDeserializer;
  var blacklist = config.blacklist || [];
  var whitelist = config.whitelist || false;
  var transforms = config.transforms || [];
  var debounce = config.debounce || false;
  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : __WEBPACK_IMPORTED_MODULE_0__constants__["KEY_PREFIX"];

  // pluggable state shape (e.g. immutablejs)
  var stateInit = config._stateInit || {};
  var stateIterator = config._stateIterator || defaultStateIterator;
  var stateGetter = config._stateGetter || defaultStateGetter;
  var stateSetter = config._stateSetter || defaultStateSetter;

  // storage with keys -> getAllKeys for localForage support
  var storage = config.storage || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__defaults_asyncLocalStorage__["a" /* default */])('local');
  if (storage.keys && !storage.getAllKeys) {
    storage.getAllKeys = storage.keys;
  }

  // initialize stateful values
  var lastState = stateInit;
  var paused = false;
  var storesToProcess = [];
  var timeIterator = null;

  store.subscribe(function () {
    if (paused) return;

    var state = store.getState();

    stateIterator(state, function (subState, key) {
      if (!passWhitelistBlacklist(key)) return;
      if (stateGetter(lastState, key) === stateGetter(state, key)) return;
      if (storesToProcess.indexOf(key) !== -1) return;
      storesToProcess.push(key);
    });

    // time iterator (read: debounce)
    if (timeIterator === null) {
      timeIterator = setInterval(function () {
        if (storesToProcess.length === 0) {
          clearInterval(timeIterator);
          timeIterator = null;
          return;
        }

        var key = storesToProcess.shift();
        var storageKey = createStorageKey(key);
        var endState = transforms.reduce(function (subState, transformer) {
          return transformer.in(subState, key);
        }, stateGetter(store.getState(), key));
        if (typeof endState !== 'undefined') storage.setItem(storageKey, serializer(endState), warnIfSetError(key));
      }, debounce);
    }

    lastState = state;
  });

  function passWhitelistBlacklist(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return false;
    if (blacklist.indexOf(key) !== -1) return false;
    return true;
  }

  function adhocRehydrate(incoming) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var state = {};
    if (options.serial) {
      stateIterator(incoming, function (subState, key) {
        try {
          var data = deserializer(subState);
          var value = transforms.reduceRight(function (interState, transformer) {
            return transformer.out(interState, key);
          }, data);
          state = stateSetter(state, key, value);
        } catch (err) {
          if (process.env.NODE_ENV !== 'production') console.warn('Error rehydrating data for key "' + key + '"', subState, err);
        }
      });
    } else state = incoming;

    store.dispatch(rehydrateAction(state));
    return state;
  }

  function createStorageKey(key) {
    return '' + keyPrefix + key;
  }

  // return `persistor`
  return {
    rehydrate: adhocRehydrate,
    pause: function pause() {
      paused = true;
    },
    resume: function resume() {
      paused = false;
    },
    purge: function purge(keys) {
      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__purgeStoredState__["a" /* default */])({ storage: storage, keyPrefix: keyPrefix }, keys);
    }
  };
}

function warnIfSetError(key) {
  return function setError(err) {
    if (err && process.env.NODE_ENV !== 'production') {
      console.warn('Error storing data for key:', key, err);
    }
  };
}

function defaultSerializer(data) {
  return __WEBPACK_IMPORTED_MODULE_3_json_stringify_safe___default()(data, null, null, function (k, v) {
    if (process.env.NODE_ENV !== 'production') return null;
    throw new Error('\n      redux-persist: cannot process cyclical state.\n      Consider changing your state structure to have no cycles.\n      Alternatively blacklist the corresponding reducer key.\n      Cycle encounted at key "' + k + '" with value "' + v + '".\n    ');
  });
}

function defaultDeserializer(serial) {
  return JSON.parse(serial);
}

function rehydrateAction(data) {
  return {
    type: __WEBPACK_IMPORTED_MODULE_0__constants__["REHYDRATE"],
    payload: data
  };
}

function defaultStateIterator(collection, callback) {
  return Object.keys(collection).forEach(function (key) {
    return callback(collection[key], key);
  });
}

function defaultStateGetter(state, key) {
  return state[key];
}

function defaultStateSetter(state, key, value) {
  state[key] = value;
  return state;
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 100 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_setImmediate__ = __webpack_require__(103);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var noStorage = function noStorage() {
  /* noop */return null;
};
if (process.env.NODE_ENV !== 'production') {
  noStorage = function noStorage() {
    console.error('redux-persist asyncLocalStorage requires a global localStorage object. Either use a different storage backend or if this is a universal redux application you probably should conditionally persist like so: https://gist.github.com/rt2zz/ac9eb396793f95ff3c3b');
    return null;
  };
}

function _hasStorage(storageType) {
  if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) !== 'object' || !(storageType in window)) {
    return false;
  }

  try {
    var storage = window[storageType];
    var testKey = 'redux-persist ' + storageType + ' test';
    storage.setItem(testKey, 'test');
    storage.getItem(testKey);
    storage.removeItem(testKey);
  } catch (e) {
    if (process.env.NODE_ENV !== 'production') console.warn('redux-persist ' + storageType + ' test failed, persistence will be disabled.');
    return false;
  }
  return true;
}

function hasLocalStorage() {
  return _hasStorage('localStorage');
}

function hasSessionStorage() {
  return _hasStorage('sessionStorage');
}

function getStorage(type) {
  if (type === 'local') {
    return hasLocalStorage() ? window.localStorage : { getItem: noStorage, setItem: noStorage, removeItem: noStorage, getAllKeys: noStorage };
  }
  if (type === 'session') {
    return hasSessionStorage() ? window.sessionStorage : { getItem: noStorage, setItem: noStorage, removeItem: noStorage, getAllKeys: noStorage };
  }
}

/* harmony default export */ __webpack_exports__["a"] = (function (type, config) {
  var storage = getStorage(type);
  return {
    getAllKeys: function getAllKeys(cb) {
      return new Promise(function (resolve, reject) {
        try {
          var keys = [];
          for (var i = 0; i < storage.length; i++) {
            keys.push(storage.key(i));
          }
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_setImmediate__["a" /* default */])(function () {
            cb && cb(null, keys);
            resolve(keys);
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    },
    getItem: function getItem(key, cb) {
      return new Promise(function (resolve, reject) {
        try {
          var s = storage.getItem(key);
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_setImmediate__["a" /* default */])(function () {
            cb && cb(null, s);
            resolve(s);
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    },
    setItem: function setItem(key, string, cb) {
      return new Promise(function (resolve, reject) {
        try {
          storage.setItem(key, string);
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_setImmediate__["a" /* default */])(function () {
            cb && cb(null);
            resolve();
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    },
    removeItem: function removeItem(key, cb) {
      return new Promise(function (resolve, reject) {
        try {
          storage.removeItem(key);
          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_setImmediate__["a" /* default */])(function () {
            cb && cb(null);
            resolve();
          });
        } catch (e) {
          cb && cb(e);
          reject(e);
        }
      });
    }
  };
});
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 101 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = getStoredState;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__defaults_asyncLocalStorage__ = __webpack_require__(100);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




function getStoredState(config, onComplete) {
  var storage = config.storage || __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__defaults_asyncLocalStorage__["a" /* default */])('local');
  var deserializer = config.serialize === false ? function (data) {
    return data;
  } : defaultDeserializer;
  var blacklist = config.blacklist || [];
  var whitelist = config.whitelist || false;
  var transforms = config.transforms || [];
  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : __WEBPACK_IMPORTED_MODULE_0__constants__["KEY_PREFIX"];

  // fallback getAllKeys to `keys` if present (LocalForage compatability)
  if (storage.keys && !storage.getAllKeys) storage = _extends({}, storage, { getAllKeys: storage.keys });

  var restoredState = {};
  var completionCount = 0;

  storage.getAllKeys(function (err, allKeys) {
    if (err) {
      if (process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error in storage.getAllKeys');
      complete(err);
    }

    var persistKeys = allKeys.filter(function (key) {
      return key.indexOf(keyPrefix) === 0;
    }).map(function (key) {
      return key.slice(keyPrefix.length);
    });
    var keysToRestore = persistKeys.filter(passWhitelistBlacklist);

    var restoreCount = keysToRestore.length;
    if (restoreCount === 0) complete(null, restoredState);
    keysToRestore.forEach(function (key) {
      storage.getItem(createStorageKey(key), function (err, serialized) {
        if (err && process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error restoring data for key:', key, err);else restoredState[key] = rehydrate(key, serialized);
        completionCount += 1;
        if (completionCount === restoreCount) complete(null, restoredState);
      });
    });
  });

  function rehydrate(key, serialized) {
    var state = null;

    try {
      var data = deserializer(serialized);
      state = transforms.reduceRight(function (subState, transformer) {
        return transformer.out(subState, key);
      }, data);
    } catch (err) {
      if (process.env.NODE_ENV !== 'production') console.warn('redux-persist/getStoredState: Error restoring data for key:', key, err);
    }

    return state;
  }

  function complete(err, restoredState) {
    onComplete(err, restoredState);
  }

  function passWhitelistBlacklist(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return false;
    if (blacklist.indexOf(key) !== -1) return false;
    return true;
  }

  function createStorageKey(key) {
    return '' + keyPrefix + key;
  }

  if (typeof onComplete !== 'function' && !!Promise) {
    return new Promise(function (resolve, reject) {
      onComplete = function onComplete(err, restoredState) {
        if (err) reject(err);else resolve(restoredState);
      };
    });
  }
}

function defaultDeserializer(serial) {
  return JSON.parse(serial);
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = purgeStoredState;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(21);


function purgeStoredState(config, keys) {
  var storage = config.storage;
  var keyPrefix = config.keyPrefix !== undefined ? config.keyPrefix : __WEBPACK_IMPORTED_MODULE_0__constants__["KEY_PREFIX"];

  // basic validation
  if (Array.isArray(config)) throw new Error('redux-persist: purgeStoredState requires config as a first argument (found array). An array of keys is the optional second argument.');
  if (!storage) throw new Error('redux-persist: config.storage required in purgeStoredState');

  if (typeof keys === 'undefined') {
    // if keys is not defined, purge all keys
    return new Promise(function (resolve, reject) {
      storage.getAllKeys(function (err, allKeys) {
        if (err) {
          if (process.env.NODE_ENV !== 'production') console.warn('redux-persist: error during purgeStoredState in storage.getAllKeys');
          reject(err);
        } else {
          resolve(purgeStoredState(config, allKeys.filter(function (key) {
            return key.indexOf(keyPrefix) === 0;
          }).map(function (key) {
            return key.slice(keyPrefix.length);
          })));
        }
      });
    });
  } else {
    // otherwise purge specified keys
    return Promise.all(keys.map(function (key) {
      return storage.removeItem('' + keyPrefix + key, warnIfRemoveError(key));
    }));
  }
}

function warnIfRemoveError(key) {
  return function removeError(err) {
    if (err && process.env.NODE_ENV !== 'production') {
      console.warn('Error storing data for key:', key, err);
    }
  };
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {var hasNativeSupport = typeof global !== 'undefined' && typeof global.setImmediate !== 'undefined';
var setImmediate = hasNativeSupport ? function (fn, ms) {
  return global.setImmediate(fn, ms);
} : function (fn, ms) {
  return setTimeout(fn, ms);
};

/* harmony default export */ __webpack_exports__["a"] = (setImmediate);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(35)))

/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = compose;
/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */

function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }

  if (funcs.length === 1) {
    return funcs[0];
  }

  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}

/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ActionTypes; });
/* harmony export (immutable) */ __webpack_exports__["a"] = createStore;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_symbol_observable__);



/**
 * These are private action types reserved by Redux.
 * For any unknown actions, you must return the current state.
 * If the current state is undefined, you must return the initial state.
 * Do not reference these action types directly in your code.
 */
var ActionTypes = {
  INIT: '@@redux/INIT'

  /**
   * Creates a Redux store that holds the state tree.
   * The only way to change the data in the store is to call `dispatch()` on it.
   *
   * There should only be a single store in your app. To specify how different
   * parts of the state tree respond to actions, you may combine several reducers
   * into a single reducer function by using `combineReducers`.
   *
   * @param {Function} reducer A function that returns the next state tree, given
   * the current state tree and the action to handle.
   *
   * @param {any} [preloadedState] The initial state. You may optionally specify it
   * to hydrate the state from the server in universal apps, or to restore a
   * previously serialized user session.
   * If you use `combineReducers` to produce the root reducer function, this must be
   * an object with the same shape as `combineReducers` keys.
   *
   * @param {Function} [enhancer] The store enhancer. You may optionally specify it
   * to enhance the store with third-party capabilities such as middleware,
   * time travel, persistence, etc. The only store enhancer that ships with Redux
   * is `applyMiddleware()`.
   *
   * @returns {Store} A Redux store that lets you read the state, dispatch actions
   * and subscribe to changes.
   */
};function createStore(reducer, preloadedState, enhancer) {
  var _ref2;

  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
    enhancer = preloadedState;
    preloadedState = undefined;
  }

  if (typeof enhancer !== 'undefined') {
    if (typeof enhancer !== 'function') {
      throw new Error('Expected the enhancer to be a function.');
    }

    return enhancer(createStore)(reducer, preloadedState);
  }

  if (typeof reducer !== 'function') {
    throw new Error('Expected the reducer to be a function.');
  }

  var currentReducer = reducer;
  var currentState = preloadedState;
  var currentListeners = [];
  var nextListeners = currentListeners;
  var isDispatching = false;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  /**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */
  function getState() {
    return currentState;
  }

  /**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */
  function subscribe(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;

    ensureCanMutateNextListeners();
    nextListeners.push(listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;

      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  /**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */
  function dispatch(action) {
    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__["a" /* default */])(action)) {
      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
    }

    if (typeof action.type === 'undefined') {
      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
    }

    if (isDispatching) {
      throw new Error('Reducers may not dispatch actions.');
    }

    try {
      isDispatching = true;
      currentState = currentReducer(currentState, action);
    } finally {
      isDispatching = false;
    }

    var listeners = currentListeners = nextListeners;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }

    return action;
  }

  /**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */
  function replaceReducer(nextReducer) {
    if (typeof nextReducer !== 'function') {
      throw new Error('Expected the nextReducer to be a function.');
    }

    currentReducer = nextReducer;
    dispatch({ type: ActionTypes.INIT });
  }

  /**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */
  function observable() {
    var _ref;

    var outerSubscribe = subscribe;
    return _ref = {
      /**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */
      subscribe: function subscribe(observer) {
        if (typeof observer !== 'object') {
          throw new TypeError('Expected the observer to be an object.');
        }

        function observeState() {
          if (observer.next) {
            observer.next(getState());
          }
        }

        observeState();
        var unsubscribe = outerSubscribe(observeState);
        return { unsubscribe: unsubscribe };
      }
    }, _ref[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = function () {
      return this;
    }, _ref;
  }

  // When a store is created, an "INIT" action is dispatched so that every
  // reducer returns their initial state. This effectively populates
  // the initial state tree.
  dispatch({ type: ActionTypes.INIT });

  return _ref2 = {
    dispatch: dispatch,
    subscribe: subscribe,
    getState: getState,
    replaceReducer: replaceReducer
  }, _ref2[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = observable, _ref2;
}

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = warning;
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */
function warning(message) {
  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error(message);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.
    throw new Error(message);
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
}

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(14);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(145);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRedux = __webpack_require__(53);

var _store = __webpack_require__(116);

var _Issues = __webpack_require__(112);

var _Filters = __webpack_require__(110);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var App = _react2.default.createElement(
  _reactRedux.Provider,
  {
    store: _store.store
  },
  _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(_Filters.FiltersContainer, null),
    _react2.default.createElement(_Issues.IssuesContainer, null)
  )
);

_reactDom2.default.render(App, document.getElementById('app'));

/*
import {VotingContainer} from './components/Voting';
import reducer from './redux/reducer';

import {
  HashRouter as Router,
  Route,
  Link,
} from 'react-router-dom';

const store = createStore(reducer);
store.dispatch({
  type: 'SET_NAMES',
  first: 'foobar',
  second: 'barfoo',
});

const votingFunc = () => {
  return <VotingContainer ></VotingContainer>;
};

const retard = () => {
  return <div>retard</div>;
};

const App =
  <Provider
    store={ store }
  >
    <Router>
      <div>
        <ul>
          <li><Link
            to='/'
          >
            voting
          </Link></li>
          <li><Link
            to='/retard'
          >
            Retard
          </Link></li>
        </ul>

        <Route
          exact
          path='/'
          component={ votingFunc }
        />
        <Route
          path='/retard'
          component={ retard }
        />
      </div>
    </Router>
  </Provider>;

ReactDOM.render(App, document.getElementById('app'));

*/

;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(App, 'App', '/home/peepee/chronoomic/react/b/src/index.jsx');
}();

;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Filter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(14);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Filter = exports.Filter = function (_React$PureComponent) {
  _inherits(Filter, _React$PureComponent);

  function Filter() {
    _classCallCheck(this, Filter);

    return _possibleConstructorReturn(this, (Filter.__proto__ || Object.getPrototypeOf(Filter)).apply(this, arguments));
  }

  _createClass(Filter, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        {
          className: 'filter'
        },
        _react2.default.createElement(
          'span',
          {
            className: 'filterDesc'
          },
          this.props.filter.type,
          '        : ',
          this.props.filter.query
        ),
        _react2.default.createElement(
          'span',
          {
            onClick: this.props.remove,
            className: 'filterX'
          },
          '        X'
        )
      );
    }
  }]);

  return Filter;
}(_react2.default.PureComponent);

;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Filter, 'Filter', '/home/peepee/chronoomic/react/b/src/components/Filter.jsx');
}();

;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilterRow = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(14);

var _react2 = _interopRequireDefault(_react);

var _Filter = __webpack_require__(108);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FilterAdd = function (_React$PureComponent) {
  _inherits(FilterAdd, _React$PureComponent);

  function FilterAdd() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, FilterAdd);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FilterAdd.__proto__ || Object.getPrototypeOf(FilterAdd)).call.apply(_ref, [this].concat(args))), _this), _this.state = { type: 'name', query: '' }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(FilterAdd, [{
    key: 'handleTypeChange',
    value: function handleTypeChange(event) {
      this.setState({ type: event.target.value });
    }
  }, {
    key: 'handleQueryChange',
    value: function handleQueryChange(event) {
      this.setState({ query: event.target.value });
    }
  }, {
    key: 'handleSubmit',
    value: function handleSubmit(event) {
      event.preventDefault();
      var type = this.state.type;
      var query = this.state.query;
      function getFilter() {
        if (type === 'name') {
          return { type: 'name', query: query };
        }
        if (type === 'credit') {
          return { type: 'credit', query: query };
        }
        if (type === 'character') {
          return { type: 'character', query: query };
        }
        return null;
      }

      var f = getFilter();
      if (f != null) {
        this.props.onSubmit(f);
      }
      this.setState({ type: 'name', query: '' });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'form',
        {
          onSubmit: function onSubmit(event) {
            return _this2.handleSubmit(event);
          }
        },
        _react2.default.createElement(
          'select',
          {
            value: this.state.type,
            onChange: function onChange(event) {
              return _this2.handleTypeChange(event);
            }
          },
          _react2.default.createElement(
            'option',
            {
              value: 'name'
            },
            'name'
          ),
          _react2.default.createElement(
            'option',
            {
              value: 'credit'
            },
            'credit'
          ),
          _react2.default.createElement(
            'option',
            {
              value: 'character'
            },
            'character'
          )
        ),
        _react2.default.createElement('input', {
          type: 'text',
          value: this.state.query,
          onChange: function onChange(event) {
            return _this2.handleQueryChange(event);
          }
        }),
        _react2.default.createElement('input', {
          type: 'submit',
          value: 'add'
        })
      );
    }
  }]);

  return FilterAdd;
}(_react2.default.PureComponent);

var FilterRow = exports.FilterRow = function (_React$PureComponent2) {
  _inherits(FilterRow, _React$PureComponent2);

  function FilterRow() {
    _classCallCheck(this, FilterRow);

    return _possibleConstructorReturn(this, (FilterRow.__proto__ || Object.getPrototypeOf(FilterRow)).apply(this, arguments));
  }

  _createClass(FilterRow, [{
    key: 'render',
    value: function render() {
      var _this4 = this;

      var addFilterProp = this.props.addFilter;
      var addFilterComp = _react2.default.createElement(FilterAdd, {
        onSubmit: function onSubmit(filter) {
          return addFilterProp(filter);
        }
      });

      var doneProp = this.props.done;
      var doneComp = this.props.filters.length && this.props.done != null ? _react2.default.createElement(
        'div',
        {
          className: 'next',
          onClick: doneProp
        },
        'Add OR'
      ) : null;

      return _react2.default.createElement(
        'div',
        null,
        this.props.filters.map(function (filter, i) {
          return _react2.default.createElement(_Filter.Filter, {
            key: filter.type + filter.query + i,
            filter: filter,
            remove: function remove() {
              return _this4.props.removeFilter(i);
            }
          });
        }),
        addFilterComp,
        doneComp
      );
    }
  }]);

  return FilterRow;
}(_react2.default.PureComponent);

;

var _temp2 = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(FilterAdd, 'FilterAdd', '/home/peepee/chronoomic/react/b/src/components/FilterRow.jsx');

  __REACT_HOT_LOADER__.register(FilterRow, 'FilterRow', '/home/peepee/chronoomic/react/b/src/components/FilterRow.jsx');
}();

;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FiltersContainer = exports.Filters = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(14);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(53);

var _actionCreators = __webpack_require__(58);

var actionCreators = _interopRequireWildcard(_actionCreators);

var _FilterRow = __webpack_require__(109);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Filters = exports.Filters = function (_React$PureComponent) {
  _inherits(Filters, _React$PureComponent);

  function Filters() {
    _classCallCheck(this, Filters);

    return _possibleConstructorReturn(this, (Filters.__proto__ || Object.getPrototypeOf(Filters)).apply(this, arguments));
  }

  _createClass(Filters, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        this.props.filters.map(function (filters, i) {
          var last = i === _this2.props.filters.length - 1;
          return _react2.default.createElement(
            'div',
            {
              key: i.toString()
            },
            _react2.default.createElement(_FilterRow.FilterRow, {
              filters: filters,
              removeFilter: function removeFilter(j) {
                return _this2.props.removeFilter(i, j);
              },
              addFilter: function addFilter(filter) {
                return _this2.props.addFilter(filter, i);
              },
              done: last ? _this2.props.filterDone : null
            }),
            last ? '' : 'OR'
          );
        })
      );
    }
  }]);

  return Filters;
}(_react2.default.PureComponent);

function mapStateToProps(state) {
  return { filters: state.filters };
}

var FiltersContainer = exports.FiltersContainer = (0, _reactRedux.connect)(mapStateToProps, actionCreators)(Filters);
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Filters, 'Filters', '/home/peepee/chronoomic/react/b/src/components/Filters.jsx');

  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/home/peepee/chronoomic/react/b/src/components/Filters.jsx');

  __REACT_HOT_LOADER__.register(FiltersContainer, 'FiltersContainer', '/home/peepee/chronoomic/react/b/src/components/Filters.jsx');
}();

;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Issue = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(14);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Issue = exports.Issue = function (_React$PureComponent) {
  _inherits(Issue, _React$PureComponent);

  function Issue() {
    _classCallCheck(this, Issue);

    return _possibleConstructorReturn(this, (Issue.__proto__ || Object.getPrototypeOf(Issue)).apply(this, arguments));
  }

  _createClass(Issue, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement('input', {
          type: 'checkbox',
          checked: this.props.read,
          onChange: this.props.toggl
        }),
        _react2.default.createElement(
          'span',
          {
            className: 'issueName',
            onClick: this.props.toggl
          },
          this.props.data.name,
          '      - ',
          this.props.data.year
        ),
        '\xA0',
        _react2.default.createElement(
          'a',
          {
            href: 'http://www.supermegamonkey.net/chronocomic/entries/' + this.props.data.link + '.shtml',
            target: '_blank'
          },
          '\uD83D\uDC35'
        )
      );
    }
  }]);

  return Issue;
}(_react2.default.PureComponent);

;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Issue, 'Issue', '/home/peepee/chronoomic/react/b/src/components/Issue.jsx');
}();

;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IssuesContainer = exports.Issues = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(14);

var _react2 = _interopRequireDefault(_react);

var _reactRedux = __webpack_require__(53);

var _actionCreators = __webpack_require__(58);

var actionCreators = _interopRequireWildcard(_actionCreators);

var _Issue = __webpack_require__(111);

var _state = __webpack_require__(59);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Issues = exports.Issues = function (_React$PureComponent) {
  _inherits(Issues, _React$PureComponent);

  function Issues() {
    _classCallCheck(this, Issues);

    return _possibleConstructorReturn(this, (Issues.__proto__ || Object.getPrototypeOf(Issues)).apply(this, arguments));
  }

  _createClass(Issues, [{
    key: 'togglRead',
    value: function togglRead(link, currentState) {
      if (currentState) {
        this.props.setUnread(link);
      } else {
        this.props.setRead(link);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        this.props.data.map(function (issueData) {
          var read = (0, _state.isIssueRead)(issueData.link, _this2.props.readIssues);
          return _react2.default.createElement(_Issue.Issue, {
            read: read,
            data: issueData,
            key: issueData.link,
            toggl: function toggl() {
              return _this2.togglRead(issueData.link, read);
            }
          });
        })
      );
    }
  }]);

  return Issues;
}(_react2.default.PureComponent);

function mapStateToProps(state) {
  return { data: state.results, readIssues: state.readIssues };
}

var IssuesContainer = exports.IssuesContainer = (0, _reactRedux.connect)(mapStateToProps, actionCreators)(Issues);
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Issues, 'Issues', '/home/peepee/chronoomic/react/b/src/components/Issues.jsx');

  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/home/peepee/chronoomic/react/b/src/components/Issues.jsx');

  __REACT_HOT_LOADER__.register(IssuesContainer, 'IssuesContainer', '/home/peepee/chronoomic/react/b/src/components/Issues.jsx');
}();

;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hashEnhancer = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*  weak */

var _redux = __webpack_require__(56);

var _reduxActionBuffer = __webpack_require__(98);

var _reduxActionBuffer2 = _interopRequireDefault(_reduxActionBuffer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CHANGE_HASH = '@@hashSynch/CHANGE_HASH';
var hashEnhancer = exports.hashEnhancer = function hashEnhancer(hashFromState, stateFromStateAndHash) {
  return function (createStore) {
    return function (reducer, initialState) {
      var store = createStore(liftReducer(reducer), initialState, (0, _redux.applyMiddleware)((0, _reduxActionBuffer2.default)(CHANGE_HASH)));
      store.subscribe(function () {
        var hash = hashFromState(store.getState());
        if (window.location.hash !== hash) {
          window.location.hash = hash;
        }
      });

      window.addEventListener('hashchange', function () {
        var hash = window.location.hash;
        var savedHash = hashFromState(store.getState());
        if (savedHash !== hash) {
          store.dispatch({
            type: CHANGE_HASH,
            hash: hash
          });
        }
      }, false);

      store.dispatch({
        type: CHANGE_HASH,
        hash: window.location.hash
      });

      function liftReducer(reducer) {
        return function (state, action) {
          if (action.type !== CHANGE_HASH) {
            return reducer(state, action);
          } else {
            return stateFromStateAndHash(state, action.hash);
          }
        };
      }

      return _extends({}, store, {
        replaceReducer: function replaceReducer(reducer) {
          return store.replaceReducer(liftReducer(reducer));
        }
      });
    };
  };
};
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(CHANGE_HASH, 'CHANGE_HASH', '/home/peepee/chronoomic/react/b/src/redux/hashEnhancer.js');

  __REACT_HOT_LOADER__.register(hashEnhancer, 'hashEnhancer', '/home/peepee/chronoomic/react/b/src/redux/hashEnhancer.js');
}();

;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.hashFromState = hashFromState;
exports.stateFromStateAndHash = stateFromStateAndHash;

var _data = __webpack_require__(57);

function hashFromState(s) {
  return stringFromOrFilter(s.filters);
}

function stateFromStateAndHash(s, h) {
  var shortened = decodeURI(h.replace(/^#/, '').replace(/\+/g, ' '));
  if (shortened === '') {
    return _extends({}, s, {
      filters: [[]]
    });
  }

  var filters = orFilterFromString(shortened);
  var results = (0, _data.getData)(filters, s.sorting);
  return _extends({}, s, {
    filters: filters,
    results: results
  });
}

function stringFromFilter(f) {
  var query = f.query;
  var replaced = query.replace(/&/g, '_and_').replace(/\|/g, '_or_').replace(/\+/g, '_plus_').replace(/=/g, '_eq_');
  return (f.type + '=' + replaced).replace(/ /g, '+');
}

function stringFromAndFilter(f) {
  return f.map(function (f) {
    return stringFromFilter(f);
  }).join('&');
}

function stringFromOrFilter(f) {
  return f.map(function (f) {
    return stringFromAndFilter(f);
  }).join('|');
}

function filterFromString(s) {
  var _s$split = s.split('='),
      _s$split2 = _slicedToArray(_s$split, 2),
      type = _s$split2[0],
      query = _s$split2[1];

  var replaced = query.replace(/_and_/g, '&').replace(/_or_/g, '|').replace(/_plus_/g, '+').replace(/_eq_/g, '=');

  if (type === 'name') {
    return { type: 'name', query: replaced };
  }
  if (type === 'credit') {
    return { type: 'credit', query: replaced };
  }
  if (type === 'character') {
    return { type: 'character', query: replaced };
  }

  throw new Error('..');
}

function andFilterFromString(s) {
  return s.split('&').filter(function (s) {
    return s !== '';
  }).map(function (s) {
    return filterFromString(s);
  });
}

function orFilterFromString(s) {
  return s.split('|').map(function (s) {
    return s === '' ? [] : andFilterFromString(s);
  });
}
//    stateFromStateAndHash: (s: State, h: string) => State

;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(hashFromState, 'hashFromState', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(stateFromStateAndHash, 'stateFromStateAndHash', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(stringFromFilter, 'stringFromFilter', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(stringFromAndFilter, 'stringFromAndFilter', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(stringFromOrFilter, 'stringFromOrFilter', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(filterFromString, 'filterFromString', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(andFilterFromString, 'andFilterFromString', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');

  __REACT_HOT_LOADER__.register(orFilterFromString, 'orFilterFromString', '/home/peepee/chronoomic/react/b/src/redux/hashFunctions.js');
}();

;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.reducer = reducer;

var _state = __webpack_require__(59);

var _data = __webpack_require__(57);

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function replace(arr, i, fun) {
  return [].concat(_toConsumableArray(arr.slice(0, i)), [fun(arr[i])], _toConsumableArray(arr.slice(i + 1)));
}

function remove(arr, i) {
  return [].concat(_toConsumableArray(arr.slice(0, i)), _toConsumableArray(arr.slice(i + 1)));
}

function remove2d(arr, i, j) {
  return replace(arr, i, function (subarr) {
    return remove(subarr, j);
  });
}

function replaceI(arr, i, fun) {
  return replace(arr, i, fun);
}

function addToI(arr, i, elem) {
  return replaceI(arr, i, function (subarr) {
    return [].concat(_toConsumableArray(subarr), [elem]);
  });
}

function reducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _state.defaultState;
  var action = arguments[1];

  if (action.type === 'ADD_FILTER') {
    if (state.filters.length === 0) {
      throw new Error('No place to add new filter');
    }
    var filters = addToI(state.filters, action.andFilter, action.filter);
    var results = (0, _data.getData)(filters, state.sorting);
    return _extends({}, state, {
      filters: filters,
      results: results
    });
  }

  if (action.type === 'FILTER_DONE') {
    return _extends({}, state, {
      filters: [].concat(_toConsumableArray(state.filters), [[]])
    });
  }

  if (action.type === 'REMOVE_FILTER') {
    var filtersMaybeEmpty = remove2d(state.filters, action.i, action.j).filter(function (f) {
      return f.length !== 0;
    });
    var _filters = filtersMaybeEmpty.length === 0 ? [[]] : filtersMaybeEmpty;
    var _results = (0, _data.getData)(_filters, state.sorting);
    return _extends({}, state, {
      filters: _filters,
      results: _results,
      sorting: state.sorting
    });
  }
  if (action.type === 'SET_SORTING') {
    var _results2 = (0, _data.getData)(state.filters, action.sorting);
    return _extends({}, state, {
      results: _results2,
      sorting: action.sorting
    });
  }

  // note - doesn't check double
  if (action.type === 'SET_READ') {
    return _extends({}, state, {
      readIssues: [].concat(_toConsumableArray(new Set(state.readIssues).add(action.link)))
    });
  }
  if (action.type === 'SET_UNREAD') {
    var readIssues = new Set(state.readIssues);
    readIssues.delete(action.link);
    return _extends({}, state, {
      readIssues: [].concat(_toConsumableArray(readIssues))
    });
  }
  return state;
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(replace, 'replace', '/home/peepee/chronoomic/react/b/src/redux/reducer.js');

  __REACT_HOT_LOADER__.register(remove, 'remove', '/home/peepee/chronoomic/react/b/src/redux/reducer.js');

  __REACT_HOT_LOADER__.register(remove2d, 'remove2d', '/home/peepee/chronoomic/react/b/src/redux/reducer.js');

  __REACT_HOT_LOADER__.register(replaceI, 'replaceI', '/home/peepee/chronoomic/react/b/src/redux/reducer.js');

  __REACT_HOT_LOADER__.register(addToI, 'addToI', '/home/peepee/chronoomic/react/b/src/redux/reducer.js');

  __REACT_HOT_LOADER__.register(reducer, 'reducer', '/home/peepee/chronoomic/react/b/src/redux/reducer.js');
}();

;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.store = undefined;

var _redux = __webpack_require__(56);

var _reduxPersist = __webpack_require__(240);

var _reducer = __webpack_require__(115);

var _reduxActionBuffer = __webpack_require__(98);

var _reduxActionBuffer2 = _interopRequireDefault(_reduxActionBuffer);

var _constants = __webpack_require__(21);

var _hashEnhancer = __webpack_require__(113);

var _hashFunctions = __webpack_require__(114);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var enhancer = (0, _redux.compose)((0, _reduxPersist.autoRehydrate)(), (0, _redux.applyMiddleware)((0, _reduxActionBuffer2.default)(_constants.REHYDRATE) // make sure to apply this after redux-thunk et al.
), (0, _hashEnhancer.hashEnhancer)(_hashFunctions.hashFromState, _hashFunctions.stateFromStateAndHash));
var store = exports.store = (0, _redux.createStore)(_reducer.reducer, undefined, enhancer);

(0, _reduxPersist.persistStore)(store, { whitelist: ['readIssues'] });
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(enhancer, 'enhancer', '/home/peepee/chronoomic/react/b/src/redux/store.js');

  __REACT_HOT_LOADER__.register(store, 'store', '/home/peepee/chronoomic/react/b/src/redux/store.js');
}();

;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var emptyObject = __webpack_require__(26);
var _invariant = __webpack_require__(1);

if (process.env.NODE_ENV !== 'production') {
  var warning = __webpack_require__(2);
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (process.env.NODE_ENV !== 'production') {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isInherited = name in Constructor;
      _invariant(
        !isInherited,
        'ReactClass: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be ' +
          'due to a mixin.',
        name
      );
      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (process.env.NODE_ENV !== 'production') {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (process.env.NODE_ENV !== 'production') {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var camelize = __webpack_require__(118);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = __webpack_require__(128);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = __webpack_require__(1);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = __webpack_require__(6);

var createArrayFromMixed = __webpack_require__(121);
var getMarkupWrap = __webpack_require__(123);
var invariant = __webpack_require__(1);

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = __webpack_require__(6);

var invariant = __webpack_require__(1);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(125);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = __webpack_require__(127);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */



/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var ExecutionEnvironment = __webpack_require__(6);

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = __webpack_require__(130);

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */


var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
};

var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};

var defineProperty = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

        if (objectPrototype) {
            var inheritedComponent = getPrototypeOf(sourceComponent);
            if (inheritedComponent && inheritedComponent !== objectPrototype) {
                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
            }
        }

        var keys = getOwnPropertyNames(sourceComponent);

        if (getOwnPropertySymbols) {
            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }

        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
                try { // Avoid failures from read-only properties
                    defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
            }
        }

        return targetComponent;
    }

    return targetComponent;
};


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 134 */
/***/ (function(module, exports) {

exports = module.exports = stringify
exports.getSerialize = serializer

function stringify(obj, replacer, spaces, cycleReplacer) {
  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
}

function serializer(replacer, cycleReplacer) {
  var stack = [], keys = []

  if (cycleReplacer == null) cycleReplacer = function(key, value) {
    if (stack[0] === value) return "[Circular ~]"
    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
  }

  return function(key, value) {
    if (stack.length > 0) {
      var thisPos = stack.indexOf(this)
      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
    }
    else stack.push(value)

    return replacer == null ? value : replacer.call(this, key, value)
  }
}


/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(63);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__ = __webpack_require__(138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__objectToString_js__ = __webpack_require__(139);




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__getRawTag_js__["a" /* default */])(value)
    : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__objectToString_js__["a" /* default */])(value);
}

/* harmony default export */ __webpack_exports__["a"] = (baseGetTag);


/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ __webpack_exports__["a"] = (freeGlobal);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(35)))

/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(140);


/** Built-in value references. */
var getPrototype = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__overArg_js__["a" /* default */])(Object.getPrototypeOf, Object);

/* harmony default export */ __webpack_exports__["a"] = (getPrototype);


/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(63);


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ __webpack_exports__["a"] = (getRawTag);


/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

/* harmony default export */ __webpack_exports__["a"] = (objectToString);


/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ __webpack_exports__["a"] = (overArg);


/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(136);


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__["a" /* default */] || freeSelf || Function('return this')();

/* harmony default export */ __webpack_exports__["a"] = (root);


/***/ }),
/* 142 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ __webpack_exports__["a"] = (isObjectLike);


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



if (process.env.NODE_ENV !== 'production') {
  var invariant = __webpack_require__(1);
  var warning = __webpack_require__(2);
  var ReactPropTypesSecret = __webpack_require__(37);
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(8);
var invariant = __webpack_require__(1);
var ReactPropTypesSecret = __webpack_require__(37);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(159);


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentTree = __webpack_require__(5);

var focusNode = __webpack_require__(61);

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(23);
var ExecutionEnvironment = __webpack_require__(6);
var FallbackCompositionState = __webpack_require__(154);
var SyntheticCompositionEvent = __webpack_require__(197);
var SyntheticInputEvent = __webpack_require__(200);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var CSSProperty = __webpack_require__(67);
var ExecutionEnvironment = __webpack_require__(6);
var ReactInstrumentation = __webpack_require__(9);

var camelizeStyleName = __webpack_require__(119);
var dangerousStyleValue = __webpack_require__(207);
var hyphenateStyleName = __webpack_require__(126);
var memoizeStringOnly = __webpack_require__(129);
var warning = __webpack_require__(2);

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {
  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styleValue, component);
        }
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      if (process.env.NODE_ENV !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styles[styleName], component);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (isCustomProperty) {
        style.setProperty(styleName, styleValue);
      } else if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }
};

module.exports = CSSPropertyOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(22);
var EventPropagators = __webpack_require__(23);
var ExecutionEnvironment = __webpack_require__(6);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactUpdates = __webpack_require__(10);
var SyntheticEvent = __webpack_require__(12);

var inputValueTracking = __webpack_require__(84);
var getEventTarget = __webpack_require__(49);
var isEventSupported = __webpack_require__(50);
var isTextInputElement = __webpack_require__(86);

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
  event.type = 'change';
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getInstIfValueChanged(targetInst, nativeEvent) {
  var updated = inputValueTracking.updateValueIfChanged(targetInst);
  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

  if (updated || simulated) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.

  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst, nativeEvent);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes,

  _allowSimulatedPassThrough: true,
  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

module.exports = ChangeEventPlugin;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var DOMLazyTree = __webpack_require__(17);
var ExecutionEnvironment = __webpack_require__(6);

var createNodesFromMarkup = __webpack_require__(122);
var emptyFunction = __webpack_require__(8);
var invariant = __webpack_require__(1);

var Danger = {
  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }
};

module.exports = Danger;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(23);
var ReactDOMComponentTree = __webpack_require__(5);
var SyntheticMouseEvent = __webpack_require__(30);

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var PooledClass = __webpack_require__(15);

var getTextContentAccessor = __webpack_require__(83);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(13);

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactReconciler = __webpack_require__(18);

var instantiateReactComponent = __webpack_require__(85);
var KeyEscapeUtils = __webpack_require__(41);
var shouldUpdateReactComponent = __webpack_require__(51);
var traverseAllChildren = __webpack_require__(88);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(7);
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = __webpack_require__(7);
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
  {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (process.env.NODE_ENV !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
  {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }
};

module.exports = ReactChildReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMChildrenOperations = __webpack_require__(38);
var ReactDOMIDOperations = __webpack_require__(164);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {
  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
};

module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var React = __webpack_require__(19);
var ReactComponentEnvironment = __webpack_require__(43);
var ReactCurrentOwner = __webpack_require__(11);
var ReactErrorUtils = __webpack_require__(44);
var ReactInstanceMap = __webpack_require__(24);
var ReactInstrumentation = __webpack_require__(9);
var ReactNodeTypes = __webpack_require__(77);
var ReactReconciler = __webpack_require__(18);

if (process.env.NODE_ENV !== 'production') {
  var checkReactTypeSpec = __webpack_require__(206);
}

var emptyObject = __webpack_require__(26);
var invariant = __webpack_require__(1);
var shallowEqual = __webpack_require__(36);
var shouldUpdateReactComponent = __webpack_require__(51);
var warning = __webpack_require__(2);

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {
  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (process.env.NODE_ENV !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (process.env.NODE_ENV !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (process.env.NODE_ENV !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (process.env.NODE_ENV !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (process.env.NODE_ENV !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (process.env.NODE_ENV !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (process.env.NODE_ENV !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (process.env.NODE_ENV !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (process.env.NODE_ENV !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (process.env.NODE_ENV !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null
};

module.exports = ReactCompositeComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/



var ReactDOMComponentTree = __webpack_require__(5);
var ReactDefaultInjection = __webpack_require__(176);
var ReactMount = __webpack_require__(76);
var ReactReconciler = __webpack_require__(18);
var ReactUpdates = __webpack_require__(10);
var ReactVersion = __webpack_require__(191);

var findDOMNode = __webpack_require__(208);
var getHostComponentFromComposite = __webpack_require__(82);
var renderSubtreeIntoContainer = __webpack_require__(215);
var warning = __webpack_require__(2);

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  /* eslint-enable camelcase */
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = __webpack_require__(6);
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (process.env.NODE_ENV !== 'production') {
  var ReactInstrumentation = __webpack_require__(9);
  var ReactDOMUnknownPropertyHook = __webpack_require__(173);
  var ReactDOMNullInputValuePropHook = __webpack_require__(167);
  var ReactDOMInvalidARIAHook = __webpack_require__(166);

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var AutoFocusUtils = __webpack_require__(147);
var CSSPropertyOperations = __webpack_require__(149);
var DOMLazyTree = __webpack_require__(17);
var DOMNamespaces = __webpack_require__(39);
var DOMProperty = __webpack_require__(13);
var DOMPropertyOperations = __webpack_require__(69);
var EventPluginHub = __webpack_require__(22);
var EventPluginRegistry = __webpack_require__(28);
var ReactBrowserEventEmitter = __webpack_require__(29);
var ReactDOMComponentFlags = __webpack_require__(70);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactDOMInput = __webpack_require__(165);
var ReactDOMOption = __webpack_require__(168);
var ReactDOMSelect = __webpack_require__(71);
var ReactDOMTextarea = __webpack_require__(171);
var ReactInstrumentation = __webpack_require__(9);
var ReactMultiChild = __webpack_require__(184);
var ReactServerRenderingTransaction = __webpack_require__(189);

var emptyFunction = __webpack_require__(8);
var escapeTextContentForBrowser = __webpack_require__(32);
var invariant = __webpack_require__(1);
var isEventSupported = __webpack_require__(50);
var shallowEqual = __webpack_require__(36);
var inputValueTracking = __webpack_require__(84);
var validateDOMNesting = __webpack_require__(52);
var warning = __webpack_require__(2);

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { string: true, number: true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trackInputValue() {
  inputValueTracking.track(this);
}

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':
      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

var newlineEatingTags = {
  listing: true,
  pre: true,
  textarea: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {
  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (process.env.NODE_ENV !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (process.env.NODE_ENV !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'input':
      case 'textarea':
        inputValueTracking.stopTracking(this);
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (process.env.NODE_ENV !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }
};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var validateDOMNesting = __webpack_require__(52);

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var DOMLazyTree = __webpack_require__(17);
var ReactDOMComponentTree = __webpack_require__(5);

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMChildrenOperations = __webpack_require__(38);
var ReactDOMComponentTree = __webpack_require__(5);

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {
  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var DOMPropertyOperations = __webpack_require__(69);
var LinkedValueUtils = __webpack_require__(42);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactUpdates = __webpack_require__(10);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        if (
        // eslint-disable-next-line
        value != valueAsNumber ||
        // eslint-disable-next-line
        value == valueAsNumber && node.value != value) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
      } else if (node.value !== '' + value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(13);
var ReactComponentTreeHook = __webpack_require__(7);

var warning = __webpack_require__(2);

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactComponentTreeHook = __webpack_require__(7);

var warning = __webpack_require__(2);

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var React = __webpack_require__(19);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactDOMSelect = __webpack_require__(71);

var warning = __webpack_require__(2);
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }
};

module.exports = ReactDOMOption;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(6);

var getNodeForCharacterOffset = __webpack_require__(212);
var getTextContentAccessor = __webpack_require__(83);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var DOMChildrenOperations = __webpack_require__(38);
var DOMLazyTree = __webpack_require__(17);
var ReactDOMComponentTree = __webpack_require__(5);

var escapeTextContentForBrowser = __webpack_require__(32);
var invariant = __webpack_require__(1);
var validateDOMNesting = __webpack_require__(52);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {
  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMTextComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3),
    _assign = __webpack_require__(4);

var LinkedValueUtils = __webpack_require__(42);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactUpdates = __webpack_require__(10);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(13);
var EventPluginRegistry = __webpack_require__(28);
var ReactComponentTreeHook = __webpack_require__(7);

var warning = __webpack_require__(2);

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactInvalidSetStateWarningHook = __webpack_require__(182);
var ReactHostOperationHistoryHook = __webpack_require__(180);
var ReactComponentTreeHook = __webpack_require__(7);
var ExecutionEnvironment = __webpack_require__(6);

var performanceNow = __webpack_require__(131);
var warning = __webpack_require__(2);

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  if (measurementName) {
    performance.clearMeasures(measurementName);
  }
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var ReactUpdates = __webpack_require__(10);
var Transaction = __webpack_require__(31);

var emptyFunction = __webpack_require__(8);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ARIADOMPropertyConfig = __webpack_require__(146);
var BeforeInputEventPlugin = __webpack_require__(148);
var ChangeEventPlugin = __webpack_require__(150);
var DefaultEventPluginOrder = __webpack_require__(152);
var EnterLeaveEventPlugin = __webpack_require__(153);
var HTMLDOMPropertyConfig = __webpack_require__(155);
var ReactComponentBrowserEnvironment = __webpack_require__(157);
var ReactDOMComponent = __webpack_require__(160);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactDOMEmptyComponent = __webpack_require__(162);
var ReactDOMTreeTraversal = __webpack_require__(172);
var ReactDOMTextComponent = __webpack_require__(170);
var ReactDefaultBatchingStrategy = __webpack_require__(175);
var ReactEventListener = __webpack_require__(179);
var ReactInjection = __webpack_require__(181);
var ReactReconcileTransaction = __webpack_require__(187);
var SVGDOMPropertyConfig = __webpack_require__(192);
var SelectEventPlugin = __webpack_require__(193);
var SimpleEventPlugin = __webpack_require__(194);

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(22);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var EventListener = __webpack_require__(60);
var ExecutionEnvironment = __webpack_require__(6);
var PooledClass = __webpack_require__(15);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactUpdates = __webpack_require__(10);

var getEventTarget = __webpack_require__(49);
var getUnboundedScrollPosition = __webpack_require__(124);

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(13);
var EventPluginHub = __webpack_require__(22);
var EventPluginUtils = __webpack_require__(40);
var ReactComponentEnvironment = __webpack_require__(43);
var ReactEmptyComponent = __webpack_require__(72);
var ReactBrowserEventEmitter = __webpack_require__(29);
var ReactHostComponent = __webpack_require__(74);
var ReactUpdates = __webpack_require__(10);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var warning = __webpack_require__(2);

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var adler32 = __webpack_require__(205);

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactComponentEnvironment = __webpack_require__(43);
var ReactInstanceMap = __webpack_require__(24);
var ReactInstrumentation = __webpack_require__(9);

var ReactCurrentOwner = __webpack_require__(11);
var ReactReconciler = __webpack_require__(18);
var ReactChildReconciler = __webpack_require__(156);

var emptyFunction = __webpack_require__(8);
var flattenChildren = __webpack_require__(209);
var invariant = __webpack_require__(1);

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {
  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {
    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (process.env.NODE_ENV !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (process.env.NODE_ENV !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }
  }
};

module.exports = ReactMultiChild;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var invariant = __webpack_require__(1);

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }
};

module.exports = ReactOwner;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var CallbackQueue = __webpack_require__(68);
var PooledClass = __webpack_require__(15);
var ReactBrowserEventEmitter = __webpack_require__(29);
var ReactInputSelection = __webpack_require__(75);
var ReactInstrumentation = __webpack_require__(9);
var Transaction = __webpack_require__(31);
var ReactUpdateQueue = __webpack_require__(45);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactOwner = __webpack_require__(185);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var PooledClass = __webpack_require__(15);
var Transaction = __webpack_require__(31);
var ReactInstrumentation = __webpack_require__(9);
var ReactServerUpdateQueue = __webpack_require__(190);

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = __webpack_require__(45);

var warning = __webpack_require__(2);

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



module.exports = '15.6.1';

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(23);
var ExecutionEnvironment = __webpack_require__(6);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactInputSelection = __webpack_require__(75);
var SyntheticEvent = __webpack_require__(12);

var getActiveElement = __webpack_require__(62);
var isTextInputElement = __webpack_require__(86);
var shallowEqual = __webpack_require__(36);

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(3);

var EventListener = __webpack_require__(60);
var EventPropagators = __webpack_require__(23);
var ReactDOMComponentTree = __webpack_require__(5);
var SyntheticAnimationEvent = __webpack_require__(195);
var SyntheticClipboardEvent = __webpack_require__(196);
var SyntheticEvent = __webpack_require__(12);
var SyntheticFocusEvent = __webpack_require__(199);
var SyntheticKeyboardEvent = __webpack_require__(201);
var SyntheticMouseEvent = __webpack_require__(30);
var SyntheticDragEvent = __webpack_require__(198);
var SyntheticTouchEvent = __webpack_require__(202);
var SyntheticTransitionEvent = __webpack_require__(203);
var SyntheticUIEvent = __webpack_require__(25);
var SyntheticWheelEvent = __webpack_require__(204);

var emptyFunction = __webpack_require__(8);
var getEventCharCode = __webpack_require__(47);
var invariant = __webpack_require__(1);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }
};

module.exports = SimpleEventPlugin;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(12);

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(12);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(12);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticMouseEvent = __webpack_require__(30);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(25);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(12);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(25);

var getEventCharCode = __webpack_require__(47);
var getEventKey = __webpack_require__(210);
var getEventModifierState = __webpack_require__(48);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(25);

var getEventModifierState = __webpack_require__(48);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(12);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticMouseEvent = __webpack_require__(30);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactPropTypeLocationNames = __webpack_require__(186);
var ReactPropTypesSecret = __webpack_require__(78);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(7);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(7);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var CSSProperty = __webpack_require__(67);
var warning = __webpack_require__(2);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(3);

var ReactCurrentOwner = __webpack_require__(11);
var ReactDOMComponentTree = __webpack_require__(5);
var ReactInstanceMap = __webpack_require__(24);

var getHostComponentFromComposite = __webpack_require__(82);
var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var KeyEscapeUtils = __webpack_require__(41);
var traverseAllChildren = __webpack_require__(88);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(7);
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (process.env.NODE_ENV !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = __webpack_require__(7);
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (process.env.NODE_ENV !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var getEventCharCode = __webpack_require__(47);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1',
  113: 'F2',
  114: 'F3',
  115: 'F4',
  116: 'F5',
  117: 'F6',
  118: 'F7',
  119: 'F8',
  120: 'F9',
  121: 'F10',
  122: 'F11',
  123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(6);

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var escapeTextContentForBrowser = __webpack_require__(32);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactMount = __webpack_require__(76);

module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 216 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["b"] = createProvider;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(66);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_warning__ = __webpack_require__(54);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }






var didWarnAboutReceivingStore = false;
function warnAboutReceivingStore() {
  if (didWarnAboutReceivingStore) {
    return;
  }
  didWarnAboutReceivingStore = true;

  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_warning__["a" /* default */])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
}

function createProvider() {
  var _Provider$childContex;

  var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
  var subKey = arguments[1];

  var subscriptionKey = subKey || storeKey + 'Subscription';

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    Provider.prototype.getChildContext = function getChildContext() {
      var _ref;

      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
    };

    function Provider(props, context) {
      _classCallCheck(this, Provider);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

      _this[storeKey] = props.store;
      return _this;
    }

    Provider.prototype.render = function render() {
      return __WEBPACK_IMPORTED_MODULE_0_react__["Children"].only(this.props.children);
    };

    return Provider;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  if (process.env.NODE_ENV !== 'production') {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      if (this[storeKey] !== nextProps.store) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__["a" /* storeShape */].isRequired,
    children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.element.isRequired
  };
  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__["a" /* storeShape */].isRequired, _Provider$childContex[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__["b" /* subscriptionShape */], _Provider$childContex);

  return Provider;
}

/* harmony default export */ __webpack_exports__["a"] = (createProvider());
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 217 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export createConnect */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__ = __webpack_require__(218);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__ = __webpack_require__(219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mergeProps__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__selectorFactory__ = __webpack_require__(221);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }








/*
  connect is a facade over connectAdvanced. It turns its args into a compatible
  selectorFactory, which has the signature:

    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
  
  connect passes its args to connectAdvanced as options, which will in turn pass them to
  selectorFactory each time a Connect component instance is instantiated or hot reloaded.

  selectorFactory returns a final props selector from its mapStateToProps,
  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
  mergePropsFactories, and pure args.

  The resulting final props selector is called by the Connect component instance whenever
  it receives new props or store state.
 */

function match(arg, factories, name) {
  for (var i = factories.length - 1; i >= 0; i--) {
    var result = factories[i](arg);
    if (result) return result;
  }

  return function (dispatch, options) {
    throw new Error('Invalid value of type ' + typeof arg + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
  };
}

function strictEqual(a, b) {
  return a === b;
}

// createConnect with default args builds the 'official' connect behavior. Calling it with
// different options opens up some testing and extensibility scenarios
function createConnect() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$connectHOC = _ref.connectHOC,
      connectHOC = _ref$connectHOC === undefined ? __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__["a" /* default */] : _ref$connectHOC,
      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
      mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__["a" /* default */] : _ref$mapStateToPropsF,
      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
      mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__["a" /* default */] : _ref$mapDispatchToPro,
      _ref$mergePropsFactor = _ref.mergePropsFactories,
      mergePropsFactories = _ref$mergePropsFactor === undefined ? __WEBPACK_IMPORTED_MODULE_4__mergeProps__["a" /* default */] : _ref$mergePropsFactor,
      _ref$selectorFactory = _ref.selectorFactory,
      selectorFactory = _ref$selectorFactory === undefined ? __WEBPACK_IMPORTED_MODULE_5__selectorFactory__["a" /* default */] : _ref$selectorFactory;

  return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
    var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
        _ref2$pure = _ref2.pure,
        pure = _ref2$pure === undefined ? true : _ref2$pure,
        _ref2$areStatesEqual = _ref2.areStatesEqual,
        areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
        _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
        areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__["a" /* default */] : _ref2$areOwnPropsEqua,
        _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
        areStatePropsEqual = _ref2$areStatePropsEq === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__["a" /* default */] : _ref2$areStatePropsEq,
        _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
        areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__["a" /* default */] : _ref2$areMergedPropsE,
        extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

    return connectHOC(selectorFactory, _extends({
      // used in error messages
      methodName: 'connect',

      // used to compute Connect's displayName from the wrapped component's displayName.
      getDisplayName: function getDisplayName(name) {
        return 'Connect(' + name + ')';
      },

      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
      shouldHandleStateChanges: Boolean(mapStateToProps),

      // passed through to selectorFactory
      initMapStateToProps: initMapStateToProps,
      initMapDispatchToProps: initMapDispatchToProps,
      initMergeProps: initMergeProps,
      pure: pure,
      areStatesEqual: areStatesEqual,
      areOwnPropsEqual: areOwnPropsEqual,
      areStatePropsEqual: areStatePropsEqual,
      areMergedPropsEqual: areMergedPropsEqual

    }, extraOptions));
  };
}

/* harmony default export */ __webpack_exports__["a"] = (createConnect());

/***/ }),
/* 218 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export whenMapDispatchToPropsIsFunction */
/* unused harmony export whenMapDispatchToPropsIsMissing */
/* unused harmony export whenMapDispatchToPropsIsObject */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__ = __webpack_require__(90);



function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
  return typeof mapDispatchToProps === 'function' ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["a" /* wrapMapToPropsFunc */])(mapDispatchToProps, 'mapDispatchToProps') : undefined;
}

function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
  return !mapDispatchToProps ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["b" /* wrapMapToPropsConstant */])(function (dispatch) {
    return { dispatch: dispatch };
  }) : undefined;
}

function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["b" /* wrapMapToPropsConstant */])(function (dispatch) {
    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_redux__["bindActionCreators"])(mapDispatchToProps, dispatch);
  }) : undefined;
}

/* harmony default export */ __webpack_exports__["a"] = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);

/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export whenMapStateToPropsIsFunction */
/* unused harmony export whenMapStateToPropsIsMissing */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__ = __webpack_require__(90);


function whenMapStateToPropsIsFunction(mapStateToProps) {
  return typeof mapStateToProps === 'function' ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__["a" /* wrapMapToPropsFunc */])(mapStateToProps, 'mapStateToProps') : undefined;
}

function whenMapStateToPropsIsMissing(mapStateToProps) {
  return !mapStateToProps ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__["b" /* wrapMapToPropsConstant */])(function () {
    return {};
  }) : undefined;
}

/* harmony default export */ __webpack_exports__["a"] = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);

/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export defaultMergeProps */
/* unused harmony export wrapMergePropsFunc */
/* unused harmony export whenMergePropsIsFunction */
/* unused harmony export whenMergePropsIsOmitted */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(92);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



function defaultMergeProps(stateProps, dispatchProps, ownProps) {
  return _extends({}, ownProps, stateProps, dispatchProps);
}

function wrapMergePropsFunc(mergeProps) {
  return function initMergePropsProxy(dispatch, _ref) {
    var displayName = _ref.displayName,
        pure = _ref.pure,
        areMergedPropsEqual = _ref.areMergedPropsEqual;

    var hasRunOnce = false;
    var mergedProps = void 0;

    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

      if (hasRunOnce) {
        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
      } else {
        hasRunOnce = true;
        mergedProps = nextMergedProps;

        if (process.env.NODE_ENV !== 'production') __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__["a" /* default */])(mergedProps, displayName, 'mergeProps');
      }

      return mergedProps;
    };
  };
}

function whenMergePropsIsFunction(mergeProps) {
  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
}

function whenMergePropsIsOmitted(mergeProps) {
  return !mergeProps ? function () {
    return defaultMergeProps;
  } : undefined;
}

/* harmony default export */ __webpack_exports__["a"] = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export impureFinalPropsSelectorFactory */
/* unused harmony export pureFinalPropsSelectorFactory */
/* harmony export (immutable) */ __webpack_exports__["a"] = finalPropsSelectorFactory;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__verifySubselectors__ = __webpack_require__(222);
function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }



function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
  return function impureFinalPropsSelector(state, ownProps) {
    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
  };
}

function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
  var areStatesEqual = _ref.areStatesEqual,
      areOwnPropsEqual = _ref.areOwnPropsEqual,
      areStatePropsEqual = _ref.areStatePropsEqual;

  var hasRunAtLeastOnce = false;
  var state = void 0;
  var ownProps = void 0;
  var stateProps = void 0;
  var dispatchProps = void 0;
  var mergedProps = void 0;

  function handleFirstCall(firstState, firstOwnProps) {
    state = firstState;
    ownProps = firstOwnProps;
    stateProps = mapStateToProps(state, ownProps);
    dispatchProps = mapDispatchToProps(dispatch, ownProps);
    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    hasRunAtLeastOnce = true;
    return mergedProps;
  }

  function handleNewPropsAndNewState() {
    stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewProps() {
    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
    return mergedProps;
  }

  function handleNewState() {
    var nextStateProps = mapStateToProps(state, ownProps);
    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
    stateProps = nextStateProps;

    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

    return mergedProps;
  }

  function handleSubsequentCalls(nextState, nextOwnProps) {
    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
    var stateChanged = !areStatesEqual(nextState, state);
    state = nextState;
    ownProps = nextOwnProps;

    if (propsChanged && stateChanged) return handleNewPropsAndNewState();
    if (propsChanged) return handleNewProps();
    if (stateChanged) return handleNewState();
    return mergedProps;
  }

  return function pureFinalPropsSelector(nextState, nextOwnProps) {
    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
  };
}

// TODO: Add more comments

// If pure is true, the selector returned by selectorFactory will memoize its results,
// allowing connectAdvanced's shouldComponentUpdate to return false if final
// props have not changed. If false, the selector will always return a new
// object and shouldComponentUpdate will always return true.

function finalPropsSelectorFactory(dispatch, _ref2) {
  var initMapStateToProps = _ref2.initMapStateToProps,
      initMapDispatchToProps = _ref2.initMapDispatchToProps,
      initMergeProps = _ref2.initMergeProps,
      options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

  var mapStateToProps = initMapStateToProps(dispatch, options);
  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
  var mergeProps = initMergeProps(dispatch, options);

  if (process.env.NODE_ENV !== 'production') {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__verifySubselectors__["a" /* default */])(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
  }

  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = verifySubselectors;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_warning__ = __webpack_require__(54);


function verify(selector, methodName, displayName) {
  if (!selector) {
    throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
  } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
    if (!selector.hasOwnProperty('dependsOnOwnProps')) {
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils_warning__["a" /* default */])('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
    }
  }
}

function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
  verify(mapStateToProps, 'mapStateToProps', displayName);
  verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
  verify(mergeProps, 'mergeProps', displayName);
}

/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Subscription; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// encapsulates the subscription logic for connecting a component to the redux store, as
// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants

var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  // the current/next pattern is copied from redux's createStore code.
  // TODO: refactor+expose that code to be reusable here?
  var current = [];
  var next = [];

  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;
      for (var i = 0; i < listeners.length; i++) {
        listeners[i]();
      }
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);

      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;

        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription = function () {
  function Subscription(store, parentSub, onStateChange) {
    _classCallCheck(this, Subscription);

    this.store = store;
    this.parentSub = parentSub;
    this.onStateChange = onStateChange;
    this.unsubscribe = null;
    this.listeners = nullListeners;
  }

  Subscription.prototype.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  Subscription.prototype.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  Subscription.prototype.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

      this.listeners = createListenerCollection();
    }
  };

  Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();



/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = shallowEqual;
var hasOwn = Object.prototype.hasOwnProperty;

function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}

function shallowEqual(objA, objB) {
  if (is(objA, objB)) return true;

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) return false;

  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(20);

var invariant = __webpack_require__(1);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var PooledClass = __webpack_require__(226);
var ReactElement = __webpack_require__(16);

var emptyFunction = __webpack_require__(8);
var traverseAllChildren = __webpack_require__(237);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactElement = __webpack_require__(16);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = __webpack_require__(95);
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _require = __webpack_require__(16),
    isValidElement = _require.isValidElement;

var factory = __webpack_require__(64);

module.exports = factory(isValidElement);

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



module.exports = '15.6.1';

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(20);

var ReactPropTypeLocationNames = __webpack_require__(229);
var ReactPropTypesSecret = __webpack_require__(231);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(7);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(7);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _require = __webpack_require__(93),
    Component = _require.Component;

var _require2 = __webpack_require__(16),
    isValidElement = _require2.isValidElement;

var ReactNoopUpdateQueue = __webpack_require__(96);
var factory = __webpack_require__(117);

module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */


var _prodInvariant = __webpack_require__(20);

var ReactElement = __webpack_require__(16);

var invariant = __webpack_require__(1);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(20);

var ReactCurrentOwner = __webpack_require__(11);
var REACT_ELEMENT_TYPE = __webpack_require__(94);

var getIteratorFn = __webpack_require__(97);
var invariant = __webpack_require__(1);
var KeyEscapeUtils = __webpack_require__(225);
var warning = __webpack_require__(2);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = autoRehydrate;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_isStatePlainEnough__ = __webpack_require__(242);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




function autoRehydrate() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var stateReconciler = config.stateReconciler || defaultStateReconciler;

  return function (next) {
    return function (reducer, initialState, enhancer) {
      var store = next(liftReducer(reducer), initialState, enhancer);
      return _extends({}, store, {
        replaceReducer: function replaceReducer(reducer) {
          return store.replaceReducer(liftReducer(reducer));
        }
      });
    };
  };

  function liftReducer(reducer) {
    var rehydrated = false;
    var preRehydrateActions = [];
    return function (state, action) {
      if (action.type !== __WEBPACK_IMPORTED_MODULE_0__constants__["REHYDRATE"]) {
        if (config.log && !rehydrated) preRehydrateActions.push(action); // store pre-rehydrate actions for debugging
        return reducer(state, action);
      } else {
        if (config.log && !rehydrated) logPreRehydrate(preRehydrateActions);
        rehydrated = true;

        var inboundState = action.payload;
        var reducedState = reducer(state, action);

        return stateReconciler(state, inboundState, reducedState, config.log);
      }
    };
  }
}

function logPreRehydrate(preRehydrateActions) {
  var concernedActions = preRehydrateActions.slice(1);
  if (concernedActions.length > 0) {
    console.log('\n      redux-persist/autoRehydrate: %d actions were fired before rehydration completed. This can be a symptom of a race\n      condition where the rehydrate action may overwrite the previously affected state. Consider running these actions\n      after rehydration:\n    ', concernedActions.length, concernedActions);
  }
}

function defaultStateReconciler(state, inboundState, reducedState, log) {
  var newState = _extends({}, reducedState);

  Object.keys(inboundState).forEach(function (key) {
    // if initialState does not have key, skip auto rehydration
    if (!state.hasOwnProperty(key)) return;

    // if initial state is an object but inbound state is null/undefined, skip
    if (_typeof(state[key]) === 'object' && !inboundState[key]) {
      if (log) console.log('redux-persist/autoRehydrate: sub state for key `%s` is falsy but initial state is an object, skipping autoRehydrate.', key);
      return;
    }

    // if reducer modifies substate, skip auto rehydration
    if (state[key] !== reducedState[key]) {
      if (log) console.log('redux-persist/autoRehydrate: sub state for key `%s` modified, skipping autoRehydrate.', key);
      newState[key] = reducedState[key];
      return;
    }

    // otherwise take the inboundState
    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_isStatePlainEnough__["a" /* default */])(inboundState[key]) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__utils_isStatePlainEnough__["a" /* default */])(state[key])) newState[key] = _extends({}, state[key], inboundState[key]); // shallow merge
    else newState[key] = inboundState[key]; // hard set

    if (log) console.log('redux-persist/autoRehydrate: key `%s`, rehydrated to ', key, newState[key]);
  });
  return newState;
}

/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function createTransform(inbound, outbound) {
  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var whitelist = config.whitelist || null;
  var blacklist = config.blacklist || null;

  function whitelistBlacklistCheck(key) {
    if (whitelist && whitelist.indexOf(key) === -1) return true;
    if (blacklist && blacklist.indexOf(key) !== -1) return true;
    return false;
  }

  return {
    in: function _in(state, key) {
      return !whitelistBlacklistCheck(key) && inbound ? inbound(state, key) : state;
    },
    out: function out(state, key) {
      return !whitelistBlacklistCheck(key) && outbound ? outbound(state, key) : state;
    }
  };
}

/* harmony default export */ __webpack_exports__["a"] = (createTransform);

/***/ }),
/* 240 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "storages", function() { return storages; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__autoRehydrate__ = __webpack_require__(238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__createPersistor__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createTransform__ = __webpack_require__(239);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getStoredState__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__persistStore__ = __webpack_require__(241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__purgeStoredState__ = __webpack_require__(102);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "autoRehydrate", function() { return __WEBPACK_IMPORTED_MODULE_0__autoRehydrate__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "createPersistor", function() { return __WEBPACK_IMPORTED_MODULE_1__createPersistor__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "createTransform", function() { return __WEBPACK_IMPORTED_MODULE_2__createTransform__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "getStoredState", function() { return __WEBPACK_IMPORTED_MODULE_3__getStoredState__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "persistStore", function() { return __WEBPACK_IMPORTED_MODULE_4__persistStore__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "purgeStoredState", function() { return __WEBPACK_IMPORTED_MODULE_5__purgeStoredState__["a"]; });







// @TODO remove in v5
var deprecated = function deprecated(cb, cb2, cb3) {
  console.error('redux-persist: this method of importing storages has been removed. instead use `import { asyncLocalStorage } from "redux-persist/storages"`');
  if (typeof cb === 'function') cb();
  if (typeof cb2 === 'function') cb2();
  if (typeof cb3 === 'function') cb3();
};
var deprecatedStorage = { getAllKeys: deprecated, getItem: deprecated, setItem: deprecated, removeItem: deprecated };
var storages = {
  asyncLocalStorage: deprecatedStorage,
  asyncSessionStorage: deprecatedStorage
};



/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = persistStore;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getStoredState__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__createPersistor__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_setImmediate__ = __webpack_require__(103);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };






function persistStore(store) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var onComplete = arguments[2];

  // defaults
  // @TODO remove shouldRestore
  var shouldRestore = !config.skipRestore;
  if (process.env.NODE_ENV !== 'production' && config.skipRestore) console.warn('redux-persist: config.skipRestore has been deprecated. If you want to skip restoration use `createPersistor` instead');

  var purgeKeys = null;

  // create and pause persistor
  var persistor = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__createPersistor__["a" /* default */])(store, config);
  persistor.pause();

  // restore
  if (shouldRestore) {
    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_setImmediate__["a" /* default */])(function () {
      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__getStoredState__["a" /* default */])(config, function (err, restoredState) {
        if (err) {
          complete(err);
          return;
        }
        // do not persist state for purgeKeys
        if (purgeKeys) {
          if (purgeKeys === '*') restoredState = {};else purgeKeys.forEach(function (key) {
            return delete restoredState[key];
          });
        }
        try {
          store.dispatch(rehydrateAction(restoredState, err));
        } finally {
          complete(err, restoredState);
        }
      });
    });
  } else __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_setImmediate__["a" /* default */])(complete);

  function complete(err, restoredState) {
    persistor.resume();
    onComplete && onComplete(err, restoredState);
  }

  return _extends({}, persistor, {
    purge: function purge(keys) {
      purgeKeys = keys || '*';
      return persistor.purge(keys);
    }
  });
}

function rehydrateAction(payload) {
  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  return {
    type: __WEBPACK_IMPORTED_MODULE_0__constants__["REHYDRATE"],
    payload: payload,
    error: error
  };
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = isStatePlainEnough;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(27);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



function isStatePlainEnough(a) {
  // isPlainObject + duck type not immutable
  if (!a) return false;
  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) !== 'object') return false;
  if (typeof a.asMutable === 'function') return false;
  if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__["a" /* default */])(a)) return false;
  return true;
}

/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = applyMiddleware;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(104);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */
function applyMiddleware() {
  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
    middlewares[_key] = arguments[_key];
  }

  return function (createStore) {
    return function (reducer, preloadedState, enhancer) {
      var store = createStore(reducer, preloadedState, enhancer);
      var _dispatch = store.dispatch;
      var chain = [];

      var middlewareAPI = {
        getState: store.getState,
        dispatch: function dispatch(action) {
          return _dispatch(action);
        }
      };
      chain = middlewares.map(function (middleware) {
        return middleware(middlewareAPI);
      });
      _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__["a" /* default */].apply(undefined, chain)(store.dispatch);

      return _extends({}, store, {
        dispatch: _dispatch
      });
    };
  };
}

/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = bindActionCreators;
function bindActionCreator(actionCreator, dispatch) {
  return function () {
    return dispatch(actionCreator.apply(undefined, arguments));
  };
}

/**
 * Turns an object whose values are action creators, into an object with the
 * same keys, but with every function wrapped into a `dispatch` call so they
 * may be invoked directly. This is just a convenience method, as you can call
 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
 *
 * For convenience, you can also pass a single function as the first argument,
 * and get a function in return.
 *
 * @param {Function|Object} actionCreators An object whose values are action
 * creator functions. One handy way to obtain it is to use ES6 `import * as`
 * syntax. You may also pass a single function.
 *
 * @param {Function} dispatch The `dispatch` function available on your Redux
 * store.
 *
 * @returns {Function|Object} The object mimicking the original object, but with
 * every action creator wrapped into the `dispatch` call. If you passed a
 * function as `actionCreators`, the return value will also be a single
 * function.
 */
function bindActionCreators(actionCreators, dispatch) {
  if (typeof actionCreators === 'function') {
    return bindActionCreator(actionCreators, dispatch);
  }

  if (typeof actionCreators !== 'object' || actionCreators === null) {
    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
  }

  var keys = Object.keys(actionCreators);
  var boundActionCreators = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var actionCreator = actionCreators[key];
    if (typeof actionCreator === 'function') {
      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
    }
  }
  return boundActionCreators;
}

/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (immutable) */ __webpack_exports__["a"] = combineReducers;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(105);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(27);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(106);




function getUndefinedStateErrorMessage(key, action) {
  var actionType = action && action.type;
  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

  return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
}

function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
  var reducerKeys = Object.keys(reducers);
  var argumentName = action && action.type === __WEBPACK_IMPORTED_MODULE_0__createStore__["b" /* ActionTypes */].INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

  if (reducerKeys.length === 0) {
    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
  }

  if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__["a" /* default */])(inputState)) {
    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
  }

  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
  });

  unexpectedKeys.forEach(function (key) {
    unexpectedKeyCache[key] = true;
  });

  if (unexpectedKeys.length > 0) {
    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
  }
}

function assertReducerShape(reducers) {
  Object.keys(reducers).forEach(function (key) {
    var reducer = reducers[key];
    var initialState = reducer(undefined, { type: __WEBPACK_IMPORTED_MODULE_0__createStore__["b" /* ActionTypes */].INIT });

    if (typeof initialState === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
    }

    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
    if (typeof reducer(undefined, { type: type }) === 'undefined') {
      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + __WEBPACK_IMPORTED_MODULE_0__createStore__["b" /* ActionTypes */].INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
    }
  });
}

/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */
function combineReducers(reducers) {
  var reducerKeys = Object.keys(reducers);
  var finalReducers = {};
  for (var i = 0; i < reducerKeys.length; i++) {
    var key = reducerKeys[i];

    if (process.env.NODE_ENV !== 'production') {
      if (typeof reducers[key] === 'undefined') {
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_warning__["a" /* default */])('No reducer provided for key "' + key + '"');
      }
    }

    if (typeof reducers[key] === 'function') {
      finalReducers[key] = reducers[key];
    }
  }
  var finalReducerKeys = Object.keys(finalReducers);

  var unexpectedKeyCache = void 0;
  if (process.env.NODE_ENV !== 'production') {
    unexpectedKeyCache = {};
  }

  var shapeAssertionError = void 0;
  try {
    assertReducerShape(finalReducers);
  } catch (e) {
    shapeAssertionError = e;
  }

  return function combination() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    if (shapeAssertionError) {
      throw shapeAssertionError;
    }

    if (process.env.NODE_ENV !== 'production') {
      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
      if (warningMessage) {
        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_warning__["a" /* default */])(warningMessage);
      }
    }

    var hasChanged = false;
    var nextState = {};
    for (var _i = 0; _i < finalReducerKeys.length; _i++) {
      var _key = finalReducerKeys[_i];
      var reducer = finalReducers[_key];
      var previousStateForKey = state[_key];
      var nextStateForKey = reducer(previousStateForKey, action);
      if (typeof nextStateForKey === 'undefined') {
        var errorMessage = getUndefinedStateErrorMessage(_key, action);
        throw new Error(errorMessage);
      }
      nextState[_key] = nextStateForKey;
      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
    }
    return hasChanged ? nextState : state;
  };
}
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0)))

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(247);


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, module) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ponyfill = __webpack_require__(248);

var _ponyfill2 = _interopRequireDefault(_ponyfill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var root; /* global window */


if (typeof self !== 'undefined') {
  root = self;
} else if (typeof window !== 'undefined') {
  root = window;
} else if (typeof global !== 'undefined') {
  root = global;
} else if (true) {
  root = module;
} else {
  root = Function('return this')();
}

var result = (0, _ponyfill2['default'])(root);
exports['default'] = result;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35), __webpack_require__(249)(module)))

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});
exports['default'] = symbolObservablePonyfill;
function symbolObservablePonyfill(root) {
	var result;
	var _Symbol = root.Symbol;

	if (typeof _Symbol === 'function') {
		if (_Symbol.observable) {
			result = _Symbol.observable;
		} else {
			result = _Symbol('observable');
			_Symbol.observable = result;
		}
	} else {
		result = '@@observable';
	}

	return result;
};

/***/ }),
/* 249 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 250 */
/***/ (function(module, exports) {

module.exports = [{"year":1939,"characters":["Angel (Golden Age)","Human Torch (Golden Age)","Ka-Zar (Golden Age)","Lady Dorma","Phineas Horton","Princess Fen","Sub-Mariner"],"name":"Marvel Comics #1","link":"marvel_comics_1","credits":[],"i":0},{"year":1974,"characters":["Death","John Kowalski"],"name":"War is Hell #9","link":"war_is_hell_9","credits":["Roy Thomas","Frank Springer","Tony Isabella","Chris Claremont","Dick Ayers","and Steve Gerber"],"i":1},{"year":1940,"characters":["Betty Dean","Human Torch (Golden Age)","Sub-Mariner"],"name":"Marvel Mystery Comics #8-10","link":"marvel_mystery_comics_810","credits":["Bill Everett","Carl Burgos","John Compton"],"i":2},{"year":1984,"characters":["Dieter Skul","Gaffer (SHIELD Scientist)"],"name":"Marvel Fanfare #16-17 (Sky-Wolves)","link":"marvel_fanfare_16-17_sky-wolve","credits":["Marv Wolfman","Al Milgrom","Joe Sinnott","Dave Cockrum","Jim Shooter","Jim Massara"],"i":3},{"year":1940,"characters":["Kro","Makkari","Thena","Zuras"],"name":"Red Raven Comics #1 (Mercury)","link":"red_raven_comics_1_mercury","credits":["Jack Kirby","Martin Burnstein"],"i":4},{"year":1940,"characters":["Human Torch (Golden Age)","Sub-Mariner","Toro"],"name":"Human Torch #2","link":"human_torch_2_sub-mariner","credits":["Bill Everett","Carl Burgos"],"i":5},{"year":1941,"characters":["Bucky","Captain America","Dr. Erskine","Golden Girl (Betsy Ross)","Heinz Kruger","Kro","Makkari","Red Skull (George Maxon)"],"name":"Captain America Comics #1","link":"captain_america_comics_1","credits":["Jack Kirby","Al Liederman","Ed Herron","Joe Simon"],"i":6},{"year":1965,"characters":["Bucky","Captain America","Dr. Erskine","Heinz Kruger","Sgt. Mike Duffy"],"name":"Tales Of Suspense #63 (Captain America)","link":"tales_of_suspense_63_captain_a","credits":["Jack Kirby","Frank Giacoia","Stan Lee"],"i":7},{"year":1965,"characters":["Bucky","Captain America","Golden Girl (Betsy Ross)","Red Skull (George Maxon)","Sgt. Mike Duffy"],"name":"Tales Of Suspense #64-65 (Captain America)","link":"tales_of_suspense_64-65_captai","credits":["Jack Kirby","Frank Giacoia","Chic Stone","Stan Lee"],"i":8},{"year":1965,"characters":["Bucky","Captain America","Hate Monger (Hitler)","Red Skull","Sgt. Mike Duffy"],"name":"Tales of Suspense #66-68 (Captain America)","link":"tales_of_suspense_66-68_captai","credits":["Jack Kirby","Frank Giacoia","Chic Stone","Stan Lee"],"i":9},{"year":1941,"characters":["Black Marvel","Bucky","Captain America","Citizen V","Empress Jarna","Fiery Mask","Fin (Golden Age)","Human Torch (Golden Age)","Red Raven","Sub-Mariner","Toro","Vision (Golden Age)","Whizzer"],"name":"Daring Mystery Comics #1, Red Raven Comics #1, Marvel Mystery Comics #13, Marvel Mystery Comics #26, USA Comics #1, Marvel Mystery Comics #27, All Winners Comics #1, Marvel Mystery Comics #23, Comedy Comics #9","link":"daring_mystery_comics_1_-","credits":[],"i":10},{"year":1940,"characters":["Terry Vance"],"name":"Marvel Mystery Comics #14 (Terry Vance)","link":"marvel_mystery_comics_14","credits":["Raymond Gill","Bob Oksner"],"i":11},{"year":1941,"characters":["Angel (Golden Age)","Bucky","Captain America","Destroyer (Brian Falsworth)","Human Torch (Golden Age)","Red Skull","Sub-Mariner","Vision (Golden Age)"],"name":"Marvel Mystery Comics #17, Captain America Comics #7, Marvel Mystery Comics #25, Captain America Comics #22, Marvel Mystery Comics #42, All-Winners Comics #12","link":"marvel_mystery_comics_17captai","credits":[],"i":12},{"year":1941,"characters":["Bucky","Captain America"],"name":"Captain America Comics #3, Strange Tales #73, Journey Into Mystery #82, Tales Of Suspense #22","link":"captain_america_comics_3strang","credits":[],"i":13},{"year":1941,"characters":["Sub-Mariner"],"name":"Human Torch #4 (Sub-Mariner)","link":"human_torch_4_sub-mariner","credits":["Bill Everett"],"i":14},{"year":1941,"characters":["Angel (Golden Age)","Coldsteel","Hate Monger (Hitler)","Human Torch (Golden Age)","Ka-Zar (Golden Age)","Patriot","Princess Fen","Rathia","Sub-Mariner","Toro"],"name":"Human Torch #5A","link":"human_torch_5a","credits":["Bill Everett","Carl Burgos"],"i":15},{"year":1941,"characters":["Angel (Golden Age)","Armless Tiger Man(!)","Bucky","Captain America","Human Torch (Golden Age)","Khor","Makkari","Parrot","Silver Scorpion","Sub-Mariner","Toro","Vision (Golden Age)"],"name":"Marvel Mystery Comics #23, Marvel Mystery Comics #26, Captain America Comics #2, Captain America Comics #9, Comedy Comics #9","link":"marvel_mystery_comics_23marvel","credits":[],"i":16},{"year":1941,"characters":["Bucky","Captain America"],"name":"Captain America Comics #5","link":"captain_america_comics_5","credits":["Jack Kirby","Al Avison","Joe Simon"],"i":17},{"year":1948,"characters":["Human Torch (Golden Age)","Hyena","Toro"],"name":"Human Torch Comics #30","link":"human_torch_comics_30","credits":[],"i":18},{"year":1942,"characters":["Bucky","Captain America"],"name":"Captain America Comics #10","link":"captain_america_comics_10","credits":["George Klein","Al Avison","Reed Crandall","Jack Kirby","Syd Shores","Joe Simon"],"i":19},{"year":1942,"characters":["Bucky","Captain America","Red Skull"],"name":"Captain America Comics #16","link":"captain_america_comics_16","credits":["George Klein","Syd Shores","Al Avison","Stan Lee"],"i":20},{"year":1965,"characters":["Bucky","Captain America","Cedric Rawlings"],"name":"Tales Of Suspense #69-71 (Captain America)","link":"tales_of_suspense_6971_captain","credits":["Jack Kirby","Vincent Colletta","George Tuska","Stan Lee"],"i":21},{"year":1994,"characters":["Angel (Golden Age)","Betty Dean","Black Avenger","Black Marvel","Black Widow (Golden Age)","Blazing Skull","Bucky","Captain America","Destroyer (Brian Falsworth)","Doris Sheldon","Human Torch (Golden Age)","J. Jonah Jameson","Nick Fury","Phil Sheldon","Phineas Horton","Sub-Mariner","Toro","Vision (Golden Age)","Willie Lumpkin"],"name":"Marvels #1","link":"marvels_1","credits":["Alex Ross","Kurt Busiek","Tom DeFalco","Spencer Lamm","Marcus McLauren"],"i":22},{"year":2010,"characters":["Angel (Golden Age)","Destroyer (Brian Falsworth)","Dr. Erskine","Dr. Nemesis (Golden Age)","Electro (Golden Age Robot)","Fiery Mask","Fred Raymond","Heinz Kruger","Human Torch (Golden Age)","John Steele","Major Kerfoot","Makkari","Mister E","Monako","Nick Fury","Noah Burstein","Patriot","Phantom Bullet","Phantom Reporter","Phineas Horton","Professor Zogolowski","Red Hargrove","Red Skull","Sam 'Happy Sam' Sawyer","Thin Man","Toro","Two-Gun Kid","U-Man"],"name":"Marvels Project #1-8","link":"marvels_project_1-8","credits":["Lauren Sankovitch","Ed Brubaker","Steve Epting","Jeanine Schaefer","Tom Brevoort","Joe Quesada"],"i":23},{"year":1964,"characters":["Baron Von Strucker","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Hate Monger (Hitler)","Izzy Cohen","Junior Juniper","Lord Peter Hawley","Mr. Fantastic","Nick Fury","Pamela Hawley","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #1-5","link":"sgt_fury_and_his_howling_comma_2","credits":["Jack Kirby","George Roussos","Dick Ayers","Stan Lee"],"i":24},{"year":1964,"characters":["Bull McGiveney","Dino Manelli","Dum Dum Dugan","Gabriel Jones","General Erwin Rommel","Izzy Cohen","Lord Peter Hawley","Nick Fury","Pamela Hawley","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #6-7","link":"sgt_fury_and_his_howling_comma_7","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":25},{"year":1964,"characters":["Baron Zemo (Heinrich)","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston"],"name":"Sgt. Fury and His Howling Commandos #8","link":"sgt_fury_and_his_howling_comma","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":26},{"year":1964,"characters":["Baron Von Strucker","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Pamela Hawley","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #9","link":"sgt_fury_and_his_howling_comma_3","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":27},{"year":1964,"characters":["Captain Savage","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Pamela Hawley","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #10","link":"sgt_fury_and_his_howling_comma_8","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":28},{"year":1964,"characters":["Bull McGiveney","Captain Flint","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #11","link":"sgt_fury_and_his_howling_comma_9","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":29},{"year":1964,"characters":["Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #12","link":"sgt_fury_and_his_howling_comma_10","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":30},{"year":1976,"characters":["Baron Blood (John Falsworth)","Betty Dean","Blue Diamond","Brain Drain","Brunnhilde","Bucky","Bucky (Fred Davis)","Captain America","Colonel Krieghund","Donar","Froh","Hotchkins","Human Torch (Golden Age)","Jack Frost","Loga","Master Man","Miss America","Olalla","Patriot","Red Raven","Red Skull","Spitfire","Sub-Mariner","Thin Man","Toro","U-Man","Union Jack (James Falsworth)","Whizzer"],"name":"Giant-Size Invaders #1, Invaders #1-5, Marvel Premiere #29, Invaders #6, Marvel Premiere #30, Invaders #7-9","link":"giantsize_invaders_1_invaders","credits":["Don Heck","Jim Mooney","Roy Thomas","Frank Springer","Dick Ayers","Frank Robbins","Len Wein","Rich Buckler","Vincent Colletta"],"i":31},{"year":1977,"characters":["Agent Axis","Blue Bullet","Bucky","Captain America","Destroyer (Brian Falsworth)","Destroyer (Roger Aubrey)","Golem (Golden Age)","Hate Monger (Hitler)","Hotchkins","Human Torch (Golden Age)","Hyena","Master Man","Shark","Spirit of '76","Spitfire","Sub-Mariner","Toro","Union Jack (James Falsworth)","Warrior Woman"],"name":"Invaders #10-15, Invaders annual #1, Invaders #16-21","link":"invaders_11","credits":["Lee Elias","Don Rico","Jim Mooney","Alex Schomburg","Roy Thomas","Frank Springer","Frank Robbins"],"i":32},{"year":1964,"characters":["Bucky","Bull McGiveney","Captain America","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Pamela Hawley","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #13","link":"sgt_fury_and_his_howling_comma_4","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":33},{"year":1965,"characters":["Baron Von Strucker","Captain Savage","Dino Manelli","Dum Dum Dugan","Ernst Mueller","Fritz von Sydow","Gabriel Jones","Izzy Cohen","Ludwig","Manfred Adler","Nick Fury","Otto Rabe","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer","Siegfried Farber"],"name":"Sgt. Fury and His Howling Commandos #14","link":"sgt_fury_and_his_howling_comma_5","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":34},{"year":1978,"characters":["Agent Axis","Baron Von Strucker","Bucky","Captain America","Coldsteel","Destroyer (Brian Falsworth)","Destroyer (Roger Aubrey)","Ernst Mueller","Fritz von Sydow","General Erwin Rommel","Golden Girl (Gwenny Lou Sabuki)","Hate Monger (Hitler)","Hotchkins","Human Top","Human Torch (Golden Age)","Ludwig","Manfred Adler","Master Man","Otto Rabe","Sam Sabuki","Scarlet Scarab","Siegfried Farber","Spitfire","Sub-Mariner","Teutonic Knight","Thor","Toro","Union Jack (James Falsworth)"],"name":"Invaders #22-23, 25-34","link":"invaders_22-23_25-34","credits":["Bill Black","Alan Kupperberg","Roy Thomas","Frank Springer","Don Glut","Chic Stone"],"i":35},{"year":1965,"characters":["Agent X (Rooten)","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Hans Rooten","Izzy Cohen","Nick Fury","Pamela Hawley","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #15-17","link":"sgt_fury_and_his_howling_comma_11","credits":["Frank Giacoia","Dick Ayers","Stan Lee","Steve Ditko","Vincent Colletta"],"i":36},{"year":1993,"characters":["Baron Blood (John Falsworth)","Blazing Skull","Blue Bullet","Blue Diamond","Bucky","Captain America","Destroyer (Brian Falsworth)","Dr. Nemesis (Golden Age)","Dum Dum Dugan","Gabriel Jones","Golden Girl (Gwenny Lou Sabuki)","Golem (Golden Age)","Human Meteor","Human Top","Human Torch (Golden Age)","Iron Cross","Jack Frost","Lady Lotus","Master Man","Miss America","Nick Fury","Patriot","Reb Ralston","Red Raven","Sam 'Happy Sam' Sawyer","Silver Scorpion","Sky Shark","Spider Queen","Spitfire","Strongman","Sub-Mariner","Suwan","Thin Man","Toro","U-Man","Union Jack (James Falsworth)","Vision (Golden Age)","Volton","Warrior Woman","Whizzer","Yellow Claw"],"name":"Invaders #35-41, Invaders #1-4","link":"invaders_4041","credits":["Don Heck","Ian Akin","Brian Garvey","Alan Kupperberg","Roy Thomas","Dave Hoover","Don Glut","Michael Rockwitz","Tom DeFalco","Jim Shooter","Rick Hoberg","Chic Stone"],"i":37},{"year":1998,"characters":["Captain America","Human Torch (Golden Age)","Princess Fen","Sub-Mariner"],"name":"Captain America: Sentinel of Liberty #2-4","link":"captain_america_sentinel_of_li","credits":["Bob Harras","Ron Garney","Mark Waid","Dan Green","Matt Idelson"],"i":38},{"year":1965,"characters":["Bull McGiveney","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Lord Peter Hawley","Nick Fury","Pamela Hawley","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #18","link":"sgt_fury_and_his_howling_comma_12","credits":["Chic Stone","Dick Ayers","Stan Lee"],"i":39},{"year":1945,"characters":["Agent X (Rooten)","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Hans Rooten","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos #19","link":"sgt_fury_and_his_howling_comma_13","credits":["Frank Giacoia","Dick Ayers","Stan Lee"],"i":40},{"year":1965,"characters":["Baron Von Strucker","Bull McGiveney","Dino Manelli","Dum Dum Dugan","Ernst Mueller","Fritz von Sydow","Gabriel Jones","Hans Rooten","Izzy Cohen","Ludwig","Manfred Adler","Nick Fury","Otto Rabe","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer","Siegfried Farber"],"name":"Sgt. Fury and His Howling Commandos #20","link":"sgt_fury_and_his_howling_comma_6","credits":["Frank Giacoia","Dick Ayers","Stan Lee"],"i":41},{"year":1965,"characters":["Baron Von Strucker","Bull McGiveney","Dino Manelli","Dum Dum Dugan","Ernst Mueller","Fritz von Sydow","Gabriel Jones","Izzy Cohen","Jacques Dernier","Ludwig","Manfred Adler","Nick Fury","Otto Rabe","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer","Siegfried Farber"],"name":"Sgt. Fury and His Howling Commandos #21-23","link":"sgt_fury_and_his_howling_comma_14","credits":["Frank Giacoia","Carl Hubbell","Dick Ayers","Stan Lee"],"i":42},{"year":1966,"characters":["Bull McGiveney","Dino Manelli","Dum Dum Dugan","Eric Koenig","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and his Howling Commandos #27","link":"sgt_fury_and_his_howling_comma_19","credits":["John Tartaglione","Dick Ayers","Stan Lee"],"i":43},{"year":1966,"characters":["Baron Von Strucker","Captain Savage","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Hate Monger (Hitler)","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and his Howling Commandos #29","link":"sgt_fury_and_his_howling_comma_17","credits":["Roy Thomas","Dick Ayers","John Tartaglione"],"i":44},{"year":1966,"characters":["Bull McGiveney","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Hate Monger (Hitler)","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston"],"name":"Sgt. Fury and His Howling Commandos #32","link":"sgt_fury_and_his_howling_comma_1","credits":["Roy Thomas","Dick Ayers","John Tartaglione"],"i":45},{"year":1968,"characters":["Blarney Stone","Captain Savage","Chief Jay Little Bear","Dino Manelli","Dum Dum Dugan","Eric Koenig","Gabriel Jones","Jacques Larocque","Lee Baker","Nick Fury","Reb Ralston","Yaketty Yates"],"name":"Capt. Savage and his Leatherneck Raiders #1","link":"capt_savage_and_his_leathernec_1","credits":["Syd Shores","Gary Friedrich","Dick Ayers"],"i":46},{"year":1991,"characters":["Dino Manelli","Dracula","Dum Dum Dugan","Eric Koenig","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Marvel Comics Presents #77-79 (Dracula/Nick Fury)","link":"marvel_comics_presents_77-79_d","credits":["Art Nichols","Josef Rubinstein","Kelly Corvese","Doug Murray","Terry Kavanagh","Tom Lyle"],"i":47},{"year":1969,"characters":["Dawn Fury","Dino Manelli","Dum Dum Dugan","Fritz Klaue","Gabriel Jones","Izzy Cohen","Jake Fury","Nick Fury","Percy Pinkerton","Reb Ralston"],"name":"Sgt. Fury and his Howling Commandos #68-69","link":"sgt_fury_and_his_howling_comma_18","credits":["Gary Friedrich","Dick Ayers","John Severin"],"i":48},{"year":1966,"characters":["Dino Manelli","Dum Dum Dugan","Gabriel Jones","Hate Monger (Hitler)","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston"],"name":"Sgt. Fury and His Howling Commandos annual #2","link":"sgt_fury_and_his_howling_comma_16","credits":["Roy Thomas","Dick Ayers","John Tartaglione"],"i":49},{"year":1973,"characters":["Dracula"],"name":"Dracula Lives #2 (1944)","link":"dracula_lives_2_1944","credits":["Syd Shores","Tony Isabella","Jim Starlin","Steve Gerber"],"i":50},{"year":1968,"characters":["Baron Von Strucker","Blarney Stone","Captain Savage","Chief Jay Little Bear","Jacques Larocque","Lee Baker","Yaketty Yates"],"name":"Capt. Savage and his Leatherneck Raiders #2-4","link":"capt_savage_and_his_leathernec","credits":["Syd Shores","Gary Friedrich","Dick Ayers"],"i":51},{"year":1998,"characters":["Baron Von Strucker","Captain America","Human Torch (Golden Age)","Phineas Horton","Red Skull","Sub-Mariner","Whizzer"],"name":"Marvel Universe #1-3","link":"marvel_universe_13","credits":["Gregg Schigiel","Bob Harras","Steve Epting","Tom Brevoort","Roger Stern","Al Williamson"],"i":52},{"year":2001,"characters":["Ancient One","Bucky","Captain America","Clea","Dino Manelli","Dormammu","Dum Dum Dugan","Gabriel Jones","Hamir","Izzy Cohen","Nick Fury","Orini","Percy Pinkerton","Reb Ralston","Red Skull"],"name":"Captain America/Nick Fury: The Otherworld War","link":"captain_americanick_fury_the_o","credits":["Leonardo Manco","Peter Hogan","Joe Quesada","Andrew Lis","Bobbie Chase"],"i":53},{"year":1999,"characters":["Baron Zemo (Heinrich)","Bucky","Captain America"],"name":"Captain America: Sentinel of Liberty #12","link":"captain_america_sentinel_of_li_1","credits":["Bob Harras","Scott Koblish","Brian Smith","Anthony Williams","Mark Waid","Bobbie Chase","Dan Green","Matt Idelson","Doug Braithwaite"],"i":54},{"year":1991,"characters":["Coldsteel","Red Guardian (Aleksey Lebedev)","Spirit of '76","Sub-Mariner"],"name":"Namor annual #1 (All Winners)","link":"namor_annual_1_all_winners","credits":["Dana Moreshead","Michael Thomas","Don Hudson","Phil Hester"],"i":55},{"year":1946,"characters":["Bucky (Fred Davis)","Human Torch (Golden Age)","ISBISA","Miss America","Spirit of '76","Sub-Mariner","Toro","Whizzer"],"name":"All-Winners Comics #19","link":"allwinners_comics_19","credits":["Allen Bellaman","Don Rico","Al Avison","Vince Alascia","Al Gabriele","Bill Finger","Syd Shores","Bob Powell"],"i":56},{"year":1977,"characters":["Adam II","Bucky (Fred Davis)","Hate Monger (Hitler)","Human Torch (Golden Age)","Miss America","Patriot","Phineas Horton","Spirit of '76","Sub-Mariner","Toro","Uatu the Watcher","Whizzer"],"name":"What If? #4","link":"what_if_4","credits":["Roy Thomas","Frank Springer","Frank Robbins"],"i":57},{"year":1947,"characters":["Bucky (Fred Davis)","Future Man","Human Torch (Golden Age)","Madame Death","Miss America","Patriot","Sub-Mariner","Toro","Whizzer"],"name":"All-Winners Comics #21","link":"all-winners_comics_21","credits":["Al Avison","Vince Alascia","Otto Binder","Al Gabriele","Charles Nicholas","Syd Shores"],"i":58},{"year":1948,"characters":["Betty Dean","Namora","Sub-Mariner","Venus"],"name":"Marvel Mystery Comics #82, Venus #1","link":"marvel_mystery_comics_82_venus","credits":["Syd Shore","[Unknown]","Ken Bald","Lin Streeter"],"i":59},{"year":1951,"characters":["Marvel Boy (Robert Grayson)","Matthew Grayson"],"name":"Marvel Boy #1, Astonishing #3","link":"marvel_boy_1_astonishing_5","credits":["Bill Everett","Russ Heath","Stan Lee"],"i":60},{"year":1951,"characters":["Krang (Giant Ant)","Venus"],"name":"Tales To Astonish #14, Venus #17","link":"tales_to_astonish_14venus_17","credits":["Jack Kirby","Bill Everett","Dick Ayers"],"i":61},{"year":1965,"characters":["Captain Savage","Dino Manelli","Dum Dum Dugan","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Sgt. Fury and His Howling Commandos annual #1","link":"sgt_fury_and_his_howling_comma_15","credits":["Frank Giacoia","Dick Ayers","Stan Lee"],"i":62},{"year":1951,"characters":["Marvel Boy (Robert Grayson)"],"name":"Astonishing #4, Astonishing #6","link":"astonishing_4astonishing_6","credits":["Bill Everett"],"i":63},{"year":1951,"characters":["Marvel Boy (Robert Grayson)","Matthew Grayson"],"name":"Astonishing #5","link":"astonishing_5","credits":["Bill Everett"],"i":64},{"year":1951,"characters":["Marvel Boy (Robert Grayson)"],"name":"Astonishing #6","link":"astonishing_6","credits":["Bill Everett"],"i":65},{"year":1954,"characters":["Gorilla-Man"],"name":"Tales To Astonish #25, Marvel Tales #113, Adventures Into Terror #28, Men's Adventures #26","link":"tales_to_astonish_25marvel_tal","credits":[],"i":66},{"year":1954,"characters":["Human Robot"],"name":"Menace #11","link":"menace_11","credits":["John Romita Sr."],"i":67},{"year":1954,"characters":["Betty Dean","Namora","Sub-Mariner"],"name":"Sub-Mariner Comics #34","link":"sub-mariner_comics_34","credits":["Bill Everett"],"i":68},{"year":1954,"characters":["Betty Dean","Byrrah","Human Torch (Golden Age)","Namora","Sub-Mariner","Toro"],"name":"Sub-Mariner Comics #35","link":"sub-mariner_comics_35_human_to","credits":["Bill Everett","Dick Ayers","i>","Stan Lee","<i>Human Torch<","<i>Sub-Mariner<"],"i":69},{"year":1954,"characters":["Human Torch (Golden Age)","Toro"],"name":"Human Torch Comics #38","link":"human_torch_comics_38","credits":["Dick Ayers","Stan Lee"],"i":70},{"year":1954,"characters":["Betty Dean","Namora","Princess Fen","Sub-Mariner"],"name":"Sub-Mariner Comics #36","link":"sub-mariner_comics_36","credits":["Bill Everett"],"i":71},{"year":1956,"characters":["Fritz Voltzmann","Jimmy Woo","Suwan","Yellow Claw"],"name":"Yellow Claw #1","link":"yellow_claw_1","credits":["Joe Maneely","Al Feldstein"],"i":72},{"year":1956,"characters":["Fritz Voltzmann","Jimmy Woo","Suwan","Yellow Claw"],"name":"Yellow Claw #2","link":"yellow_claw_2","credits":["Jack Kirby","Paul Reinman"],"i":73},{"year":1955,"characters":["Betty Dean","Captain America (Grand Director)","Fritz Voltzmann","Human Torch (Golden Age)","Jimmy Woo","Neptunia","Nomad","Red Skull (Communist)","Sub-Mariner","Suwan","Toro","Venus","Yellow Claw"],"name":"Venus #18, Young Men Comics #24, Young Men Comics #26, Yellow Claw #3","link":"astonishing_5venus_18young_men","credits":[],"i":74},{"year":1954,"characters":["Betty Dean","Sub-Mariner"],"name":"Young Men Comics #25 (Sub-Mariner)","link":"young_men_comics_25_sub-marine","credits":["Bill Everett"],"i":75},{"year":1954,"characters":["Human Torch (Golden Age)","Toro"],"name":"Young Men Comics #25 (Human Torch)","link":"young_men_comics_25_human_torc","credits":[],"i":76},{"year":1954,"characters":["Captain America (Grand Director)","Nomad"],"name":"Men's Adventures #27 (Captain America)","link":"mens_adventures_27_captain_ame","credits":["Mort Lawrence","Stan Lee"],"i":77},{"year":1954,"characters":["Human Torch (Golden Age)","Toro"],"name":"Men's Adventures #28 (Human Torch)","link":"mens_adventure_28_human_torch","credits":["Dick Ayers","Stan Lee"],"i":78},{"year":1955,"characters":["Betty Dean","Sub-Mariner"],"name":"Sub-Mariner Comics #38","link":"sub-mariner_comics_38","credits":["Bill Everett"],"i":79},{"year":1955,"characters":["Betty Dean","Sub-Mariner"],"name":"Sub-Mariner Comics #41","link":"sub-mariner_comics_41","credits":["Bill Everett"],"i":80},{"year":1955,"characters":["Sub-Mariner"],"name":"Sub-Mariner Comics #42","link":"sub-mariner_comics_42","credits":["Bill Everett"],"i":81},{"year":2010,"characters":["Crusader (Robert Grayson duplicate)","Jimmy Woo","Marvel Boy (Robert Grayson)","Matthew Grayson"],"name":"Marvel Boy: The Uranian #1-3","link":"marvel_boy_the_uranian_1-3","credits":["Felix Ruiz","Jordan White","Jeff Parker","Mark Paniccia"],"i":82},{"year":1968,"characters":["Human Torch (Golden Age)","Toro","Unhuman"],"name":"Marvel Super-Heroes #16 (GA Human Torch)","link":"marvel_super-heroes_16_ga_huma","credits":["Dick Ayers","Stan Lee"],"i":83},{"year":1960,"characters":["Blip","Creature From Krogarr","Glop","Groot","Taboo","Tim Boo Ba"],"name":"Tales To Astonish #13, Amazing Adult Fantasy #9, Journey Into Mystery #72, Strange Tales #75, Tales To Astonish #15, Tales To Astonish #25, Strange Tales #78","link":"tales_to_astonish_13amazing_ad","credits":[],"i":84},{"year":1960,"characters":["Brute That Walks","Kraa","Spoor","Vandoom's Monster","X","Zzutak"],"name":"Tales To Astonish #20, Tales To Astonish #17, Tales Of Suspense #18, Journey Into Mystery #65, Strange Tales #88, Tales Of Suspense #11","link":"tales_to_astonish_20tales_to_a","credits":[],"i":85},{"year":1960,"characters":["Fin Fang Foom","Gigantus","Grottu","Liuchow Chan","Titan the Amphibian","Ulysses Bloodstone"],"name":"Journey Into Mystery #63, Strange Tales #73, Tales Of Suspense #28, Strange Tales #89","link":"journey_into_mystery_63strange","credits":[],"i":86},{"year":1960,"characters":["Arthur Nagan","Chondu","Jerry Morgan"],"name":"Mystery Tales #21, World of Fantasy #11, World of Fantasy #13, Tales Of Suspense #9","link":"mystery_tales_21world_of_fanta","credits":[],"i":87},{"year":1960,"characters":[],"name":"Amazing Adventures #5, Journey Into Mystery #58","link":"amazing_adventures_5journey_in","credits":["Steve Ditko","Don Heck","Stan Lee"],"i":88},{"year":1960,"characters":["Xemnu the Titan"],"name":"Journey Into Mystery #62","link":"journey_into_mystery_62","credits":["Jack Kirby","Dick Ayers"],"i":89},{"year":1961,"characters":["Bob Robertson","Spragg the Living Mountain"],"name":"Journey Into Mystery #68","link":"journey_into_mystery_68","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":90},{"year":1960,"characters":["Kaa"],"name":"Strange Tales #79, Uncanny Tales #11, Marvel Tales #114, Mystery Tales #15","link":"strange_tales_79uncanny_tales_","credits":[],"i":91},{"year":1960,"characters":["Goom","Helen Langley","Mark Langley"],"name":"Amazing Adult Fantasy #11, Strange Tales #67, Tales Of Suspense #15","link":"amazing_adult_fantasy_11strang","credits":[],"i":92},{"year":1960,"characters":["Billy Langley","Googam","Helen Langley","Mark Langley"],"name":"Tales of Suspense #17, Adventures Into Terror #11, Tales of Suspense #14","link":"tales_of_suspense_17adventures","credits":[],"i":93},{"year":1962,"characters":["Aunt May","Uncle Ben"],"name":"Strange Tales #97","link":"strange_tales_97","credits":["Steve Ditko","Stan Lee"],"i":94},{"year":1952,"characters":["It the Living Colossus"],"name":"Tales Of Suspense #14, Adventures Into Terror #11","link":"tales_of_suspense_14adventures","credits":["Jack Kirby","Dick Ayers","Joe Sinnott"],"i":95},{"year":1956,"characters":["Dr. Druid"],"name":"Amazing Adventures #1, Astonishing #47","link":"amazing_adventures_1astonishin","credits":["Jack Kirby","[Unknown]","Bernie Krigstein","Stan Lee"],"i":96},{"year":1956,"characters":["Dr. Druid"],"name":"Strange Tales #97, Amazing Adventures #3, Amazing Adult Fantasy #14, Marvel Tales #146","link":"strange_tales_97amazing_advent","credits":["[Unknown]","Dick Ayers","Stan Lee","Steve Ditko","Jack Kirby","Unknown- Writer"],"i":97},{"year":1962,"characters":["Dr. Druid","Gorgilla"],"name":"Strange Tales #97, Tales To Astonish #21, Amazing Adult Fantasy #14","link":"strange_tales_97tales_to_aston","credits":["Jack Kirby","Steve Ditko","Gene Colan","Stan Lee"],"i":98},{"year":1955,"characters":["Dr. Druid"],"name":"Amazing Adventures #2, Strange Tales #97, Marvel Tales #134","link":"amazing_adventures_2","credits":["Dick Ayers","Stan Lee","Jack Kirby","Joe Kubert"],"i":99},{"year":1960,"characters":["Xemnu the Titan"],"name":"Journey Into Mystery #66, Tales To Astonish #25, Journey Into Mystery #79, Strange Tales #73, Tales To Astonish #23","link":"journey_into_mystery_66tales_t","credits":[],"i":100},{"year":1952,"characters":["Bob O'Bryan","Diane Cummings","Grant Marshall","It the Living Colossus"],"name":"Tales Of Suspense #20, Strange Stories of Suspense #13, Journey Into Mystery #4","link":"tales_of_suspense_20strange_st","credits":["Jack Kirby","Dick Ayers","Gene Colan","George Roussos"],"i":101},{"year":1962,"characters":["Mister Morgan's Monster"],"name":"Strange Tales #99","link":"strange_tales_99","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":102},{"year":1953,"characters":["Metallo"],"name":"Tales of Suspense #16, Astonishing #35, Uncanny Tales #9","link":"tales_of_suspense_16astonishin","credits":["Astonishing #35","<b>Title:","<b>Issue(s):","Larry Lieber","[Unknown]","<b>Cover Date:","\"The Executioner\"","Dick Ayers","\" The Man Who Followed!\"","Stan Lee","<b>Credits:","Jack Kirby","Mannie Banks","Oct 54","Jun 53","Uncanny Tales #9","Myron Fass"],"i":103},{"year":2005,"characters":["Bombu","Manoo","Monstrollo","Titano"],"name":"Marvel Monsters: Where Monsters Dwell #1, Tales To Astonish #10","link":"marvel_monsters_where_monsters","credits":["Peter David","Russell Braun","Mike Allred","Joe Sinnott","Jimmy Palmiotti","Keith Giffen","Jack Kirby","Jeff Parker","Arnold Pander"],"i":104},{"year":1998,"characters":["Dr. Druid","Gigantus","Gorgilla","Kro","Makkari","Mole Man","Tricephalous","Ulysses Bloodstone","Zawadi"],"name":"Marvel Universe #4-7","link":"marvel_universe_47","credits":["Gregg Schigiel","Bob Harras","Mike Manley","Roger Stern","Tom Brevoort","Jason Armstrong","Bret Blevins"],"i":105},{"year":1963,"characters":["Ancient One","Baron Mordo","Dr. Strange"],"name":"Strange Tales #115 (Dr. Strange)","link":"strange_tales_115_dr_strange","credits":["Steve Ditko","Stan Lee"],"i":106},{"year":1997,"characters":["Baron Von Strucker","Wolverine"],"name":"Untold Tales Of Spider-Man #-1","link":"untold_tales_of_spiderman_1","credits":["Al Milgrom","Bob Harras","Glenn Greenberg","John Romita Sr.","Roger Stern","Tom Brevoort"],"i":107},{"year":2011,"characters":["Ancient One","Dr. Strange"],"name":"Doctor Strange: From the Marvel Vault #1","link":"doctor_strange_from_the_marvel","credits":["Jay Geldhof","Tom Brennan","Neil Vokes","Tom Brevoort","Joe Edkin","Roger Stern"],"i":108},{"year":1963,"characters":["Ancient One","Baron Mordo","Dr. Strange","Dreamstalker","Hamir","Nightmare","Wong"],"name":"Strange Tales #110-111 (Dr. Strange)","link":"strange_tales_110111","credits":["Steve Ditko","Stan Lee"],"i":109},{"year":2001,"characters":["Axis","Black Fox (Lost Generation)","Blackjack","Byrrah","Captain America (Grand Director)","Captain Hip","Cassandra Locke","Chimera","Diablo","Dr. Druid","Dr. Strange","Effigy","Fandral","Firefall (Lost Generation)","Flatiron","Frank","Gadly","Hogun","Howler","Human Torch","Ikaris","Invisible Woman","Katyusha","Krang","Kro","Liberty Girl","Makkari","Mako","Morph","Mr. Fantastic","Mr. Justice","Namora","Nick Fury","Nightingale","Nocturne (vampire)","Nomad","Odin","Oxbow","Pixie","Positron","Rapunzel","Rebound","Reflex","Riot Act","Rumor","Scimitar","Scythe","Squire","Sub-Mariner","Sunshine (Lost Generation)","Templar","Thing","Thor","Typhoon","Uatu the Watcher","Ulysses Bloodstone","Valkyrie","Venus","Volstagg","Vyrra","Walkabout","Yankee Clipper","Yellow Claw","Yeti","Zawadi"],"name":"Marvel: The Lost Generation #12-1","link":"marvel_the_lost_generation_121","credits":["Ralph Macchio","Al Milgrom","Bob Harras","John Byrne","Roger Stern","Lara Castle","Matt Hicks"],"i":110},{"year":1977,"characters":["3-D Man","Chuck Chandler"],"name":"Marvel Premiere #35","link":"marvel_premiere_35","credits":["Dave Hunt","Roy Thomas","Jim Craig"],"i":111},{"year":1977,"characters":["3-D Man","Cold Warrior"],"name":"Marvel Premiere #36-37","link":"marvel_premiere_36","credits":["David Hunt","Roy Thomas","Don Glut","Jim Craig"],"i":112},{"year":1991,"characters":["Carol Hines","Dr. Cornelius","Professor Thorton","Wolverine"],"name":"Marvel Comics Presents #72-84 (Wolverine)","link":"marvel_comics_presents_7284","credits":["Barry Windsor-Smith","Tom DeFalco","Kelly Corvese","Mark Powers","Terry Kavanagh"],"i":113},{"year":1997,"characters":["Baron Zemo (Heinrich)","Baron Zemo (Helmut)","Beetle","Doc Samson","Erik Josten","Fixer","Jolt","Moonstone (Karla Sofen)","Songbird (Screaming Mimi)","Sub-Mariner"],"name":"Thunderbolts #-1","link":"thunderbolts_1","credits":["Kurt Busiek","Bob Harras","Steve Epting","Tom Brevoort","Bob Wiacek"],"i":114},{"year":1997,"characters":["Benaza","Ka-Zar","Parnival Plunder","Zabu"],"name":"Ka-Zar: Sibling Rivalry #-1","link":"ka-zar_sibling_rivalry_-1","credits":["Todd DeZago","Bob Harras","John Cassaday","Andy Jozefowicz","Mark Waid","Matt Idelson"],"i":115},{"year":1988,"characters":["Arnim Zola","Bova","Centurius","Ch'thon","Django Maximoff","Gregor Russoff","High Evolutionary","Jonathan Drew","Magda Eisenhardt","Magnus","Matthew Grayson","Merriem Drew","Miss America","Phaeder","Puppet Master","Quicksilver","Scarlet Witch","Sir Hogg","Sir Porga","Spider-Woman (Jessica Drew)","Whizzer","Wladyslav Shinski"],"name":"The Saga of the High Evolutionary","link":"the_saga_of_the_high_evolution","credits":["Ralph Macchio","Ron Lim","Paris Cullins","Tom DeFalco","Jim Sinclair","Mark Gruenwald","Tony DeZuniga"],"i":116},{"year":1963,"characters":["Alicia Masters","Dr. Doom","General Fredericks","Giganto (Subterranean)","Giganto (Whale Man)","Human Torch","Invisible Woman","Kurrgo","Miracle Man","Mole Man","Mr. Fantastic","Puppet Master","Sub-Mariner","Thing","Tricephalous"],"name":"Fantastic Four #1-10","link":"fantastic_four_110","credits":["George Klein","Sol Brodsky","Joe Sinnott","Dick Ayers","Stan Lee","Jack Kirby"],"i":117},{"year":1962,"characters":["Henry Pym"],"name":"Tales To Astonish #27 (Ant-Man)","link":"tales_to_astonish_27","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":118},{"year":1983,"characters":["Guardian (James Mac Hudson)","Jerry Jaxon","Vindicator (Heather Hudson)","Wolverine"],"name":"Alpha Flight #2-3 (origins)","link":"alpha_flight_2-3_origins","credits":["John Byrne"],"i":119},{"year":1962,"characters":["Betty Ross","Gargoyle (Soviet)","General 'Thunderbolt' Ross","Hulk","Igor Drenkov","Rick Jones"],"name":"Hulk #1","link":"hulk_1","credits":["Jack Kirby","Paul Reinman","Stan Lee"],"i":120},{"year":1962,"characters":["Tad Carter","Tobias Messenger"],"name":"Amazing Adult Fantasy #14","link":"amazing_adult_fantasy_14","credits":["Steve Ditko","Stan Lee"],"i":121},{"year":1963,"characters":["Ancient One","Baron Mordo","Dr. Strange","Victoria Bentley","Wong"],"name":"Strange Tales #114 (Dr. Strange)","link":"strange_tales_114_dr_strange","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":122},{"year":1990,"characters":["General 'Thunderbolt' Ross","Hulk"],"name":"Marvel Super Heroes #3 (Hulk)","link":"marvel_super_heroes_3_hulk","credits":["Steve Ditko","Marshall Rogers","Hollis Bright"],"i":123},{"year":1962,"characters":["Betty Ross","General 'Thunderbolt' Ross","Hulk","Rick Jones"],"name":"Hulk #2","link":"hulk_2","credits":["Jack Kirby","Steve Ditko","Stan Lee"],"i":124},{"year":1962,"characters":["Korg","Thor"],"name":"Journey Into Mystery #83","link":"journey_into_mystery_83","credits":["Larry Lieber","Jack Kirby","Joe Sinnott","Stan Lee"],"i":125},{"year":1962,"characters":["Aunt May","Burglar (Carradine)","Eric Schwinner","Flash Thompson","Jason Ionello","Joey 'Crusher' Hogan","Liz Allan","Maxie Shiffman","Mr. Warren","Sally Avril","Spider-Man","Uncle Ben"],"name":"Amazing Fantasy #15","link":"amazing_fantasy_15","credits":["Steve Ditko","Stan Lee"],"i":126},{"year":1962,"characters":["Jane Foster","Thor"],"name":"Journey Into Mystery #84","link":"journey_into_mystery_84","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":127},{"year":1962,"characters":["Henry Pym"],"name":"Tales To Astonish #35 (Ant-Man)","link":"tales_to_astonish_35","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":128},{"year":1962,"characters":["Bruto the Strongman","Clown","Ernesto Gambonno","General 'Thunderbolt' Ross","Hulk","Human Cannonball","Luigi Gambonno","Raja","Rick Jones","Ringmaster","Teena"],"name":"Hulk #3","link":"hulk_3","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":129},{"year":1962,"characters":["Human Torch","Thing"],"name":"Strange Tales #101 (Human Torch)","link":"strange_tales_101","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":130},{"year":1962,"characters":["Henry Pym","Madame X"],"name":"Tales To Astonish #36 (Ant-Man)","link":"tales_to_astonish_36_ant-man","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":131},{"year":1962,"characters":["Human Torch","Invisible Woman","Wizard"],"name":"Strange Tales #102 (Human Torch)","link":"strange_tales_102_human_torch","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":132},{"year":1962,"characters":["Henry Pym"],"name":"Tales To Astonish #37 (Ant-Man)","link":"tales_to_astonish_37_ant-man","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":133},{"year":1962,"characters":["Betty Ross","General 'Thunderbolt' Ross","Hulk","Rick Jones"],"name":"Hulk #4","link":"hulk_4","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":134},{"year":1962,"characters":["Egghead","Henry Pym"],"name":"Tales To Astonish #38 (Ant-Man)","link":"tales_to_astonish_38","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":135},{"year":1962,"characters":["Human Torch","Mr. Fantastic","Phineas (5th Dimension)","Valeria (5th Dimension)","Xemu (5th Dimension)"],"name":"Strange Tales #103 (Human Torch)","link":"strange_tales_103","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":136},{"year":1963,"characters":["Col. Edward Harrison","Frigga","Heimdall","Jane Foster","Loki","Odin","Ruby (Thug Thatcher's girlfriend)","Sandu","Thor","Thug Thatcher","Tyr","Zarrko the Tomorrow Man"],"name":"Journey Into Mystery #85-92","link":"journey_into_mystery_8592","credits":[],"i":137},{"year":1963,"characters":["Human Torch","Paste Pot Pete"],"name":"Strange Tales #104 (Human Torch)","link":"strange_tales_104","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":138},{"year":1963,"characters":["Betty Ross","General 'Thunderbolt' Ross","Hulk","Rick Jones","Tyrannus"],"name":"Hulk #5","link":"hulk_5","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":139},{"year":1963,"characters":["Henry Pym","Scarlet Beetle"],"name":"Tales To Astonish #39 (Ant-Man)","link":"tales_to_astonish_39_ant-man","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":140},{"year":1963,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing","Wizard"],"name":"Strange Tales #105 (Human Torch)","link":"strange_tales_105_human_torch","credits":["Larry Lieber","Jack Kirby","Dick Ayers","Stan Lee"],"i":141},{"year":1963,"characters":["Henry Pym","Hijacker"],"name":"Tales To Astonish #40 (Ant-Man)","link":"tales_to_astonish_40","credits":["Larry Lieber","Jack Kirby","Sol Brodsky","Stan Lee"],"i":142},{"year":1963,"characters":["Human Torch","Impossible Man","Invisible Woman","Mr. Fantastic","Thing","Willie Lumpkin"],"name":"Fantastic Four #11","link":"fantastic_four_11","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":143},{"year":1963,"characters":["Acrobat","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Strange Tales #106 (Human Torch)","link":"strange_tales_106_human_torch","credits":["Larry Lieber","Dick Ayers","Stan Lee"],"i":144},{"year":1968,"characters":["Bill Ross","Cyclops","Fred Duncan","Jack O'Diamonds","Professor X"],"name":"Uncanny X-Men #38-43 (origins)","link":"uncanny_x-men_38-43","credits":["Herb Trimpe","Roy Thomas","Werner Roth","John Verpoorten"],"i":145},{"year":1968,"characters":["Cyclops","Iceman","Madeline Drake","Professor X","William Drake"],"name":"X-Men Origins: Iceman #1, Uncanny X-Men #44-46 (origins)","link":"x-men_origins_iceman_1","credits":["Phil Noto","<b>Title:","\"The Iceman cometh!\"","<b>Issue(s):","Gary Friedrich","\"And the mob cried ... Vengeance!\"","<b>Cover Date:","<b>Credits:","George Tuska","Nick Lowe","May-Jul 68","John Verpoorten","Uncanny X-Men #45","Uncanny X-Men #46 (origin back-ups only)","Daniel Ketchum","Roberto Aguirre-Sacasa","Uncanny X-Men #44","\"\t...And then there were two\""],"i":146},{"year":1969,"characters":["Angel","Beast","Cyclops","Edna McCoy","Iceman","Jennifer Nyles","Kathryn Worthington","Norton McCoy","Professor X","Warren Worthington Jr."],"name":"Uncanny X-Men #49-56 (origins)","link":"uncanny_x-men_49-56_origins","credits":["Roy Thomas","Sam Grainger","John Verpoorten","John Tartaglione","Werner Roth","Vincent Colletta","Arnold Drake"],"i":147},{"year":1963,"characters":["Alicia Masters","General 'Thunderbolt' Ross","Hulk","Human Torch","Invisible Woman","Mr. Fantastic","Rick Jones","Thing"],"name":"Fantastic Four #12","link":"fantastic_four_12","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":148},{"year":1963,"characters":["Betty Ross","General 'Thunderbolt' Ross","Hulk","Metal Master","Rick Jones"],"name":"Hulk #6","link":"hulk_6","credits":["Steve Ditko","Stan Lee"],"i":149},{"year":1963,"characters":["Iron Man","Wong-Chu"],"name":"Tales Of Suspense #39","link":"tales_of_suspense_39","credits":["Larry Lieber","Don Heck","Stan Lee"],"i":150},{"year":1996,"characters":["Aunt May","Flash Thompson","Human Torch","J. Jonah Jameson","Jason Ionello","Kingpin","Liz Allan","Man-Wolf (John Jameson)","Maxie Shiffman","Sally Avril","Spider-Man","Supercharger","Tiny McKeever"],"name":"Amazing Fantasy #16-18","link":"amazing_fantasy_1618","credits":["Terese Nielsen","Greg Loudon","Ken Meyer)","Bob Budiansky","Kurt Busiek","Paul Lee (","Alexi Taylor","Sarra Mossoff"],"i":151},{"year":1963,"characters":["Aunt May","Chameleon","Human Torch","Invisible Woman","J. Jonah Jameson","Man-Wolf (John Jameson)","Maxie Shiffman","Mr. Fantastic","Spider-Man","Thing"],"name":"Amazing Spider-Man #1","link":"amazing_spiderman_1","credits":["Steve Ditko","Stan Lee"],"i":152},{"year":1997,"characters":["Angus MacWhirter","Apocalypse","Cable (Adult)","Moira MacTaggert","Reverend Craig","Wolfsbane"],"name":"Cable #-1","link":"cable_-1","credits":["Bob Harras","Juan Vlasco","James Robinson","Mark Powers","Jose Ladronn"],"i":153},{"year":1963,"characters":["Henry Pym"],"name":"Tales To Astonish #41 (Ant-Man)","link":"tales_to_astonish_41_ant-man","credits":["Larry Lieber","Don Heck","Stan Lee"],"i":154},{"year":1963,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Strange Tales #107 (Human Torch)","link":"strange_tales_107","credits":["Larry Lieber","Dick Ayers","Stan Lee"],"i":155},{"year":1963,"characters":["Human Torch","Painter"],"name":"Strange Tales #108 (Human Torch)","link":"strange_tales_108_human_torch","credits":["Robert Bernstein","Jack Kirby","Dick Ayers","Stan Lee"],"i":156},{"year":1963,"characters":["Human Torch","Igor (Super Ape)","Invisible Woman","Mikhlo (Super Ape)","Mr. Fantastic","Peator (Super Ape)","Red Ghost","Thing","Uatu the Watcher"],"name":"Fantastic Four #13","link":"fantastic_four_13","credits":["Jack Kirby","Steve Ditko","Stan Lee"],"i":157},{"year":1999,"characters":["Cable (Adult)","D'Von Kray","Franklin Rhodes","Guardian (James Mac Hudson)","Vulture","Wolverine"],"name":"Wolverine/Cable: Guts and Glory","link":"wolverinecable_guts_and_glory","credits":["Pete Franco","Bob Harras","Stephen Platt","Batt","Scott Koblish","Johnny Greene","Mark Powers","Rod Ramos","Lary Stucker","Mark Pennington","Joe Casey","Bob Wiacek"],"i":158},{"year":1963,"characters":["Henry Pym","Voice"],"name":"Tales To Astonish #42 (Ant-Man)","link":"tales_to_astonish_42_ant-man","credits":["Larry Lieber","Don Heck","Stan Lee"],"i":159},{"year":1963,"characters":["Iron Man"],"name":"Tales Of Suspense #40 (Iron Man)","link":"tales_of_suspense_40_iron_man","credits":["Robert Bernstein","Jack Kirby","Don Heck","Stan Lee"],"i":160},{"year":1963,"characters":["Aunt May","Betty Brant","Flash Thompson","J. Jonah Jameson","Liz Allan","Mysterio","Spider-Man","Tinkerer","Vulture"],"name":"Amazing Spider-Man #2","link":"amazing_spiderman_2","credits":["Steve Ditko","Stan Lee"],"i":161},{"year":1963,"characters":["Alicia Masters","Human Torch","Invisible Woman","Mr. Fantastic","Puppet Master","Sub-Mariner","Thing"],"name":"Fantastic Four #14","link":"fantastic_four_14","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":162},{"year":1963,"characters":["Henry Pym"],"name":"Tales To Astonish #43 (Ant-Man)","link":"tales_to_astonish_43_ant-man","credits":["Larry Lieber","Don Heck","Stan Lee"],"i":163},{"year":1963,"characters":["Dr. Strange (Iron Man Foe)","Iron Man"],"name":"Tales Of Suspense #41 (Iron Man)","link":"tales_of_suspense_41_iron_man","credits":["Robert Bernstein","Jack Kirby","Dick Ayers","Stan Lee"],"i":164},{"year":1963,"characters":["Jane Foster","Radioactive Man","Thor"],"name":"Journey Into Mystery #93","link":"journey_into_mystery_93","credits":["Robert Bernstein","Jack Kirby","Dick Ayers","Stan Lee"],"i":165},{"year":1963,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Strange Tales #109 (Human Torch)","link":"strange_tales_109_human_torch","credits":["Robert Bernstein","Jack Kirby","Dick Ayers","Stan Lee"],"i":166},{"year":1964,"characters":["Ancient One","Dr. Strange","Dreamstalker","Nightmare","Wong"],"name":"Strange Tales #116 (Dr. Strange)","link":"strange_tales_116","credits":["Steve Ditko","Stan Lee"],"i":167},{"year":1963,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Paste Pot Pete","Thing","Wizard"],"name":"Strange Tales #110 (Human Torch)","link":"strange_tales_110_human_torch","credits":["Ernie Hart","Dick Ayers","Stan Lee"],"i":168},{"year":1963,"characters":["Awesome Android","Human Torch","Invisible Woman","Mad Thinker","Mr. Fantastic","Thing","Willie Lumpkin"],"name":"Fantastic Four #15","link":"fantastic_four_15","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":169},{"year":1963,"characters":["Henry Pym","Lee Kearns","Pilai","Wasp"],"name":"Tales To Astonish #44 (Ant-Man)","link":"tales_to_astonish_44_ant-man","credits":["Jack Kirby","Don Heck","Ernie Hart","Stan Lee"],"i":170},{"year":1963,"characters":["Iron Man","Red Barbarian"],"name":"Tales Of Suspense #42 (Iron Man)","link":"tales_of_suspense_42_iron_man","credits":["Robert Bernstein","Don Heck","Stan Lee"],"i":171},{"year":1963,"characters":["Aunt May","Charlie Buchanan","Doctor Octopus","Flash Thompson","Human Torch","Spider-Man"],"name":"Amazing Spider-Man #3","link":"amazing_spiderman_3","credits":["Steve Ditko","Stan Lee"],"i":172},{"year":1963,"characters":["Asbestos Man","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Strange Tales #111 (Human Torch)","link":"strange_tales_111_human_torch","credits":["Ernie Hart","Dick Ayers","Stan Lee"],"i":173},{"year":1963,"characters":["Baxu","Iron Man","Kala"],"name":"Tales Of Suspense #43","link":"tales_of_suspense_43","credits":["Robert Bernstein","Don Heck","Jack Kirby -Penciler","Stan Lee"],"i":174},{"year":1963,"characters":["Egghead","Henry Pym","Wasp"],"name":"Tales To Astonish #45 (Ant-Man/Wasp)","link":"tales_to_astonish_45_ant-manwa","credits":["Don Heck","Ernie Hart","Stan Lee"],"i":175},{"year":1963,"characters":["Alicia Masters","Dr. Doom","Henry Pym","Human Torch","Invisible Woman","Mr. Fantastic","Pearla","Thing","Wasp"],"name":"Fantastic Four #16","link":"fantastic_four_16","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":176},{"year":1963,"characters":["Alicia Masters","Dr. Doom","Henry Pym","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #17","link":"fantastic_four_17","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":177},{"year":1963,"characters":["Iron Man"],"name":"Tales Of Suspense #44 (Iron Man)","link":"tales_of_suspense_44_iron_man","credits":["Robert Bernstein","Don Heck","Stan Lee"],"i":178},{"year":1963,"characters":["Henry Pym","Wasp"],"name":"Tales To Astonish #46 (Ant-Man/Wasp)","link":"tales_to_astonish_46_ant-manwa","credits":["Don Heck","Ernie Hart","Stan Lee"],"i":179},{"year":1963,"characters":["Aunt May","Betty Brant","Flash Thompson","J. Jonah Jameson","Liz Allan","Sandman","Spider-Man"],"name":"Amazing Spider-Man #4","link":"amazing_spiderman_4","credits":["Steve Ditko","Stan Lee"],"i":180},{"year":1963,"characters":["Dr. Zaxton","Jane Foster","Loki","Maha Yogi","Odin","Thor"],"name":"Journey Into Mystery #94-96","link":"journey_into_mystery_9496","credits":["Richard Bernstein","Stan  Lee","Joe Sinnott"],"i":181},{"year":1963,"characters":["Dorrek","Human Torch","Invisible Woman","Mr. Fantastic","Super-Skrull","Thing"],"name":"Fantastic Four #18","link":"fantastic_four_18","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":182},{"year":1963,"characters":["Eel","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Wizard"],"name":"Strange Tales #112 (Human Torch)","link":"strange_tales_112","credits":["Jerry Siegel","Dick Ayers","Stan Lee"],"i":183},{"year":1963,"characters":["Fox","Human Torch","Invisible Woman","Spider-Man"],"name":"Strange Tales annual #2 (Human Torch)","link":"strange_tales_annual_2_human_t","credits":["Jack Kirby","Steve Ditko","Stan Lee"],"i":184},{"year":1995,"characters":["Fancy Dan","Green Goblin (Norman Osborn)","Human Torch","Invisible Woman","Iron Man","Montana","Mr. Fantastic","Ox","Sub-Mariner","Thing"],"name":"Inner Demons","link":"inner_demons","credits":["Anita Sharpe","Bob Wakelin","Bob Harras","Marc McLaurin","Carl Potts","Mariano Nicieza","Studio Infinity"],"i":185},{"year":1963,"characters":["Alicia Masters","Human Torch","Invisible Woman","Krang","Lady Dorma","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Fantastic Four annual #1","link":"fantastic_four_annual_1","credits":["Jack Kirby","John Byrne","Dick Ayers","Stan Lee"],"i":186},{"year":1963,"characters":["Bill Bishop","Henry Pym","Hulk","Human Torch","Invisible Woman","Iron Man","Jane Foster","Loki","Mr. Fantastic","Odin","Rick Jones","Thing","Thor","Wasp"],"name":"Avengers #1","link":"avengers_1","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":187},{"year":1963,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Magneto","Professor X"],"name":"Uncanny X-Men #1","link":"uncanny_xmen_1","credits":["Jack Kirby","Paul Reinman","Stan Lee"],"i":188},{"year":1998,"characters":["General 'Thunderbolt' Ross","Hawkeye","Hugh Jones","Iron Man","John Gamelin","Jonas Hale","Morgan Stark","Pepper Potts","Saboteur","Senator Byrd","Simon Kreiger"],"name":"Iron Man: The Iron Age #1","link":"iron_man_the_iron_age_1","credits":["Kurt Busiek","Bob McLeod","Bob Harras","Polly Watson","Bobbie Chase","Patrick Zircher"],"i":189},{"year":1963,"characters":["Blizzard","Happy Hogan","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #45","link":"tales_of_suspense_45","credits":["Robert Bernstein","Don Heck","Stan Lee"],"i":190},{"year":1963,"characters":["Henry Pym","Wasp"],"name":"Tales To Astonish #47 (Ant-Man/Wasp)","link":"tales_to_astonish_47_ant-manwa","credits":["Don Heck","Ernie Hart","Stan Lee"],"i":191},{"year":1963,"characters":["Betty Brant","Dr. Doom","Flash Thompson","Human Torch","Invisible Woman","J. Jonah Jameson","Liz Allan","Mr. Fantastic","Spider-Man","Thing"],"name":"Amazing Spider-Man #5","link":"amazing_spiderman_5","credits":["Steve Ditko","Stan Lee"],"i":192},{"year":1963,"characters":["Jane Foster","Loki","Molto","Odin","Thor"],"name":"Journey Into Mystery #97","link":"journey_into_mystery_97","credits":["Jack Kirby","Don Heck","Stan Lee"],"i":193},{"year":1963,"characters":["Crimson Dynamo I","Happy Hogan","Iron Man","Pepper Potts","Senator Byrd"],"name":"Tales Of Suspense #46","link":"tales_of_suspense_46","credits":["Robert Bernstein","Don Heck","Stan Lee"],"i":194},{"year":1963,"characters":["Doris Evans","Human Torch","Plantman"],"name":"Strange Tales #113 (Human Torch)","link":"strange_tales_113","credits":["Jerry Siegel","Dick Ayers","Stan Lee"],"i":195},{"year":1963,"characters":["Alicia Masters","Human Torch","Invisible Woman","Kang","Mr. Fantastic","Thing"],"name":"Fantastic Four #19","link":"fantastic_four_19","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":196},{"year":1963,"characters":["Henry Pym","Porcupine","Wasp"],"name":"Tales To Astonish #48 (Ant-Man/Wasp)","link":"tales_to_astonish_48_ant-manwa","credits":["Don Heck","Ernie Hart","Stan Lee"],"i":197},{"year":1990,"characters":["Happy Hogan","Iron Man","Pepper Potts"],"name":"Marvel Comics Presents #58 (Iron Man)","link":"marvel_comics_presents_58_iron","credits":["Christopher Ivy","Kelly Corvese","Steve Ditko","Hollis Bright","Terry Kavanagh"],"i":198},{"year":1963,"characters":["Aunt May","Betty Brant","Billy Connors","Flash Thompson","J. Jonah Jameson","Liz Allan","Lizard","Martha Connors","Spider-Man"],"name":"Amazing Spider-Man #6","link":"amazing_spiderman_6","credits":["Steve Ditko","Stan Lee"],"i":199},{"year":1995,"characters":["Aunt May","Betty Brant","Captain Stacy","Flash Thompson","Green Goblin (Norman Osborn)","J. Jonah Jameson","Jason Ionello","Liz Allan","Mr. Warren","Sally Avril","Scorcher","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #1","link":"untold_tales_of_spiderman_1_1","credits":["Bob Budiansky","Kurt Busiek","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":200},{"year":1964,"characters":["Ancient One","Baron Mordo","Dr. Strange"],"name":"Strange Tales #117 (Dr. Strange)","link":"strange_tales_117118_dr_strang","credits":["Steve Ditko","Stan Lee"],"i":201},{"year":1995,"characters":["Aunt May","Batwing","Betty Brant","Captain Stacy","Flash Thompson","Green Goblin (Norman Osborn)","J. Jonah Jameson","Jason Ionello","Liz Allan","Randolph Winston Cherryh","Sally Avril","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #2","link":"untold_tales_of_spiderman_2","credits":["Bob Budiansky","Kurt Busiek","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":202},{"year":1963,"characters":["Cobra","Jane Foster","Odin","Thor"],"name":"Journey Into Mystery #98","link":"journey_into_mystery_98","credits":["Don Heck","Stan Lee"],"i":203},{"year":1963,"characters":["Happy Hogan","Iron Man","Melter","Pepper Potts","Senator Byrd"],"name":"Tales Of Suspense #47","link":"tales_of_suspense_47","credits":["Steve Ditko","Don Heck","Stan Lee"],"i":204},{"year":1963,"characters":["Acrobat","Doris Evans","Human Torch","Invisible Woman"],"name":"Strange Tales #114 (Human Torch)","link":"strange_tales_114","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":205},{"year":1963,"characters":["Angel","Beast","Bill Ross","Colonel Hendershoot","Cyclops","Fred Duncan","Iceman","Jean Grey","Professor X","Vanisher"],"name":"Uncanny X-Men #2","link":"uncanny_xmen_2","credits":["Jack Kirby","Paul Reinman","Stan Lee"],"i":206},{"year":1963,"characters":["Alicia Masters","Human Torch","Invisible Woman","Molecule Man","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Fantastic Four #20","link":"fantastic_four_20","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":207},{"year":1963,"characters":["Henry Pym","Living Eraser","Wasp"],"name":"Tales To Astonish #49 (Giant-Man/Wasp)","link":"tales_to_astonish_49","credits":["Jack Kirby","Don Heck","Stan Lee"],"i":208},{"year":1999,"characters":["Dr. Doom","Henry Pym","Hulk","Human Torch","Invisible Woman","Iron Man","Jarvis","Major Bowman","Mr. Fantastic","Spider-Man","Thing","Thor","Wasp"],"name":"Avengers #1.5","link":"avengers_15","credits":["Tom Brevoort","Roger Stern","Bruce Timm"],"i":209},{"year":1963,"characters":["Human Torch","Mr. Fantastic","Sandman","Spider-Man"],"name":"Strange Tales #115 (Human Torch)","link":"strange_tales_115","credits":["Dick Ayers","Stan Lee"],"i":210},{"year":1963,"characters":["Henry Pym","Hulk","Iron Man","Space Phantom","Thor","Wasp"],"name":"Avengers #2","link":"avengers_2","credits":["Dwayne McDuffie","Stan Lee","Jack Kirby","Paul Reinman","Michael Avon Oeming"],"i":211},{"year":1963,"characters":["Alicia Masters","Hate Monger (Hitler)","Human Torch","Invisible Woman","Mr. Fantastic","Nick Fury","Thing"],"name":"Fantastic Four #21","link":"fantastic_four_21","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":212},{"year":1963,"characters":["Happy Hogan","Iron Man","Mr. Doll","Pepper Potts"],"name":"Tales Of Suspense #48","link":"tales_of_suspense_48","credits":["Steve Ditko","Dick Ayers","Stan Lee"],"i":213},{"year":1963,"characters":["Aunt May","Betty Brant","Flash Thompson","J. Jonah Jameson","Liz Allan","Spider-Man","Vulture"],"name":"Amazing Spider-Man #7","link":"amazing_spiderman_7","credits":["Steve Ditko","Stan Lee"],"i":214},{"year":1995,"characters":["Aunt May","Betty Brant","Flash Thompson","Henry Pym","Human Torch","Iron Man","J. Jonah Jameson","Jason Ionello","Liz Allan","Sally Avril","Sandman","Spider-Man","Tiny McKeever","Wasp"],"name":"Untold Tales of Spider-Man #3","link":"untold_tales_of_spiderman_3","credits":["Bob Budiansky","Kurt Busiek","Pam Eklund","Al Vey","Tom Brevoort","Glenn Greenburg","Pat Olliffe"],"i":215},{"year":1964,"characters":["Jane Foster","Mr. Hyde","Odin","Thor"],"name":"Journey Into Mystery #99-100","link":"journey_into_mystery_99100","credits":["Don Heck","Stan Lee"],"i":216},{"year":1964,"characters":["Dr. Strange"],"name":"Strange Tales #118 (Dr. Strange)","link":"strange_tales_118_dr_strange","credits":["Steve Ditko","Stan Lee"],"i":217},{"year":1963,"characters":["Henry Pym","Wasp","Whirlwind"],"name":"Tales To Astonish #50 (Giant-Man/Wasp)","link":"tales_to_astonish_50_giant-man","credits":["Jack Kirby","Steve Ditko","Stan Lee"],"i":218},{"year":1964,"characters":["Angel","Beast","Cyclops","Happy Hogan","Henry Pym","Hulk","Iceman","Iron Man","Jean Grey","Pepper Potts","Professor X","Thor","Wasp"],"name":"Tales Of Suspense #49 (Iron Man)","link":"tales_of_suspense_49_iron_man","credits":["Steve Ditko","Paul Reinman","Stan Lee"],"i":219},{"year":1964,"characters":["Flash Thompson","Living Brain","Liz Allan","Mr. Warren","Principal Davis","Spider-Man"],"name":"Amazing Spider-Man #8 (first story)","link":"amazing_spiderman_8","credits":["Steve Ditko","Stan Lee"],"i":220},{"year":1964,"characters":["Henry Pym","Wasp","Whirlwind"],"name":"Tales To Astonish #51 (Giant-Man/Wasp)","link":"tales_to_astonish_51_giant-man","credits":["Larry Lieber","Dick Ayers","George Roussos","Stan Lee","Jack Kirby"],"i":221},{"year":1964,"characters":["Alicia Masters","Human Torch","Invisible Woman","Mr. Fantastic","Puppet Master","Thing"],"name":"Strange Tales #116 (Human Torch)","link":"strange_tales_116_human_torch","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":222},{"year":1964,"characters":["Angel","Beast","Cyclops","Henry Pym","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","Jane Foster","Jean Grey","Mr. Fantastic","Professor X","Rick Jones","Spider-Man","Sub-Mariner","Thing","Thor","Wasp"],"name":"Avengers #3","link":"avengers_3","credits":["Dwayne McDuffie","Stan Lee","Jack Kirby","Paul Reinman","Michael Avon Oeming"],"i":223},{"year":1995,"characters":["Aunt May","Ben Urich","Betty Brant","Big Man (Frederick Foswell)","Captain Stacy","Eddie Brock (Venom)","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jason Ionello","Liz Allan","Man-Wolf (John Jameson)","Phil Sheldon","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #4","link":"untold_tales_of_spiderman_4","credits":["Bob Budiansky","Kurt Busiek","Pam Eklund","Al Vey","Glenn Greenberg","Tom Brevoort","Pay Olliffe"],"i":224},{"year":1964,"characters":["Angel","Beast","Blob","Cyclops","Iceman","Jean Grey","Professor X"],"name":"Uncanny X-Men #3","link":"uncanny_xmen_3","credits":["Jack Kirby","Paul Reinman","Stan Lee"],"i":225},{"year":1964,"characters":["Human Torch","Invisible Woman","Mole Man","Mr. Fantastic","Thing"],"name":"Fantastic Four #22","link":"fantastic_four_22","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":226},{"year":1964,"characters":["Aunt May","Betty Brant","Dr. Bromwell","Electro","Flash Thompson","J. Jonah Jameson","Liz Allan","Spider-Man"],"name":"Amazing Spider-Man #9","link":"amazing_spiderman_9","credits":["Steve Ditko","Stan Lee"],"i":227},{"year":1964,"characters":["Eel","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Strange Tales #117 (Human Torch)","link":"strange_tales_117_human_torch","credits":["Dick Ayers","Stan Lee"],"i":228},{"year":1964,"characters":["Bull Brogin","Dr. Doom","Handsome Harry Phillips","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Yogi Dakor"],"name":"Fantastic Four #23","link":"fantastic_four_23","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":229},{"year":1964,"characters":["Black Knight (Nathan Garrett)","Hellhorse","Henry Pym","Wasp"],"name":"Tales To Astonish #52 (Giant-Man/Wasp)","link":"tales_to_astonish_52","credits":["Dick Ayers","Stan Lee"],"i":230},{"year":1964,"characters":["Happy Hogan","Iron Man","Mandarin","Pepper Potts"],"name":"Tales Of Suspense #50 (Iron Man)","link":"tales_of_suspense_50_iron_man","credits":["Don Heck","Stan Lee"],"i":231},{"year":1964,"characters":["Happy Hogan","Iron Man","Pepper Potts","Scarecrow","Uatu the Watcher"],"name":"Tales Of Suspense #51","link":"tales_of_suspense_51","credits":["Don Heck","Stan Lee"],"i":232},{"year":1964,"characters":["Captain America","Gabriel Jones","Henry Pym","Iron Man","Rick Jones","Sub-Mariner","Thor","Vuk","Wasp"],"name":"Avengers #4","link":"avengers_24","credits":["Dwayne McDuffie","George Roussos","Stan Lee","Jack Kirby","Michael Avon Oeming"],"i":233},{"year":1964,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Magneto","Mastermind","Professor X","Quicksilver","Scarlet Witch","Toad"],"name":"Uncanny X-Men #4","link":"uncanny_xmen_4","credits":["Jack Kirby","Paul Reinman","Stan Lee"],"i":234},{"year":1999,"characters":["Captain America","Iron Man"],"name":"Captain America: Sentinel of Liberty #5-6","link":"captain_america_sentinel_of_li_2","credits":["Mark Waid","Ron Garney","Dan Green"],"i":235},{"year":1994,"characters":["Daredevil","Elektra","Foggy Nelson","Jack Murdock","Kingpin","Larks","Sister Maggie Murdock","Stick","Stone (Chaste)","Typhoid Mary"],"name":"Daredevil: The Man Without Fear #1-5","link":"daredevil_the_man_without_fear","credits":["Ralph Macchio","John Romita Jr.","Tom DeFalco","Frank Miller","Al Williamson"],"i":236},{"year":1997,"characters":["Daredevil","Elektra","Stick"],"name":"Elektra #-1","link":"elektra_1","credits":["Bob Harras","Mike Deodato Jr.","Peter Milligan","Bobbie Chase","Deodato Studios"],"i":237},{"year":1998,"characters":["Col. Edward Harrison","Happy Hogan","Hugh Jones","Iron Man","J. Jonah Jameson","Jonas Hale","Pepper Potts","Simon Kreiger","Spider-Man","Spymaster"],"name":"Iron Man: The Iron Age #2","link":"iron_man_the_iron_age_2","credits":["Kurt Busiek","Bob Harras","Brian Smith","Bob Mcleod","Richard Howell","Bobbie Chase","Patrick Zircher"],"i":238},{"year":1964,"characters":["Henry Pym","Porcupine","Wasp"],"name":"Tales To Astonish #53","link":"tales_to_astonish_53","credits":["Dick Ayers","Stan Lee"],"i":239},{"year":1964,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","Fancy Dan","Flash Thompson","J. Jonah Jameson","Liz Allan","Montana","Ox","Spider-Man"],"name":"Amazing Spider-Man #10","link":"amazing_spiderman_10","credits":["Steve Ditko","Stan Lee"],"i":240},{"year":1996,"characters":["Aunt May","Batwing","Betty Brant","Big Man (Frederick Foswell)","Electro","Flash Thompson","General 'Thunderbolt' Ross","Gerard Winslow Winkler","Human Torch","J. Jonah Jameson","Jason Ionello","Liz Allan","Sally Avril","Spider-Man","Tiny McKeever","Vulture","Wizard"],"name":"Untold Tales of Spider-Man #5-7","link":"untold_tales_of_spider-man_5-7","credits":["Al Milgrom","Kurt Busiek","Pam Eklund","Al Vey","Glenn Greenberg","Bob Budiasky","Tom Brevoort","Bob Harris","Pat Olliffe"],"i":241},{"year":1964,"characters":["Doris Evans","Human Torch","Rabble Rouser","Spider-Man"],"name":"Strange Tales #119 (Human Torch)","link":"strange_tales_119_human_torch","credits":["Dick Ayers","Stan Lee"],"i":242},{"year":1964,"characters":["Alicia Masters","Human Torch","Infant Terrible","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #24","link":"fantastic_four_24","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":243},{"year":1964,"characters":["Aggamon","Dr. Strange","Wong"],"name":"Strange Tales #119 (Dr. Strange)","link":"strange_tales_119_dr_strange","credits":["Steve Ditko","Stan Lee"],"i":244},{"year":1996,"characters":["Fancy Dan","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","Headsman","J. Jonah Jameson","Jason Ionello","Montana","Ox","Sally Avril","Spider-Man"],"name":"Untold Tales of Spider-Man #8","link":"untold_tales_of_spiderman_8","credits":["Al Milgrom","Kurt Busiek","Pam Eklund","Bob Harras","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":245},{"year":1996,"characters":["Aunt May","Batwing","Commanda","Flash Thompson","J. Jonah Jameson","Jason Ionello","Lizard","Sally Avril","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #9","link":"untold_tales_of_spiderman_9","credits":["Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort","Brett Breeding","Ron Frenz"],"i":246},{"year":1964,"characters":["Aunt May","Betty Brant","Blackie Gaxton","Doctor Octopus","Spider-Man"],"name":"Amazing Spider-Man #11","link":"amazing_spiderman_11","credits":["Steve Ditko","Stan Lee"],"i":247},{"year":1996,"characters":["Aunt May","Betty Brant","Commanda","Flash Thompson","J. Jonah Jameson","Jason Ionello","Liz Allan","Sally Avril","Spider-Man","Wilson Allan"],"name":"Untold Tales of Spider-Man #10","link":"untold_tales_of_spiderman_10","credits":["Kurt Busiek","Pam Eklund","Bob Harras","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":248},{"year":1964,"characters":["Enchantress","Executioner","Heimdall","Henry Pym","Iron Man","Jane Foster","Loki","Odin","Thor","Wasp","Zarrko the Tomorrow Man"],"name":"Journey Into Mystery #101-103","link":"journey_into_mystery_101103","credits":["Jack Kirby","George Roussos","Chic Stone","Stan Lee"],"i":249},{"year":1964,"characters":["Black Widow","Crimson Dynamo I","Crimson Dynamo II","Happy Hogan","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #52 (Iron Man)","link":"tales_of_suspense_52_iron_man","credits":["Don Heck","Don Rico","Stan Lee"],"i":250},{"year":1964,"characters":["Uatu the Watcher"],"name":"Tales Of Suspense #52 (Watcher)","link":"tales_of_suspense_52_watcher","credits":["Larry Lieber","Paul Reinman","Stan Lee"],"i":251},{"year":1964,"characters":["El Toro","Henry Pym","Wasp"],"name":"Tales To Astonish #54 (Giant-Man/Wasp)","link":"tales_to_astonish_54_giant-man","credits":["Larry Lieber","Don Heck","Sol Brodsky","Stan Lee"],"i":252},{"year":1964,"characters":["Henry Pym","Wasp","Whirlwind"],"name":"Tales To Astonish #55 (Giant-Man/Wasp)","link":"tales_to_astonish_55_giant-man","credits":["Larry Lieber","George Roussos","Dick Ayers","Stan Lee"],"i":253},{"year":1964,"characters":["Aunt May","Betty Brant","Doctor Octopus","Dr. Bromwell","Flash Thompson","J. Jonah Jameson","Liz Allan","Spider-Man"],"name":"Amazing Spider-Man #12","link":"amazing_spiderman_12","credits":["Steve Ditko","Stan Lee"],"i":254},{"year":1996,"characters":["Aunt May","Betty Brant","Eel","Electro","Flash Thompson","J. Jonah Jameson","Jason Ionello","Liz Allan","Sally Avril","Spider-Man"],"name":"Untold Tales of Spider-Man #11","link":"untold_tales_of_spiderman_11","credits":["Kurt Busiek","Pam Eklund","Bob Harras","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":255},{"year":1996,"characters":["Aunt May","Betty Brant","Gordon","J. Jonah Jameson","Jason Ionello","Sally Avril","Scarlet Beetle","Spider-Man"],"name":"Untold Tales of Spider-Man #12","link":"untold_tales_of_spiderman_12","credits":["Kurt Busiek","Pam Eklund","Bob Harras","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":256},{"year":1996,"characters":["Aunt May","Baron Zemo (Heinrich)","Betty Brant","Black Knight (Nathan Garrett)","Flash Thompson","Hellhorse","Human Torch","Jason Ionello","Liz Allan","Melter","Radioactive Man","Sally Avril","Spider-Man"],"name":"Untold Tales of Spider-Man #13","link":"untold_tales_of_spiderman_13","credits":["Kurt Busiek","Pam Eklund","Bob Harras","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":257},{"year":1964,"characters":["Henry Pym","Magician","Wasp"],"name":"Tales To Astonish #56 (Giant-Man/Wasp)","link":"tales_to_astonish_56_giant-man","credits":["Larry Lieber","Paul Reinman","Dick Ayers","Stan Lee"],"i":258},{"year":1964,"characters":["Alicia Masters","Captain America","Henry Pym","Hulk","Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Rick Jones","Thing","Thor","Wasp"],"name":"Fantastic Four #25-26","link":"fantastic_four_2526","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":259},{"year":1964,"characters":["Baron Zemo (Heinrich)","Betty Ross","Black Knight (Nathan Garrett)","Captain America","General 'Thunderbolt' Ross","Hellhorse","Henry Pym","Hulk","Iron Man","Jane Foster","Jinku","Melter","Molto","Paste Pot Pete","Radioactive Man","Rick Jones","Thor","Wasp"],"name":"Avengers #5-6","link":"avengers_56","credits":["Jack Kirby","Paul Reinman","Chic Stone","Stan Lee"],"i":260},{"year":1964,"characters":["Black Widow","Happy Hogan","Iron Man","Pepper Potts","Senator Byrd","Uatu the Watcher"],"name":"Tales Of Suspense #53","link":"tales_of_suspense_53","credits":["Don Heck","Don Rico","Stan Lee"],"i":261},{"year":1964,"characters":["Angel","Beast","Cyclops","Elaine Grey","Iceman","Jean Grey","John Grey","Magneto","Mastermind","Professor X","Quicksilver","Scarlet Witch","Toad"],"name":"Uncanny X-Men #5","link":"uncanny_xmen_5","credits":["Jack Kirby","Paul Reinman","Stan Lee"],"i":262},{"year":1964,"characters":["Angel","Captain Barracuda","Dr. Strange","House of Shadows","Human Torch","Iceman","Invisible Woman","Jean Grey","Mr. Fantastic","Professor X","Thing"],"name":"Strange Tales #120","link":"strange_tales_120","credits":["Steve Ditko- Penciler","Dick Ayers","i>","Stan Lee","Steve Ditko","Jack Kirby","<i>Human Torch<","<i>Dr. Strange<"],"i":263},{"year":1964,"characters":["Balder","Captain America","Cobra","Enchantress","Executioner","Heimdall","Henry Pym","Iron Man","Jane Foster","Loki","Mr. Hyde","Odin","Skagg","Surtur","Thor","Wasp"],"name":"Journey Into Mystery #104-106","link":"journey_into_mystery_104106","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":264},{"year":1964,"characters":["Baron Mordo","Doris Evans","Dr. Strange","Human Torch","Invisible Woman","Mr. Fantastic","Plantman","Thing"],"name":"Strange Tales #121","link":"strange_tales_121","credits":["Dick Ayers","i>","Stan Lee","Steve Ditko","<i>Human Torch<","<i>Dr. Strange<"],"i":265},{"year":1964,"characters":["Aunt May","Betty Brant","Flash Thompson","J. Jonah Jameson","Liz Allan","Mysterio","Spider-Man"],"name":"Amazing Spider-Man #13","link":"amazing_spiderman_13","credits":["Steve Ditko","Stan Lee"],"i":266},{"year":1964,"characters":["Dr. Strange","Human Torch","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Fantastic Four #27","link":"fantastic_four_27","credits":["Jack Kirby","George Roussos","Stan Lee"],"i":267},{"year":1996,"characters":["Aunt May","Betty Brant","Flash Thompson","Gordon 'The Terrier' Savinksi","Jason Ionello","Liz Allan","Scorcher","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #14","link":"untold_tales_of_spiderman_14","credits":["Kurt Busiek","Pam Eklund","Bob Harras","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":268},{"year":1964,"characters":["Bull Brogin","Handsome Harry Phillips","Human Torch","Invisible Woman","Yogi Dakor"],"name":"Strange Tales #122 (Human Torch)","link":"strange_tales_122_human_torch","credits":["George Roussos","Dick Ayers","Stan Lee"],"i":269},{"year":1964,"characters":["Daredevil","Electro","Foggy Nelson","Human Torch","Invisible Woman","Karen Page","Mr. Fantastic","Thing"],"name":"Daredevil #2","link":"daredevil_2","credits":["Vincent Colletta","Joe Orlando","Stan Lee"],"i":270},{"year":1964,"characters":["Uatu the Watcher"],"name":"Tales Of Suspense #54 (Watcher)","link":"tales_of_suspense_54_watcher","credits":["Larry Lieber","Chic Stone","Stan Lee"],"i":271},{"year":1964,"characters":["Happy Hogan","Iron Man","Mandarin","Pepper Potts","Uatu the Watcher"],"name":"Tales Of Suspense #54-55","link":"tales_of_suspense_55","credits":["Don Heck","Stan Lee"],"i":272},{"year":1964,"characters":["Aunt May","Betty Brant","Fancy Dan","Flash Thompson","Green Goblin (Norman Osborn)","Hulk","J. Jonah Jameson","Liz Allan","Montana","Ox","Spider-Man"],"name":"Amazing Spider-Man #14","link":"amazing_spiderman_14","credits":["Steve Ditko","Stan Lee"],"i":273},{"year":1964,"characters":["Dr. Strange","Nightmare"],"name":"Strange Tales #122 (Dr. Strange)","link":"strange_tales_122","credits":["Steve Ditko","Stan Lee"],"i":274},{"year":1964,"characters":["Alicia Masters","Angel","Awesome Android","Beast","Cyclops","Human Torch","Iceman","Invisible Woman","Jean Grey","Mad Thinker","Mr. Fantastic","Professor X","Puppet Master","Thing"],"name":"Fantastic Four #28","link":"fantastic_four_28","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":275},{"year":1964,"characters":["Happy Hogan","Henry Pym","Iron Man","Pepper Potts","Thor","Unicorn","Wasp"],"name":"Tales Of Suspense #56 (Iron Man)","link":"tales_of_suspense_56_iron_man","credits":["Don Heck","Stan Lee"],"i":276},{"year":1964,"characters":["Human Torch","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Tales Of Suspense #56 (Watcher) ","link":"tales_of_suspense_56_watcher","credits":["Larry Lieber","George Roussos","Stan Lee"],"i":277},{"year":1996,"characters":["Betty Brant","Eddie Brock (Venom)","Flash Thompson","Gordon 'The Terrier' Savinksi","J. Jonah Jameson","Jason Ionello","Liz Allan","Mary Jane Watson","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #15","link":"untold_tales_of_spiderman_15","credits":["Kurt Busiek","Pam Eklund","Bob Harras","Al Vey","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":278},{"year":1964,"characters":["Egghead","Henry Pym","Spider-Man","Wasp"],"name":"Tales To Astonish #57 (Giant-Man/Wasp)","link":"tales_to_astonish_57_giant-man","credits":["Larry Lieber","Dick Ayers","Stan Lee","Paul Reinman","Chic Stone"],"i":279},{"year":1964,"characters":["Baron Zemo (Heinrich)","Captain America","Enchantress","Executioner","Henry Pym","Iron Man","Loki","Odin","Rick Jones","Thor","Wasp"],"name":"Avengers #7","link":"avengers_7","credits":["Macon Blair","Stan Lee","Jack Kirby","Michael Avon Oeming","Chic Stone"],"i":280},{"year":1996,"characters":["Aunt May","Aunt Watson","Betty Brant","Flash Thompson","J. Jonah Jameson","Jason Ionello","Liz Allan","Mary Jane Watson","Radioactive Man","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #16","link":"untold_tales_of_spiderman_16","credits":["Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort","Dick Giordano","Pat Olliffe"],"i":281},{"year":1964,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Magneto","Mastermind","Professor X","Quicksilver","Scarlet Witch","Sub-Mariner","Toad"],"name":"Uncanny X-Men #6","link":"uncanny_xmen_6","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":282},{"year":1964,"characters":["Aunt May","Betty Brant","Chameleon","Flash Thompson","J. Jonah Jameson","Kraven the Hunter","Liz Allan","Mr. Warren","Spider-Man"],"name":"Amazing Spider-Man #15","link":"amazing_spiderman_15","credits":["Steve Ditko","Stan Lee"],"i":283},{"year":1964,"characters":["Captain America","Henry Pym","Magician","Wasp"],"name":"Tales To Astonish #58","link":"tales_to_astonish_58","credits":["Larry Lieber","Paul Reinman","Dick Ayers","Stan Lee"],"i":284},{"year":1964,"characters":["Alicia Masters","Beetle","Doris Evans","Dr. Strange","Human Torch","Loki","Mr. Fantastic","Thing","Thor"],"name":"Strange Tales #123","link":"strange_tales_123","credits":["Dick Ayers","i>","Stan Lee","Steve Ditko","Carl Burgos","<i>Human Torch<","<i>Dr. Strange<"],"i":285},{"year":1964,"characters":["Ape Horgon","Daredevil","Foggy Nelson","Karen Page","Owl","Sam 'Sad Sam' Simms"],"name":"Daredevil #3","link":"daredevil_3","credits":["Vincent Colletta","Joe Orlando","Stan Lee"],"i":286},{"year":1964,"characters":["Alicia Masters","Human Torch","Igor (Super Ape)","Invisible Woman","Mikhlo (Super Ape)","Mr. Fantastic","Peator (Super Ape)","Red Ghost","Thing","Uatu the Watcher"],"name":"Fantastic Four #29","link":"fantastic_four_29","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":287},{"year":1964,"characters":["Dr. Strange","Grey Gargoyle","Heimdall","Henry Pym","Iron Man","Jane Foster","Loki","Odin","Thor","Wasp"],"name":"Journey Into Mystery #107-108","link":"journey_into_mystery_107108","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":288},{"year":1964,"characters":["Black Widow","Happy Hogan","Hawkeye","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #57","link":"tales_of_suspense_57","credits":["Don Heck","Stan Lee"],"i":289},{"year":1964,"characters":["Betty Ross","Captain America","General 'Thunderbolt' Ross","Henry Pym","Hulk","Iron Man","Thor","Wasp","Whirlwind"],"name":"Tales To Astonish #59","link":"tales_to_astonish_59","credits":["Paul Reinman","Dick Ayers","Stan Lee"],"i":290},{"year":1964,"characters":["Ancient One","Dr. Strange","Hamir","Human Torch","Paste Pot Pete","Thing"],"name":"Strange Tales #124","link":"strange_tales_124","credits":["Dick Ayers","i>","Stan Lee","Steve Ditko","George Roussos","Paul Reinman","<i>Human Torch<","<i>Dr. Strange<"],"i":291},{"year":1997,"characters":["Aunt May","Betty Brant","Black Widow","Hawkeye","Spider-Man","Wonder Man"],"name":"Untold Tales of Spider-Man #17","link":"untold_tales_of_spiderman_17","credits":["Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort","Al Williamson","Pat Olliffe"],"i":292},{"year":1964,"characters":["Angel","Beast","Cyclops","Iceman","Jane Foster","Magneto","Mastermind","Quicksilver","Scarlet Witch","Thor","Toad"],"name":"Journey Into Mystery #109","link":"journey_into_mystery_109","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":293},{"year":1964,"characters":["Diablo","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #30","link":"fantastic_four_30","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":294},{"year":1998,"characters":["Aunt May","Aunt Watson","Baron Mordo","Betty Brant","Dormammu","Dr. Strange","Flash Thompson","J. Jonah Jameson","Jason Ionello","Liz Allan","Mary Jane Watson","Spider-Man"],"name":"Untold Tales of Spider-Man: Strange Encounter","link":"untold_tales_of_spiderman_stra","credits":["Jay Geldhof","Kurt Busiek","Bob Harras","Neil Vokes","Tom Brevoort","Roger Stern","Gregg Schigel"],"i":295},{"year":1964,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Strange Tales #125 (Human Torch)","link":"strange_tales_125_human_torch","credits":["Paul Reinman","Dick Ayers","Stan Lee"],"i":296},{"year":1964,"characters":["Human Torch","Invisible Woman","Mad Thinker","Mr. Fantastic","Puppet Master","Thing"],"name":"Strange Tales #126 (Human Torch)","link":"strange_tales_126_human_torch","credits":["Paul Reinman","Dick Ayers","Stan Lee"],"i":297},{"year":1964,"characters":["Boris (Doom's servant)","Dr. Doom","Human Torch","Invisible Woman","Kang","Mr. Fantastic","Thing"],"name":"Fantastic Four annual #2","link":"fantastic_four_annual_2_dr_doo","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":298},{"year":1964,"characters":["Captain America","Henry Pym","Iron Man","Kang","Rick Jones","Thor","Wasp"],"name":"Avengers #8","link":"avengers_8","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":299},{"year":1964,"characters":["Betty Brant","Bruto the Strongman","Daredevil","Ernesto Gambonno","Foggy Nelson","Human Cannonball","J. Jonah Jameson","Karen Page","Luigi Gambonno","Raja","Ringmaster","Spider-Man"],"name":"Amazing Spider-Man #16","link":"amazing_spiderman_16","credits":["Steve Ditko","Stan Lee"],"i":300},{"year":1964,"characters":["Captain America","Franklin Storm","Henry Pym","Human Torch","Invisible Woman","Iron Man","Mole Man","Mr. Fantastic","Thing","Thor","Wasp"],"name":"Fantastic Four #31","link":"fantastic_four_31","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":301},{"year":1997,"characters":["Betty Brant","Flash Thompson","Green Goblin (Norman Osborn)","Headsman","Jason Ionello","Liz Allan","Lucky Lobo","Spider-Man","Tiny McKeever"],"name":"Untold Tales Of Spider-Man #18","link":"untold_tales_of_spiderman_18","credits":["Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort","Al Williamson","Pat Olliffe"],"i":302},{"year":1964,"characters":["Angel","Aunt May","Beast","Betty Brant","Captain America","Cyclops","Doctor Octopus","Dr. Strange","Electro","Flash Thompson","Henry Pym","Human Torch","Iceman","Invisible Woman","Iron Man","J. Jonah Jameson","Jean Grey","Kraven the Hunter","Liz Allan","Mr. Fantastic","Mysterio","Professor X","Sandman","Spider-Man","Thing","Thor","Vulture","Wasp"],"name":"Amazing Spider-Man annual #1","link":"amazing_spiderman_annual_1","credits":["Steve Ditko","Stan Lee"],"i":303},{"year":1997,"characters":["Aunt May","Betty Brant","Doctor Octopus","Flash Thompson","J. Jonah Jameson","Jason Ionello","Liz Allan","Spider-Man","Tiny McKeever"],"name":"Untold Tales Of Spider-Man #19","link":"untold_tales_of_spiderman_19","credits":["G. L. Lawrence","Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort","Al Williamson","Pat Olliffe"],"i":304},{"year":1964,"characters":["Aunt May","Betty Brant","Doris Evans","Flash Thompson","Green Goblin (Norman Osborn)","Human Torch","J. Jonah Jameson","Liz Allan","Spider-Man","Wilson Allan"],"name":"Amazing Spider-Man #17","link":"amazing_spiderman_17","credits":["Steve Ditko","Stan Lee"],"i":305},{"year":1964,"characters":["Angel","Beast","Bernard the Poet","Blob","Cyclops","Iceman","Jean Grey","Magneto","Mastermind","Professor X","Quicksilver","Scarlet Witch","Toad","Zelda"],"name":"Uncanny X-Men #7","link":"uncanny_xmen_7","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":306},{"year":1964,"characters":["Henry Pym","Lee Kearns","Wasp"],"name":"Tales To Astonish #60 (Giant-Man/Wasp)","link":"tales_to_astonish_60_giant-man","credits":["Paul Reinman","Dick Ayers","Stan Lee"],"i":307},{"year":1964,"characters":["Betty Ross","General 'Thunderbolt' Ross","Hulk"],"name":"Tales To Astonish #60 (Hulk)","link":"tales_to_astonish_60_hulk","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":308},{"year":1964,"characters":["Captain America","Chameleon","Happy Hogan","Henry Pym","Iron Man","Kraven the Hunter","Pepper Potts","Wasp"],"name":"Tales Of Suspense #58 (Iron Man)","link":"tales_of_suspense_58_iron_man","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":309},{"year":1964,"characters":["Uatu the Watcher"],"name":"Tales Of Suspense #58 (Watcher)","link":"tales_of_suspense_58_watcher","credits":["George Tuska","Stan Lee"],"i":310},{"year":1964,"characters":["Daredevil","Foggy Nelson","Karen Page","Purple Man"],"name":"Daredevil #4","link":"daredevil_4","credits":["Vincent Colletta","Joe Orlando","Stan Lee"],"i":311},{"year":1964,"characters":["Bull","Captain America","Jarvis"],"name":"Tales Of Suspense #59 (Captain America)","link":"tales_of_suspense_59_captain_a","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":312},{"year":1964,"characters":["Black Knight (Nathan Garrett)","Captain America","Happy Hogan","Hellhorse","Henry Pym","Iron Man","Pepper Potts","Thor","Wasp"],"name":"Tales Of Suspense #59 (Iron Man)","link":"tales_of_suspense_59","credits":["Don Heck","Stan Lee"],"i":313},{"year":1964,"characters":["Baron Zemo (Heinrich)","Captain America","Enchantress","Executioner","Happy Hogan","Henry Pym","Iron Man","Jane Foster","Pepper Potts","Thor","Wasp","Wonder Man"],"name":"Avengers #9","link":"avengers_9","credits":["Don Heck","Dick Ayers","Macon Blair","Stan Lee","Juan Doe"],"i":314},{"year":1964,"characters":["Ancient One","Baron Mordo","Dr. Strange"],"name":"Strange Tales #125 (Dr. Strange)","link":"strange_tales_125_dr_strange","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":315},{"year":1964,"characters":["Ancient One","Clea","Dormammu","Dr. Strange","Orini"],"name":"Strange Tales #126-127 (Dr. Strange)","link":"strange_tales_126127_dr_strang","credits":["Steve Ditko","Stan Lee"],"i":316},{"year":1964,"characters":["Aunt May","Aunt Watson","Betty Brant","Captain America","Daredevil","Doctor Octopus","Dr. Bromwell","Flash Thompson","Green Goblin (Norman Osborn)","Henry Pym","Human Torch","Invisible Woman","Iron Man","J. Jonah Jameson","Kraven the Hunter","Liz Allan","Mr. Fantastic","Ned Leeds","Sandman","Spider-Man","Thing","Thor","Vulture","Wasp"],"name":"Amazing Spider-Man #18","link":"amazing_spiderman_18","credits":["Steve Ditko","Stan Lee"],"i":317},{"year":1997,"characters":["Angel","Aunt May","Aunt Watson","Beast","Bernard the Poet","Betty Brant","Cyclops","Flash Thompson","Flint","Green Goblin (Norman Osborn)","Iceman","J. Jonah Jameson","Jason Ionello","Jean Grey","Kingpin","Liz Allan","Scarecrow","Spider-Man","Tiny McKeever","Vulture","Zelda"],"name":"Untold Tales of Spider-Man #20-22","link":"untold_tales_of_spider-man_20-","credits":["G. L. Lawrence","Kurt Busiek","Tom DeFalco","Bob Harras","Glenn Greenberg","Tom Brevoort","Al Williamson","Pat Olliffe"],"i":318},{"year":1964,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Mastermind","Professor X","Unus"],"name":"Uncanny X-Men #8","link":"uncanny_xmen_8","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":319},{"year":1964,"characters":["Egghead","Henry Pym","Wasp"],"name":"Tales To Astonish #61 (Giant-Man/Wasp)","link":"tales_to_astonish_61_giant-man","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":320},{"year":1964,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Tales To Astonish #61 (Hulk)","link":"tales_to_astonish_61_hulk","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":321},{"year":1964,"characters":["Balder","Cobra","Hardol the Healer","Heimdall","Jane Foster","Loki","Mr. Hyde","Odin","Thor"],"name":"Journey Into Mystery #110-111","link":"journey_into_mystery_110111","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":322},{"year":1964,"characters":["Henry Pym","Wasp"],"name":"Tales To Astonish #62 (Giant-Man/Wasp)","link":"tales_to_astonish_62_giant-man","credits":["Carl Burgos","Dick Ayers","Stan Lee"],"i":323},{"year":1964,"characters":["Betty Ross","Captain America","Chameleon","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leader","Rick Jones"],"name":"Tales To Astonish #62 (Hulk)","link":"tales_to_astonish_62_hulk","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":324},{"year":1964,"characters":["Baron Zemo (Heinrich)","Bill Bishop","Captain America","Enchantress","Executioner","Henry Pym","Immortus","Iron Man","Rick Jones","Thor","Wasp"],"name":"Avengers #10","link":"avengers_10","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":325},{"year":1965,"characters":["Dionysius","Hercules","Loki","Thor","Zeus"],"name":"Journey Into Mystery annual #1","link":"journey_into_mystery_annual_1","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":326},{"year":1997,"characters":["Banshee","Black Bishop (Harry Leland)","Dark Beast","White Queen (Emma Frost)"],"name":"Generation X #-1","link":"generation_x_-1","credits":["Chris Bachalo","Bob Harras","Al Vey","James Robinson","Mark Powers"],"i":327},{"year":1965,"characters":["Hulk","Thor"],"name":"Journey Into Mystery #112","link":"journey_into_mystery_112","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":328},{"year":1964,"characters":["Alicia Masters","Dorrek","Franklin Storm","Human Torch","Invisible Woman","Mr. Fantastic","Super-Skrull","Thing"],"name":"Fantastic Four #32","link":"fantastic_four_32","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":329},{"year":2012,"characters":["Baron Zemo (Heinrich)","Captain America","Enchantress","Executioner","Henry Pym","Hulk","Iron Man","Rick Jones","Thor","Wasp"],"name":"Hulk Smash Avengers #1","link":"hulk_smash_avengers_1","credits":["Bill Roseman","Tom DeFalco","Sal Buscema","Jake Thomas","Ron Frenz","Axel Alonso"],"i":330},{"year":1964,"characters":["Human Torch","Mr. Fantastic","Thing","Willie Lumpkin"],"name":"Strange Tales #127 (Human Torch)","link":"strange_tales_127_human_torch","credits":["Paul Reinman","Dick Ayers","Stan Lee"],"i":331},{"year":1964,"characters":["Aunt May","Betty Brant","Fancy Dan","Human Torch","J. Jonah Jameson","Montana","Ned Leeds","Ox","Sandman","Scorpion","Spider-Man"],"name":"Amazing Spider-Man #19","link":"amazing_spiderman_19","credits":["Steve Ditko","Stan Lee"],"i":332},{"year":1964,"characters":["Baron Zemo (Heinrich)","Black Widow","Captain America","Happy Hogan","Hawkeye","Henry Pym","Iron Man","Pepper Potts","Rick Jones","Thor","Wasp"],"name":"Tales Of Suspense #60","link":"tales_of_suspense_60","credits":["Don Heck","Dick Ayers","Stan Lee","Jack Kirby","Chic Stone"],"i":333},{"year":1997,"characters":["Angel","Aunt May","Beast","Betty Brant","Cyclops","Daredevil","Dr. Strange","Flash Thompson","Foggy Nelson","General 'Thunderbolt' Ross","Green Goblin (Norman Osborn)","Happy Hogan","Henry Pym","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","J. Jonah Jameson","Jane Foster","Jarvis","Jason Ionello","Jean Grey","Karen Page","Liz Allan","Mr. Fantastic","Pepper Potts","Spider-Man","Sub-Mariner","Sundown","Thing","Thor","Tiny McKeever","Wasp","Wong"],"name":"Untold Tales of Spider-Man '97","link":"untold_tales_of_spiderman_97","credits":["Robert Jones","Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort","Tom Lyle"],"i":334},{"year":1965,"characters":["Angel","Beast","Captain America","Cyclops","Henry Pym","Iceman","Iron Man","Jean Grey","Lucifer","Professor X","Thor","Wasp"],"name":"Uncanny X-Men #9","link":"uncanny_xmen_9","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":335},{"year":1965,"characters":["Happy Hogan","Iron Man","Mandarin","Pepper Potts"],"name":"Tales Of Suspense #61-62 (Iron Man)","link":"tales_of_suspense_62_iron_man","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":336},{"year":1964,"characters":["Captain America","Henry Pym","Kang","Rick Jones","Spider-Man","Thor","Wasp"],"name":"Avengers #11","link":"avengers_11","credits":["Don Heck","Chic Stone","Stan Lee"],"i":337},{"year":1965,"characters":["Captain America","General Wo"],"name":"Tales of Suspense #61 (Captain America)","link":"tales_of_suspense_61_captain_a","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":338},{"year":1964,"characters":["Daredevil","Foggy Nelson","Karen Page","Matador"],"name":"Daredevil #5","link":"daredevil_5","credits":["Wally Wood","Stan Lee"],"i":339},{"year":1964,"characters":["Attuma","Human Torch","Invisible Woman","Lady Dorma","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Fantastic Four #33","link":"fantastic_four_33","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":340},{"year":1965,"characters":["Human Torch","Quicksilver","Scarlet Witch","Thing"],"name":"Strange Tales #128 (Human Torch)","link":"strange_tales_128_human_torch","credits":["Frank Giacoia","Dick Ayers","Stan Lee"],"i":341},{"year":1965,"characters":["Demonicus","Dr. Strange"],"name":"Strange Tales #128 (Dr. Strange)","link":"strange_tales_128_dr_strange","credits":["Steve Ditko","Stan Lee"],"i":342},{"year":1965,"characters":["Henry Pym","Wasp"],"name":"Tales To Astonish #63 (Giant-Man/Wasp)","link":"tales_to_astonish_63_giant-man","credits":["Carl Burgos","Chic Stone","Stan Lee"],"i":343},{"year":1965,"characters":["Chameleon","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leader"],"name":"Tales To Astonish #63 (Hulk)","link":"tales_to_astonish_63","credits":["Steve Ditko","George Roussos","Stan Lee"],"i":344},{"year":1965,"characters":["Aunt May","Betty Brant","Farley Stillwell","Flash Thompson","J. Jonah Jameson","Liz Allan","Ned Leeds","Scorpion","Spider-Man"],"name":"Amazing Spider-Man #20","link":"amazing_spiderman_20","credits":["Steve Ditko","Stan Lee"],"i":345},{"year":1964,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing","Wizard"],"name":"Strange Tales #118 (Human Torch)","link":"strange_tales_118_human_torch","credits":["Dick Ayers","Stan Lee"],"i":346},{"year":1965,"characters":["Balder","Grey Gargoyle","Heimdall","Jane Foster","Loki","Odin","Thor"],"name":"Journey Into Mystery #113","link":"journey_into_mystery_113","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":347},{"year":1965,"characters":["Alicia Masters","Claire Gideon","Glorian","Gregory Gideon","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #34","link":"fantastic_four_34","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":348},{"year":1965,"characters":["Attuma","Henry Pym","Wasp"],"name":"Tales To Astonish #64 (Giant-Man/Wasp)","link":"tales_to_astonish_64_giant-man","credits":["Leon Lazarus","Carl Burgos","Paul Reinman"],"i":349},{"year":1997,"characters":["Ben Urich","Betty Brant","Crime-Master","Flash Thompson","J. Jonah Jameson","Jason Ionello","Liz Allan","Spider-Man"],"name":"Untold Tales of Spider-Man #23","link":"untold_tales_of_spiderman_23","credits":["Kurt Busiek","Scott Hanna","Tom DeFalco","Bob Harras","Glenn Greenberg","Tom Brevoort","Pat Olliffe"],"i":350},{"year":1965,"characters":["Happy Hogan","Iron Man","Pepper Potts","Phantom"],"name":"Tales Of Suspense #63 (Iron Man)","link":"tales_of_suspense_63_iron_man","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":351},{"year":1965,"characters":["Ape Man","Captain America","Henry Pym","Iron Man","Mole Man","Red Ghost","Rick Jones","Thor","Wasp"],"name":"Avengers #12","link":"avengers_12","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":352},{"year":1965,"characters":["Daredevil","Eel","Foggy Nelson","Karen Page","Mr. Fear (Zoltan Drago)","Ox"],"name":"Daredevil #6","link":"daredevil_6","credits":["Wally Wood","Stan Lee"],"i":353},{"year":1965,"characters":["Aunt May","Beetle","Betty Brant","Doris Evans","Flash Thompson","Human Torch","J. Jonah Jameson","Spider-Man"],"name":"Amazing Spider-Man #21","link":"amazing_spiderman_21","credits":["Steve Ditko","Stan Lee"],"i":354},{"year":1964,"characters":["Doris Evans","Human Torch","Invisible Woman","Mr. Fantastic","Spider-Man","Thing"],"name":"Amazing Spider-Man #8 (second story)","link":"amazing_spider-man_8_second_st","credits":["Jack Kirby","Steve Ditko","Stan Lee"],"i":355},{"year":1996,"characters":["Aunt May","Betty Brant","Flash Thompson","Human Torch","Invisible Woman","Liz Allan","Mr. Fantastic","Spider-Man","Sub-Mariner","Thing","Tiny McKeever"],"name":"Untold Tales of Spider-Man '96","link":"untold_tales_of_spiderman_96","credits":["Mike Allred","Joe Sinnott","Kurt Busiek","Bob Harras","Glenn Greenberg","Tom Brevoort"],"i":356},{"year":1965,"characters":["Bull Brogin","Doris Evans","Handsome Harry Phillips","Human Torch","Thing","Yogi Dakor"],"name":"Strange Tales #129 (Human Torch)","link":"strange_tales_129","credits":["Frank Giacoia","Dick Ayers","Stan Lee"],"i":357},{"year":1965,"characters":["Dr. Strange","Tiboro"],"name":"Strange Tales #129 (Dr. Strange)","link":"strange_tales_129_drstr","credits":["Steve Ditko","Don Rico"],"i":358},{"year":1965,"characters":["Captain America"],"name":"Tales Of Suspense #62 (Captain America)","link":"tales_of_suspense_62_captain_a","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":359},{"year":1965,"characters":["Captain America","Count Nefaria","Henry Pym","Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Rick Jones","Thing","Thor","Uatu the Watcher","Wasp"],"name":"Avengers #13-14","link":"avengers_13","credits":["Don Heck","Larry Lieber","Dick Ayers","Stan Lee","Jack Kirby","Larry Ivie","Chic Stone"],"i":360},{"year":1965,"characters":["Cyclops","Diablo","Dragon Man","Human Torch","Invisible Woman","Mr. Fantastic","Professor Gilbert","Professor X","Spider-Man","Thing"],"name":"Fantastic Four #35","link":"fantastic_four_35","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":361},{"year":1965,"characters":["Alicia Masters","Doris Evans","Human Torch","Invisible Woman","Thing"],"name":"Strange Tales #130 (Human Torch)","link":"strange_tales_130_human_torch","credits":["Chic Stone","Bob Powell","Stan Lee"],"i":362},{"year":1966,"characters":["Adria","Aged Genghis","Aggamon","Ancient One","Asti the All-Seeing","Baron Mordo","Clea","Demonicus","Dormammu","Dr. Strange","Eternity","Hamir","Kaecilius","Orini","Rama Kaliph","Sen-Yu","Shazana","Sir Baskerville"],"name":"Strange Tales #130-144 (Dr. Strange)","link":"strange_tales_130144_dr_strang","credits":["Steve Ditko","Roy Thomas","Stan Lee"],"i":363},{"year":1965,"characters":["Imperial Hydra Arnold Brown","Iron Man","Laura Brown","Nick Fury"],"name":"Strange Tales #135 (Nick Fury)","link":"strange_tales_135_nick_fury","credits":["Jack Kirby","Dick Ayers","Stan Lee"],"i":364},{"year":1968,"characters":["Imperial Hydra Arnold Brown","Iron Man","Laura Brown","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #4","link":"nick_fury_agent_of_shield_4","credits":["Roy Thomas","Frank Springer"],"i":365},{"year":1965,"characters":["Aunt May","Betty Brant","Clown","Ernesto Gambonno","Flash Thompson","Human Cannonball","J. Jonah Jameson","Liz Allan","Luigi Gambonno","Princess Python","Ringmaster","Spider-Man"],"name":"Amazing Spider-Man #22","link":"amazing_spiderman_22","credits":["Steve Ditko","Stan Lee"],"i":366},{"year":1965,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Ka-Zar","Maa-Gor","Professor X","Zabu"],"name":"Uncanny X-Men #10","link":"uncanny_xmen_10","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":367},{"year":1997,"characters":["Aunt May","Batwing","Flash Thompson","Jason Ionello","Liz Allan","Lizard","Spider-Man","Tiny McKeever"],"name":"Untold Tales of Spider-Man #24","link":"untold_tales_of_spiderman_24","credits":["Kurt Busiek","Tom DeFalco","Bob McLeod","Bob Harras","Glenn Greenberg","Tom Brevoort"],"i":368},{"year":1965,"characters":["Alicia Masters","Angel","Beast","Captain America","Cyclops","Henry Pym","Human Torch","Iceman","Invisible Woman","Iron Man","Jean Grey","Medusa","Mr. Fantastic","Paste Pot Pete","Professor X","Rick Jones","Sandman","Spider-Man","Thing","Thor","Wasp","Wizard"],"name":"Fantastic Four #36","link":"fantastic_four_36","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":369},{"year":1965,"characters":["Henry Pym","Wasp"],"name":"Tales To Astonish #65 (Giant-Man/Wasp)","link":"tales_to_astonish_65_giant-man","credits":["Don Heck","Bob Powell","Stan Lee"],"i":370},{"year":1978,"characters":["Captain America","Henry Pym","Iron Man","Rick Jones","Thor","Wasp"],"name":"Captain America #221 (Rick Jones)","link":"captain_america_221_rick_jones","credits":["Stephen Leialoha","Alan Gordon","Scott Edelman"],"i":371},{"year":1965,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","Green Goblin (Norman Osborn)","J. Jonah Jameson","Lucky Lobo","Spider-Man"],"name":"Amazing Spider-Man #23","link":"amazing_spiderman_23","credits":["Steve Ditko","Stan Lee"],"i":372},{"year":1965,"characters":["Black Widow","Happy Hogan","Hawkeye","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #64 (Iron Man)","link":"tales_of_suspense_64","credits":["Don Heck","Chic Stone","Stan Lee"],"i":373},{"year":1997,"characters":["Aunt May","Aunt Watson","Crime-Master","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Liz Allan","Spider-Man"],"name":"Untold Tales of Spider-Man #25","link":"untold_tales_of_spiderman_25","credits":["Kurt Busiek","Bob McLeod","Bob Harras","Glenn Greenberg","Tom Brevoort","Roger Stern","Ron Frenz"],"i":374},{"year":1965,"characters":["Human Torch","Invisible Woman","Mad Thinker","Mr. Fantastic","Thing"],"name":"Strange Tales #131 (Human Torch)","link":"strange_tales_131_human_torch","credits":["Dick Ayers","Bob Powell","Stan Lee"],"i":375},{"year":1965,"characters":["Henry Pym","Wasp"],"name":"Tales To Astonish #66 (Giant-Man/Wasp)","link":"tales_to_astonish_66_giant-man","credits":["Jack Kirby","Frank Giacoia","Bob Powell","Stan Lee"],"i":376},{"year":1965,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Magneto","Mastermind","Professor X","Quicksilver","Scarlet Witch","Stranger","Toad"],"name":"Uncanny X-Men #11","link":"uncanny_xmen_11","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":377},{"year":1965,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","Flash Thompson","J. Jonah Jameson","Liz Allan","Mysterio","Spider-Man"],"name":"Amazing Spider-Man #24","link":"amazing_spiderman_24","credits":["Steve Ditko","Stan Lee"],"i":378},{"year":1965,"characters":["Alicia Masters","Anelle","Dorrek","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Paste Pot Pete","Sandman","Thing","Wizard"],"name":"Fantastic Four #37-38","link":"fantastic_four_3738","credits":["Jack Kirby","Chic Stone","Stan Lee"],"i":379},{"year":1965,"characters":["Doris Evans","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Strange Tales #132 (Human Torch)","link":"strange_tales_132_human_torch","credits":["Larry Ivie","Bob Powell","Mike Esposito"],"i":380},{"year":1965,"characters":["Alicia Masters","Doris Evans","Human Torch","Invisible Woman","Mr. Fantastic","Puppet Master","Thing"],"name":"Strange Tales #133 (Human Torch)","link":"strange_tales_133_human_torch","credits":["Mike Esposito","Bob Powell","Stan Lee"],"i":381},{"year":1965,"characters":["Human Torch","Invisible Woman","Kang","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Strange Tales #134 (Human Torch & Thing)","link":"strange_tales_134","credits":["Wally Wood","Bob Powell","Stan Lee"],"i":382},{"year":1965,"characters":["Angel","Beast","Cyclops","Daredevil","Human Torch","Iceman","Jean Grey","Juggernaut","Professor X","Rick Jones"],"name":"Uncanny X-Men #12-13","link":"uncanny_xmen_1213","credits":["Alex Toth","Joe Sinnott","Dick Ayers","Stan Lee","Jack Kirby","Werner Roth","Vincent Colletta"],"i":383},{"year":1965,"characters":["Baron Zemo (Heinrich)","Black Knight (Nathan Garrett)","Captain America","Enchantress","Executioner","Happy Hogan","Hawkeye","Hellhorse","Henry Pym","Immortus","Iron Man","Jarvis","Kang","Melter","Mole Man","Quicksilver","Rick Jones","Scarlet Witch","Sub-Mariner","Thor","Wasp"],"name":"Avengers #15-16","link":"avengers_15_1","credits":["Don Heck","Dick Ayers","Stan Lee","Jack Kirby","Mike Esposito"],"i":384},{"year":1965,"characters":["Absorbing Man","Balder","Captain America","Daredevil","Destroyer (Asgardian armor)","Enchantress","Executioner","Harris Hobbs","Henry Pym","Iron Man","Jane Foster","Karnilla","Loki","Medusa","Odin","Paste Pot Pete","Rick Jones","Sandman","Thor","Ularic","Wasp","Wizard"],"name":"Journey Into Mystery #114-119","link":"journey_into_mystery_114-119","credits":["Chick Stone","Frank Giacoia","Stan Lee","Jack Kirby","Vincent Colletta"],"i":385},{"year":1965,"characters":["Daredevil","Foggy Nelson","Karen Page","Krang","Lady Dorma","Sub-Mariner"],"name":"Daredevil #7","link":"daredevil_7","credits":["Wally Wood","Stan Lee"],"i":386},{"year":1965,"characters":["Happy Hogan","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #65 (Iron Man)","link":"tales_of_suspense_65_iron_man","credits":["Mike Esposito","Don Heck","Stan Lee"],"i":387},{"year":1965,"characters":["Aunt May","Betty Brant","Flash Thompson","Green Goblin (Norman Osborn)","J. Jonah Jameson","Liz Allan","Mary Jane Watson","Spencer Smythe","Spider-Man"],"name":"Amazing Spider-Man #25","link":"amazing_spiderman_25","credits":["Steve Ditko","Stan Lee"],"i":388},{"year":1965,"characters":["Betty Ross","Chameleon","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leader","Rick Jones"],"name":"Tales To Astonish #64-66 (Hulk)","link":"tales_to_astonish_64-66_hulk","credits":["Dick Ayers","George Roussos","Steve Ditko","Stan Lee","Vincent Colletta"],"i":389},{"year":1965,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Henry Pym","Hulk","Leader","Rick Jones","Wasp","Whirlwind"],"name":"Tales To Astonish #67-69","link":"tales_to_astonish_67-69","credits":["\"Trapped in the Lair of the Leader\"","<b>Title:","<b>Hulk stories","Frank Giacoia","<b>Credits:","Stan Lee","Steve Ditko","Jack Kirby","\"Where strides the behemoth\"","Al Hartley","\"Back from the dead!\"","Vincent Colletta","John Giunta","Chic Stone","Bob Powell","Mike Esposito"],"i":390},{"year":1965,"characters":["Captain America","General 'Thunderbolt' Ross","Glenn Talbot","Hawkeye","Hulk","Leader","Minotaur","Mole Man","Quicksilver","Rick Jones","Scarlet Witch"],"name":"Avengers #17","link":"avengers_17_tales_to_astonish","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":391},{"year":1966,"characters":["Krang","Lady Dorma","Neptune","Seaweed Man","Sub-Mariner","Vashti"],"name":"Tales To Astonish #70-76 (Sub-Mariner)","link":"tales_to_astonish_70-76_sub-ma","credits":["Vincent Colletta","Gene Colan","Stan Lee"],"i":392},{"year":1965,"characters":["Amphibion (Hulk villain)","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leader","Rick Jones","Uatu the Watcher"],"name":"Tales To Astonish #70-74 (Hulk)","link":"tales_to_astonish_7074_hulk","credits":["Jack Kirby","Mike Esposito","Bob Powell","Stan Lee"],"i":393},{"year":1965,"characters":["Aunt May","Barney Bushkin","Betty Brant","Big Man (Frederick Foswell)","Crime-Master","Flash Thompson","Green Goblin (Norman Osborn)","J. Jonah Jameson","Liz Allan","Spider-Man"],"name":"Amazing Spider-Man #26-27","link":"amazing_spiderman_2627","credits":["Steve Ditko","Stan Lee"],"i":394},{"year":1965,"characters":["Attuma","Happy Hogan","Iron Man","Pepper Potts","Senator Byrd"],"name":"Tales Of Suspense #66 (Iron Man)","link":"tales_of_suspense_66_iron_man","credits":["Mike Esposito","Don Heck","Stan Lee"],"i":395},{"year":1965,"characters":["Aunt May","Aunt Watson","Flash Thompson","J. Jonah Jameson","Liz Allan","Molten Man","Spencer Smythe","Spider-Man","Wilson Allan"],"name":"Amazing Spider-Man #28","link":"amazing_spiderman_28","credits":["Steve Ditko","Stan Lee"],"i":396},{"year":1965,"characters":["Dr. Strange","Spider-Man","Xandu"],"name":"Amazing Spider-Man annual #2","link":"amazing_spiderman_annual_2","credits":["Steve Ditko","Stan Lee"],"i":397},{"year":1965,"characters":["Count Nefaria","Happy Hogan","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #67 (Iron Man)","link":"tales_of_suspense_67_iron_man","credits":["Mike Esposito","Don Heck","Stan Lee"],"i":398},{"year":1965,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","J. Jonah Jameson","Ned Leeds","Scorpion","Spider-Man"],"name":"Amazing Spider-Man #29","link":"amazing_spiderman_29","credits":["Steve Ditko","Stan Lee"],"i":399},{"year":1965,"characters":["Daredevil","Dr. Doom","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #39-40","link":"fantastic_four_3940","credits":["Jack Kirby","Vincent Colletta","Frank Giacoia","Stan Lee"],"i":400},{"year":1965,"characters":["Alicia Masters","Dr. Doom","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Paste Pot Pete","Sandman","Thing","Wizard"],"name":"Fantastic Four #41-43","link":"fantastic_four_4142","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":401},{"year":1965,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","Cat","Doctor Octopus","Flash Thompson","J. Jonah Jameson","Liz Allan","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #30","link":"amazing_spiderman_30","credits":["Steve Ditko","Stan Lee"],"i":402},{"year":1965,"characters":["Captain America","Commissar","Hawkeye","Jarvis","Quicksilver","Scarlet Witch"],"name":"Avengers #18","link":"avengers_18","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":403},{"year":1965,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","Doctor Octopus","Dr. Bromwell","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #31","link":"amazing_spiderman_31","credits":["Steve Ditko","Stan Lee"],"i":404},{"year":2010,"characters":["Dr. Doom","Flash Thompson","General 'Thunderbolt' Ross","Gwen Stacy","Harry Osborn","Human Torch","Invisible Woman","Kristoff (Time Travel)","Mr. Fantastic","Spider-Man","Sub-Mariner","Thing"],"name":"Spider-Man/Fantastic Four #1","link":"spider-manfantastic_four_1","credits":["Tom Brennan","Christos Gage","Steve Wacker","Joe Quesada","Mario Alberti"],"i":405},{"year":1965,"characters":["Carl Kaxton","Daredevil","Foggy Nelson","Karen Page","Stilt-Man"],"name":"Daredevil #8","link":"daredevil_8","credits":["Wally Wood","Stan Lee"],"i":406},{"year":1965,"characters":["Count Nefaria","Happy Hogan","Iron Man","Morgan Stark","Pepper Potts","Senator Byrd"],"name":"Tales Of Suspense #68 (Iron Man)","link":"tales_of_suspense_68","credits":["Mike Esposito","Don Heck","Al Hartley"],"i":407},{"year":1966,"characters":["Angel","Beast","Bernard the Poet","Bolivar Trask","Cyclops","General Fredericks","Iceman","Jean Grey","Kathryn Worthington","Magneto","Master Mold","Professor X","Stranger","Warren Worthington Jr.","Zelda"],"name":"Uncanny X-Men #14-18","link":"uncanny_xmen_1416","credits":["Dick Ayers","Stan Lee","Jack Kirby","Werner Roth","Vincent Colletta","Chic Stone"],"i":408},{"year":2006,"characters":["Alicia Masters","Angel","Attuma","Awesome Android","Beast","Beetle","Black Knight (Nathan Garrett)","Captain America","Cobra","Cyclops","Daredevil","Diablo","Dr. Doom","Dr. Strange","Dum Dum Dugan","Eel","Electro","Enchantress","Executioner","Foggy Nelson","Gabriel Jones","Grey Gargoyle","Hawkeye","Hedy Wolfe","Hellcat","Hellhorse","Human Torch","Iceman","Igor (Super Ape)","Invisible Woman","Iron Man","Jean Grey","Kang","Karen Page","Mad Thinker","Mandarin","Melter","Mikhlo (Super Ape)","Millie The Model","Mole Man","Mr. Fantastic","Mr. Hyde","Nick Fury","Peator (Super Ape)","Porcupine","Professor X","Puppet Master","Quicksilver","Red Ghost","Scarecrow","Spider-Man","Super-Skrull","Thing","Thor","Uatu the Watcher","Unicorn","Whirlwind"],"name":"Fantastic Four annual #3, Fantastic Four 40th Wedding Anniversary Special","link":"fantastic_four_annual_3","credits":["Drew Hennessy","<b>Title:","<b>Issue(s):","<b>Cover Date:","<b>Credits:","Jan 06","Stan Lee","Jack Kirby","Karl Kesel","Drew Johnson- Penciler","Drew Geraci","Tom Brevoort","\"The Life Fantastic\"","40th Annual Wedding Anniversary","Vincent Colletta"],"i":409},{"year":1994,"characters":["Alicia Masters","Angel","Barney Bushkin","Beast","Ben Urich","Bennet Schwed","Beth Sheldon","Betty Brant","Big Man (Frederick Foswell)","Black Knight (Nathan Garrett)","Bolivar Trask","Captain America","Cyclops","Daredevil","Doris Evans","Doris Sheldon","Dr. Strange","Dum Dum Dugan","Gabriel Jones","Green Goblin (Norman Osborn)","Happy Hogan","Harris Hobbs","Hawkeye","Hellhorse","Henry Pym","Human Torch","Iceman","Invisible Woman","Iron Man","J. Jonah Jameson","Jane Foster","Jean Grey","Jenny Sheldon","Maggie (mutant)","Melter","Millie The Model","Mr. Fantastic","Nick Fury","Pepper Potts","Phil Sheldon","Professor X","Quicksilver","Radioactive Man","Scarlet Witch","Stilt-Man","Thing","Thor","Willie Lumpkin"],"name":"Marvels #2","link":"marvels_2","credits":["Alex Ross","Kurt Busiek","Tom DeFalco","Spencer Lamm","Marc McLaurin"],"i":410},{"year":1965,"characters":["Captain America","Hawkeye","Mandarin","Quicksilver","Scarlet Witch","Swordsman"],"name":"Avengers #19-20","link":"avengers_1920","credits":["Wally Wood","Don Heck","Dick Ayers","Stan Lee"],"i":411},{"year":1965,"characters":["Countess Stephanie De La Spirosa","Happy Hogan","Iron Man","Pepper Potts","Senator Byrd","Titanium Man"],"name":"Tales Of Suspense #69-71 (Iron Man)","link":"tales_of_suspense_69_iron_man","credits":["Don Heck","Stan Lee","Wally Wood","Vincent Colletta","Mike Esposito"],"i":412},{"year":1965,"characters":["Daredevil","Foggy Nelson","Karen Page"],"name":"Daredevil #9","link":"daredevil_9","credits":["Wally Wood","Bob Powell","Stan Lee"],"i":413},{"year":1966,"characters":["Absorbing Man","Atlas","Balder","Demon","Harris Hobbs","Hawkeye","Heimdall","Hercules","Jane Foster","Loki","Odin","Pluto","Quicksilver","Scarlet Witch","Seidring","Thor","Ularic","Zeus"],"name":"Journey Into Mystery #120-125 / Thor #126-127","link":"journey_into_mystery_120125_th","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":414},{"year":1965,"characters":["Bruto the Strongman","Captain America","Clown","Enchantress","Erik Josten","Ernesto Gambonno","Hawkeye","Human Cannonball","Luigi Gambonno","Princess Python","Quicksilver","Ringmaster","Scarlet Witch"],"name":"Avengers #21-22","link":"avengers_2122","credits":["Don Heck","Wally Wood","Stan Lee"],"i":415},{"year":1965,"characters":["Awesome Android","Countess Stephanie De La Spirosa","Iron Man","Mad Thinker","Pepper Potts","Senator Byrd"],"name":"Tales Of Suspense #72 (Iron Man)","link":"tales_of_suspense_72_iron_man","credits":["Mike Esposito","Don Heck","Stan Lee"],"i":416},{"year":1965,"characters":["Ape Man","Bernard Harris","Bird Man","Cat Man","Daredevil","Debbie Harris","Foggy Nelson","Frog Man","Karen Page","Organizer"],"name":"Daredevil #10-11","link":"daredevil_10-11","credits":["Wally Wood","Bob Powell","Stan Lee"],"i":417},{"year":1966,"characters":["Black Knight (Nathan Garrett)","Happy Hogan","Hellhorse","Iron Man","Mandarin","Pepper Potts","Senator Byrd","Ultimo"],"name":"Tales Of Suspense #73-78 (Iron Man)","link":"tales_of_suspense_7374_im","credits":["Sol Brodsky","Roy Thomas","Gene Colan","Stan Lee","Jack Abel"],"i":418},{"year":1966,"characters":["Captain America","Hawkeye","Kang","Quicksilver","Ravonna","Scarlet Witch"],"name":"Avengers #23-24","link":"avengers_2324","credits":["John Romita Sr.","Don Heck","Dick Ayers","Stan Lee"],"i":419},{"year":1966,"characters":["Aunt May","Betty Brant","Big Man (Frederick Foswell)","Doctor Octopus","J. Jonah Jameson","Lizard","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #32-33","link":"amazing_spiderman_3233","credits":["Steve Ditko","Stan Lee"],"i":420},{"year":1966,"characters":["Daredevil","Foggy Nelson","Ka-Zar","Karen Page","Maa-Gor","Parnival Plunder","Zabu"],"name":"Daredevil #12-14","link":"daredevil_1213","credits":["Jack Kirby","John Romita Sr.","Frank Giacoia","Stan Lee"],"i":421},{"year":1966,"characters":["Betty Ross","Executioner","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Rick Jones"],"name":"Tales To Astonish #75-77 (Hulk)","link":"tales_to_astonish_7577","credits":["Stan Lee","Jack Kirby","John Romita Sr.","Gil Kane","Mike Esposito"],"i":422},{"year":1966,"characters":["Captain America","Dr. Doom","Hawkeye","Human Torch","Invisible Woman","Mr. Fantastic","Quicksilver","Scarlet Witch","Thing"],"name":"Avengers #25","link":"avengers_25","credits":["Don Heck","Dick Ayers","Stan Lee"],"i":423},{"year":1966,"characters":["Captain America","Hawkeye","Quicksilver","Scarlet Witch"],"name":"Tales Of Suspense #72-74 (Captain America)","link":"tales_of_suspense_7274_captain","credits":["Stan Lee","Jack Kirby","Wally Wood","George Tuska","and Carl Hubbell"],"i":424},{"year":1966,"characters":["Batroc","Captain America","Sharon Carter"],"name":"Tales Of Suspense #75-76 (Captain America)","link":"tales_of_suspense_75_captain_a","credits":["Dick Ayers","John Tartaglione","Stan Lee","Jack Kirby","John Romita Sr."],"i":425},{"year":1966,"characters":["Druid","Dum Dum Dugan","Fixer","Gabriel Jones","Imperial Hydra Arnold Brown","Iron Man","Jasper Sitwell","Laura Brown","Leslie Farrington","Mentallo","Nick Fury"],"name":"Strange Tales #136-145 (Nick Fury)","link":"strange_tales_136144_nick_fury","credits":["John Severin","Don Heck","Joe Sinnott","Frank Giacoia","Stan Lee","Jack Kirby","Howard Purcell","Mike Esposito"],"i":426},{"year":1966,"characters":["Betty Ross","Boomerang","General 'Thunderbolt' Ross","Glenn Talbot","Henry Pym","Hercules","Hulk","Krang","Lady Dorma","Mole Man","Puppet Master","Rick Jones","Sub-Mariner","Tyrannus","Vashti","Wasp","Zaxon"],"name":"Tales To Astonish #78-81","link":"tales_to_astonish_7880","credits":["Bill Everett","<b>Title:","\"When rises the Behemoth\"","\"When a monarch goes mad!\"","<b>Sub-Mariner","<b>Credits:","Gene Colan","Stan Lee","Dick Ayers","Jack Kirby","Vincent Colletta","\"To The Death!\"","\"The prince and the puppet!\""],"i":427},{"year":1966,"characters":["Attuma","Beetle","Captain America","Hawkeye","Henry Pym","Quicksilver","Scarlet Witch","Sub-Mariner","Wasp"],"name":"Avengers #26-27","link":"avengers_2629","credits":["Frank Giacoia","Don Heck","Stan Lee"],"i":428},{"year":1966,"characters":["Happy Hogan","Iron Man","Krang","Lady Dorma","Pepper Potts","Sub-Mariner"],"name":"Tales of Suspense #79-80 (Iron Man)","link":"tales_of_suspense_79-80_iron_m","credits":["Jack Abel","Gene Colan","Stan Lee"],"i":429},{"year":1966,"characters":["Betty Ross","Boomerang","Gabriel Jones","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Iron Man","Krang","Lady Dorma","Rick Jones","Sub-Mariner"],"name":"Tales To Astonish #82-83","link":"tales_to_astonish_8283","credits":["Bill Everett","<b>Title:","<b>Sub-Mariner","\"The Sub-Mariner strikes!\"","Roy Thomas","<b>Credits:","Gene Colan","Stan Lee","Dick Ayers","Jack Kirby","\"The power of Iron Man!\""],"i":430},{"year":1966,"characters":["Aunt May","Aunt Watson","Betty Brant","Big Man (Frederick Foswell)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Kraven the Hunter","Spider-Man"],"name":"Amazing Spider-Man #34","link":"amazing_spiderman_34","credits":["Steve Ditko","Stan Lee"],"i":431},{"year":1966,"characters":["Aireo","Black Bolt","Crystal","Dragon Man","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Maximus","Medusa","Mr. Fantastic","Paste Pot Pete","Sandman","Seeker (Inhuman)","Thing","Triton"],"name":"Fantastic Four #44-47","link":"fantastic_four_4445_strange_ta","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":432},{"year":1966,"characters":["Alicia Masters","Belle Thorne","Black Bolt","Crystal","Dorrek","Galactus","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Maximus","Mr. Fantastic","Punisher Robot","Sam Thorne","Seeker (Inhuman)","Silver Surfer","Thing","Triton","Uatu the Watcher","Whitey Mullins","Wyatt Wingfoot"],"name":"Fantastic Four #48-50","link":"fantastic_four_4850","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":433},{"year":1967,"characters":["Betty Ross","Boomerang","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Krang","Lady Dorma","Rick Jones","Sub-Mariner","Vashti"],"name":"Tales To Astonish #84-87","link":"tales_to_astonish_84_87","credits":["Bill Everett","<b>Title:","\"Like a beast at bay!\"","John Buscema","\"Moment of truth!\"","Jerry Grandenetti","<b>Sub-Mariner","Dick Ayers","Gene Colan","Stan Lee","John Tartaglione","Jack Kirby","<b>Credits:","John Romita Sr.","\"The wrath of Warlord Krang!\"","\"--And one shall die\"","Mike Esposito"],"i":434},{"year":1967,"characters":["Attuma","Betty Ross","Boomerang","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Lady Dorma","Rick Jones","Stranger","Sub-Mariner","Vashti"],"name":"Tales To Astonish #88-89","link":"tales_to_astonish_88","credits":["Bill Everett","<b>Title:","<b>Sub-Mariner","<b>Credits:","Stan Lee","\"A Stranger Strikes From Space!\"","\"The Prince and the Power!\"","Gil Kane"],"i":435},{"year":1966,"characters":["Alicia Masters","Belle Thorne","Human Torch","Invisible Woman","Mr. Fantastic","Sam Thorne","Thing","Whitey Mullins","Wyatt Wingfoot"],"name":"Fantastic Four #51","link":"fantastic_four_51","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":436},{"year":1967,"characters":["Abomination","Attuma","Betty Ross","Byrrah","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Krang","Lady Dorma","Rick Jones","Stranger","Sub-Mariner","Vashti"],"name":"Tales To Astonish #90-91","link":"tales_to_astonish_9091","credits":["Bill Everett","<b>Title:","<b>Sub-Mariner","Dan Adkins","<b>Credits:","Stan Lee","\"To be beaten by Byrrah!\"","\"Outside the gates waits death!\"","Gil Kane"],"i":437},{"year":2005,"characters":["Beast","Collector","Droom","Fin Fang Foom","Gargantus","Goom","Grogg","Groot","Grottu","Henry Pym","Hulk","Mole Man","Mr. Fantastic","Rommbu","Taboo","Thing","Tragg","Vandoom's Monster"],"name":"Marvel Monsters: Monsters on the Prowl #1","link":"marvel_monsters_monsters_on_th","credits":["Duncan Fegredo","Steve Niles"],"i":438},{"year":1966,"characters":["Beetle","Black Widow","Captain America","Collector","Dr. Yen","Erik Josten","Hawkeye","Henry Pym","Hu Chen","Quicksilver","Scarlet Witch","Swordsman","Wasp"],"name":"Avengers #28-29","link":"avengers_28-29","credits":["Frank Giacoia","Don Heck","Stan Lee"],"i":439},{"year":1966,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Mimic","Professor X","Vera Cantor","Zelda"],"name":"Uncanny X-Men #19","link":"uncanny_x-men_19","credits":["Werner Roth","Dick Ayers","Stan Lee"],"i":440},{"year":1966,"characters":["J. Jonah Jameson","Molten Man","Spider-Man"],"name":"Amazing Spider-Man #35","link":"amazing_spiderman_35","credits":["Steve Ditko","Stan Lee"],"i":441},{"year":1966,"characters":["Daredevil","Foggy Nelson","Karen Page","Ox","Ox II"],"name":"Daredevil #15","link":"daredevil_15","credits":["Frank Giacoia","John Romita Sr.","Stan Lee"],"i":442},{"year":1966,"characters":["Angel","Beast","Blob","Cyclops","Dominus","Iceman","Jean Grey","Lucifer","Professor X","Unus"],"name":"Uncanny X-Men #20-21","link":"uncanny_xmen_21","credits":["Roy Thomas","Werner Roth","Dick Ayers","Stan Lee"],"i":443},{"year":1966,"characters":["Balder","Hercules","Hyppolita","Odin","Pluto","Seidring","Thor","Volstagg"],"name":"Thor #128","link":"thor_128","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":444},{"year":1966,"characters":["Flash Thompson","Gwen Stacy","Looter","Spider-Man"],"name":"Amazing Spider-Man #36","link":"amazing_spiderman_36","credits":["Steve Ditko","Stan Lee"],"i":445},{"year":1966,"characters":["Angel","Beast","Colonel Hendershoot","Colosso","Count Nefaria","Cyclops","Eel","General Fredericks","Iceman","Jean Grey","Plantman","Porcupine","Professor X","Scarecrow","Unicorn","Vera Cantor","Zelda"],"name":"Uncanny X-Men #22-23","link":"uncanny_xmen_2223","credits":["Roy Thomas","Werner Roth","Dick Ayers"],"i":446},{"year":1994,"characters":["Ben Urich","Beth Sheldon","Doris Sheldon","Galactus","Hulk","Invisible Woman","J. Jonah Jameson","Jenny Sheldon","Mr. Fantastic","Phil Sheldon","Silver Surfer","Spider-Man","Thing","Uatu the Watcher"],"name":"Marvels #3","link":"marvels_3","credits":["Alex Ross","Kurt Busiek","Tom DeFalco","Spencer Lamm","Marc McLaurin"],"i":447},{"year":1966,"characters":["Dr. Strange","Mr. Rasputin"],"name":"Strange Tales #145 (Dr. Strange)","link":"strange_tales_145_dr_strange","credits":["Steve Ditko","Denny O'Neil"],"i":448},{"year":1966,"characters":["Big Man (Frederick Foswell)","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Max Young","Mendel Stromm","Spider-Man"],"name":"Amazing Spider-Man #37","link":"amazing_spiderman_37","credits":["Steve Ditko","Stan Lee"],"i":449},{"year":1966,"characters":["Ares","Artemis","Balder","Cerberus (Greek myth)","Dionysius","Hercules","Hermes","Jane Foster","Odin","Pluto","Tana Nile","Thor","Zeus"],"name":"Thor #129-130","link":"thor_129130","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":450},{"year":1966,"characters":["Aunt May","Daredevil","Foggy Nelson","J. Jonah Jameson","Karen Page","Masked Marauder","Spider-Man"],"name":"Daredevil #16-17","link":"daredevil_16-17","credits":["Frank Giacoia","John Romita Sr.","Stan Lee"],"i":451},{"year":1966,"characters":["Happy Hogan","Iron Man","Pepper Potts","Senator Byrd","Titanium Man"],"name":"Tales Of Suspense #81-83 (Iron Man)","link":"tales_of_suspense_81-83_iron_m","credits":["Frank Giacoia","Jack Abel","Gene Colan","Stan Lee"],"i":452},{"year":1966,"characters":["Black Widow","Captain America","Erik Josten","Hawkeye","Henry Pym","Hu Chen","Lann","Prince Rey","Quicksilver","Scarlet Witch","Swordsman","Tulak","Wasp"],"name":"Avengers #30-31","link":"avengers_30","credits":["Frank Giacoia","Don Heck","Stan Lee"],"i":453},{"year":1966,"characters":["Captain America"],"name":"Tales Of Suspense #77 (Captain America)","link":"tales_of_suspense_77_cap_84_ir","credits":["Jack Kirby","John Romita Sr.","Frank Giacoia","Stan Lee"],"i":454},{"year":1966,"characters":["Captain America","Count Bornag Royale","Horst Lederer","Nick Fury","Red Skull","Wolfgang Brenner"],"name":"Tales Of Suspense #78-79 (Captain America)","link":"tales_of_suspense_78_cap_85_ir","credits":["Jack Kirby","Frank Giacoia","Stan Lee"],"i":455},{"year":1966,"characters":["Ancient One","Baron Mordo","Clea","Dormammu","Dr. Strange","Eternity"],"name":"Strange Tales #146 (Dr. Strange)","link":"strange_tales_146","credits":["Steve Ditko","Denny O'Neil"],"i":456},{"year":1966,"characters":["Count Bornag Royale","Dum Dum Dugan","Jasper Sitwell","Nick Fury"],"name":"Strange Tales #146-147 (Nick Fury)","link":"strange_tales_146147_nick_fury","credits":["Jack Kirby","Mike Esposito","Don Heck","Stan Lee"],"i":457},{"year":1966,"characters":["Aunt May","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe Smith","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #38","link":"amazing_spiderman_38","credits":["Steve Ditko","Stan Lee"],"i":458},{"year":1966,"characters":["Daredevil","Foggy Nelson","Gladiator","Karen Page","Masked Marauder"],"name":"Daredevil #18","link":"daredevil_18","credits":["Frank Giacoia","Denny O'Neil","John Romita Sr.","Stan Lee"],"i":459},{"year":1966,"characters":["Black Bolt","Black Panther","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Klaw","Maximus","Medusa","Mr. Fantastic","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #52-53","link":"fantastic_four_5253","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":460},{"year":1966,"characters":["Aunt May","Betty Brant","Dr. Bromwell","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #39-40","link":"amazing_spiderman_3940","credits":["Mike Esposito","John Romita Sr.","Stan Lee"],"i":461},{"year":1967,"characters":["Happy Hogan","Iron Man","Mandarin","Pepper Potts","Senator Byrd"],"name":"Tales Of Suspense #84 (Iron Man)","link":"tales_of_suspense_84_iron_man","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":462},{"year":1967,"characters":["Happy Hogan","Iron Man","Mandarin","Senator Byrd"],"name":"Tales Of Suspense #85-86 (Iron Man)","link":"tales_of_suspense_85-86_iron_m_1","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":463},{"year":1966,"characters":["Bill Foster","Black Widow","Captain America","Hawkeye","Henry Pym","Iron Man","Nick Fury","Quicksilver","Scarlet Witch","Senator Byrd","Wasp"],"name":"Avengers #32-33","link":"avengers_3133","credits":["Frank Giacoia","Don Heck","Stan Lee"],"i":464},{"year":1966,"characters":["Captain America","Red Skull","Wolfgang Brenner"],"name":"Tales Of Suspense #80-81 (Captain America)","link":"tales_of_suspense_80818788","credits":["Jack Kirby","Frank Giacoia","Don Heck","Stan Lee"],"i":465},{"year":1966,"characters":["Daredevil","Foggy Nelson","Gladiator","Karen Page","Masked Marauder"],"name":"Daredevil #19","link":"daredevil_19","credits":["Frank Giacoia","John Romita Sr.","Stan Lee"],"i":466},{"year":1966,"characters":["Black Bolt","Black Panther","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Maximus","Medusa","Mr. Fantastic","Prester John","Thing","Triton","Wyatt Wingfoot"],"name":"Fantastic Four #54","link":"fantastic_four_54","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":467},{"year":1966,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Locust","Professor X","Ted Roberts"],"name":"Uncanny X-Men #24","link":"uncanny_x-men_24","credits":["Roy Thomas","Werner Roth","Dick Ayers"],"i":468},{"year":1966,"characters":["Ares","Count Tagar","Ego the Living Planet","Grand Commissioner of Rigel","Hercules","Jane Foster","Recorder","Sir Porga","Tana Nile","Thor"],"name":"Thor #131-133","link":"thor_133","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":469},{"year":1966,"characters":["Alicia Masters","Black Bolt","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Maximus","Medusa","Mr. Fantastic","Silver Surfer","Thing","Triton","Wyatt Wingfoot"],"name":"Fantastic Four #55","link":"fantastic_four_55","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":470},{"year":1966,"characters":["Aunt May","Aunt Watson","Betty Brant","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Man-Wolf (John Jameson)","Ned Leeds","Rhino","Spider-Man"],"name":"Amazing Spider-Man #41","link":"amazing_spiderman_41","credits":["Mike Esposito","John Romita Sr.","Stan Lee"],"i":471},{"year":1966,"characters":["Count Bornag Royale","Dum Dum Dugan","Gabriel Jones","Jasper Sitwell","Nick Fury"],"name":"Strange Tales #148-149 (Nick Fury)","link":"strange_tales_148149_nick_fury","credits":["Don Heck","Roy Thomas","Stan Lee","Jack Kirby","Ogden Whitney","Denny O'Neil"],"i":472},{"year":1966,"characters":["Captain America","Count Bornag Royale","Jarvis","Super-Adaptoid","Tumbler"],"name":"Tales Of Suspense #82-83 (Captain America)","link":"tales_of_suspense_82_cap_89_im","credits":["Jack Kirby","Frank Giacoia","Dick Ayers","Stan Lee"],"i":473},{"year":1966,"characters":["Captain America","Hawkeye","Henry Pym","Super-Adaptoid","Wasp"],"name":"Tales Of Suspense #84 (Captain America)","link":"tales_of_suspense_84_cap_91im","credits":["Jack Kirby","Frank Giacoia","Stan Lee"],"i":474},{"year":1966,"characters":["Black Bolt","Black Panther","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Klaw","Lockjaw","Maximus","Medusa","Mr. Fantastic","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #56","link":"fantastic_four_56","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":475},{"year":1966,"characters":["Balder","Count Tagar","Galactus","High Evolutionary","Jane Foster","Man-Beast","Odin","Quicksilver","Recorder","Scarlet Witch","Sir Lepard","Sir Liyan","Sir Ossilot","Sir Porga","Tana Nile","Thor"],"name":"Thor #134-135","link":"thor_134135","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":476},{"year":1967,"characters":["Geirrodur","Jane Foster","Keith Kincaid","Lurking Unknown","Odin","Orikal","Sif","Thor","Ulik"],"name":"Thor #136-139","link":"thor_136139","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":477},{"year":1967,"characters":["Growing Man","Kang","Odin","Sif","Thor"],"name":"Thor #140","link":"thor_140","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":478},{"year":1966,"characters":["Aunt May","Captain America","Daredevil","Hawkeye","Henry Pym","Hulk","Iron Man","Spider-Man","Thor","Wasp"],"name":"Amazing Spider-Man annual #3","link":"amazing_spiderman_annual_3","credits":["Mike Esposito","John Romita Sr.","Don Heck","Stan Lee"],"i":479},{"year":1966,"characters":["Angel","Beast","Cyclops","El Tigre","Iceman","Jean Grey","Kukulcan","Mimic","Professor X","Ted Roberts"],"name":"Uncanny X-Men #25-26","link":"uncanny_x-men_25-26","credits":["Roy Thomas","Werner Roth","Dick Ayers"],"i":480},{"year":1966,"characters":["Aunt May","Aunt Watson","Betty Brant","Big Man (Frederick Foswell)","Flash Thompson","Foggy Nelson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Lizard","Man-Wolf (John Jameson)","Mary Jane Watson","Matt Murdock","Ned Leeds","Rhino","Spider-Man"],"name":"Amazing Spider-Man #42-43","link":"amazing_spiderman_42","credits":["John Romita Sr.","Stan Lee"],"i":481},{"year":1966,"characters":["Brain","Dancer","Daredevil","Foggy Nelson","Gladiator","Karen Page","Mangler","Masked Marauder","Owl"],"name":"Daredevil #20-23","link":"daredevil_2021","credits":["Bill Everett","Frank Giacoia","Dick Ayers","Gene Colan","Stan Lee","Mike Esposito"],"i":482},{"year":1966,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Mimic","Professor X","Puppet Master","Quicksilver","Scarlet Witch","Spider-Man","Ted Roberts","Vera Cantor","Zelda"],"name":"Uncanny X-Men #27","link":"uncanny_x-men_27","credits":["Roy Thomas","Werner Roth","Dick Ayers"],"i":483},{"year":1966,"characters":["Human Torch","Human Torch (Golden Age)","Invisible Woman","Lockjaw","Mad Thinker","Mr. Fantastic","Quasimodo","Thing","Wyatt Wingfoot"],"name":"Fantastic Four annual #4","link":"fantastic_four_annual_4","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":484},{"year":1967,"characters":["Batroc","Captain America","Jarvis","Sharon Carter"],"name":"Tales Of Suspense #85-87 (Captain America)","link":"tales_of_suspense_85-87_captai","credits":["Joe Sinnott","Frank Giacoia","Jack Sparling","Roy Thomas","Stan Lee","Jack Kirby"],"i":485},{"year":1967,"characters":["Bill Foster","Black Widow","Captain America","Hawkeye","Henry Pym","Living Laser","Quicksilver","Scarlet Witch","Wasp"],"name":"Avengers #34-37","link":"avengers_3435","credits":["Roy Thomas","Don Heck","Stan Lee"],"i":486},{"year":1984,"characters":["Ancient One","Dr. Strange","Guardian (James Mac Hudson)","Nelvanna","Richard Easton","Shaman","Snowbird","Vindicator (Heather Hudson)"],"name":"Alpha Flight #5-8 (origins)","link":"alpha_flight_5-8","credits":["John Byrne"],"i":487},{"year":1967,"characters":["Aunt May","Aunt Watson","Betty Brant","Big Man (Frederick Foswell)","Billy Connors","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Lizard","Martha Connors","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #44-45","link":"amazing_spiderman_4445","credits":["John Romita Sr.","Stan Lee"],"i":488},{"year":1967,"characters":["Daredevil","Foggy Nelson","Ka-Zar","Karen Page","Parnival Plunder","Zabu"],"name":"Daredevil #24","link":"daredevil_24","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":489},{"year":1967,"characters":["Black Bolt","Crystal","Dr. Doom","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Maximus","Medusa","Mr. Fantastic","Sandman","Silver Surfer","Thing","Triton","Uatu the Watcher","Wizard","Wyatt Wingfoot"],"name":"Fantastic Four #57-60","link":"fantastic_four_5760","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":490},{"year":1967,"characters":["Angel","Banshee","Beast","Cyclops","Iceman","Jean Grey","Mimic","Ogre","Professor X","Ted Roberts"],"name":"Uncanny X-Men #28","link":"uncanny_xmen_28","credits":["Roy Thomas","Werner Roth","Dick Ayers"],"i":491},{"year":1967,"characters":["Daredevil","Foggy Nelson","Karen Page","Leap-Frog"],"name":"Daredevil #25","link":"daredevil_25","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":492},{"year":1967,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Mimic","Professor X","Super-Adaptoid"],"name":"Uncanny X-Men #29","link":"uncanny_x-men_29","credits":["Roy Thomas","Werner Roth","John Tartaglione"],"i":493},{"year":1967,"characters":["Aunt May","Aunt Watson","Big Man (Frederick Foswell)","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Mary Jane Watson","Shocker","Spider-Man"],"name":"Amazing Spider-Man #46","link":"amazing_spiderman_46","credits":["John Romita Sr.","Stan Lee"],"i":494},{"year":1967,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Maha Yogi","Professor X"],"name":"Uncanny X-Men #30","link":"uncanny_x-men_30","credits":["Roy Thomas","Jack Sparling","John Tartaglione"],"i":495},{"year":1967,"characters":["Ares","Black Widow","Captain America","Dum Dum Dugan LMD","Enchantress","Hawkeye","Henry Pym","Hercules","Jarvis","Jasper Sitwell","Nick Fury","Quicksilver","Scarlet Witch","Wasp","Zeus"],"name":"Avengers #38","link":"avengers_38","credits":["Roy Thomas","Don Heck","George Roussos"],"i":496},{"year":1967,"characters":["Happy Hogan","Iron Man","Mole Man","Pepper Potts"],"name":"Tales Of Suspense #87-88 (Iron Man)","link":"tales_of_suspense_87-88_iron_m","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":497},{"year":1967,"characters":["Captain America","Erik Josten","Jarvis","Red Skull","Swordsman"],"name":"Tales Of Suspense #88-90 (Captain America)","link":"tales_of_suspense_8891_9598","credits":["Joe Sinnott","Gil Kane","Stan Lee"],"i":498},{"year":1967,"characters":["Daredevil","Foggy Nelson","Karen Page","Leap-Frog","Masked Marauder","Stilt-Man"],"name":"Daredevil #26","link":"daredevil_26","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":499},{"year":1967,"characters":["Aunt May","Aunt Watson","Betty Brant","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Kraven the Hunter","Man-Wolf (John Jameson)","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #47","link":"amazing_spiderman_47","credits":["John Romita Sr.","Stan Lee"],"i":500},{"year":1967,"characters":["Black Widow","Dum Dum Dugan LMD","Hawkeye","Henry Pym","Hercules","Mad Thinker","Mad Thinker's Hammerhead","Mad Thinker's Piledriver","Nick Fury","Quicksilver","Scarlet Witch","Thunderboot","Wasp"],"name":"Avengers #39","link":"avengers_39","credits":["Roy Thomas","Don Heck","George Roussos"],"i":501},{"year":1967,"characters":["Angel","Beast","Bernard the Poet","Candy Southern","Cobalt Man","Cyclops","Iceman","Jean Grey","Professor X","Ted Roberts","Vera Cantor","Zelda"],"name":"Uncanny X-Men #31","link":"uncanny_x-men_31","credits":["Roy Thomas","Werner Roth","John Tartaglione"],"i":502},{"year":1967,"characters":["Black Bolt","Blastaar","Crystal","Gorgon","Invisible Woman","Karnak","Lockjaw","Mary Jane Watson","Medusa","Mr. Fantastic","Sam Thorne","Sandman","Silver Surfer","Spider-Man","Thing","Triton","Wyatt Wingfoot"],"name":"Fantastic Four #61-63","link":"fantastic_four_6163","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":503},{"year":1967,"characters":["Daredevil","Foggy Nelson","Karen Page","Masked Marauder","Spider-Man","Stilt-Man"],"name":"Daredevil #27","link":"daredevil_27","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":504},{"year":1967,"characters":["Happy Hogan","Iron Man","Melter","Pepper Potts"],"name":"Tales Of Suspense #89-90 (Iron Man)","link":"tales_of_suspense_89-90_iron_m","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":505},{"year":1967,"characters":["Aunt May","Aunt Watson","Dr. Bromwell","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Kraven the Hunter","Mary Jane Watson","Spider-Man","Vulture","Vulture II"],"name":"Amazing Spider-Man #48-49","link":"amazing_spiderman_4849","credits":["John Romita Sr.","Stan Lee"],"i":506},{"year":1967,"characters":["Black Widow","Captain America","Hawkeye","Henry Pym","Hercules","Mole Man","Quicksilver","Red Skull","Scarlet Witch","Sub-Mariner","Wasp"],"name":"Avengers #40","link":"avengers_40","credits":["Roy Thomas","Don Heck","George Roussos"],"i":507},{"year":1967,"characters":["Daredevil","Foggy Nelson","Karen Page"],"name":"Daredevil #28","link":"daredevil_28","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":508},{"year":1968,"characters":["Angel","Baron Von Strucker","Beast","Captain America","Clay Quartermain","Contessa Valentina Allegro De La Fontaine","Cyclops","Daredevil","Dr. Doom","Dreadnaught","Dum Dum Dugan LMD","Gabriel Jones","Gaffer (SHIELD Scientist)","Hawkeye","Henry Pym","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","Jasper Sitwell","Jean Grey","Jimmy Woo","Laura Brown","Mr. Fantastic","Nick Fury","Prime Mover","Professor X","Scarlet Witch","Spider-Man","Thing","Thor","Wasp"],"name":"Strange Tales #150-168 (Nick Fury)","link":"strange_tales_150168_nick_fury","credits":["Bill Everett","John Buscema","Frank Giacoia","Joe Sinnott","Roy Thomas","Stan Lee","Jack Kirby","Jim Steranko"],"i":509},{"year":1967,"characters":["Ancient One","Baron Mordo","Clea","Dr. Strange","Kaluu","Sayge","Umar","Wong","Zom"],"name":"Strange Tales #147-156 (Dr. Strange)","link":"strange_tales_147156_dr_strang","credits":["Bill Everett","Roy Thomas","Stan Lee","Denny O'Neil","Marie Severin"],"i":510},{"year":1968,"characters":["Ancient One","Baron Mordo","Dr. Strange","Living Tribunal","Nebulos","Victoria Bentley","Wong","Yandroth","Zom"],"name":"Strange Tales #157-168 (Dr. Strange)","link":"strange_tales_157168_dr_strang","credits":["Denny O'Neil","Marie Severin","Herb Trimpe","Roy Thomas","Dan Adkins","Stan Lee","George Tuska","Raymond Marais","Jim Lawrence"],"i":511},{"year":1967,"characters":["Angel","Beast","Bernard the Poet","Candy Southern","Cyclops","Dr. Strange","Iceman","Jean Grey","Juggernaut","Professor X","Vera Cantor","Zelda"],"name":"Uncanny X-Men #32-33","link":"uncanny_x-men_32-33","credits":["Roy Thomas","Werner Roth","John Tartaglione"],"i":512},{"year":1968,"characters":["Dr. Bromwell","Gwen Stacy","Harry Osborn","Mary Jane Watson","Spider-Man"],"name":"Marvel Super Heroes #14","link":"marvel_super_heroes_14","credits":["Bill Everett","Ross Andru","Stan Lee"],"i":513},{"year":1967,"characters":["Crystal","Human Torch","Invisible Woman","Kree Sentry 459","Mr. Fantastic","Thing","Triton"],"name":"Fantastic Four #64","link":"fantastic_four_6465","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":514},{"year":1967,"characters":["Crusher","Happy Hogan","Iron Man","Pepper Potts"],"name":"Tales Of Suspense #91 (Iron Man)","link":"tales_of_suspense_91_iron_man","credits":["Frank Giacoia","Gene Colan","Stan Lee"],"i":515},{"year":1966,"characters":["Captain America","Red Skull"],"name":"Tales Of Suspense #91 (Captain America)","link":"tales_of_suspense_91_captain_a","credits":["Joe Sinnott","Gil Kane","Stan Lee"],"i":516},{"year":1967,"characters":["Alicia Masters","Black Bolt","Black Panther","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Livewire","Lockjaw","Medusa","Mr. Fantastic","Psycho-Man","Quasimodo","Shellshock","Silver Surfer","Thing","Triton"],"name":"Fantastic Four annual #5","link":"fantastic_four_annual_5_silver","credits":["Jack Kirby","Frank Giacoia","Stan Lee"],"i":517},{"year":1967,"characters":["Bill Foster","Black Widow","Diablo","Dr. Yen","Dragon Man","Hawkeye","Hercules","Mr. Fantastic","Quicksilver","Scarlet Witch","Thing"],"name":"Avengers #41-42","link":"avengers_4142","credits":["Roy Thomas","George Roussos","John Buscema"],"i":518},{"year":1967,"characters":["Alicia Masters","Crystal","Human Torch","Invisible Woman","Jerome Hamilton","Lockjaw","Mr. Fantastic","Ronan the Accuser","Supreme Intelligence","Thing"],"name":"Fantastic Four #65","link":"fantastic_four_65","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":519},{"year":1967,"characters":["Spider-Man","Thor"],"name":"Thor #141","link":"thor_141","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":520},{"year":1967,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Lady Dorma","Silver Surfer","Sub-Mariner"],"name":"Tales To Astonish #92-93","link":"tales_to_astonish_93","credits":["<b>Title:","\"It walks like a man!\"","Frank Giacoia","Roy Thomas","Dan Adkins","<b>Credits:","Stan Lee","em>","<em>Sub-Mariner<","\"The monarch and the monster!\"","Marie Severin"],"i":521},{"year":1967,"characters":["Adam Warlock","Alicia Masters","Carlo Zota","Crystal","Human Torch","Invisible Woman","Jerome Hamilton","Maris Morlak","Mr. Fantastic","Thing","Wladyslav Shinski"],"name":"Fantastic Four #66-67","link":"fantastic_four_6667","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":522},{"year":1967,"characters":["Daredevil","Foggy Nelson","Karen Page"],"name":"Daredevil #29","link":"daredevil_29","credits":["John Tartaglione","Gene Colan","Stan Lee"],"i":523},{"year":1967,"characters":["Aunt May","Aunt Watson","Betty Brant","Big Man (Frederick Foswell)","Flint","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Kingpin","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #50","link":"amazing_spiderman_50","credits":["Mike Esposito","John Romita Sr.","Stan Lee"],"i":524},{"year":1967,"characters":["Cobra","Daredevil","Foggy Nelson","Karen Page","Mr. Hyde","Thor"],"name":"Daredevil #30-32","link":"daredevil_30-32","credits":["John Tartaglione","Gene Colan","Stan Lee"],"i":525},{"year":1966,"characters":["Absorbing Man","Balder","Destroyer (Asgardian armor)","Fandral","Heimdall","Hogun","Loki","Odin","Thor","Volstagg"],"name":"Thor annual #2","link":"thor_annual_2","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":526},{"year":1967,"characters":["Beetle","Daredevil","Foggy Nelson","Karen Page"],"name":"Daredevil #33-34","link":"daredevil_33-34","credits":["John Tartaglione","Gene Colan","Stan Lee"],"i":527},{"year":1967,"characters":["Balder","Loki","Odin","Sif","Super-Skrull","Thor"],"name":"Thor #142","link":"thor_142","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":528},{"year":1967,"characters":["Angel","Beast","Cobalt Man","Cyclops","Iceman","Jean Grey","Mole Man","Ted Roberts","Tyrannus"],"name":"Uncanny X-Men #34","link":"uncanny_x-men_34","credits":["Roy Thomas","Dan Adkins"],"i":529},{"year":1967,"characters":["Betty Brant","Big Man (Frederick Foswell)","Flash Thompson","Flint","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #51-52","link":"amazing_spiderman_51","credits":["Mike Esposito","John Romita Sr.","Stan Lee"],"i":530},{"year":1967,"characters":["Captain America","Hawkeye","Henry Pym","Hercules","Nick Fury","Quicksilver","Scarlet Witch","Sharon Carter","Wasp"],"name":"Tales Of Suspense #92 (Captain America)","link":"tales_of_suspense_9299","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":531},{"year":1967,"characters":["Black Widow","Captain America","Hawkeye","Henry Pym","Hercules","Quicksilver","Red Guardian (Alexi Shostakov)","Scarlet Witch","Wasp"],"name":"Avengers #43-44","link":"avengers_4344","credits":["Roy Thomas","George Roussos","Vincent Colletta","John Buscema"],"i":532},{"year":1968,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Gnome","High Evolutionary","Hulk","Lady Dorma","Parnival Plunder","Puppet Master","Rick Jones","Stingray","Sub-Mariner","Vashti","Warlord Seth"],"name":"Tales To Astonish #94-100","link":"tales_to_astonish_9496","credits":["Herb Trimpe","Bill Everett","<b>Title:","\"Helpless","\"When falls the holocaust!\"","Dan Adkins","<b>Sub-Mariner","Roy Thomas","\"The power of the Plunderer!\"","<b>Credits:","John Tartaglione","Stan Lee","Vincent Colletta","at the hands of Dragorr!\"","\"The Sovereign and the Savages!\"","Raymond Marais","Werner Roth","\"...To destroy the Realm Eternal!\"","Marie Severin","\"Somewhere stands... Skull Island!\""],"i":533},{"year":1997,"characters":["Captain Mar-vell","Una","Yon-Rogg"],"name":"Untold Legend of Captain Marvel #3","link":"untold_legend_of_captain_marve","credits":["Mark Bernardo","Bob Harras","John Lowe","Tom Brevoort","Scott Kolins","Mike Kanterovich"],"i":534},{"year":1992,"characters":["Eel","Egghead","Erik Josten","Guardian (James Mac Hudson)","Porcupine","Rhino","Sasquatch","Shaman","Smart Alec","Snowbird","Solarr","Swordsman","Wolverine"],"name":"Alpha Flight Special #1","link":"alpha_flight_special_1","credits":["Simon Furman","Pat Broderick","Bruce D. Patterson","Rob Tokar","Scott Lobdell"],"i":535},{"year":1967,"characters":["Angel","Banshee","Beast","Changeling","Cyclops","Iceman","Jean Grey","Spider-Man"],"name":"Uncanny X-Men #35","link":"uncanny_xmen_35","credits":["Roy Thomas","Werner Roth","Dan Adkins"],"i":536},{"year":1967,"characters":["Captain America","MODOK","Sharon Carter"],"name":"Tales Of Suspense #93-94 (Captain America)","link":"tales_of_suspense_93_iron_man","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":537},{"year":1967,"characters":["Angel","Beast","Changeling","Cyclops","Iceman","Jean Grey","Mekano"],"name":"Uncanny X-Men #36","link":"uncanny_x-men_36","credits":["Roy Thomas","Ross Andru","George Roussos"],"i":538},{"year":1967,"characters":["Daredevil","Electro","Foggy Nelson","Gladiator","Karen Page","Leap-Frog","Matador","Stilt-Man"],"name":"Daredevil annual #1","link":"daredevil_annual_1","credits":["John Tartaglione","Gene Colan","Stan Lee"],"i":539},{"year":1967,"characters":["Captain America","Enchantress","Erik Josten","Executioner","Hawkeye","Henry Pym","Hercules","Iron Man","Jarvis","Living Laser","Mandarin","Nick Fury","Quicksilver","Scarlet Witch","Swordsman","Thor","Ultimo","Wasp"],"name":"Avengers annual #1","link":"avengers_annual_1","credits":["Roy Thomas","Don Heck","George Roussos"],"i":540},{"year":1967,"characters":["Human Torch","J. Jonah Jameson","Mysterio","Spider-Man","Wizard"],"name":"Amazing Spider-Man annual #4","link":"amazing_spider-man_annual_4","credits":["Larry Lieber","Mike Esposito","Tony Mortellaro","Stan Lee"],"i":541},{"year":1967,"characters":["Captain America","Hawkeye","Henry Pym","Hercules","Iron Man","Quicksilver","Scarlet Witch","Super-Adaptoid","Thor","Wasp"],"name":"Avengers #45","link":"avengers_45","credits":["Roy Thomas","Don Heck","Vincent Colletta"],"i":542},{"year":1967,"characters":["Half-Face","Iron Man","Jasper Sitwell","Titanium Man"],"name":"Tales Of Suspense #92-94 (Iron Man)","link":"tales_of_suspense_85_92","credits":["Frank Giacoia","Dan Adkins","Gene Colan","Stan Lee"],"i":543},{"year":1968,"characters":["Aunt May","Aunt Watson","Captain Stacy","Doctor Octopus","Dr. Bromwell","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Man-Wolf (John Jameson)","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #53-56","link":"amazing_spiderman_5356","credits":["Mike Esposito","John Romita","Tony Mortellaro","Stan Lee"],"i":544},{"year":1968,"characters":["Dum Dum Dugan LMD","Grey Gargoyle","Iron Man","Jasper Sitwell","Madame Masque","Mordius","Morgan Stark","Nick Fury","Whiplash (Blacklash)"],"name":"Tales Of Suspense #95-99 (Iron Man) , Iron Man & Sub-Mariner #1 (Iron Man) , Iron Man #1","link":"tales_of_suspense_95_99ironman","credits":["Archie Goodwin","Frank Giacoia","Gene Colan","Stan Lee","Johnny T. Craig"],"i":545},{"year":1967,"characters":["Balder","Brona","Forsung","Magnir","Sif","Thor"],"name":"Thor #143","link":"thor_143","credits":["Jack Kirby","Bill Everett","Stan Lee"],"i":546},{"year":1967,"characters":["Balder","Brona","Forsung","Magnir","Odin","Sif","Thor"],"name":"Thor #144","link":"thor_144","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":547},{"year":1967,"characters":["Brona","Bruto the Strongman","Clown","Ernesto Gambonno","Forsung","Human Cannonball","Luigi Gambonno","Magnir","Odin","Princess Python","Ringmaster","Sif","Thor"],"name":"Thor #145","link":"thor_145","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":548},{"year":1967,"characters":["Angel","Banshee","Beast","Blob","Changeling","Cyclops","Iceman","Jean Grey","Mastermind","Mutant Master","Professor X","Unus","Vanisher"],"name":"Uncanny X-Men #37-39","link":"uncanny_x-men_37-39","credits":["Don Heck","Roy Thomas","George Roussos","Ross Andru","Vincent Colletta"],"i":549},{"year":1967,"characters":["Captain America","Henry Pym","Hercules","Quicksilver","Scarlet Witch","Wasp","Whirlwind"],"name":"Avengers #46","link":"avengers_46","credits":["Roy Thomas","Vincent Colletta","John Buscema"],"i":550},{"year":1967,"characters":["Captain America","Dum Dum Dugan LMD","Iron Man","Nick Fury","Sharon Carter"],"name":"Tales Of Suspense #95 (Captain America)","link":"tales_of_suspense_95_captain_a","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":551},{"year":1968,"characters":["Crystal","Human Torch","Invisible Woman","Jose Santini","Mad Thinker","Mr. Fantastic","Thing"],"name":"Fantastic Four #68-71","link":"fantastic_four_6871","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":552},{"year":1984,"characters":["Aurora","Gary Cody","Guardian (James Mac Hudson)","Northstar","Wolverine"],"name":"Alpha Flight #9-10 (origins)","link":"alpha_flight_9-10_origins","credits":["John Byrne"],"i":553},{"year":1984,"characters":["Guardian (James Mac Hudson)","Sasquatch","Shaman","Snowbird"],"name":"Alpha Flight #11 (origins)","link":"alpha_flight_11_origins","credits":["John Byrne"],"i":554},{"year":1968,"characters":["Aragorn","Ares","Black Knight (Dane Whitman)","Black Widow","Captain America","Hawkeye","Henry Pym","Hercules","Magneto","Quicksilver","Scarlet Witch","Toad","Typhon","Wasp","Whirlwind","Zeus"],"name":"Avengers #47-50","link":"avengers_4750","credits":["Roy Thomas","George Tuska","John Buscema"],"i":555},{"year":1968,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Professor X"],"name":"Uncanny X-Men #40","link":"uncanny_x-men_40","credits":["Roy Thomas","Don Heck","George Tuska"],"i":556},{"year":1968,"characters":["Aunt May","Betty Brant","Captain Stacy","Dr. Bromwell","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Ka-Zar","Man-Wolf (John Jameson)","Ned Leeds","Spencer Smythe","Spider-Man","Zabu"],"name":"Amazing Spider-Man #57-58","link":"amazing_spiderman_58","credits":["Don Heck","John Romita","Stan Lee","Mickey Demeo","Mike Esposito"],"i":557},{"year":1968,"characters":["Crystal","General Fredericks","Human Torch","Invisible Woman","Mr. Fantastic","Silver Surfer","Thing","Uatu the Watcher"],"name":"Fantastic Four #72","link":"fantastic_four_72","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":558},{"year":1968,"characters":["Balder","Barbaric","Clown","Destroyer (Asgardian armor)","Ernesto Gambonno","Hela","Human Cannonball","Jane Foster","Karnilla","Loki","Luigi Gambonno","Odin","Princess Python","Ringmaster","Sif","Thor","Triton","Wrecker"],"name":"Thor #146-150","link":"thor_146153","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":559},{"year":1968,"characters":["Fandral","Heimdall","Hogun","Hulk","Lady Dorma","Loki","Odin","Paul Destine","Sub-Mariner","Volstagg","Warlord Seth"],"name":"Tales To Astonish #101","link":"tales_to_astonish_101","credits":["Archie Goodwin","<b>Title:","Frank Giacoia","Dan Adkins","\"...And evil shall beckon!\"","<b>Credits:","i>","Stan Lee","Gene Colan","<b><i>Sub-Mariner<","Marie Severin"],"i":560},{"year":1968,"characters":["Enchantress","Executioner","Fandral","Hogun","Hulk","Odin","Volstagg"],"name":"Hulk #102","link":"hulk_102","credits":["George Tuska","Gary Friedrich","Marie Severin"],"i":561},{"year":1968,"characters":["Paul Destine","Sub-Mariner"],"name":"Iron Man & Sub-Mariner #1 (Sub-Mariner)","link":"iron_man_sub-mariner_1_sub-mar","credits":["Frank Giacoia","Roy Thomas","Gene Colan"],"i":562},{"year":1968,"characters":["Daredevil","Debbie Harris","Dr. Doom","Foggy Nelson","Human Torch","Invisible Woman","Karen Page","Mr. Fantastic","Paste Pot Pete","Thing"],"name":"Daredevil #35-38","link":"daredevil_3738","credits":["Frank Giacoia","John Tartaglione","Gene Colan","Stan Lee"],"i":563},{"year":1968,"characters":["Daredevil","Human Torch","Invisible Woman","Mr. Fantastic","Spider-Man","Thing","Thor"],"name":"Fantastic Four #73","link":"fantastic_four_73","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":564},{"year":1968,"characters":["Balder","Black Bolt","Destroyer (Asgardian armor)","Karnilla","Loki","Odin","Sif","Thor","Toag","Triton","Ulik"],"name":"Thor #151-153","link":"thor_151153","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":565},{"year":1968,"characters":["Angel","Beast","Changeling","Cyclops","Grotesk","Iceman","Jean Grey","Vera Cantor","Zelda"],"name":"Uncanny X-Men #41-42","link":"uncanny_x-men_41-42","credits":["Roy Thomas","Don Heck","George Tuska"],"i":566},{"year":1968,"characters":["Aunt May","Aunt Watson","Betty Brant","Captain Stacy","Gerard Winslow Winkler","Green Goblin (Norman Osborn)","Gwen Stacy","J. Jonah Jameson","Kingpin","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #59-61","link":"amazing_spiderman_5961","credits":["Mike Esposito","John Romita Sr.","Don Heck","Stan Lee"],"i":567},{"year":1968,"characters":["Black Panther","Captain America","Dum Dum Dugan LMD","Nick Fury","Sharon Carter"],"name":"Tales Of Suspense #96-99 / Captain America #100 (Captain America)","link":"tales_of_suspense_9699","credits":["Jack Kirby","Syd Shores","Joe Sinnott","Stan Lee"],"i":568},{"year":1968,"characters":["Black Panther","Captain America","Collector","Hawkeye","Henry Pym","Iron Man","Thor","Wasp"],"name":"Avengers #51","link":"avengers_5152","credits":["Roy Thomas","George Tuska","John Buscema"],"i":569},{"year":1968,"characters":["Ape Man","Bird Man","Cat Man","Daredevil","Death-Stalker","Debbie Harris","Foggy Nelson","Karen Page"],"name":"Daredevil #39-41","link":"daredevil_39-41","credits":["John Tartaglione","George Tuska","Gene Colan","Stan Lee"],"i":570},{"year":1968,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Rick Jones","Space Parasite"],"name":"Hulk #103","link":"hulk_103","credits":["Frank Giacoia","Gary Friedrich","Marie Severin"],"i":571},{"year":1968,"characters":["Paul Destine","Sub-Mariner"],"name":"Sub-Mariner #1","link":"submarinter_1","credits":["Frank Giacoia","Roy Thomas","John Buscema"],"i":572},{"year":1968,"characters":["Alicia Masters","Crystal","Galactus","Human Torch","Invisible Woman","Mr. Fantastic","Psycho-Man","Punisher Robot","Silver Surfer","Thing"],"name":"Fantastic Four #74-77","link":"fantastic_four_7477","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":573},{"year":2008,"characters":["Captain America","Fourth Sleeper","Nick Fury","Red Skull","Sharon Carter"],"name":"Captain America #101-102","link":"captain_america_101102","credits":["Jack Kirby","Syd Shores","Stan Lee"],"i":574},{"year":1968,"characters":["Black Panther","Black Widow","Captain America","Grim Reaper","Hawkeye","Henry Pym","Iron Man","Jasper Sitwell","Thor","Wasp"],"name":"Avengers #52","link":"avengers_52","credits":["Roy Thomas","Vincent Colleta","John Buscema"],"i":575},{"year":1968,"characters":["Captain Mar-vell","Carol Danvers","General Bridges","Jeremy Logan","Kree Sentry 459","Ronan the Accuser","Una","Yon-Rogg","Zarek"],"name":"Marvel Super Heroes #12-13, Captain Marvel #1","link":"marvel_super_heroes_12-13capta","credits":["Frank Giacoia","Roy Thomas","Gene Colan","Stan Lee","Paul Reinman","Vincent Colletta"],"i":576},{"year":1968,"characters":["Anelle","Captain Mar-vell","Carol Danvers","Dorrek","General Bridges","Hal Logan","Jeremy Logan","Kree Sentry 459","Super-Skrull","Una","Yon-Rogg"],"name":"Captain Marvel #2-3","link":"captain_marvel_23","credits":["Vincent Colletta","Roy Thomas","Gene Colan"],"i":577},{"year":1968,"characters":["Crystal","Dr. Molinari","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Wizard"],"name":"Fantastic Four #78","link":"fantastic_four_78","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":578},{"year":1968,"characters":["Black Bolt","Gorgon","Karnak","Lady Dorma","Medusa","Plantman","Sub-Mariner","Triton","Vashti","Warlord Seth"],"name":"Sub-Mariner #2-3","link":"submariner_23","credits":["Frank Giacoia","Roy Thomas","John Buscema"],"i":579},{"year":1968,"characters":["Angel","Beast","Black Panther","Cyclops","Hawkeye","Henry Pym","Iceman","Jean Grey","Magneto","Quicksilver","Red Raven II","Scarlet Witch","Toad","Wasp"],"name":"Uncanny X-Men #43-45","link":"uncanny_xmen_45","credits":["Don Heck","Gary Friedrich","Roy Thomas","John Tartaglione","Werner Roth","George Tuska"],"i":580},{"year":1968,"characters":["Angel","Beast","Black Panther","Cyclops","Hawkeye","Henry Pym","Iceman","Jean Grey","Magneto","Quicksilver","Scarlet Witch","Toad","Wasp"],"name":"Avengers #53","link":"avengers_53","credits":["Roy Thomas","George Tuska","John Buscema"],"i":581},{"year":1968,"characters":["Brad Carter","Centurius","Clay Quartermain","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Jimmy Woo","Nick Fury","P.D.Q. Werner","Scorpio (Jake Fury LMD)"],"name":"Nick Fury, Agent of SHIELD #1-3,5","link":"nick_fury_agent_of_shield_135","credits":["Joe Sinnott","Frank Giacoia","Dan Adkins","John Tartaglione","Jim Steranko"],"i":582},{"year":1968,"characters":["Happy Hogan","Iron Man","Janice Cord","Jasper Sitwell","Madame Masque","Pepper Potts","Unicorn"],"name":"Iron Man #2-4","link":"iron_man_2-4","credits":["Johnny T. Craig","Archie Goodwin"],"i":583},{"year":1968,"characters":["Balder","Ego the Living Planet","Fandral","Harokin","Heimdall","Hela","Hogun","Karnilla","Loki","Mangog","Odin","Recorder","Sif","Thor","Toag","Ulik","Volstagg"],"name":"Thor #154-157","link":"thor_154157","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":584},{"year":1968,"characters":["Baldini","Cadavus","Captain America","General Ching","Gruning","Iron Hand Hauptman","Iron Man","Krushki","Nick Fury","Red Skull","Sharon Carter"],"name":"Captain America #103-104","link":"captain_america_103104","credits":["Dan Adkins","Stan Lee","Jack Kirby","Jim Steranko","Syd Shores"],"i":585},{"year":1968,"characters":["Aragorn","Bill Foster","Black Knight (Dane Whitman)","Black Panther","Hawkeye","Henry Pym","Jarvis","Klaw","Melter","Radioactive Man","Ultron","Wasp","Whirlwind"],"name":"Avengers #54-55","link":"avengers_5455","credits":["George Klein","Roy Thomas","George Tuska","John Buscema"],"i":586},{"year":1968,"characters":["Captain Stacy","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","Mary Jane Watson","Medusa","Spider-Man"],"name":"Amazing Spider-Man #62","link":"amazing_spiderman_62","credits":["Mike Esposito","John Romita Sr.","Don Heck","Stan Lee"],"i":587},{"year":1968,"characters":["Black Bolt","Medusa","Paste Pot Pete","Sandman","Wizard"],"name":"Marvel Super Heroes #15","link":"marvel_super_heroes_15","credits":["Vincent Colletta","Gene Colan","Archie Goodwin"],"i":588},{"year":1968,"characters":["Daredevil","Debbie Harris","Foggy Nelson","Jester (Jonathan Powers)","Karen Page","Richard Raleigh"],"name":"Daredevil #42","link":"daredevil_42","credits":["Dan Adkins","Gene Colan","Stan Lee"],"i":589},{"year":1968,"characters":["Aunt May","Aunt Watson","Betty Brant","Captain Stacy","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Mary Jane Watson","Richard Raleigh","Smasher (Spider-Man Foe)","Spider-Man"],"name":"Spectacular Spider-Man Magazine #1","link":"spectacular_spider-man_magazin","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":590},{"year":1968,"characters":["Angel","Beast","Cyclops","Foggy Nelson","Fred Duncan","Iceman","Jean Grey","Juggernaut"],"name":"Uncanny X-Men #46","link":"uncanny_x-men_46","credits":["John Tartaglione","Gary Friedrich","Werner Roth","Don Heck"],"i":591},{"year":1968,"characters":["Alicia Masters","Android Man","Crystal","Dr. Molinari","Human Torch","Invisible Woman","Mr. Fantastic","Sergius O'Hoolihan","Thing"],"name":"Fantastic Four #79","link":"fantastic_four_79","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":592},{"year":1968,"characters":["Ancient One","Dr. Strange"],"name":"Doctor Strange #169","link":"doctor_strange_169","credits":["Roy Thomas","Dan Adkins"],"i":593},{"year":1968,"characters":["Ancient One","Dr. Strange","Dreamstalker","Nightmare"],"name":"Doctor Strange #170","link":"doctor_strange_170","credits":["Roy Thomas","Dan Adkins"],"i":594},{"year":1968,"characters":["Attuma","Lady Dorma","Saru-San","Sub-Mariner","Vashti","Warlord Seth"],"name":"Sub-Mariner #4","link":"submariner_4","credits":["Frank Giacoia","Roy Thomas","John Buscema"],"i":595},{"year":1968,"characters":["Captain Mar-vell","Carol Danvers","General Bridges","Hal Logan","Sub-Mariner","Una","Yon-Rogg"],"name":"Captain Marvel #4","link":"captain_marvel_4","credits":["Vincent Colletta","Roy Thomas","Gene Colan"],"i":596},{"year":1968,"characters":["Captain America","Daredevil","Debbie Harris","Foggy Nelson","Karen Page","Spider-Man"],"name":"Daredevil #43","link":"daredevil_43","credits":["Vincent Colletta","Gene Colan","Stan Lee"],"i":597},{"year":1968,"characters":["Aunt May","Gwen Stacy","Harry Osborn","Human Torch","Mr. Fantastic","Red Skull (Communist)","Spider-Man","Thing"],"name":"Amazing Spider-Man annual #5","link":"amazing_spiderman_annual_5","credits":["Larry Lieber","Mike Esposito","John Romita Sr.","Stan Lee"],"i":598},{"year":1968,"characters":["Beast","Iceman","Maha Yogi","Vera Cantor","Zelda"],"name":"Uncanny X-Men #47","link":"uncanny_xmen_47","credits":["Don Heck","Gary Friedrich","John Tartaglione","Werner Roth","Arnold Drake"],"i":599},{"year":1968,"characters":["Man-Wolf (John Jameson)","Silver Surfer"],"name":"Silver Surfer #1","link":"silver_surfer_1","credits":["Joe Sinnott","John Buscema","Stan Lee"],"i":600},{"year":1968,"characters":["Aunt Watson","Captain Stacy","Foggy Nelson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man","Vulture","Vulture II"],"name":"Amazing Spider-Man #63-65","link":"amazing_spiderman_6365","credits":["John Romita Sr. (breakdowns)","Jim Mooney","Stan Lee","John Romita Sr.","Don Heck (finishes)","Mike Esposito"],"i":601},{"year":1968,"characters":["Asmodeus (Sons of Satannish)","Clea","Dormammu","Dr. Strange","Umar","Victoria Bentley","Wong"],"name":"Doctor Strange #171-173","link":"doctor_strange_171-173","credits":["Roy Thomas","Gene Colan","Tom Palmer","Dan Adkins"],"i":602},{"year":1968,"characters":["Diane Arliss","Dr. Dorcas","Lady Dorma","Paul Destine","Sub-Mariner","Tiger Shark","Warlord Seth"],"name":"Sub-Mariner #5-6","link":"submariner_56","credits":["Frank Giacoia","Roy Thomas","Dan Adkins","John Buscema"],"i":603},{"year":1968,"characters":["Computo","Cyclops","Jean Grey","Quasimodo"],"name":"Uncanny X-Men #48","link":"uncanny_x-men_48","credits":["John Verpoorten","Don Heck","Werner Roth","Arnold Drake"],"i":604},{"year":1968,"characters":["Black Panther","Captain America","Hawkeye","Henry Pym","Kang","Wasp"],"name":"Avengers #56","link":"avengers_56_1","credits":["George Klein","Roy Thomas","John Buscema"],"i":605},{"year":1968,"characters":["Iron Man"],"name":"Iron Man #5","link":"iron_man_5","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":606},{"year":1968,"characters":["Captain Mar-vell","Carol Danvers","Jeremy Logan","Metazoid","Ronan the Accuser","Una","Yon-Rogg"],"name":"Captain Marvel #5","link":"captain_marvel_5","credits":["Don Heck","Arnold Drake","John Tartaglione"],"i":607},{"year":1968,"characters":["Black Panther","Captain America","Hawkeye","Henry Pym","Kang","Uatu the Watcher","Wasp"],"name":"Avengers annual #2","link":"avengers_annual_2","credits":["Roy Thomas","Don Heck","Werner Roth","Vincent Colletta"],"i":608},{"year":1971,"characters":["Angel","Candy Southern","Dazzler (Angel Villain)","Fred Duncan","Kathryn Worthington","Warren Worthington Jr."],"name":"Ka-Zar Quarterly #2-3 / Marvel Tales #30 (Angel)","link":"ka-zar_quarterly_2-3_angel","credits":["Jerry Siegel","Dick Ayers","George Tuska"],"i":609},{"year":1968,"characters":["Batroc","Captain America","Living Laser","Swordsman"],"name":"Captain America #105","link":"captain_america_105","credits":["Jack Kirby","Dan Adkins","Stan Lee"],"i":610},{"year":1968,"characters":["Daredevil","Debbie Harris","Foggy Nelson","Jester (Jonathan Powers)"],"name":"Daredevil #44-46","link":"daredevil_44-46","credits":["George Klein","Dan Adkins","Gene Colan","Stan Lee","Vincent Colletta"],"i":611},{"year":1968,"characters":["Odin","Thor"],"name":"Thor #158-159","link":"thor_158-159","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":612},{"year":1968,"characters":["Crusher","Iron Man","Janice Cord","Jasper Sitwell","Madame Masque"],"name":"Iron Man #6","link":"iron_man_6","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":613},{"year":1968,"characters":["Black Panther","Black Widow","Captain America","Hawkeye","Henry Pym","Iron Man","Thor","Ultron","Vision","Wasp"],"name":"Avengers #57-58","link":"avengers_5758","credits":["George Klein","Roy Thomas","John Buscema"],"i":614},{"year":1968,"characters":["Captain Mar-vell","Carol Danvers","General Bridges","Quasimodo","Solam","Una","Yon-Rogg"],"name":"Captain Marvel #6","link":"captain_marvel_6","credits":["Don Heck","Arnold Drake","John Tartaglione"],"i":615},{"year":1968,"characters":["Brother Royal","Shalla Bal","Silver Surfer"],"name":"Silver Surfer #2","link":"silver_surfer_2","credits":["Joe Sinnott","John Buscema","Stan Lee"],"i":616},{"year":1968,"characters":["Captain America","Dr. Faustus"],"name":"Captain America #106-107","link":"captain_america_106107","credits":["Jack Kirby","Syd Shores","Frank Giacoia","Stan Lee"],"i":617},{"year":1969,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Machinesmith","Magneto Robot","Mesmero","Polaris"],"name":"Uncanny X-Men #49-52","link":"uncanny_x-men_49-51","credits":["Don Heck","John Tartaglione","Werner Roth","Jim Steranko","Arnold Drake"],"i":618},{"year":1968,"characters":["Captain Mar-vell","Carol Danvers","Computo","Jeremy Logan","Quasimodo","Ronan the Accuser","Una","Yon-Rogg"],"name":"Captain Marvel #7","link":"captain_marvel_7","credits":["Don Heck","Arnold Drake","John Tartaglione"],"i":619},{"year":1968,"characters":["Crystal","Human Torch","Mr. Fantastic","Silent Fox","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #80","link":"fantastic_four_80","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":620},{"year":1968,"characters":["Aunt May","Aunt Watson","Betty Brant","Captain Stacy","Dr. Bromwell","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mysterio","Ned Leeds","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #66-67","link":"amazing_spiderman_6667","credits":["Don Heck","Jim Mooney","Stan Lee","John Romita Sr.","Mike Esposito"],"i":621},{"year":1968,"characters":["Betty Dean","Diane Arliss","Henry Pym","Ikthon","Lady Dorma","Paul Destine","Sub-Mariner","Thing","Tiger Shark","Vision"],"name":"Sub-Mariner #7-8","link":"submariner_78","credits":["Roy Thomas","Dan Adkins","John Buscema"],"i":622},{"year":1968,"characters":["Ancient One","Clea","Dr. Strange","Satannish","Victoria Bentley","Wong"],"name":"Doctor Strange #174","link":"doctor_strange_174","credits":["Roy Thomas","Tom Palmer","Gene Colan"],"i":623},{"year":1968,"characters":["Aragorn","Black Knight (Dane Whitman)","Black Knight (Sir Percy of Scandia)","Le Sabre","Mordred the Evil"],"name":"Marvel Super Heroes #17","link":"marvel_super_heroes_17","credits":["Co.","Roy Thomas","Howard Purcell","Dan Adkins"],"i":624},{"year":1968,"characters":["Nick Fury"],"name":"Nick Fury, Agent of SHIELD #6","link":"nick_fury_agent_of_shield_6","credits":["Roy Thomas","Frank Springer","Archie Goodwin"],"i":625},{"year":1968,"characters":["Aunt May","Captain Stacy","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Mary Jane Watson","Spider-Man"],"name":"Spectacular Spider-Man Magazine #2","link":"spectacular_spider-man_magazin_2","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":626},{"year":1968,"characters":["Captain America","Paste Pot Pete","Sharon Carter"],"name":"Captain America #108","link":"captain_america_108","credits":["Jack Kirby","Syd Shores","Stan Lee"],"i":627},{"year":1968,"characters":["Gladiator","Iron Man","Janice Cord","Jasper Sitwell","Madame Masque","Vincent Sandhurst"],"name":"Iron Man #7-8","link":"iron_man_8","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":628},{"year":1968,"characters":["Annihilus","Crystal","Dr. Molinari","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four annual #6","link":"fantastic_four_annual_6","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":629},{"year":1969,"characters":["Captain America","Nick Fury"],"name":"Captain America #109","link":"captain_america_109","credits":["Jack Kirby","Syd Shores","Stan Lee"],"i":630},{"year":1968,"characters":["Mephisto","Shalla Bal","Silver Surfer"],"name":"Silver Surfer #3","link":"silver_surfer_3","credits":["Joe Sinnott","John Buscema","Stan Lee"],"i":631},{"year":1968,"characters":["Betty Ross","Colonel Yuri Brevlov","Dum Dum Dugan LMD","Gabriel Jones","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Iron Man","Mandarin","Missing Link","Mr. Fantastic","Nick Fury","Rhino","Rick Jones"],"name":"Hulk #104-108","link":"hulk_104_108","credits":["Bill Everett","Archie Goodwin","Herb Trimpe","John Severin","Gary Friedrich","Frank Giacoia","Roy Thomas","Stan Lee","George Tuska","Syd Shores","Marie Severin"],"i":632},{"year":1969,"characters":["Captain America","Hulk","Madame Hydra (Viper)","Rick Jones"],"name":"Captain America #110","link":"captain_america_110","credits":["Joe Sinnott","Jim Steranko","Stan Lee"],"i":633},{"year":1968,"characters":["Black Panther","Hawkeye","Henry Pym","J. Jonah Jameson","Jarvis","Spider-Man","Vision","Wasp"],"name":"Avengers #59","link":"avengers_59","credits":["George Klein","Roy Thomas","John Buscema"],"i":634},{"year":1968,"characters":["Aireo","Black Bolt","Falcona","Gorgon","Hulk","Leonus","Lockjaw","Maximus","Nebulo","Stallior","Timberius"],"name":"Hulk annual #1","link":"hulk_annual_1","credits":["Syd Shores \"and almost the whole blamed Bullpen\"","Gary Friedrich","Marie Severin"],"i":635},{"year":1968,"characters":["Crystal","Human Torch","Mr. Fantastic","Thing","Wizard"],"name":"Fantastic Four #81","link":"fantastic_four_81","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":636},{"year":1968,"characters":["General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Ka-Zar","Zabu"],"name":"Hulk #109-110","link":"hulk_109110","credits":["Frank Giacoia","John Severin","Herb Trimpe","Stan Lee"],"i":637},{"year":1968,"characters":["Biggie Benson","Daredevil","Foggy Nelson","Karen Page","Willie Lincoln"],"name":"Daredevil #47","link":"daredevil_47","credits":["George Klein","Gene Colan","Stan Lee"],"i":638},{"year":1969,"characters":["Captain Mar-vell","Carol Danvers","General Bridges","Jeremy Logan","Ronan the Accuser","Una","Yon-Rogg","Zarek"],"name":"Captain Marvel #8-11","link":"captain_marvel_8-11","credits":["Vincent Colletta","Don Heck","Dick Ayers","Arnold Drake"],"i":639},{"year":1968,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Jimmy Woo","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #7","link":"nick_fury_agent_of_shield_7","credits":["Frank Springer","Archie Goodwin"],"i":640},{"year":1969,"characters":["Aunt May","Aunt Watson","Gwen Stacy","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Louis Wilson","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #68-69","link":"amazing_spiderman_6869","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":641},{"year":2009,"characters":["Captain Barracuda","Ikthon","Karthon the Questor","Lady Dorma","Sub-Mariner","Tiger Shark","Vashti","Warlord Seth"],"name":"Sub-Mariner #9-11","link":"submariner_911","credits":["George Klein","Roy Thomas","Dan Adkins","Gene Colan","Marie Severin"],"i":642},{"year":1969,"characters":["Iron Man","Janice Cord","Mandarin","Mei-Ling","Vincent Sandhurst"],"name":"Iron Man #9","link":"iron_man_9","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":643},{"year":1969,"characters":["Angel","Beast","Black Knight (Dane Whitman)","Black Panther","Captain America","Clown","Crystal","Cyclops","Daredevil","Dr. Strange","Ernesto Gambonno","Hawkeye","Henry Pym","Human Cannonball","Human Torch","Iceman","Invisible Woman","Iron Man","Jarvis","Jean Grey","Luigi Gambonno","Mr. Fantastic","Nick Fury","Princess Python","Ringmaster","Thing","Vision","Wasp"],"name":"Avengers #60","link":"avengers_60","credits":["Roy Thomas","Mickey Demeo","John Buscema"],"i":644},{"year":1969,"characters":["Balder","Fandral","Heimdall","Hogun","Igron","Loki","Odin","Sif","Silver Surfer","Thor","Volstagg"],"name":"Silver Surfer #4","link":"silver_surfer_4","credits":["John Buscema","Sal Buscema","Stan Lee"],"i":645},{"year":1969,"characters":["Black Panther","Captain America","Dum Dum Dugan LMD","Gabriel Jones","Hawkeye","Iron Man","Jasper Sitwell","Madame Hydra (Viper)","Nick Fury","Rick Jones","Sharon Carter","Thor","Vision"],"name":"Captain America #111-113","link":"captain_america_111113","credits":["Joe Sinnott","George Tuska","Stan Lee","Tom Palmer","Jack Kirby","Jim Steranko"],"i":646},{"year":1969,"characters":["Ego the Living Planet","Galactus","Odin","Recorder","Sif","Tana Nile","Thor","Torger"],"name":"Thor #160-161","link":"thor_160161","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":647},{"year":1968,"characters":["Daredevil","Debbie Harris","Foggy Nelson","Karen Page","Stilt-Man"],"name":"Daredevil #48","link":"daredevil_48","credits":["George Klein","Gene Colan","Stan Lee"],"i":648},{"year":1969,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Iron Man","Jimmy Woo","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #8","link":"nick_fury_agent_of_shield_8","credits":["Herb Trimpe","Frank Springer","Ernie Hart","John Tartaglione"],"i":649},{"year":1969,"characters":["Captain Stacy","Gwen Stacy","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Ned Leeds","Randy Robertson","Spider-Man","Vanessa Fisk"],"name":"Amazing Spider-Man #70","link":"amazing_spiderman_70","credits":["Jim Mooney -Inker","John Romita Sr.","Jim Mooney","Stan Lee"],"i":650},{"year":1969,"characters":["Ancient One","Aragorn","Asmodeus (Sons of Satannish)","Black Knight (Dane Whitman)","Clea","Dr. Strange","Marduk","Satannish","Surtur","Tiboro","Victoria Bentley","Wong","Ymir"],"name":"Doctor Strange #175-178","link":"dr_strange_177","credits":["Roy Thomas","Tom Palmer","Gene Colan"],"i":651},{"year":1969,"characters":["Black Knight (Dane Whitman)","Black Panther","Dr. Strange","Hawkeye","Marduk","Surtur","Vision","Ymir"],"name":"Avengers #61","link":"avengers_61","credits":["George Klein","Roy Thomas","John Buscema"],"i":652},{"year":1969,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Hate Monger (Hitler)","Jimmy Woo","Laura Brown","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #9","link":"nick_fury_agent_of_shield_9","credits":["Frank Springer","Gary Friedrich"],"i":653},{"year":1969,"characters":["Aragorn","Black Knight (Dane Whitman)","Black Panther","Hawkeye","Man-Ape","N'gamo","Vision","W'Kabi"],"name":"Avengers #62","link":"avengers_62","credits":["George Klein","Roy Thomas","John Buscema"],"i":654},{"year":1969,"characters":["Betty Brant","Captain Stacy","Harry Osborn","J. Jonah Jameson","Jarvis","Joe 'Robbie' Robertson","Man-Wolf (John Jameson)","Martha Robertson","Ned Leeds","Quicksilver","Randy Robertson","Scarlet Witch","Spider-Man","Toad"],"name":"Amazing Spider-Man #71","link":"amazing_spider-man_71","credits":["Jim Mooney -Inker","John Romita Sr.","Jim Mooney","Stan Lee"],"i":655},{"year":1969,"characters":["Angel","Beast","Blastaar","Cyclops","Iceman","Jean Grey"],"name":"Uncanny X-Men #53","link":"uncanny_x-men_53","credits":["Barry Windsor-Smith","Arnold Drake","Mike Esposito"],"i":656},{"year":1969,"characters":["Balder","Fandral","Galactus","Heimdall","Hogun","Odin","Recorder","Tana Nile","Thor","Torger","Volstagg"],"name":"Thor #162","link":"thor_162","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":657},{"year":1969,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Ka-Zar","Leader","Mandarin","Sandman","Zabu"],"name":"Hulk #111-115","link":"hulk_111115","credits":["Herb Trimpe","Dan Adkins","Stan Lee"],"i":658},{"year":1969,"characters":["Biggie Benson","Daredevil","Foggy Nelson","Karen Page","Machinesmith","Willie Lincoln"],"name":"Daredevil #49-51","link":"daredevil_49-51","credits":["George Klein","Barry Windsor-Smith","Roy Thomas","Gene Colan","Stan Lee","Johnny T. Craig"],"i":659},{"year":1969,"characters":["Hate Monger (Hitler)","Jasper Sitwell","Laura Brown","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #10","link":"nick_fury_agent_of_shield_10","credits":["Frank Springer","Gary Friedrich","Johnny T. Craig"],"i":660},{"year":1969,"characters":["Karthon the Questor","Naga","Sub-Mariner"],"name":"Sub-Mariner #12-13","link":"submariner_12","credits":["Roy Thomas","Marie Severin","Joe Sinnott"],"i":661},{"year":1969,"characters":["Black Widow","Captain Mar-vell","Carol Danvers","General Bridges","Hal Logan","Mad Thinker","Man-Slayer","Una","Yon-Rogg"],"name":"Captain Marvel #12","link":"captain_marvel_12","credits":["Syd Shores","Dick Ayers","Arnold Drake"],"i":662},{"year":1969,"characters":["Black Panther","Black Widow","Egghead","Hawkeye","Henry Pym","Jarvis","Mad Thinker","Puppet Master","Vision","Wasp"],"name":"Avengers #63","link":"avengers_63","credits":["George Klein","Roy Thomas","Gene Colan"],"i":663},{"year":1969,"characters":["Black Panther","Daredevil","Foggy Nelson","Henry Pym","Karen Page","Machinesmith","Vision"],"name":"Daredevil #52","link":"daredevil_52","credits":["Roy Thomas","Johnny T. Craig","Barry Windsor-Smith"],"i":664},{"year":1969,"characters":["Al B. Harper","Human Torch","Mr. Fantastic","Silver Surfer","Stranger","Thing"],"name":"Silver Surfer #5","link":"silver_surfer_5","credits":["John Buscema","Sal Buscema","Stan Lee"],"i":665},{"year":1969,"characters":["Controller","Gabriel Jones","Iron Man","Janice Cord","Jasper Sitwell","Mandarin","Mei-Ling","Nick Fury","Senator Byrd","Tony Stark LMD","Vincent Sandhurst"],"name":"Iron Man #10-13","link":"iron_man_1213","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":666},{"year":1969,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Hate Monger (Hitler)","Laura Brown","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #11","link":"nick_fury_agent_of_shield_11","credits":["Frank Springer","Gary Friedrich"],"i":667},{"year":1969,"characters":["Diablo","Dr. Doom","Valeria (Dr. Doom's love)"],"name":"Marvel Super-Heroes #20","link":"marvel_super-heroes_20","credits":["Larry Lieber","Roy Thomas","Frank Giacoia"],"i":668},{"year":1969,"characters":["Iron Man","Janice Cord"],"name":"Iron Man #14","link":"iron_man_14","credits":["Johnny T. Craig","Archie Goodwin"],"i":669},{"year":1969,"characters":["Beast","Black Panther","Cyclops","Dum Dum Dugan LMD","Egghead","Henry Pym","Iceman","Iron Man","Jean Grey","Mad Thinker","Nick Fury","Puppet Master","Spider-Man","Sub-Mariner","Thing","Toro","Vision","Wasp"],"name":"Sub-Mariner #14","link":"submariner_14","credits":["Roy Thomas","Marie Severin","Mike Esposito"],"i":670},{"year":1969,"characters":["Captain Mar-vell","Carol Danvers","Iron Man","Man-Slayer","Puppet Master"],"name":"Captain Marvel #13-14","link":"captain_marvel_14","credits":["Vincent Colletta","Frank Springer","Gary Friedrich"],"i":671},{"year":1969,"characters":["Black Panther","Black Widow","Egghead","Hawkeye","Henry Pym","Jarvis","Trickshot (Barney Barton)","Vision","Wasp"],"name":"Avengers #64","link":"avengers_64","credits":["George Klein","Roy Thomas","Gene Colan"],"i":672},{"year":1969,"characters":["Aireo","Black Bolt","Crystal","Falcona","Franklin Richards","Gorgon","Human Torch","Invisible Woman","Karnak","Leonus","Lockjaw","Maximus","Medusa","Mr. Fantastic","Stallior","Thing","Timberius","Triton","Zorr"],"name":"Fantastic Four #82-83","link":"fantastic_four_8283","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":673},{"year":1969,"characters":["Adam Warlock","Athena","Balder","Galactus","Haag","Heimdall","Karnilla","Loki","Odin","Pluto","Sif","Thor","Zeus"],"name":"Thor #163-167","link":"thor_164","credits":["Jack Kirby","Vincent Colletta","Stan Lee"],"i":674},{"year":1969,"characters":["Black Panther","Egghead","Hawkeye","Henry Pym","Swordsman","Trickshot (Barney Barton)","Vision","Wasp"],"name":"Avengers #65","link":"avengers_65","credits":["Roy Thomas","Sam Grainger","Gene Colan"],"i":675},{"year":1969,"characters":["Crystal","Dr. Doom","Dum Dum Dugan LMD","Human Torch","Invisible Woman","Mr. Fantastic","Nick Fury","Thing"],"name":"Fantastic Four #84-87","link":"fantastic_four_8487","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":676},{"year":1969,"characters":["Aunt May","Aunt Watson","Captain Stacy","Flash Thompson","Gwen Stacy","J. Jonah Jameson","Shocker","Spider-Man"],"name":"Amazing Spider-Man #72","link":"amazing_spider-man_72","credits":["John Romita Sr.","John Buscema","Jim Mooney","Stan Lee"],"i":677},{"year":1969,"characters":["Shalla Bal","Silver Surfer","Yarro Gort"],"name":"Silver Surfer #6","link":"silver_surfer_6","credits":["John Buscema","Sal Buscema","Stan Lee"],"i":678},{"year":1969,"characters":["Baldini","Black Panther","Cadavus","Captain America","Falcon","General Ching","Gruning","Hawkeye","Henry Pym","Iron Hand Hauptman","Jarvis","Krushki","Nick Fury","Red Skull","Redwing","Rick Jones","Sharon Carter","Vision","Wasp"],"name":"Captain America #114-119","link":"captain_america_114119","credits":["John Buscema","Joe Sinnott","Sal Buscema","Gene Colan","Stan Lee","John Romita Sr."],"i":679},{"year":1969,"characters":["Captain Mar-vell","Carol Danvers","Rick Jones","Ronan the Accuser","Supreme Intelligence","Yon-Rogg","Zarek"],"name":"Captain Marvel #15-17","link":"captain_marvel_1517","credits":["Archie Goodwin","Tom Sutton","Don Heck","Gary Friedrich","Roy Thomas","Dan Adkins","Syd Shores","Gil Kane"],"i":680},{"year":1969,"characters":["Captain Stacy","Ceasar Cicero","Gwen Stacy","J. Jonah Jameson","Joe 'Robbie' Robertson","Lizard","Louis Wilson","Man-Mountain Marko","Randy Robertson","Silvermane","Spider-Man"],"name":"Amazing Spider-Man #73","link":"amazing_spiderman_73","credits":["John Buscema","John Romita Sr.","Jim Mooney","Stan Lee"],"i":681},{"year":1969,"characters":["Angel","Beast","Cyclops","Havok","Iceman","Jean Grey","Living Monolith"],"name":"Uncanny X-Men #54-56","link":"uncanny_x-men_54-56","credits":["Don Heck","Roy Thomas","Tom Palmer","Vincent Colletta","Werner Roth","Neal Adams","Arnold Drake"],"i":682},{"year":1969,"characters":["Amphibius (Savage Land Mutate)","Angel","Banshee","Barbarus","Beast","Blob","Brainchild (Savage Land Mutate)","Cyclops","Equilibrius","Gaza","Havok","Iceman","Jean Grey","Judge Chalmers","Ka-Zar","Larry Trask","Living Monolith","Lorelei (Savage Land Mutate)","Lupo","Magneto","Magneto Robot","Mesmero","Piper (Savage Land Mutate)","Polaris","Quicksilver","Sauron","Scarlet Witch","Tanya Anderssen","Toad","Unus","Vanisher","Zabu"],"name":"Uncanny X-Men #57-63","link":"uncanny_xmen_5763","credits":["Neal Adams","Roy Thomas","Chris Claremont","Tom Palmer"],"i":683},{"year":1969,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leader"],"name":"Hulk #116-117","link":"hulk_116117","credits":["Herb Trimpe","Dan Adkins","Stan Lee"],"i":684},{"year":1969,"characters":["Balder","Fandral","Galactus","Hogun","Karnilla","Loki","Odin","Thermal Man","Thor","Volstagg"],"name":"Thor #168-170","link":"thor_168169","credits":["Jack Kirby","Bill Everett","George Klein","Stan Lee"],"i":685},{"year":1983,"characters":["Galactus"],"name":"Galactus: The Origin","link":"galactus_the_origin","credits":["John Byrne","Ron Wilson","Jack Abel","Jim Shooter","Mark Gruenwald","Vincent Colletta"],"i":686},{"year":1969,"characters":["Daredevil"],"name":"Daredevil #53","link":"daredevil_53","credits":["George Klein","Roy Thomas","Gene Colan","Stan Lee"],"i":687},{"year":1969,"characters":["Crimson Dynamo III","Gabriel Jones","Iron Man","Janice Cord","Jasper Sitwell","Nick Fury","Red Ghost","Unicorn"],"name":"Iron Man #15-16","link":"iron_man_16","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":688},{"year":1969,"characters":["Daredevil","Foggy Nelson","Karen Page","Machinesmith","Spider-Man"],"name":"Daredevil #54","link":"daredevil_54","credits":["George Klein","Roy Thomas","Gene Colan"],"i":689},{"year":1969,"characters":["Billy Connors","Ceasar Cicero","Gwen Stacy","Harry Osborn","Lizard","Louis Wilson","Man-Mountain Marko","Martha Connors","Randy Robertson","Silvermane","Spider-Man"],"name":"Amazing Spider-Man #74-75","link":"amazing_spiderman_74","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":690},{"year":1969,"characters":["Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Gabriel Jones","Gaffer (SHIELD Scientist)","Jasper Sitwell","Jimmy Woo","Laura Brown","Nick Fury"],"name":"Nick Fury, Agent of SHIELD #12-15","link":"nick_fury_agent_of_shield_12-1","credits":["Herb Trimpe","Steve Parkhouse","Sid Greene","Barry Windsor-Smith","Sam Grainge","Gary Friedrich","Dick Ayers"],"i":691},{"year":1969,"characters":["Black Panther","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Gabriel Jones","Hawkeye","Henry Pym","Iron Man","Myron Maclain","Taku","Thor","Ultron","Vision","Wasp"],"name":"Avengers #66-68","link":"avengers_6668","credits":["George Klein","Barry Windsor-Smith","Roy Thomas","Sam Grainger","Sal Buscema","Syd Shores"],"i":692},{"year":1969,"characters":["Alicia Masters","Crystal","Franklin Richards","Human Torch","Invisible Woman","Mole Man","Mr. Fantastic","Thing"],"name":"Fantastic Four #88-89","link":"fantastic_four_8889","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":693},{"year":1969,"characters":["Diane Arliss","Dr. Dorcas","Dragon Man","Ikthon","Lady Dorma","Professor Gilbert","Sub-Mariner","Vashti"],"name":"Sub-Mariner #15","link":"sub-mariner_15","credits":["Vincent Colletta","Roy Thomas","Marie Severin"],"i":694},{"year":1969,"characters":["Frankensurfer","Silver Surfer"],"name":"Silver Surfer #7","link":"silver_surfer_7","credits":["John Buscema","Sal Buscema","Stan Lee"],"i":695},{"year":1969,"characters":["Ikthon","Lady Dorma","Stingray","Sub-Mariner","Thakos","Tiger Shark","Vashti"],"name":"Sub-Mariner #16","link":"sub-mariner_16","credits":["Roy Thomas","Marie Severin","Mike Esposito"],"i":696},{"year":1969,"characters":["Hulk","Lady Dorma","Sub-Mariner","Vashti"],"name":"Hulk #118","link":"hulk_118","credits":["Herb Trimpe","Stan Lee"],"i":697},{"year":1969,"characters":["Daredevil","Foggy Nelson","Karen Page","Machinesmith"],"name":"Daredevil #55","link":"daredevil_55","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":698},{"year":1969,"characters":["Flying Dutchman","Mephisto","Shalla Bal","Silver Surfer"],"name":"Silver Surfer #8-9","link":"silver_surfer_89","credits":["Dan Adkins","John Buscema","Stan Lee"],"i":699},{"year":1969,"characters":["Aireo","Betty Ross","Falcona","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leonus","Maximus","Nebulo","Secret Empire Agent Number One","Stallior","Timberius"],"name":"Hulk #119-120","link":"hulk_119","credits":["Herb Trimpe","Roy Thomas","Stan Lee"],"i":700},{"year":1969,"characters":["Alicia Masters","Boss Barker","Crystal","Human Torch","Invisible Woman","Mole Man","Mr. Fantastic","Thing","Torgo"],"name":"Fantastic Four #90-93","link":"fantastic_four_9093","credits":["Frank Giacoia","Jack Kirby","Joe Sinnott","Stan Lee"],"i":701},{"year":1969,"characters":["Aunt May","Billy Connors","Captain Stacy","Gwen Stacy","Harry Osborn","Human Torch","Joe 'Robbie' Robertson","Lizard","Martha Connors","Spider-Man"],"name":"Amazing Spider-Man #76-77","link":"amazing_spiderman_7677","credits":["John Buscema","Jim Mooney","Stan Lee"],"i":702},{"year":1969,"characters":["Clea","Dr. Strange","Eternity","Juggernaut","Nightmare","Wong"],"name":"Doctor Strange #180-182","link":"dr_strange_182","credits":["Roy Thomas","Tom Palmer","Gene Colan"],"i":703},{"year":1969,"characters":["Daredevil","Debbie Harris","Foggy Nelson","Karen Page","Willie Lincoln"],"name":"Daredevil #56-57","link":"daredevil_56-57","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":704},{"year":1969,"characters":["Thor","Wrecker"],"name":"Thor #171","link":"thor_171","credits":["Jack Kirby","Bill Everett","Stan Lee"],"i":705},{"year":1969,"characters":["Digger (Night Shift)"],"name":"Tower of Shadows #1","link":"tower_of_shadows_1_digger","credits":["Jim Steranko"],"i":706},{"year":1969,"characters":["Captain America","Dum Dum Dugan LMD","Falcon","MODOK","Nick Fury","Redwing"],"name":"Captain America #120","link":"captain_america_120","credits":["Joe Sinnott","Gene Colan","Stan Lee"],"i":707},{"year":1969,"characters":["Captain America","Crimson Dynamo III","Happy Hogan","Hawkeye","Henry Pym","Iron Man","Janice Cord","Jarvis","Jose Santini","Madame Masque","Midas","Miss Greer","Morgan Stark","Nick Fury","Pepper Potts","Tony Stark LMD","Vision","Wasp"],"name":"Iron Man #17-19","link":"iron_man_17-19","credits":["George Tuska","Johnny T. Craig","Archie Goodwin"],"i":708},{"year":1969,"characters":["Aragorn","Black Knight (Dane Whitman)","Black Panther","Captain America","Grandmaster","Growing Man","Hawkeye","Henry Pym","Iron Man","Jose Santini","Kang","Krimonn the Power Prism","Nighthawk","Ravonna","Sinister Doctor Spectrum","Sinister Hyperion","Speed Demon","Thor","Vision","Wasp"],"name":"Avengers #69-71","link":"avengers_69","credits":["Roy Thomas","Sam Grainger","Sal Buscema"],"i":709},{"year":1969,"characters":["Dynorr the Stalker","Ikthon","Lady Dorma","Sub-Mariner","Vashti"],"name":"Sub-Mariner #17-18","link":"sub-mariner_17-18","credits":["Roy Thomas","Jack Katz","Marie Severin","Mike Esposito"],"i":710},{"year":1969,"characters":["Shalla Bal","Silver Surfer","Yarro Gort"],"name":"Silver Surfer #10-11","link":"silver_surfer_10","credits":["Dan Adkins","John Buscema","Stan Lee"],"i":711},{"year":1969,"characters":["Diane Arliss","Stingray","Sub-Mariner"],"name":"Sub-Mariner #19","link":"submariner_19","credits":["Johnny T. Craig","Roy Thomas","Marie Severin"],"i":712},{"year":1969,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Glob","Hulk"],"name":"Hulk #121","link":"hulk_121","credits":["Herb Trimpe","Roy Thomas"],"i":713},{"year":1969,"characters":["Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mindy McPherson","Prowler","Spider-Man"],"name":"Amazing Spider-Man #78-79","link":"amazing_spiderman_7879","credits":["Jim Mooney","John Buscema","Stan Lee"],"i":714},{"year":1969,"characters":["Captain Mar-vell","Carol Danvers","Mordecai P. Boggs","Rick Jones","Yon-Rogg"],"name":"Captain Marvel #18","link":"captain_marvel_18","credits":["John Buscema","Roy Thomas","Dan Adkins","John Romita Sr.","Gil Kane"],"i":715},{"year":1969,"characters":["Clea","Dr. Strange","Wong"],"name":"Doctor Strange #183","link":"dr_strange_183","credits":["Roy Thomas","Tom Palmer","Gene Colan"],"i":716},{"year":1969,"characters":["Daredevil","Foggy Nelson","Karen Page","Stunt-Master","Willie Lincoln"],"name":"Daredevil #58","link":"daredevil_58","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":717},{"year":1970,"characters":["Betty Ross","Crystal","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Human Torch","Invisible Woman","Leader","Mr. Fantastic","Thing"],"name":"Hulk #122-123","link":"hulk_122123","credits":["Herb Trimpe","Roy Thomas"],"i":718},{"year":1969,"characters":["Charles Gray","Iron Man","Lucifer"],"name":"Iron Man #20","link":"iron_man_20","credits":["George Tuska","Archie Goodwin","Mike Esposito"],"i":719},{"year":1969,"characters":["Captain Mar-vell","Rick Jones"],"name":"Captain Marvel #19","link":"captain_marvel_19","credits":["Roy Thomas","Gil Kane","Dan Adkins"],"i":720},{"year":1969,"characters":["Crime-Wave","Daredevil","Foggy Nelson","Karen Page","Willie Lincoln"],"name":"Daredevil #59","link":"daredevil_59","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":721},{"year":1969,"characters":["Dr. Doom","Lady Dorma","Sub-Mariner","Triton","Vashti"],"name":"Sub-Mariner #20","link":"sub-mariner_20","credits":["Roy Thomas","Johnny T. Craig","John Buscema"],"i":722},{"year":1971,"characters":["Damian Link","Gemini"],"name":"Astonishing Tales #8 (Gemini)","link":"astonishing_tales_8_gemini","credits":["Mike Friedrich","George Tuska","Len Wein","Mike Esposito"],"i":723},{"year":1970,"characters":["Diane Arliss","Ikthon","Lady Dorma","Sub-Mariner","Thing","Vashti","Warlord Seth"],"name":"Sub-Mariner #21","link":"sub-mariner_21","credits":["Roy Thomas","Johnny T. Craig","Marie Severin"],"i":724},{"year":1970,"characters":["Angel","Beast","Cyclops","Iceman","Jean Grey","Sunfire"],"name":"Uncanny X-Men #64","link":"uncanny_x-men_64","credits":["Roy Thomas","Don Heck","Tom Palmer"],"i":725},{"year":1970,"characters":["Aquarius","Aries","Cancer","Capricorn","Captain America","Captain Mar-vell","Dum Dum Dugan LMD","Gabriel Jones","Gemini","Hawkeye","Henry Pym","Jimmy Woo","Leo","Libra","Nick Fury","Pisces","Rick Jones","Sagittarius","Taurus","Virgo","Vision","Wasp"],"name":"Avengers #72","link":"avengers_72","credits":["Roy Thomas","Sam Grainger","Sal Buscema"],"i":726},{"year":1970,"characters":["Captain Stacy","Chameleon","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man #80","link":"amazing_spiderman_80","credits":["John Buscema","Jim Mooney","Stan Lee"],"i":727},{"year":1970,"characters":["Abomination","Silver Surfer"],"name":"Silver Surfer #12","link":"silver_surfer_12","credits":["Dan Adkins","John Buscema","Stan Lee"],"i":728},{"year":1970,"characters":["Crimson Dynamo III","Eddie March","Happy Hogan","Iron Man","Janice Cord","Titanium Man"],"name":"Iron Man #21-22","link":"iron_man_21-22","credits":["George Tuska","Archie Goodwin","Mike Esposito"],"i":729},{"year":1970,"characters":["Angel","Beast","Crystal","Cyclops","Havok","Human Torch","Iceman","Jean Grey","Mr. Fantastic","Nick Fury","Polaris","Professor X","Thing"],"name":"Uncanny X-Men #65","link":"uncanny_x-men_65","credits":["Neal Adams","Denny O'Neil","Tom Palmer","Marie Severin"],"i":730},{"year":1970,"characters":["Agatha Harkness","Crystal","Ebony","Franklin Richards","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Paste Pot Pete","Sandman","Thing","Wizard"],"name":"Fantastic Four #94","link":"fantastic_four_94","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":731},{"year":1970,"characters":["Crime-Wave","Daredevil","Debbie Harris","Foggy Nelson"],"name":"Daredevil #60","link":"daredevil_60","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":732},{"year":1970,"characters":["Balder","Igron","Jane Foster","Karnilla","Kronin Krask","Loki","Odin","Thor"],"name":"Thor #172","link":"thor_172","credits":["Jack Kirby","Bill Everett","Stan Lee"],"i":733},{"year":1970,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Leader","Rhino"],"name":"Hulk #124","link":"hulk_124","credits":["Herb Trimpe","Roy Thomas","Sal Buscema"],"i":734},{"year":1970,"characters":["Aunt May","J. Jonah Jameson","Kangaroo","Spider-Man"],"name":"Amazing Spider-Man #81","link":"amazing_spiderman_81","credits":["John Buscema","John Romita Sr.","Jim Mooney","Stan Lee"],"i":735},{"year":1970,"characters":["Crystal","Human Torch","Invisible Woman","Medusa","Monocle","Mr. Fantastic","Thing"],"name":"Fantastic Four #95","link":"fantastic_four_95","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":736},{"year":1970,"characters":["Black Panther","Hawkeye","Henry Pym","Jarvis","Monica Lynne","Vision","Wasp"],"name":"Avengers #73-74","link":"avengers_7374","credits":["Herb Trimpe","John Buscema","Frank Giacoia","Roy Thomas","Sam Grainger","Tom Palmer"],"i":737},{"year":1970,"characters":["Doomsday Man","Silver Surfer"],"name":"Silver Surfer #13","link":"silver_surfer_13","credits":["Dan Adkins","John Buscema","Stan Lee"],"i":738},{"year":1970,"characters":["Dr. Strange","Ikthon","Lady Dorma","Nameless One","Sub-Mariner","Vashti"],"name":"Sub-Mariner #22","link":"submariner_22","credits":["Roy Thomas","Johnny T. Craig","Marie Severin"],"i":739},{"year":1970,"characters":["Cobra","Daredevil","Foggy Nelson","Jester (Jonathan Powers)","Karen Page","Mr. Hyde"],"name":"Daredevil #61","link":"daredevil_61","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":740},{"year":1970,"characters":["Angel","Beast","Cyclops","Glenn Talbot","Havok","Hulk","Iceman","Jean Grey","Polaris","Professor X"],"name":"Uncanny X-Men #66","link":"uncanny_x-men_66","credits":["Roy Thomas","Sam Grainger","Sal Buscema"],"i":741},{"year":2014,"characters":["Abomination","Angel","Beast","Cyclops","Glenn Talbot","Havok","Hulk","Iceman","Jean Grey","Leader","Polaris","Professor X"],"name":"Savage Hulk #1-4","link":"savage_hulk_1-4","credits":["Nar Farner","Mark Paniccia","Jonathan Moisan","Alan Davis","Wil Moss"],"i":742},{"year":1970,"characters":["Iron Man","Jasper Sitwell","Vincent Sandhurst"],"name":"Iron Man #23","link":"iron_man_23","credits":["George Tuska","Archie Goodwin","Mike Esposito"],"i":743},{"year":1970,"characters":["Absorbing Man","Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Hulk #125","link":"hulk_125","credits":["Herb Trimpe","Roy Thomas"],"i":744},{"year":1970,"characters":["Black Panther","Captain America","Diamondhead (Captain America foe)","Dum Dum Dugan LMD","Falcon","Iron Man","J. Jonah Jameson","Jarvis","Jasper Sitwell","Man-Brute","Mandarin","Mother Night","Nick Fury","Redwing","Scarbo","Scorpion","Sharon Carter","Vision","Wasp"],"name":"Captain America #121-126","link":"captain_america_120126","credits":["Frank Giacoia","Joe Sinnott","Gene Colan","Stan Lee"],"i":745},{"year":1970,"characters":["Aunt May","Aunt Watson","Captain Stacy","Electro","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #82","link":"amazing_spiderman_82","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":746},{"year":1970,"characters":["Dr. Dorcas","Krang","Lady Dorma","Orka","Sub-Mariner","Tiger Shark","Vashti"],"name":"Sub-Mariner #23-24","link":"sub-mariner_23-24","credits":["John Buscema","Jim Mooney","Roy Thomas","Johnny T. Craig","Marie Severin"],"i":747},{"year":1970,"characters":["Human Torch","Invisible Woman","Mad Thinker","Mr. Fantastic","Thing"],"name":"Fantastic Four #96","link":"fantastic_four_96","credits":["Jack Kirby","Frank Giacoia","Stan Lee"],"i":748},{"year":1970,"characters":["Silver Surfer","Spider-Man"],"name":"Silver Surfer #14","link":"silver_surfer_14","credits":["Dan Adkins","John Buscema","Stan Lee"],"i":749},{"year":1970,"characters":["Daredevil","Foggy Nelson","Grandmaster","Karen Page","Nighthawk"],"name":"Daredevil #62","link":"daredevil_62","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":750},{"year":2009,"characters":["Angel","Beast","Blob","Cyclops","Flash Thompson","Gwen Stacy","Harry Osborn","Iceman","J. Jonah Jameson","Jean Grey","Kraven the Hunter","Mary Jane Watson","Mr. Sinister","Spider-Man"],"name":"X-Men/Spider-Man #1","link":"x-menspider-man_1","credits":["Stephen Wacker","Christos Gage","Joe Quesada","Mario Alberti","Thomas Brennan"],"i":751},{"year":1970,"characters":["Arkon","Bill Foster","Black Panther","Black Widow","Captain America","Grand Vizier (Polemachus)","Hawkeye","Henry Pym","Iron Man","Jarvis","Quicksilver","Scarlet Witch","Thor","Toad","Vision","Wasp"],"name":"Avengers #75-76","link":"avengers_7576","credits":["Roy Thomas","Tom Palmer","John Buscema"],"i":752},{"year":1970,"characters":["Franklin Richards","Human Torch","Invisible Woman","Monster From The Lost Lagoon","Mr. Fantastic","Thing"],"name":"Fantastic Four #97","link":"fantastic_four_97","credits":["Jack Kirby","Frank Giacoia","Stan Lee"],"i":753},{"year":1970,"characters":["Betty Brant","Captain Stacy","Dr. Bromwell","Flash Thompson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Mary Jane Watson","Richard Fisk","Spider-Man","Vanessa Fisk"],"name":"Amazing Spider-Man #83","link":"amazing_spiderman_83","credits":["Mike Esposito","John Romita Sr.","Stan Lee"],"i":754},{"year":1970,"characters":["Aireo","Black Bolt","Dum Dum Dugan LMD","Gorgon","Human Torch","Iron Man","Karnak","Leonus","Lockjaw","Maximus","Medusa","Mephisto","Mr. Fantastic","Nick Fury","Shalla Bal","Silver Surfer","Stallior","Thing","Timberius","Triton"],"name":"Silver Surfer #15-18","link":"silver_surfer_1518","credits":["Herb Trimpe","John Buscema","Dan Adkins","Stan Lee","Jack Kirby","Chic Stone"],"i":755},{"year":1970,"characters":["Barbara Norriss","Betty Ross","Dark Crawler","Dr. Strange","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jack Norriss","Nameless One"],"name":"Hulk #126","link":"hulk_126","credits":["Herb Trimpe","Roy Thomas"],"i":756},{"year":1970,"characters":["Iron Man","Jasper Sitwell","Madame Masque"],"name":"Iron Man #24","link":"iron_man_24","credits":["Johnny T. Craig","George Tuska","Archie Goodwin"],"i":757},{"year":1970,"characters":["Daredevil","Foggy Nelson","Gladiator","Karen Page"],"name":"Daredevil #63","link":"daredevil_63","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":758},{"year":1970,"characters":["Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Kree Sentry 459","Mr. Fantastic","Thing"],"name":"Fantastic Four #98","link":"fantastic_four_98","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":759},{"year":1970,"characters":["Diane Arliss","Lady Dorma","Sub-Mariner","Vashti"],"name":"Sub-Mariner #25","link":"sub-mariner_25","credits":["Roy Thomas","Jim Mooney","Sal Buscema","Mike Esposito"],"i":760},{"year":1970,"characters":["Hulk","Mole Man","Tyrannus"],"name":"Hulk #127","link":"hulk_127","credits":["Herb Trimpe","Roy Thomas"],"i":761},{"year":1970,"characters":["Captain Stacy","Gwen Stacy","Kingpin","Richard Fisk","Spider-Man","Vanessa Fisk"],"name":"Amazing Spider-Man #84","link":"amazing_spiderman_84","credits":["John Buscema","John Romita Sr.","Jim Mooney","Stan Lee"],"i":762},{"year":1970,"characters":["Iron Man","Sub-Mariner"],"name":"Iron Man #25","link":"iron_man_25","credits":["Johnny T. Craig","Sam Grainger","Archie Goodwin"],"i":763},{"year":1970,"characters":["Clown","Ernesto Gambonno","Human Cannonball","Loki","Luigi Gambonno","Princess Python","Ringmaster","Thor","Ulik"],"name":"Thor #173","link":"thor_173","credits":["Jack Kirby","Bill Everett","Stan Lee"],"i":764},{"year":1970,"characters":["Daredevil","Karen Page","Sally Weston","Stunt-Master"],"name":"Daredevil #64","link":"daredevil_64","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":765},{"year":1970,"characters":["Hangman II","Stella Houston"],"name":"Tower of Shadows #5","link":"tower_of_shadows_5","credits":["Barry Windsor-Smith","Roy Thomas","Dan Adkins","Wally Wood","Syd Shores","Gerry Conway"],"i":766},{"year":1970,"characters":["Betty Ross","Black Panther","General 'Thunderbolt' Ross","Glenn Talbot","Hawkeye","Hulk","Quicksilver","Scarlet Witch","Vision"],"name":"Hulk #128","link":"hulk_128","credits":["Herb Trimpe","Roy Thomas"],"i":767},{"year":1970,"characters":["Black Bolt","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Medusa","Mr. Fantastic","Thing","Triton","Yeti"],"name":"Fantastic Four #99","link":"fantastic_four_99","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":768},{"year":1970,"characters":["Captain Stacy","Gwen Stacy","Kingpin","Richard Fisk","Spider-Man","Vanessa Fisk"],"name":"Amazing Spider-Man #85","link":"amazing_spiderman_85","credits":["John Buscema","John Romita Sr.","Jim Mooney","Stan Lee"],"i":769},{"year":1970,"characters":["Black Panther","Hawkeye","Joe the Gorilla","Pecos","Quicksilver","Scarlet Witch","Taurus","Vision"],"name":"Avengers #77","link":"avengers_77","credits":["Roy Thomas","Tom Palmer","John Buscema"],"i":770},{"year":1970,"characters":["Diane Arliss","Red Raven II","Stingray","Sub-Mariner"],"name":"Sub-Mariner #26","link":"sub-mariner_26","credits":["Roy Thomas","Sal Buscema","Mike Esposito"],"i":771},{"year":1970,"characters":["Daredevil","Karen Page","Sally Weston"],"name":"Daredevil #65-66","link":"daredevil_65-66","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":772},{"year":1970,"characters":["Crystal","Human Torch","Invisible Woman","Mad Thinker","Mr. Fantastic","Puppet Master","Thing"],"name":"Fantastic Four #100","link":"fantastic_four_100","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":773},{"year":1970,"characters":["Aunt May","Aunt Watson","Black Widow","Captain Stacy","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Spider-Man"],"name":"Amazing Spider-Man #86","link":"amazing_spiderman_86_1","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":774},{"year":1970,"characters":["Glob","Hulk","Leader"],"name":"Hulk #129","link":"hulk_129","credits":["Herb Trimpe","Roy Thomas"],"i":775},{"year":1970,"characters":["Alicia Masters","Crystal","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #101","link":"fantastic_four_101","credits":["Jack Kirby","Joe Sinnott","Stan Lee"],"i":776},{"year":2000,"characters":["Agatha Harkness","Amphibius (Savage Land Mutate)","Angel","Arnstrom","Ashley Martin","Avia","Beast","Candy Southern","Crystal","Cyclops","Deluge","Ebony","Franklin Richards","Havok","Human Torch","Iceman","Invisible Woman","Jean Grey","Ka-Zar","Krueger","Magneto","Mr. Fantastic","Phoenix Force","Polaris","Professor X","Sauron","Storm","Thing","Vera Cantor","Zabu","Zelda"],"name":"X-Men: The Hidden Years #1-9","link":"x-men_the_hidden_years_1-9","credits":["John Byrne","Tom Palmer","Joe Sinnott"],"i":777},{"year":1970,"characters":["Diane Arliss","Kraken","Lady Dorma","Sub-Mariner","Vashti"],"name":"Sub-Mariner #27","link":"sub-mariner_27","credits":["Roy Thomas","Sal Buscema","Mike Esposito"],"i":778},{"year":1970,"characters":["Captain America","Dum Dum Dugan LMD","Iron Man","Jasper Sitwell","Joe 'Robbie' Robertson","Nick Fury","Sharon Carter"],"name":"Captain America #127","link":"captain_america_127","credits":["Wally Wood","Gene Colan","Stan Lee"],"i":779},{"year":1970,"characters":["Black Panther","Captain America","Erik Josten","Grim Reaper","Hawkeye","Iron Man","Living Laser","Man-Ape","Monica Lynne","N'gamo","Quicksilver","Scarlet Witch","Swordsman","Thor","Vision"],"name":"Avengers #78-79","link":"avengers_79","credits":["Roy Thomas","Tom Palmer","Sal Buscema","John Buscema"],"i":780},{"year":1970,"characters":["Captain America","Red Skull"],"name":"Captain America #128","link":"captain_america_128","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":781},{"year":2001,"characters":["Amphibius (Savage Land Mutate)","Angel","Ashley Martin","Avia","Beast","Blob","Candy Southern","Cyclops","Dazzler (Angel Villain)","Edna McCoy","Havok","Iceman","Jean Grey","Ka-Zar","Kathryn Worthington","Krueger","Magneto","Mastermind","Moira MacTaggert","Polaris","Professor X","Sauron","Sub-Mariner","Tad Carter","Teri Martin","Unus"],"name":"X-Men: The Hidden Years #10-15","link":"x-men_the_hidden_years_10-12","credits":["John Byrne","Tom Palmer"],"i":782},{"year":1970,"characters":["Ares","Black Panther","Hawkeye","Hebe","Hercules","Huntsman","Quicksilver","Scarlet Witch","Vision","Zeus"],"name":"Ka-Zar Quarterly #1 (Hercules)","link":"ka-zar_quarterly_1_hercules","credits":["Allyn Brodsky","Frank Springer","Dick Ayers"],"i":783},{"year":1970,"characters":["Diane Arliss","Lady Dorma","Sub-Mariner"],"name":"Sub-Mariner #28","link":"sub-mariner_28","credits":["Roy Thomas","Sal Buscema","Mike Esposito"],"i":784},{"year":1970,"characters":["Captain Stacy","Gwen Stacy","Harry Osborn","Mary Jane Watson","Prowler","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #87","link":"amazing_spiderman_87","credits":["John Romita Sr.","Jim Mooney","Stan Lee"],"i":785},{"year":1970,"characters":["Diane Arliss","Hercules","Huntsman","Lady Dorma","Sub-Mariner","Vashti","Zeus"],"name":"Sub-Mariner #29","link":"sub-mariner_29","credits":["Roy Thomas","Sal Buscema","Mike Esposito"],"i":786},{"year":1970,"characters":["Captain America","Red Skull"],"name":"Captain America #129","link":"captain_america_129","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":787},{"year":1970,"characters":["Doomsman","Dr. Doom","Faceless One","Garokk","Ka-Zar","Kraven the Hunter","Prince Rudolfo","Secret Empire Agent Number One","Tongah","Zabu","Zaladane"],"name":"Astonishing Tales #1-3","link":"astonishing_tales_13","credits":["<em>Ka-Zar<","<b>Title:","\"Frenzy on the fortieth floor!\"","Barry Windsor-Smith","Larry Lieber","Roy Thomas","Sam Grainger","<b>Credits:","Stan Lee","em>","Jack Kirby","Wally Wood","\"Back to the Savage Land\"","\"The power of Ka-Zar!\"","Gerry Conway"],"i":788},{"year":1971,"characters":["Baldini","Cadavus","Dr. Doom","Garokk","General Ching","Gruning","Iron Hand Hauptman","Ka-Zar","Red Skull","Tongah","Zabu","Zaladane"],"name":"Astonishing Tales #4-5","link":"astonishing_tales_45","credits":["<em>Ka-Zar<","<b>Title:","Barry Windsor-Smith","\"The sun god!\"","Frank Giacoia","Larry Lieber","Gerry Conway","Sam Grainger","<b>Credits:","em>","Wally Wood","\"Rampage!\"","George Tuska","Mike Esposito"],"i":789},{"year":1970,"characters":["Baron Von Strucker Robot","Batroc","Captain America","Porcupine","Spider-Man","Whirlwind"],"name":"Captain America #130","link":"captain_america_130","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":790},{"year":1970,"characters":["Crypto-Man","Thor"],"name":"Thor #174","link":"thor_174","credits":["Jack Kirby","Bill Everett","Stan Lee"],"i":791},{"year":1970,"characters":["Baron Von Strucker Robot","Captain America","Dum Dum Dugan LMD","Falcon","Jasper Sitwell","MODOK","Nick Fury","Redwing","Sharon Carter"],"name":"Captain America #131-132","link":"captain_america_131-132","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":792},{"year":1970,"characters":["Daredevil","Foggy Nelson","Karen Page","Stilt-Man","Stunt-Master"],"name":"Daredevil #67","link":"daredevil_67","credits":["Roy Thomas","Gary Friedrich","Syd Shores","Gene Colan"],"i":793},{"year":1970,"characters":["Betty Brant","Captain Stacy","Doctor Octopus","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Man-Wolf (John Jameson)","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #88-90","link":"amazing_spiderman_8890","credits":["Jim Mooney","Stan Lee","John Romita Sr.","Tony Mortellaro","Gil Kane"],"i":794},{"year":1970,"characters":["Daredevil","Foggy Nelson","Kid Gawaine","Pop Fenton"],"name":"Daredevil #68","link":"daredevil_68","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":795},{"year":1970,"characters":["Black Panther","Captain America","Hawkeye","Iron Man","Lobo (Will Talltree's Wolf)","Quicksilver","Red Wolf (Will Talltrees)","Scarlet Witch","Taurus","Thor","Vision"],"name":"Avengers #80-81","link":"avengers_80-81","credits":["Roy Thomas","Tom Palmer","John Buscema"],"i":796},{"year":1970,"characters":["Black Panther","Daredevil","Thunderbolt","Turk"],"name":"Daredevil #69","link":"daredevil_69","credits":["Roy Thomas","Syd Shores","Gene Colan"],"i":797},{"year":1970,"characters":["Aries","Aunt May","Black Panther","Captain America","Daredevil","Hawkeye","Human Torch","Iron Man","Mr. Fantastic","Quicksilver","Scarlet Witch","Secret Empire Agent Number One","Spider-Man","Thing","Thor","Vision"],"name":"Avengers #82","link":"avengers_82","credits":["Roy Thomas","Tom Palmer","John Buscema"],"i":798},{"year":1970,"characters":["Collector","Happy Hogan","Iron Man","Pepper Potts"],"name":"Iron Man #26","link":"iron_man_26","credits":["Johnny T. Craig","Don Heck","Archie Goodwin"],"i":799},{"year":1970,"characters":["Balder","Fandral","Haag","Hogun","Igron","Karnilla","Loki","Odin","Sif","Surtur","Thor","Toag","Volstagg"],"name":"Thor #175-177","link":"thor_175-177","credits":["Jack Kirby","Vincent Colletta","Bill Everett","Stan Lee"],"i":800},{"year":1971,"characters":["Captain America","Falcon","Iron Man","MODOK","Redwing"],"name":"Captain America #133","link":"captain_america_133","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":801},{"year":1970,"characters":["Eddie March","Firebrand","Iron Man"],"name":"Iron Man #27","link":"iron_man_27","credits":["Johnny T. Craig","Don Heck","Archie Goodwin"],"i":802},{"year":1970,"characters":["Daredevil","Foggy Nelson","Karen Page","Tribune"],"name":"Daredevil #70","link":"daredevil_70","credits":["Syd Shores","Gary Friedrich","Gene Colan"],"i":803},{"year":1970,"characters":["Controller","Iron Man","Jasper Sitwell","Kaze II"],"name":"Iron Man #28","link":"iron_man_28","credits":["Johnny T. Craig","Don Heck","Archie Goodwin"],"i":804},{"year":1970,"characters":["Black Panther","Black Widow","Enchantress","Hawkeye","Klaw","Medusa","Melter","Quicksilver","Radioactive Man","Scarlet Witch","Tom Fagan","Vision","Wasp","Whirlwind"],"name":"Avengers #83","link":"avengers_83","credits":["Roy Thomas","Tom Palmer","John Buscema"],"i":805},{"year":1970,"characters":["Abomination","Balder","Odin","Sif","Stranger","Thor"],"name":"Thor #178","link":"thor_178","credits":["Vincent Colletta","John Buscema","Stan Lee"],"i":806},{"year":1970,"characters":["Iron Man"],"name":"Iron Man #29","link":"iron_man_29","credits":["Mimi Gold","Chic Stone","Don Heck"],"i":807},{"year":1970,"characters":["Captain Mar-vell","Hulk","Mordecai P. Boggs","Rick Jones"],"name":"Captain Marvel #20-21","link":"captain_marvel_20-21","credits":["Roy Thomas","Gil Kane","Dan Adkins"],"i":808},{"year":1970,"characters":["Captain Mar-vell","Rick Jones","Sub-Mariner"],"name":"Sub-Mariner #30","link":"sub-mariner_30","credits":["Roy Thomas","Sal Buscema","Mike Esposito"],"i":809},{"year":1970,"characters":["Fujiko Watanabe","Iron Man","Professor Goro Watanabe"],"name":"Iron Man #30","link":"iron_man_30","credits":["Allyn Brodsky","Don Heck","Chic Stone"],"i":810},{"year":1970,"characters":["Black Widow","Ivan Petrovitch"],"name":"Amazing Adventures #1 (Black Widow)","link":"amazing_adventures_1_black_wid","credits":["Gary Friedrich","John Verpoorten","John Buscema"],"i":811},{"year":1970,"characters":["Aireo","Black Bolt","Centarius","Crystal","Franklin Richards","Gorgon","Human Torch","Karnak","Leonus","Lockjaw","Maximus","Medusa","Mr. Fantastic","Stallior","Thing","Timberius","Triton"],"name":"Amazing Adventures #1-2 (Inhumans)","link":"amazing_adventures_1-2_inhuman","credits":["Jack Kirby","Chic Stone"],"i":812},{"year":1971,"characters":["Black Widow","Ivan Petrovitch","J. Jonah Jameson","Spider-Man"],"name":"Amazing Adventures #2-4 (Black Widow)","link":"amazing_adventures_2-4_black_w","credits":["Bill Everett","John Buscema","Gary Friedrich","John Verpoorten","Gene Colan","Mimi Gold"],"i":813},{"year":1970,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Iron Man","Jim Wilson"],"name":"Hulk #130-134","link":"hulk_130134","credits":["Herb Trimpe","Roy Thomas","Sal Buscema","John Severin"],"i":814},{"year":1970,"characters":["Agatha Harkness","Crystal","Ebony","Franklin Richards","Human Torch","Invisible Woman","Lady Dorma","Magneto","Mr. Fantastic","Secret Empire Agent Number One","Sub-Mariner","Thing"],"name":"Fantastic Four #102-104","link":"fantastic_four_102104","credits":["Joe Sinnott","John Verpoorten","Stan Lee","Jack Kirby","John Romita Sr."],"i":815},{"year":2001,"characters":["Angel","Ashley Martin","Avia","Beast","Black Bolt","Candy Southern","Crystal","Cyclops","Dazzler (Angel Villain)","Fred Duncan","Giganto (Subterranean)","Gorgon","Havok","Iceman","Ikaris","Invisible Woman","Jean Grey","Karnak","Kraven the Hunter","Lady Dorma","Lucy Robinson","Magneto","Medusa","Mole Man","Mr. Fantastic","Pixie","Polaris","Professor X","Rapunzel","Sub-Mariner","Tad Carter","Teri Martin","Thing","Tobias Messenger","Yeti"],"name":"X-Men: The Hidden Years #16-22","link":"x-men_the_hidden_years_16-22","credits":["John Byrne","Tom Palmer- Inker"],"i":816},{"year":1970,"characters":["Attuma","Diane Arliss","Ikthon","Lady Dorma","Saru-San","Stingray","Sub-Mariner","Thing","Triton","Vashti"],"name":"Sub-Mariner #31","link":"submariner_31","credits":["Roy Thomas","Sal Buscema","Mike Esposito"],"i":817},{"year":1970,"characters":["Guardsman (Kevin O'Brien)","Iron Man"],"name":"Iron Man #31","link":"iron_man_31","credits":["Allyn Brodsky","Chick Stone","Don Heck"],"i":818},{"year":1970,"characters":["Ikthon","Karthon the Questor","Llyra","Rhonda Morris","Sub-Mariner"],"name":"Sub-Mariner #32","link":"sub-mariner_32","credits":["Roy Thomas","Jim Mooney","Sal Buscema"],"i":819},{"year":1970,"characters":["Balder","Fandral","Galactus","Heimdall","Hogun","Igron","Loki","Mephisto","Odin","Sif","Thor","Vizier","Volstagg"],"name":"Thor #179-181","link":"thor_179-181","credits":["Joe Sinnott","Stan Lee","Jack Kirby","Vincent Colletta","Neal Adams"],"i":820},{"year":1971,"characters":["Black Bolt","Gorgon","Karnak","Mandarin","Medusa","Triton"],"name":"Amazing Adventures #3-4 (Inhumans)","link":"amazing_adventures_3-4","credits":["Jack Kirby","Chic Stone"],"i":821},{"year":1970,"characters":["Iron Man"],"name":"Iron Man #32","link":"iron_man_32","credits":["Allyn Brodsky","George Tuska","Mike Esposito"],"i":822},{"year":1971,"characters":["Gwen Stacy","Harry Osborn","Iceman","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man #91-92","link":"amazing_spider-man_91-92","credits":["John Romita Sr.","Gil Kane","Tony Mortellaro","Stan Lee"],"i":823},{"year":1970,"characters":["Daredevil","Foggy Nelson","Tribune"],"name":"Daredevil #71","link":"daredevil_71","credits":["Roy Thomas","Gene Colan","Len Wein","Syd Shores"],"i":824},{"year":1971,"characters":["Daredevil","Tagak"],"name":"Daredevil #72","link":"daredevil_72","credits":["Syd Shores","Gene Colan","Gerry Conway"],"i":825},{"year":1971,"characters":["Hulk","Kang"],"name":"Hulk #135","link":"hulk_135","credits":["Herb Trimpe","Roy Thomas","Sal Buscema"],"i":826},{"year":1971,"characters":["Aquarius","Capricorn","Daredevil","Foggy Nelson","Guardsman (Kevin O'Brien)","Iron Man","Jasper Sitwell","Lawholder","Libra","Madame Masque","Nick Fury","Sagittarius","Spymaster"],"name":"Iron Man #33-35","link":"iron_man_33-35","credits":["Allyn Brodsky","Mike Esposito","Don Heck","Gerry Conway"],"i":827},{"year":1971,"characters":["Aquarius","Capricorn","Daredevil","Guardsman (Kevin O'Brien)","Iron Man","Lawholder","Madame Masque","Nick Fury","Sagittarius","Spymaster"],"name":"Daredevil #73","link":"daredevil_73","credits":["Allyn Brodsky","Syd Shores","Gene Colan","Gerry Conway"],"i":828},{"year":1971,"characters":["Aquarius","Capricorn","Daredevil","Guardsman (Kevin O'Brien)","Happy Hogan","Iron Man","Madame Masque","Marianne Rodgers","Nick Fury","Pepper Potts","Sagittarius","Spymaster"],"name":"Iron Man #36-37","link":"iron_man_36-37","credits":["Don Heck","Jim Mooney","Allyn Brodsky","Gerry Conway","Mike Esposito"],"i":829},{"year":1971,"characters":["Byrrah","Dr. Dorcas","Krang","Lady Dorma","Sub-Mariner","Vashti"],"name":"Sub-Mariner #33","link":"sub-mariner_33","credits":["Roy Thomas","Jim Mooney","Sal Buscema"],"i":830},{"year":1971,"characters":["Aragorn","Arkon","Black Knight (Dane Whitman)","Black Panther","Enchantress","Hawkeye","Quicksilver","Scarlet Witch","Thor","Vision"],"name":"Avengers #84","link":"avengers_84","credits":["Frank Giacoia","Roy Thomas","John Buscema"],"i":831},{"year":1971,"characters":["Gwen Stacy","Mindy McPherson","Prowler","Spider-Man"],"name":"Amazing Spider-Man #93","link":"amazing_spiderman_93","credits":["John Romita Sr.- Penciler","John Romita Sr.","Tony Mortellaro","Stan Lee"],"i":832},{"year":1971,"characters":["Guardsman (Kevin O'Brien)","Iron Man"],"name":"Iron Man #38","link":"iron_man_38","credits":["Allyn Brodsky","Mike Esposito","George Tuska","Gerry Conway"],"i":833},{"year":1971,"characters":["Captain America","Falcon","Figaro","Jody Casper","Redwing","Sarah Casper","Stone-Face"],"name":"Captain America #134","link":"captain_america_134","credits":["Dick Ayers","Gene Colan","Stan Lee"],"i":834},{"year":1971,"characters":["Abomination","Cybor","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Klaatu","Xeron"],"name":"Hulk #136-137","link":"hulk_136-137","credits":["Herb Trimpe","Gerry Conway","Roy Thomas","Sal Buscema","Mike Esposito"],"i":835},{"year":1971,"characters":["Aunt May","Aunt Watson","Beetle","Betty Brant","Spider-Man"],"name":"Amazing Spider-Man #94","link":"amazing_spiderman_94","credits":["John Romita Sr.","Sal Buscema","Stan Lee"],"i":836},{"year":1971,"characters":["Aragorn","Black Knight (Dane Whitman)","Black Panther","Brainchild (Squadron Supreme)","Captain America","Captain Hawk","Doctor Spectrum","Golden Archer","Hawkeye","Hyperion","Iron Man","Lady Lark","Nighthawk (Squadron Supreme)","Quicksilver","Scarlet Witch","Spider-Man","Thor","Tom Thumb","Vision","Whizzer (Squadron Supreme)"],"name":"Avengers #85-86","link":"avengers_85-86","credits":["John Buscema","Frank Giacoia","Jim Mooney","Roy Thomas","Len Wein"],"i":837},{"year":1999,"characters":["Captain America","Chameleon","Nick Fury"],"name":"Captain America: Sentinel of Liberty #5-6","link":"captain_america_sentinel_of_li_3","credits":["Mark Farmer","Natt Idelson","Bob Harras","Robin Riggs","Brian Vaughan","Mark Waid","Doug Braithwaite"],"i":838},{"year":1971,"characters":["Captain America","Commissioner Feingold","Dum Dum Dugan LMD","Falcon","Figaro","Harry Osborn","Iron Man","Jody Casper","Mole Man","Nick Fury","Redwing","Sharon Carter","Spider-Man","Stone-Face"],"name":"Captain America #135-138","link":"captain_america_135-138","credits":["Bill Everett","Tom Palmer","Gene Colan","Stan Lee","John Romita Sr.","Tony Mortellaro"],"i":839},{"year":1971,"characters":["Daredevil","Foggy Nelson"],"name":"Daredevil #74","link":"daredevil_74","credits":["Syd Shores","Gene Colan","Gerry Conway"],"i":840},{"year":1971,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jim Wilson","Sandman"],"name":"Hulk #138","link":"hulk_138","credits":["Herb Trimpe","Roy Thomas","Sam Grainger"],"i":841},{"year":1971,"characters":["Black Panther","Hawkeye","Iron Man","Jarvis","Quicksilver","Scarlet Witch","Thor","Vision"],"name":"Avengers #87","link":"avengers_87","credits":["Frank Giacoia","Roy Thomas","Sal Busecma"],"i":842},{"year":1971,"characters":["Daredevil","Foggy Nelson"],"name":"Daredevil #75-76","link":"daredevil_75-76","credits":["Syd Shores","Tom Palmer","Gene Colan","Gerry Conway"],"i":843},{"year":1971,"characters":["Black Panther","Captain America","Hawkeye","Hulk","Ikthon","Iron Man","Lady Dorma","Quicksilver","Scarlet Witch","Silver Surfer","Sub-Mariner","Thor","Vashti","Vision"],"name":"Sub-Mariner #34-35","link":"sub-mariner_34-35","credits":["Roy Thomas","Jim Mooney","Sal Buscema"],"i":844},{"year":1971,"characters":["Black Widow","Hawkeye","Ivan Petrovitch"],"name":"Amazing Adventures #5-8 (Black Widow)","link":"amazing_adventures_5-8_black_w","credits":["Bill Everett","Don Heck","Roy Thomas","Gene Colan","Sal Buscema","Gerry Conway"],"i":845},{"year":1972,"characters":["Lorvex","Sub-Mariner"],"name":"Sub-Mariner #54 (second story)","link":"sub-mariner_54_second_story","credits":["Mike Friedrich","Alan Weiss"],"i":846},{"year":1971,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jim Wilson","Leader","Secret Empire Agent Number One"],"name":"Hulk #139","link":"hulk_139","credits":["Herb Trimpe","Roy Thomas","Sam Grainger"],"i":847},{"year":1971,"characters":["Attuma","Ikthon","Karthon the Questor","Lady Dorma","Llyra","Proteus (Sea God)","Rhonda Morris","Sub-Mariner","Triton","Vashti"],"name":"Sub-Mariner #36-37","link":"sub-mariner_37","credits":["Berni Wrightson","Roy Thomas","Sal Buscema","Ross Andru","Mike Esposito"],"i":848},{"year":1971,"characters":["Black Panther","Captain America","Falcon","General 'Thunderbolt' Ross","Glenn Talbot","Hawkeye","Hulk","Iron Man","Mr. Fantastic","Professor X","Psyklop","Quicksilver","Redwing","Scarlet Witch","Thor","Vision"],"name":"Avengers #88","link":"avengers_88","credits":["Roy Thomas","Harlan Ellison","Jim Mooney","Sal Buscema"],"i":849},{"year":1971,"characters":["Captain America","Falcon","Hawkeye","Holi","Hulk","Iron Man","Jarella","Lord Visis","Moli","Psyklop","Redwing","Thor","Torla"],"name":"Hulk #140","link":"hulk_140","credits":["Herb Trimpe","Roy Thomas","Sam Grainger","Harlan Ellison"],"i":850},{"year":1971,"characters":["Captain America","Falcon","Guardsman (Kevin O'Brien)","Hawkeye","Iron Man","Jasper Sitwell","Marianne Rodgers","Nick Fury","Redwing","Thor"],"name":"Iron Man #39-40","link":"iron_man_39-40","credits":["Herb Trimpe","Jim Mooney","George Tuska","Gerry Conway"],"i":851},{"year":1971,"characters":["Diane Arliss","Stingray","Sub-Mariner"],"name":"Sub-Mariner #39","link":"sub-mariner_39","credits":["Roy Thomas","Jim Mooney","Ross Andru"],"i":852},{"year":1971,"characters":["Captain America","Commissioner Feingold","Cowled Commander","Dum Dum Dugan LMD","Falcon","Figaro","Grey Gargoyle","Jody Casper","Leila Taylor","Nick Fury","Rafe Michel","Red Skull","Redwing","Sharon Carter"],"name":"Captain America #139-143","link":"captain_america_139-143","credits":["Joe Sinnott","Gary Friedrich","George Roussos","Stan Lee","John Romita Sr.","Tony Mortellaro"],"i":853},{"year":1971,"characters":["Daredevil","Foggy Nelson","Karen Page","Mary Jane Watson","Spider-Man","Sub-Mariner","Tuvia"],"name":"Daredevil #77","link":"daredevil_77","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":854},{"year":1971,"characters":["Mind-Master (Steven Tuval)","Spider-Man","Sub-Mariner","Tuvia"],"name":"Sub-Mariner #40","link":"sub-mariner_40","credits":["Sam Grainger","Gene Colan","Gerry Conway"],"i":855},{"year":1971,"characters":["Arthur Stacy","Aunt May","Aunt Watson","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #95","link":"amazing_spiderman_95","credits":["John Romita Sr.- Penciler","Sal Buscema","Stan Lee"],"i":856},{"year":1971,"characters":["Black Bolt","Captain America","Gorgon","Hawkeye","Joey (street urchin)","Karnak","Maximus","Medusa","Quicksilver","Scarlet Witch","Thor","Triton","Vision"],"name":"Amazing Adventures #5-8 (Inhumans)","link":"amazing_adventures_5-8_inhuman","credits":["Roy Thomas","John Verpoorten","Tom Palmer","Neal Adams","Gerry Conway"],"i":857},{"year":1975,"characters":["Ellen Brandt","Madame Swabada","Man-Thing"],"name":"Giant-Size Man-Thing #5","link":"giant-size_man-thing_5","credits":["Marv Wolfman","Tom Sutton","Ed Hannigan","John Buscema","Dan Adkins","Frank Springer","Len Wein","Steve Gerber"],"i":858},{"year":1971,"characters":["Black Panther","Boris (Doom's servant)","Damon","Dr. Doom","Ka-Zar","Mephisto","Mockingbird","Tongah","Zabu"],"name":"Astonishing Tales #6-8","link":"astonishing_tales_68","credits":["<b>Title:","Barry Windsor-Smith","\"Deluge!\"","Frank Giacoia","Larry Lieber","<b>Issue(s):","<b>Credits:","i>","\"'Ware the winds of death!\"","<i>Ka-Zar<","Roy Thomas","Tom Palmer","George Tuska","Gerry Conway","Herb Trimpe","Bill Everett","Astonishing Tales #6","Mike Esposito","<b>Cover Date:","Gene Colan","Astonishing Tales #7"],"i":859},{"year":1971,"characters":["Ellen Brandt","Man-Thing"],"name":"Savage Tales #1 (Man-Thing)","link":"savage_tales_1_man-thing","credits":["Roy Thomas","Gray Morrow","Gerry Conway"],"i":860},{"year":1971,"characters":["Ka-Zar","Zabu"],"name":"Savage Tales #1 (Ka-Zar)","link":"savage_tales_1_ka-zar","credits":["John Buscema","Stan Lee"],"i":861},{"year":1971,"characters":["Daredevil","Foggy Nelson","Karen Page","Man-Bull","Mr. Kline"],"name":"Daredevil #78-79","link":"daredevil_78","credits":["Tom Palmer","Gary Friedrich","Gene Colan","Gerry Conway"],"i":862},{"year":1971,"characters":["Betty Ross","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Hulk #141","link":"hulk_141","credits":["Roy Thomas","Herbe Trimpe","John Severin"],"i":863},{"year":1971,"characters":["Aunt May","Aunt Watson","Betty Brant","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #96-98","link":"amazing_spiderman_9698","credits":["Frank Giacoia","Stan Lee","John Romita Sr.","Tony Mortellaro","Gil Kane"],"i":864},{"year":1999,"characters":["Captain America","Falcon","Leila Taylor","Redwing","Wizard"],"name":"Captain America: Sentinel of Liberty #8-9","link":"captain_america_sentinel_of_li_4","credits":["Nathan Massengill","Paul Tutrone","Bob Harras","Cully Hamner","Scott Elmer","Mark Waid","Dan Green","Matt Idelson","Doug Braithwaite"],"i":865},{"year":1972,"characters":["Black Bolt","Gorgon","Joey (street urchin)","Karnak","Magneto","Medusa","Trikon"],"name":"Amazing Adventures #9-10","link":"amazing_adventures_9-10","credits":["Mike Sekwosky","Frank Giacoia","Bill Everett","Gerry Conway"],"i":866},{"year":1971,"characters":["Gwen Stacy","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man #99","link":"amazing_spiderman_99","credits":["Frank Giacoia","Gil Kane","Tony Mortellaro","Stan Lee"],"i":867},{"year":1971,"characters":["Enchantress","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Malicia Parrington","Reginald Parrington","Valkyrie","Valkyrie II"],"name":"Hulk #142","link":"hulk_142","credits":["Roy Thomas","John Severin","Herbe Trimp"],"i":868},{"year":1972,"characters":["Human Torch","Misty Knight","Sandman","Spider-Man"],"name":"Marvel Team-Up #1","link":"marvel_team-up_1","credits":["Roy Thomas","Ross Andru","Mike Esposito"],"i":869},{"year":1971,"characters":["Agatha Harkness","Alicia Masters","Annihilus","Crystal","Dr. Doom","Ebony","Franklin Richards","Human Torch","Invisible Woman","J. Jonah Jameson","Janus the Nega-Man","Jarvis","Joe 'Robbie' Robertson","Lockjaw","Mr. Fantastic","Overmind","Spider-Man","Stranger","Thing","Uatu the Watcher","Walter Collins"],"name":"Fantastic Four #105-116","link":"fantastic_four_105116","credits":["Archie Goodwin","John Buscema","Joe Sinnott","Frank Giacoia","John Verpoorten","Stan Lee","Jack Kirby","John Romita Sr."],"i":870},{"year":1971,"characters":["Betty Ross","Doc Samson","Dr. Doom","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Valeria (Dr. Doom's love)"],"name":"Hulk #143-144","link":"hulk_143-144","credits":["Roy Thomas","Gary Friedrich","Dick Ayers","John Severin"],"i":871},{"year":1972,"characters":["Annihilus","Human Torch","Paste Pot Pete","Sandman","Spider-Man","Wizard"],"name":"Marvel Team-Up #2","link":"marvel_team-up_2","credits":["Jim Mooney","Ross Andru","Gerry Conway"],"i":872},{"year":1971,"characters":["Aunt May","Aunt Watson","Gwen Stacy","J. Jonah Jameson","Joe 'Robbie' Robertson","Lizard","Morbius","Spider-Man"],"name":"Amazing Spider-Man #100-102","link":"amazing_spiderman_100102","credits":["Frank Giacoia","Roy Thomas","Stan Lee","Tony Mortellaro","Gil Kane"],"i":873},{"year":1972,"characters":["Anelle","Annihilus","Black Bolt","Captain America","Captain Mar-vell","Carol Danvers","Dorrek","Dum Dum Dugan LMD","Hawkeye","Henry Pym","Iron Man","Jarvis","Joey (street urchin)","Kree Sentry 459","Maximus","Mordecai P. Boggs","Mr. Fantastic","Nick Fury","Quicksilver","Rick Jones","Ronan the Accuser","Scarlet Witch","Super-Skrull","Supreme Intelligence","Thing","Thor","Triton","Vision","Wasp"],"name":"Avengers #89-97","link":"avengers_8997","credits":["John Buscema","Roy Thomas","Sam Grainger","Sal Buscema","George Roussos","Tom Palmer","Alan Weiss","Neal Adams"],"i":874},{"year":2007,"characters":["Black Bolt","Dorrek","Dr. Strange","Iron Man","Mr. Fantastic","Sub-Mariner"],"name":"New Avengers: Illuminati #1","link":"new_avengers_illuminati_1","credits":["Aubrey Smith","Brian Reed","Tom Brevoort","Molly Lazer","Brian Michael Bendis","Joe Quesada","Jim Cheung","Mark Morales"],"i":875},{"year":1971,"characters":["Baal (Mr. Kline's boss)","Ben Crandal","Demitrius","Iron Man","Marianne Rodgers","Mr. Kline","Slasher"],"name":"Iron Man #41","link":"iron_man_41","credits":["Jim Mooney","George Tuska","Gerry Conway"],"i":876},{"year":1971,"characters":["Baal (Mr. Kline's boss)","Black Widow","Daredevil","Foggy Nelson","Ivan Petrovitch","Karen Page","Mr. Kline","Owl"],"name":"Daredevil #80-81","link":"daredevil_81","credits":["Jack Abel","Tom Palmer","Gene Colan","Gerry Conway"],"i":877},{"year":1972,"characters":["Betty Ross","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Holi","Hulk","Jim Wilson","Leader","Secret Empire Agent Number One"],"name":"Hulk #145-147","link":"hulk_145147","credits":["Herb Trimpe","John Severin","Roy Thomas","Len Wein","Gerry Conway"],"i":878},{"year":1971,"characters":["Ben Crandal","Guardsman (Kevin O'Brien)","Iron Man","Jasper Sitwell","Marianne Rodgers","Mr. Kline","Soulfather"],"name":"Iron Man #42-43","link":"iron_man_42-43","credits":["Frank Giacoia","Dick Ayers","George Tuska","Gerry Conway"],"i":879},{"year":1972,"characters":["Gog (Savage Land Alien)","Gwen Stacy","J. Jonah Jameson","Joe 'Robbie' Robertson","Ka-Zar","Kraven the Hunter","Spider-Man","Zabu"],"name":"Amazing Spider-Man #103-104","link":"amazing_spiderman_103104","credits":["Frank Giacoia","Roy Thomas","Gil Kane","Tony Mortellaro"],"i":880},{"year":1971,"characters":["Ancient One","Baron Mordo","Dr. Strange","Hulk","Silver Surfer","Sub-Mariner","Wong","Yandroth"],"name":"Marvel Feature #1","link":"marvel_feature_1","credits":["Bill Everett","Roy Thomas","Ross Andru"],"i":881},{"year":1972,"characters":["Black Widow","Daredevil","Foggy Nelson","Ivan Petrovitch","Karen Page","Mr. Kline"],"name":"Daredevil #82-83","link":"daredevil_82-83","credits":["Bill Everett","Barry Windsor-Smith","Gene Colan","Jack Abel","Alan Weiss","Gerry Conway"],"i":882},{"year":1971,"characters":["Craig Winters","Diane Arliss","Mind-Master (Steven Tuval)","Stingray","Sub-Mariner"],"name":"Sub-Mariner #41-42","link":"submariner_42","credits":["Sam Grainger","Jim Mooney","George Tuska","Gerry Conway"],"i":883},{"year":1971,"characters":["Diane Arliss","Leonard MacKenzie","Llyra","Mind-Master (Steven Tuval)","Stingray","Sub-Mariner","Tiger Shark"],"name":"Sub-Mariner #43","link":"sub-mariner_43","credits":["Mike Esposito","Gene Colan","Gerry Conway"],"i":884},{"year":1972,"characters":["Diane Arliss","Human Torch","Leonard MacKenzie","Llyra","Stingray","Sub-Mariner","Tiger Shark"],"name":"Sub-Mariner #44-46","link":"sub-mariner_44-46","credits":["Jim Mooney","Gerry Conway","Gene Colan","Marie Severin","Mike Esposito"],"i":885},{"year":1972,"characters":["Agatha Harkness","Alicia Masters","Ben Grimm (Earth-A)","Crystal","Diablo","Ebony","Franklin Richards","Human Torch","Invisible Woman","Lockjaw","Mr. Fantastic","Reed Richards (Earth-A)","Stallior","Sue Grimm (Earth-A)","Thing","Yeti"],"name":"Fantastic Four #117-118","link":"fantastic_four_117","credits":["Joe Sinnott","Jim Mooney","Archie Goodwin","John Buscema"],"i":886},{"year":1971,"characters":["Ka-Zar","Zabu"],"name":"Astonishing Tales #9","link":"astonishing_tales_9","credits":["John Buscema","Stan Lee"],"i":887},{"year":1972,"characters":["Beast","Carl Maddicks","Linda Donaldson"],"name":"Amazing Adventures #11","link":"amazing_adventures_11","credits":["Syd Shores","Tom Sutton","Gerry Conway"],"i":888},{"year":1972,"characters":["Captain America","Guardsman (Kevin O'Brien)","Henry Pym","Iron Man","Marianne Rodgers","Mr. Kline","Scarlet Beetle","Simon Gilbert"],"name":"Iron Man #44-46","link":"iron_man_44-46","credits":["Gary Friedrich","John Verpoorten","Robert Kanigher","George Tuska","Vincent Colletta","Gerry Conway"],"i":889},{"year":1972,"characters":["Iron Man","Marianne Rodgers","Simon Gilbert"],"name":"Iron Man #47","link":"iron_man_47","credits":["Roy Thomas","Barry Windsor-Smith","Jim Mooney"],"i":890},{"year":1972,"characters":["Beast","Blob","Hellcat","Iron Man","Jean Grey","Linda Donaldson","Mad Dog (Buzz Baxter)","Marianne Rodgers","Mastermind","Professor X","Unus","Vera Cantor"],"name":"Amazing Adventures #12-13","link":"amazing_adventures_12-13","credits":["Frank Giacoia","Steven Englehart","Tom Sutton","Mike Ploog"],"i":891},{"year":1971,"characters":["Captain America","Contessa Valentina Allegro De La Fontaine","Falcon","Leila Taylor","Nick Fury","Redwing","Secret Empire Agent Number One","Sharon Carter"],"name":"Captain America #144","link":"captain_america_144","credits":["John Romita Sr.","Gary Friedrich","Gray Morrow"],"i":892},{"year":1972,"characters":["Betty Ross","Dum Dum Dugan LMD","Fialan","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jarella","Lord Visis","Moli","Nick Fury","Peter Corbeau","Torla"],"name":"Hulk #148","link":"hulk_148","credits":["Herb Trimpe","Chris Claremont","Archie Goodwin","John Severin"],"i":893},{"year":1972,"characters":["Baal (Mr. Kline's boss)","Black Widow","Daredevil","Foggy Nelson","Ivan Petrovitch","Mr. Kline"],"name":"Daredevil #84","link":"daredevil_84","credits":["Syd Shores","Gene Colan","Gerry Conway"],"i":894},{"year":1971,"characters":["Ka-Zar","Mockingbird","Paul Allen","Zabu"],"name":"Astonishing Tales #8 (Ka-Zar)","link":"astonishing_tales_8","credits":["Herb Trimpe","Roy Thomas","Tom Sutton","Gary Friedrich"],"i":895},{"year":1972,"characters":["Ka-Zar","Mockingbird","Paul Allen","Zabu"],"name":"Astonishing Tales #10","link":"astonishing_tales_10","credits":["Roy Thomas","Barry Windsor-Smith","Sal Buscema","Gerry Conway"],"i":896},{"year":1972,"characters":["Black Panther","Human Torch","Invisible Woman","Klaw","Mr. Fantastic","Taku","Thing"],"name":"Fantastic Four #119","link":"fantastic_four_119","credits":["Joe Sinnott","Roy Thomas","John Buscema"],"i":897},{"year":1972,"characters":["Lissa Russell","Phillip Russell","Terri (Jack Russell's girlfriend)","Werewolf By Night"],"name":"Marvel Spotlight #2","link":"marvel_spotlight_2","credits":["Gerry Conway","Roy Thomas","Mike Ploog","Jean Thomas"],"i":898},{"year":1972,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Havok","Hulk","Polaris"],"name":"Hulk #149-150","link":"hulk_149150","credits":["Herb Trimpe","Archie Goodwin","John Severin"],"i":899},{"year":1972,"characters":["Cindy Jones","Craig Winters","Diane Arliss","Dr. Doom","MODOK","Stingray","Sub-Mariner"],"name":"Sub-Mariner #47-49","link":"sub-mariner_47-49","credits":["Frank Giacoia","Mike Esposito","Gene Colan","Gerry Conway"],"i":900},{"year":1972,"characters":["Black Widow","Daredevil","Foggy Nelson","Gladiator","Ivan Petrovitch","Karen Page"],"name":"Daredevil #85","link":"daredevil_85","credits":["Syd Shores","Gene Colan","Gerry Conway"],"i":901},{"year":1972,"characters":["Aragorn","Ares","Black Knight (Dane Whitman)","Black Panther","Captain America","Enchantress","Hawkeye","Henry Pym","Hercules","Hulk","Iron Man","Jarvis","Quicksilver","Rick Jones","Scarlet Witch","Swordsman","Thor","Vision","Wasp"],"name":"Avengers #98-100","link":"avengers_98100","credits":["Tom Sutton","Barry Windsor-Smith","Joe Sinnott","Roy Thomas","Sal Buscema","Syd Shores"],"i":902},{"year":1970,"characters":["Balder","Dr. Doom","Harris Hobbs","Odin","Sif","Thor"],"name":"Thor #182-183","link":"thor_182-183","credits":["Joe Sinnott","John Buscema","Stan Lee"],"i":903},{"year":1971,"characters":["Balder","Durok the Demolisher","Fandral","Galactus","Heimdall","Hela","Hogun","Infinity","Karnilla","Loki","Odin","Secret Empire Agent Number One","Sif","Silent One","Silver Surfer","Thor","Vizier","Volstagg"],"name":"Thor #184-194","link":"thor_184-194","credits":["Bill Everett","John Buscema","Joe Sinnott","Jim Mooney","Sam Grainger","Sal Buscema","Stan Lee","Gerry Conway"],"i":904},{"year":1972,"characters":["Atropos (Verdandi)","Balder","Brightsword","Bulwar","Clotho (Urd)","Ego-Prime","Fandral","Genii","Harvest","Hela","Hildegarde","Hogun","Iron Man","Iygar","Jarvis","Karnilla","Kartag","Khan","Kygar","Lachesis (Skuld)","Loki","Mangog","Mephisto","Mercurio the 4-D Man","Odin","Pluto","Rongor","Satrina","Sif","Silas Grant","Tana Nile","Thor","Vizier","Volstagg"],"name":"Thor #195-205","link":"thor_195","credits":["John Buscema","Jim Mooney","John Verpoorten","Stan Lee","Vincent Colletta","Gerry Conway"],"i":905},{"year":1972,"characters":["Firebrand","Iron Man","Marianne Rodgers","Simon Gilbert"],"name":"Iron Man #48","link":"iron_man_48","credits":["Mike Friedrich","Vincent Colletta","George Tuska"],"i":906},{"year":1972,"characters":["Aunt May","Dr. Strange","Flash Thompson","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Lizard","Mary Jane Watson","Randy Robertson","Sha Shan","Spencer Smythe","Spider-Man"],"name":"Amazing Spider-Man #105-109","link":"amazing_spiderman_107","credits":["Frank Giacoia","Stan Lee","John Romita Sr.","Tony Mortellaro","Gil Kane"],"i":907},{"year":1972,"characters":["Black Widow","Daredevil","Foggy Nelson","Ivan Petrovitch","Karen Page","Ox","Ox II"],"name":"Daredevil #86","link":"daredevil_86","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":908},{"year":1973,"characters":["Clifton Graves","Dracula","Frank Drake","Inspector Chelm","Rachel Van Helsing","Taj Nital"],"name":"Tomb of Dracula #1-6","link":"tomb_of_dracula_16","credits":["Archie Goodwin","Gardner Fox","Gene Colan","Tom Palmer","Vincent Colletta","Gerry Conway"],"i":909},{"year":1972,"characters":["Adam Warlock","High Evolutionary","Man-Beast","Soul Gem"],"name":"Marvel Premiere #1-2","link":"marvel_premiere_1","credits":["Roy Thomas","Gil Kane","Dan Adkins"],"i":910},{"year":1972,"characters":["Black Widow","Danny French","Daredevil","Electro","Foggy Nelson","Ivan Petrovitch","Paul Carson","Robert 'Ironguts' O'Hara"],"name":"Daredevil #87","link":"daredevil_87","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":911},{"year":1972,"characters":["Ka-Zar","Mockingbird","Paul Allen","Zabu"],"name":"Astonishing Tales #11","link":"astonishing_tales_11","credits":["Frank Giacoia","Roy Thomas","Gil Kane"],"i":912},{"year":1972,"characters":["Captain America","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Eric Koenig","Falcon","Kingpin","Nick Fury","Red Skull","Redwing","Richard Fisk","Sharon Carter","Vanessa Fisk"],"name":"Captain America #145-148","link":"captain_america_145-148","credits":["Gary Friedrich","John Verpooten","Sal Buscema","John Romita Sr.","Gil Kane"],"i":913},{"year":1972,"characters":["Black Widow","Danny French","Daredevil","Ivan Petrovitch","Mr. Fear (Larry Cranston)","Paul Carson","Purple Man","Robert 'Ironguts' O'Hara"],"name":"Daredevil #88","link":"daredevil_88","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":914},{"year":1972,"characters":["Betty Ross","Black Widow","Captain America","Daredevil","Foggy Nelson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Human Torch","Invisible Woman","Iron Man","J. Jonah Jameson","Mr. Fantastic","Nick Fury","Quicksilver","Scarlet Witch","Secret Empire Agent Number One","Spider-Man","Thing","Thor","Vision"],"name":"Hulk #151-153","link":"hulk_151153","credits":["Herb Trimpe","Archie Goodwin","John Severin","Gary Friedrich","Frank Giacoia","Roy Thomas","Dick Ayers"],"i":915},{"year":1972,"characters":["Captain America","Hawkeye","Iron Man","Quicksilver","Scarlet Witch","Thor","Uatu the Watcher","Vision"],"name":"Avengers #101","link":"avengers_101","credits":["Roy Thomas","Rich Buckler","Harlan Ellison","Dan Adkins"],"i":916},{"year":1972,"characters":["Lissa Russell","Phillip Russell","Werewolf By Night"],"name":"Marvel Spotlight #3","link":"marvel_spotlight_3","credits":["Mike Ploog","Gerry Conway"],"i":917},{"year":1972,"characters":["Billy Bob Rackham","Comanche","Luke Cage","Noah Burstein","Shades","Tyler Stuart","Willis 'Diamondback' Stryker"],"name":"Hero For Hire #1","link":"hero_for_hire_1","credits":["Billy Graham","George Tuska","Archie Goodwin"],"i":918},{"year":1972,"characters":["Agatha Harkness","Air-Walker","Franklin Richards","Galactus","General 'Thunderbolt' Ross","Human Torch","Invisible Woman","Mr. Fantastic","Secret Empire Agent Number One","Silver Surfer","Thing","Walter Collins"],"name":"Fantastic Four #120-123","link":"fantastic_four_120-123","credits":["Joe Sinnott","John Buscema","Stan Lee"],"i":919},{"year":1972,"characters":["Ka-Zar","Man-Thing","Mockingbird","Paul Allen","Wilma Calvin","Zabu"],"name":"Astonishing Tales #12-13","link":"astonishing_tales_12-13","credits":["John Buscema","Roy Thomas","Dan Adkins","Len Wein","Neal Adams"],"i":920},{"year":1972,"characters":["Bride of the Lost Lagoon","Human Torch","Invisible Woman","Monster From The Lost Lagoon","Mr. Fantastic","Thing"],"name":"Fantastic Four #124-125","link":"fantastic_four_124-125","credits":["Joe Sinnott","John Buscema","Stan Lee"],"i":921},{"year":1972,"characters":["Buck Cowan","Lissa Russell","Phillip Russell","Werewolf By Night"],"name":"Marvel Spotlight #4, Werewolf By Night #1","link":"marvel_spotlight_4werewolf_by_","credits":["Frank Chiaramonte","Mike Ploog","Gerry Conway"],"i":922},{"year":1972,"characters":["Captain America","Dino Manelli","Dum Dum Dugan LMD","Eric Koenig","Gabriel Jones","Human Torch","Invisible Woman","Izzy Cohen","Mr. Fantastic","Nick Fury","Percy Pinkerton","Reb Ralston","Thing"],"name":"Sgt. Fury & His Howling Commandos #100","link":"sgt_fury_his_howling_commandos","credits":["Gary Friedrich","Dick Ayers","Mike Esposito"],"i":923},{"year":1972,"characters":["Beast","Hellcat","Iron Man","Linda Donaldson","Mad Dog (Buzz Baxter)","Quasimodo","Vera Cantor"],"name":"Amazing Adventures #14","link":"amazing_adventures_14","credits":["Steve Englehart","Tom Sutton","Jim Mooney"],"i":924},{"year":1972,"characters":["Human Torch","Invisible Woman","Martine Bancroft","Morbius","Mr. Fantastic","Spider-Man","Thing"],"name":"Marvel Team-Up #3","link":"marvel_team-up_3","credits":["Frank Giacoia","Ross Andru","Gerry Conway"],"i":925},{"year":1972,"characters":["Angel","Beast","Cyclops","Harry Osborn","Iceman","Jean Grey","Morbius","Professor X","Spider-Man"],"name":"Marvel Team-Up #4","link":"marvel_teamup_4","credits":["Gil Kane","Steven Mitchell","Gerry Conway"],"i":926},{"year":1972,"characters":["Aunt May","Flash Thompson","Gibbon","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kraven the Hunter","Spider-Man"],"name":"Amazing Spider-Man #110-111","link":"amazing_spiderman_110111","credits":["Gerry Conway","John Romita Sr.","Tom Mortellaro","Stan Lee"],"i":927},{"year":1972,"characters":["Angel","Beast","Cyclops","Griffin","Hellcat","Jean Grey","Linda Donaldson","Mad Dog (Buzz Baxter)","Professor X","Vera Cantor"],"name":"Amazing Adventures #15","link":"amazing_adventures_15","credits":["Frank Giacoia","Steve Englehart","Tom Sutton","John Tartaglione"],"i":928},{"year":1972,"characters":["Brother Royal","Byrrah","Cindy Jones","Llyra","Namora","Namorita","Sub-Mariner"],"name":"Sub-Mariner #50-51","link":"sub-mariner_51","credits":["Bill Everett","Mike Friedrich"],"i":929},{"year":1972,"characters":["Batroc","Bob Courtney","Captain America","Contessa Valentina Allegro De La Fontaine","Cowled Commander","Falcon","Jakar","Leila Taylor","Morgan","Mr. Hyde","Nick Fury","Rafe Michel","Redwing","Scorpion","Sharon Carter"],"name":"Captain America #149-152","link":"captain_america_151-152","credits":["Jim Mooney","Frank Giacoia","John Verpoorten","Sal Buscema","Tony Mortellaro","Vincent Colletta","Gerry Conway"],"i":930},{"year":1972,"characters":["Black Widow","Danny French","Daredevil","Electro","Ivan Petrovitch","Mr. Fear (Larry Cranston)","Purple Man"],"name":"Daredevil #89","link":"daredevil_89","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":931},{"year":1972,"characters":["Crash Simpson","Ghost Rider (Johnny Blaze)","Mephisto","Roxanne Simpson"],"name":"Marvel Spotlight #5","link":"marvel_spotlight_5","credits":["Mike Ploog","Gary Friedrich"],"i":932},{"year":1972,"characters":["Captain America","General 'Thunderbolt' Ross","Glenn Talbot","Grim Reaper","Hawkeye","Iron Man","Jarvis","Judge Chalmers","Larry Trask","Nick Fury","Peter Corbeau","Quicksilver","Scarlet Witch","Thor","Vision","Wonder Man"],"name":"Avengers #102-104","link":"avengers_102104","credits":["Roy Thomas","Rich Buckler","Joe Sinnott"],"i":933},{"year":1972,"characters":["Benjamin Savannah","Captain Mar-vell","Lou-Ann Savannah","Mordecai P. Boggs","Rick Jones"],"name":"Captain Marvel #22-23","link":"captain_marvel_22-23","credits":["Marv Wolfman","Frank Giacoia","Wayne Boring","Frank McLaughlin","Gerry Conway"],"i":934},{"year":1972,"characters":["Betty Ross","Chameleon","General 'Thunderbolt' Ross","Glenn Talbot","Henry Pym","Hulk","Wasp"],"name":"Hulk #154","link":"hulk_154","credits":["Herb Trimpe","Archie Goodwin","John Severin"],"i":935},{"year":1972,"characters":["Black Widow","Danny French","Daredevil","Ivan Petrovitch","Jason Sloan","Mr. Fear (Larry Cranston)","Paul Carson"],"name":"Daredevil #90-91","link":"daredevil_90-91","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":936},{"year":1972,"characters":["Bertha","Claire Temple","D.W. Griffith","Gadget","Luke Cage","Mace","Noah Burstein","Willis 'Diamondback' Stryker"],"name":"Hero For Hire #2-3","link":"hero_for_hire_2-3","credits":["Billy Graham","George Tuska","Archie Goodwin"],"i":937},{"year":1972,"characters":["Adam Warlock","High Evolutionary","Man-Beast","Soul Gem"],"name":"Warlock #1-2","link":"warlock_1-2","credits":["Tom Sutton","John Buscema","Roy Thomas","Mike Friedrich","Gil Kane"],"i":938},{"year":1972,"characters":["Aunt May","Aunt Watson","Betty Brant","Doctor Octopus","Dr. Bromwell","Flash Thompson","Gibbon","Gwen Stacy","Hammerhead","Harry Osborn","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Martha Robertson","Mary Jane Watson","Ned Leeds","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #112-115","link":"amazing_spiderman_112115","credits":["John Romita Sr.","Tony Mortellaro","Gerry Conway"],"i":939},{"year":1972,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Shaper of Worlds"],"name":"Hulk #155","link":"hulk_155","credits":["Herb Trimpe","Archie Goodwin","John Severin"],"i":940},{"year":1972,"characters":["Bob Courtney","Captain America","Captain America (Grand Director)","Contessa Valentina Allegro De La Fontaine","Cowled Commander","Falcon","Hawkeye","Iron Man","Jarvis","Jody Casper","Leila Taylor","Man-Mountain Quint","Morgan","Nick Fury","Nomad","Rafe Michel","Redwing","Scarlet Witch","Sharon Carter","Vision"],"name":"Captain America #153-156","link":"captain_america_153-155","credits":["Jim Mooney","John Verpoorten","Sal Buscema","Steve Englehart","Tony Mortellaro","Frank McLaughlin"],"i":941},{"year":1972,"characters":["Iron Man","Jarvis","Marianne Rodgers","Pepper Potts","Princess Python","Super-Adaptoid"],"name":"Iron Man #49-51","link":"iron_man_49-51","credits":["Mike Friedrich","Vince Colletta","George Tuska"],"i":942},{"year":1973,"characters":["Alicia Masters","Ballox","Harry Osborn","Mad Thinker","Puppet Master","Spider-Man","Thing","Vision"],"name":"Marvel Team-Up #5-6","link":"marvel_team-up_5-6","credits":["Mike Esposito","Gil Kane","Gerry Conway"],"i":943},{"year":1972,"characters":["Black Panther","Black Widow","Damon Dran","Danny French","Daredevil","Ivan Petrovitch","Robert 'Ironguts' O'Hara"],"name":"Daredevil #92","link":"daredevil_92","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":944},{"year":1972,"characters":["Betty Ross","Glenn Talbot","Hulk","Jarella","Lord Visis","Torla"],"name":"Hulk #156","link":"hulk_156","credits":["Herb Trimpe","Sal Trapani","Archie Goodwin"],"i":945},{"year":1972,"characters":["Man-Thing","Margaret Thompson","Warren Thompson"],"name":"Fear #10","link":"fear_10","credits":["Gray Morrow","Howard Chaykin","Gerry Conway"],"i":946},{"year":1972,"characters":["Ancient One","Clea","Dormammu","Dr. Strange","Hulk","Sub-Mariner","Tom Fagan","Wong"],"name":"Marvel Feature #2","link":"marvel_feature_2","credits":["Roy Thomas","Sal Buscema","Ross Andru"],"i":947},{"year":1972,"characters":["Buck Cowan","Father Joquez","Lissa Russell","Terri (Jack Russell's girlfriend)","Werewolf By Night"],"name":"Werewolf By Night #2","link":"werewolf_by_night_2","credits":["Frank Chiaramonte","Mike Ploog","Gerry Conway"],"i":948},{"year":1972,"characters":["Dr. Strange","General 'Thunderbolt' Ross","Hulk","Jim Wilson","Sub-Mariner","Xemnu the Titan"],"name":"Marvel Feature #3","link":"marvel_feature_3","credits":["Bill Everett","Roy Thomas","Ross Andru"],"i":949},{"year":1972,"characters":["Joanne Tumolo","Tigra","Zabo"],"name":"Cat #1","link":"cat_1","credits":["Linda Fite","Wally Wood","Marie Severin"],"i":950},{"year":1972,"characters":["Black Widow","Damon Dran","Danny French","Daredevil","Ivan Petrovitch","Jason Sloan","Paul Carson","Robert 'Ironguts' O'Hara"],"name":"Daredevil #93-94","link":"daredevil_93-94","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":951},{"year":1972,"characters":["Billy Connors","Henry Pym","Martha Connors","Spider-Man"],"name":"Marvel Feature #4","link":"marvel_feature_4","credits":["Mike Friedrich","Roy Thomas","Herb Trimpe"],"i":952},{"year":1972,"characters":["Dr. Strange","Hulk","Nameless One","Necrodamus","Sub-Mariner"],"name":"Defenders #1","link":"defenders_1","credits":["Frank Giacoia","Steve Englehart","Sal Buscema"],"i":953},{"year":1972,"characters":["Adam Warlock","Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","High Evolutionary","Hulk","Jim Wilson","Leader","Omnivac","Rhino","Soul Gem"],"name":"Hulk #157-158","link":"hulk_158","credits":["Herb Trimpe","Archie Goodwin","Roy Thomas","Sal Trapani","Steve Gerber"],"i":954},{"year":1972,"characters":["Agatha Harkness","Alicia Masters","Ebony","Franklin Richards","Human Torch","Invisible Woman","Kala","Mole Man","Mr. Fantastic","Thing","Tyrannus","Walter Collins"],"name":"Fantastic Four #126-128","link":"fantastic_four_126-128","credits":["Joe Sinnott","Roy Thomas","John Buscema"],"i":955},{"year":1972,"characters":["Egghead","Henry Pym","Trish Starr","Wasp","Whirlwind"],"name":"Marvel Feature #5-6","link":"marvel_feature_5-6","credits":["Mike Friedrich","Herb Trimpe"],"i":956},{"year":1973,"characters":["Amphibius (Savage Land Mutate)","Balder","Barbarus","Black Panther","Brainchild (Savage Land Mutate)","Captain America","Captain Mar-vell","Equilibrius","Fandral","Gaza","Grim Reaper","Hawkeye","Hildegarde","Hogun","Iron Man","Jarvis","Lorelei (Savage Land Mutate)","Lupo","Rick Jones","Scarlet Witch","Sif","Silas Grant","Space Phantom","Tana Nile","Thor","Vision","Wonder Man"],"name":"Avengers #105-108","link":"avengers_108","credits":["Don Heck","John Buscema","Jim Mooney","Dave Cockrum","Joe Sinnott","Jim Starlin","George Tuska","Steve Englehart","Rich Buckler"],"i":957},{"year":1973,"characters":["Fandral","Iron Man","Scarlet Witch","Spider-Man","Thor","Uatu the Watcher"],"name":"Marvel Team-Up #7","link":"marvel_team-up_7","credits":["Jim Mooney","Ross Andru","Gerry Conway"],"i":958},{"year":1973,"characters":["Beast","Juggernaut","Tom Fagan","Vera Cantor"],"name":"Amazing Adventures #16","link":"amazing_adventures_16","credits":["Steve Englehart","Frank McLaughlin","Bob Brown"],"i":959},{"year":1973,"characters":["Absorbing Man","Balder","Fandral","Hildegarde","Hogun","Jarvis","Karnilla","Loki","Sif","Thor","Tom Fagan","Vizier","Volstagg"],"name":"Thor #206-207","link":"thor_206","credits":["Vincent Colletta","John Buscema","Marie Severin","Gerry Conway"],"i":960},{"year":1973,"characters":["Fandral","Hildegarde","Hogun","Jarvis","Mercurio the 4-D Man","Thor","Vision","Volstagg"],"name":"Thor #208","link":"thor_208","credits":["Vincent Colletta","John Buscema","Gerry Conway"],"i":961},{"year":1972,"characters":["Biri","Ina","Patrick McShane","Shanna the She-Devil"],"name":"Shanna the She-Devil #1","link":"sheena_the_shedevil_1","credits":["Carole Seuling","Vincent Colletta","George Tuska","Steve Gerber"],"i":962},{"year":1973,"characters":["Agatha Harkness","Avius","Black Bolt","Crystal","Franklin Richards","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Maximus","Medusa","Mr. Fantastic","Omega","Paste Pot Pete","Quicksilver","Sandman","Thing","Thundra","Timberius","Triton","Wizard"],"name":"Fantastic Four #129-132","link":"fantastic_four_129130","credits":["Joe Sinnott","Roy Thomas","Ross Andru","John Buscema"],"i":963},{"year":1972,"characters":["Claire Temple","D.W. Griffith","Luke Cage","Noah Burstein","Phil Fox"],"name":"Hero For Hire #4","link":"hero_for_hire_4","credits":["Billy Graham","Archie Goodwin"],"i":964},{"year":1972,"characters":["Ka-Zar","Mockingbird","Wilma Calvin","Zabu"],"name":"Astonishing Tales #15","link":"astonishing_tales_15","credits":["Mike Friedrich","Tom Sutton","Gil Kane"],"i":965},{"year":1972,"characters":["Black Lama","Iron Man","Marianne Rodgers","Raga"],"name":"Iron Man #52-53","link":"iron_man_53","credits":["Mike Friedrich","Vincent Colletta","George Tuska","Jim Starlin"],"i":966},{"year":1972,"characters":["Andrew Jackson Kale","Jennifer Kale","Man-Thing","Thog"],"name":"Fear #11","link":"fear_11","credits":["Rich Buckler","Jim Mooney","Steve Gerber"],"i":967},{"year":1973,"characters":["Christine Palmer","Georgia Jenkins","Night Nurse (Linda Carter)"],"name":"Night Nurse #1-4","link":"night_nurse_1-4","credits":["Jean Thomas","Linda Fite","Winslow Mortimer"],"i":968},{"year":1973,"characters":["Abomination","General 'Thunderbolt' Ross","Hulk","Leader","Omnivac","Rhino"],"name":"Hulk #159","link":"hulk_159","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":969},{"year":1973,"characters":["Iron Man","Moondragon","Sub-Mariner"],"name":"Iron Man #54","link":"iron_man_54","credits":["Bill Everett","Vincent Colletta","George Tuska","Mike Friedrich"],"i":970},{"year":1973,"characters":["Aunt May","Betty Brant","Disruptor","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Smasher (Spider-Man Foe)","Spider-Man"],"name":"Amazing Spider-Man #116-118","link":"amazing_spiderman_116118","credits":["Tony Mortellaro","John Romita Sr.","Jim Mooney","Stan Lee"],"i":971},{"year":1973,"characters":["Joanne Tumolo","Owl","Tigra"],"name":"Cat #2","link":"cat_2","credits":["Linda Fite","Jim Mooney","Marie Severin"],"i":972},{"year":1973,"characters":["Benjamin Savannah","Captain Mar-vell","Lou-Ann Savannah","Rick Jones"],"name":"Captain Marvel #24","link":"captain_marvel_24","credits":["Ernie Chan","Wayne Boring","Marv Wolfman"],"i":973},{"year":1973,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Rhino","Spad McCraken","Tiger Shark"],"name":"Hulk #160","link":"hulk_160","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":974},{"year":1973,"characters":["Black Mariah","D.W. Griffith","Flea","George Simms","Luke Cage","Mimi Jenks","Phil Fox"],"name":"Hero For Hire #5","link":"hero_for_hire_5","credits":["Billy Graham","Steve Englehart","George Tuska"],"i":975},{"year":1973,"characters":["Black Widow","Daredevil","Ivan Petrovitch","Jason Sloan","Lucretia Jones","Man-Bull","Paul Carson","Robert 'Ironguts' O'Hara"],"name":"Daredevil #95-96","link":"daredevil_95-96","credits":["Ernie Chan","Tom Palmer","Gene Colan","Gerry Conway"],"i":976},{"year":1973,"characters":["Dragonus","Father Joquez","Lissa Russell","Phillip Russell","Werewolf By Night"],"name":"Werewolf By Night #3-5","link":"werewolf_by_night_3-4","credits":["Frank Chiaramonte","Mike Ploog","Frank W. Bolle","Gerry Conway"],"i":977},{"year":1973,"characters":["Biri","Ina","Jakuna Singh","Patrick McShane","Shanna the She-Devil"],"name":"Shanna the She-Devil #2","link":"shanna_the_shedevil_2","credits":["Carole Seuling","Vincent Colletta","Ross Andru"],"i":978},{"year":1973,"characters":["Ka-Zar","Mockingbird","Wilma Calvin","Zabu"],"name":"Astonishing Tales #16","link":"astonishing_tales_16","credits":["Mike Friedrich","Rich Buckler"],"i":979},{"year":1973,"characters":["Aragorn","Barbara Norriss","Black Knight (Dane Whitman)","Black Knight Statue","Dr. Strange","Enchantress","Executioner","Hulk","Nameless One","Queen Casiolena","Silver Surfer","Sub-Mariner","Valkyrie","Wong"],"name":"Defenders #2-4","link":"defenders_4","credits":["Jim Mooney","John Verpoorten","Sal Buscema","Steve Englehart","Frank McLaughlin"],"i":980},{"year":1973,"characters":["Man-Thing"],"name":"Fear #12","link":"fear_12","credits":["Rich Buckler","Jim Starlin","Steve Gerber"],"i":981},{"year":1973,"characters":["Claire Temple","Luke Cage"],"name":"Hero For Hire #6","link":"hero_for_hire_6","credits":["Billy Graham","Steve Englehart","Paul Reinman","Gerry Conway"],"i":982},{"year":1973,"characters":["Bill Foster","Black Panther","Captain America","Dr. Nemesis (Pym foe)","Henry Pym","Iron Man","Vision","Wasp","Whirlwind"],"name":"Marvel Feature #7-10","link":"marvel_feature_8","credits":["P. Craig Russell","Dan Adkins","Frank W. Bolle","Mark Kersey","Jim Starlin","Mike Friedrich","Jimmy Janes","Frank Chiaramonte"],"i":983},{"year":1973,"characters":["Clifton Graves","Dracula","Edith Harker","Frank Drake","Quincy Harker","Rachel Van Helsing","Saint (dog)","Taj Nital"],"name":"Tomb of Dracula #7-9","link":"tomb_of_dracula_79","credits":["Ernie Chan","Marv Wolfman","Tom Palmer","Gene Colan","Vincent Colletta"],"i":984},{"year":1972,"characters":["Betty Dean","Namorita","Sub-Mariner","Sunfire"],"name":"Sub-Mariner #52-54","link":"submariner_53","credits":["Mike Friedrich","Bill Everett"],"i":985},{"year":1973,"characters":["Bob Courtney","Cal Trimble","Captain America","Commissioner Feingold","Cowled Commander","Eel","Falcon","Figaro","Leila Taylor","Man-Mountain Quint","Morgan","Plantman","Porcupine","Redwing","Scarecrow","Sharon Carter","Viper (Jordon Dixon)"],"name":"Captain America #157-159","link":"captain_america_159","credits":["Joe Sinnott","John Verpoorten","Sal Buscema","Steve Englehart","Steve Gerber"],"i":986},{"year":1972,"characters":["Betty Dean","Namorita","Sub-Mariner","Torg"],"name":"Sub-Mariner #55","link":"sub-mariner_55","credits":["Bill Everett"],"i":987},{"year":1972,"characters":["Attuma","Sub-Mariner","Tamara Rahn","Vashti"],"name":"Sub-Mariner #56","link":"sub-mariner_56","credits":["Mike Friedrich","Dan Adkins"],"i":988},{"year":1973,"characters":["Aragorn","Betty Dean","Black Knight Statue","Clea","Dr. Strange","Hulk","Namorita","Sub-Mariner","Valkyrie"],"name":"Defenders #5","link":"defenders_5","credits":["Steve Englehart","Frank McLaughlin","Sal Buscema"],"i":989},{"year":1973,"characters":["Black Panther","Hawkeye","Imus Champion","Iron Man","Scarlet Witch","Thor","Vision"],"name":"Avengers #109","link":"avengers_109","credits":["Steve Englehart","Frank McLaughlin","Don Heck"],"i":990},{"year":1973,"characters":["Thor","Ultimus","Vizier"],"name":"Thor #209","link":"thor_209","credits":["Vincent Colletta","John Buscema","Gerry Conway"],"i":991},{"year":1973,"characters":["Beast","General 'Thunderbolt' Ross","Hulk","Mimic","Vera Cantor"],"name":"Hulk #161","link":"hulk_161","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":992},{"year":1973,"characters":["Black Widow","Daredevil","Dark Messiah","Ivan Petrovitch","Jason Sloan","Kerwin Broderick","Paul Carson","Robert 'Ironguts' O'Hara"],"name":"Daredevil #97-98","link":"daredevil_97-98","credits":["Ernie Chan","Gene Colan","Steve Gerber","Gerry Conway"],"i":993},{"year":1973,"characters":["Balder","Fandral","Geirrodur","Hogun","Jarvis","Silas Grant","Tana Nile","Thor","Ulik","Volstagg"],"name":"Thor #210-211","link":"thor_210-211","credits":["Vincent Colletta","John Buscema","Don Perlin","Gerry Conway"],"i":994},{"year":1973,"characters":["Balder","Fandral","Hildegarde","Hogun","Odin","Silas Grant","Tana Nile","Thor","Volstagg"],"name":"Thor #212-213","link":"thor_212-213","credits":["Don Perlin","John Buscema","Len Wein","Vincent Colletta","Gerry Conway"],"i":995},{"year":1973,"characters":["Ares","Betty Dean","Namorita","Sub-Mariner","Venus"],"name":"Sub-Mariner #57","link":"sub-mariner_57","credits":["Bill Everett","Roy Thomas"],"i":996},{"year":1973,"characters":["Black Knight Statue","Cyrus Black","Dr. Strange","Silver Surfer","Sub-Mariner","Valkyrie"],"name":"Defenders #6","link":"defenders_6","credits":["Steve Englehart","Frank McLaughlin","Sal Buscema"],"i":997},{"year":1973,"characters":["Balder","Fandral","Grand Commissioner of Rigel","Heimdall","Hildegarde","Hogun","Karnilla","Mercurio the 4-D Man","Odin","Sif","Silas Grant","Tana Nile","Thor","Volstagg"],"name":"Thor #214-216","link":"thor_214-216","credits":["John Buscema","Jim Mooney","Sal Buscema","Gerry Conway"],"i":998},{"year":1973,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Marie Cartier","Wendigo","Wendigo II"],"name":"Hulk #162","link":"hulk_162","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":999},{"year":1973,"characters":["Claire Temple","Luke Cage","Noah Burstein"],"name":"Hero For Hire #7","link":"hero_for_hire_7","credits":["Billy Graham","Steve Englehart","George Tuska"],"i":1000},{"year":1973,"characters":["Balder","Fandral","Grand Commissioner of Rigel","Heimdall","Hildegarde","Hogun","Igron","Krista","Odin","Sif","Silas Grant","Tana Nile","Thor","Volstagg"],"name":"Thor #217","link":"thor_217","credits":["John Buscema","Sal Buscema","Gerry Conway"],"i":1001},{"year":1973,"characters":["Marcia Trent","Ningal"],"name":"Chamber of Chills #3","link":"chamber_of_chills_3","credits":["Ernie Chan","Bill Everett","Don Heck","Gardner Fox","George Alec Effinger","Roy Thomas","Frank Brunner"],"i":1002},{"year":1973,"characters":["Alicia Masters","Captain America","D.W. Griffith","Hulk","Iron Man","Luke Cage","Medusa","Mr. Fantastic","Paste Pot Pete","Sandman","Spider-Man","Thing","Thor","Thundra","Wizard"],"name":"Fantastic Four #133","link":"fantastic_four_133","credits":["Joe Sinnott","Roy Thomas","Ramona Fradon","Gerry Conway"],"i":1003},{"year":1973,"characters":["Man-Killer","Spider-Man","Tigra"],"name":"Marvel Team-Up #8","link":"marvel_teamup_8","credits":["Jim Mooney","Gerry Conway"],"i":1004},{"year":1974,"characters":["Balder","Fandral","Grand Commissioner of Rigel","Heimdall","Hildegarde","Hogun","Krista","Odin","Sif","Silas Grant","Tana Nile","Thor","Vizier","Volstagg"],"name":"Thor #218-220","link":"thor_218-220","credits":["Mike Esposito","John Buscema","Gerry Conway"],"i":1005},{"year":1973,"characters":["Claire Temple","D.W. Griffith","Dr. Doom","Faceless One","Human Torch","Luke Cage","Medusa","Mr. Fantastic","Thing"],"name":"Hero For Hire #8-9","link":"hero_for_hire_89","credits":["Billy Graham","Steve Englehart","George Tuska"],"i":1006},{"year":1973,"characters":["Sub-Mariner","Tamara Rahn","Vashti"],"name":"Sub-Mariner #58","link":"sub-mariner_58","credits":["Bill Everett","Sam Kweskin","Steve Gerber"],"i":1007},{"year":1973,"characters":["Biri","Ina","Patrick McShane","Shanna the She-Devil"],"name":"Shanna the She-Devil #3","link":"shanna_the_shedevil_3","credits":["Carole Seuling","Vincent Colletta","Ross Andru"],"i":1008},{"year":1973,"characters":["Kraken","Tigra"],"name":"Cat #3","link":"cat_3","credits":["Bill Everett","Linda Fite","Paty Cockrum"],"i":1009},{"year":1973,"characters":["Andrew Jackson Kale","Jennifer Kale","Joshua Kale","Man-Thing","Thog"],"name":"Fear #13","link":"fear_13","credits":["Val Mayerik","Frank W. Bolle","Steve Gerber"],"i":1010},{"year":1972,"characters":["Ancient One","Dr. Strange","Dreamstalker","Nightmare","Shuma-Gorath"],"name":"Marvel Premiere #3","link":"marvel_premiere_3","credits":["Dan Adkins","Barry Windsor-Smith","Stan Lee"],"i":1011},{"year":1973,"characters":["Agamotto","Ancient One","Baron Mordo","Clea","Dr. Strange","Hoggoth","Oshtur","Shuma-Gorath","Sligguth","Umar","Victoria Bentley","Wong"],"name":"Marvel Premiere #4-10","link":"marvel_premiere_4-10","credits":["Archie Goodwin","Ernie Chan","Barry Windsor-Smith","Sam Kweskin","P. Craig Russell","Gardner Fox","Don Perlin","Frank Giacoia","Roy Thomas","Jim Starlin","Sal Buscema","Frank Brunner","Crusty Bunkers","Steve Englehart","David Hunt","Mike Esposito"],"i":1012},{"year":1973,"characters":["Damian Link","Gemini","Gog (Savage Land Alien)","Ka-Zar","Mockingbird","Nick Fury","Parnival Plunder","Victorius","Wilma Calvin","Zabu"],"name":"Astonishing Tales #17-18","link":"astonishing_tales_17-18","credits":["Mike Friedrich","Dan Adkins","Frank Chiaramonte"],"i":1013},{"year":1974,"characters":["Ares","Bia","Clem","Destroyer (Asgardian armor)","Dionysius","Ego the Living Planet","Firelord","Galactus","Heimdall","Hercules","Hildegarde","Kratos","Krista","Odin","Pluto","Sif","Thor","Vizier","Zeus"],"name":"Thor #221-228","link":"thor_225228","credits":["Rich Buckler","John Buscema","Joe Sinnott","Mike Esposito","Keith Pollard","Arvell Malcom Jones","David Hunt","Gerry Conway"],"i":1014},{"year":1973,"characters":["Dr. Strange","Hamir"],"name":"Marvel Premiere #11","link":"marvel_premiere_11","credits":["Steve Englehart","Frank Brunner"],"i":1015},{"year":1973,"characters":["Black Panther","Captain America","Crystal","Cyclops","Hawkeye","Iceman","Iron Man","Ivan Petrovitch","Jean Grey","Magneto","Piper (Savage Land Mutate)","Professor X","Quicksilver","Scarlet Witch","Thor","Vision"],"name":"Avengers #110","link":"avengers_110","credits":["Frank Giacoia","Steve Englehart","Don Heck","Mike Esposito"],"i":1016},{"year":1973,"characters":["Black Panther","Black Widow","Daredevil","Hawkeye","Ivan Petrovitch","Paul Carson","Thor","Vision"],"name":"Daredevil #99","link":"daredevil_99","credits":["Syd Shores","Sam Kweskin","Steve Gerber"],"i":1017},{"year":1973,"characters":["Black Panther","Black Widow","Captain America","Cyclops","Daredevil","Hawkeye","Iceman","Iron Man","Jarvis","Jean Grey","Magneto","Piper (Savage Land Mutate)","Professor X","Scarlet Witch","Thor","Vision"],"name":"Avengers #111","link":"avengers_111","credits":["Steve Englehart","Don Heck","Mike Esposito"],"i":1018},{"year":1973,"characters":["Ludi","Murdoch Adams"],"name":"Chamber of Chills #4","link":"chamber_of_chills_4","credits":["Steve Skeates","John Jakes","Gardner Fox","Joe Sinnott","Frank Monte","Frank Brunner","Howard Chaykin","Jay Scott Pike"],"i":1019},{"year":1973,"characters":["Angar the Screamer","Black Widow","Daredevil","Ivan Petrovitch","Jason Sloan","Paul Carson"],"name":"Daredevil #100-101","link":"daredevil_100101","credits":["Frank Giacoia","Gene Colan","John Tartaglione","Rich Buckler","Steve Gerber"],"i":1020},{"year":1973,"characters":["Black Panther","Black Widow","Captain America","Iron Man","Lion God","Mantis","Scarlet Witch","Swordsman","Vision"],"name":"Avengers #112","link":"avengers_112","credits":["Steve Englehart","Frank W. Bolle","Don Heck"],"i":1021},{"year":1973,"characters":["Lorvex","Namorita","Sub-Mariner","Tamara Rahn","Thor","Vashti"],"name":"Sub-Mariner #59","link":"sub-mariner_59","credits":["Bill Everett","John Tartaglione","Sam Kweskin","Steve Gerber"],"i":1022},{"year":1973,"characters":["Gerald O'Hara","Jakuna Singh","Mandrill","Patrick McShane","Shanna the She-Devil"],"name":"Shanna the She-Devil #4","link":"shanna_the_shedevil_4","credits":["Carole Seuling","Vincent Colletta","Ross Andru","Steve Gerber"],"i":1023},{"year":1973,"characters":["Man-Bull","Tigra"],"name":"Cat #4","link":"cat_4","credits":["Alan Weiss","Linda Fite","Frank McLaughlin","Jim Starlin"],"i":1024},{"year":1973,"characters":["Lorvex","Sub-Mariner","Tamara Rahn","Vashti"],"name":"Sub-Mariner #60","link":"sub-mariner_60","credits":["Bill Everett","Sam Kweskin","Jim Mooney","Steve Gerber"],"i":1025},{"year":1973,"characters":["Andrew Jackson Kale","Dakimh The Enchanter","Jennifer Kale","Joshua Kale","Man-Thing","Mongu"],"name":"Fear #14-15","link":"fear_14-15","credits":["Carole Seuling","Val Mayerik","Frank McLaughlin","Chic Stone","Steve Gerber"],"i":1026},{"year":1973,"characters":["Amanda Carter","Captain America","Dr. Faustus","Falcon","Harrison Carter","Leila Taylor","Mr. Carter","Mrs. Carter","Nick Fury","Peggy Carter","Rafe Michel","Redwing","Sharon Carter","Solarr"],"name":"Captain America #160-162","link":"captain_america_160-162","credits":["John Verpoorten","Steve Englehart","Frank McLaughlin","Sal Buscema"],"i":1027},{"year":1973,"characters":["Black Bolt","Black Panther","Captain America","Gorgon","Harry Osborn","Human Torch","Iron Man","Jarvis","Kang","Karnak","Maximus","Omega","Quicksilver","Scarlet Witch","Spider-Man","Thor","Triton","Vision","Zarrko the Tomorrow Man"],"name":"Marvel Team-Up #9-11","link":"marvel_team-up_9-11","credits":["Jim Mooney","Frank Giacoia","Frank W. Bolle","Mike Esposito","Ross Andru","Len Wein","Gerry Conway"],"i":1028},{"year":1973,"characters":["Betty Dean","Doctor Hydro","Namorita","Sub-Mariner","Tamara Rahn","Vashti"],"name":"Sub-Mariner #61-62","link":"sub-mariner_61-62","credits":["Bill Everett","Sam Kweskin","Jim Mooney","Frank Giacoia","Winslow Mortimer","Steve Gerber"],"i":1029},{"year":1973,"characters":["Alicia Masters","Bob Landers","Carol Landers","Doris Evans","Dragon Man","Franklin Richards","Glorian","Gregory Gideon","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Thing","Willie Lumpkin","Wyatt Wingfoot"],"name":"Fantastic Four #134-135","link":"fantastic_four_134135","credits":["Joe Sinnott","John Buscema","Gerry Conway"],"i":1030},{"year":1973,"characters":["Buck Cowan","Lissa Russell","Lou Hackett","Phillip Russell","Werewolf By Night"],"name":"Werewolf By Night #6-8","link":"werewolf_by_night_6-8","credits":["Jim Mooney","Mike Ploog","Frank W. Bolle","Paul Reinman","Len Wein"],"i":1031},{"year":1973,"characters":["Bertha","Claire Temple","D.W. Griffith","Flea","Luke Cage","Mimi Jenks","Noah Burstein","Phil Fox","Senor Suerte"],"name":"Hero For Hire #10-11","link":"hero_for_hire_11","credits":["Billy Graham","Steve Englehart","George Tuska"],"i":1032},{"year":1973,"characters":["Dragon Man","Glorian","Gregory Gideon","Human Torch","Medusa","Mr. Fantastic","Shaper of Worlds","Thing"],"name":"Fantastic Four #136-137","link":"fantastic_four_136","credits":["Joe Sinnott","Roy Thomas","John Buscema","Gerry Conway"],"i":1033},{"year":1973,"characters":["Aunt May","Betty Brant","General 'Thunderbolt' Ross","Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","Hulk","J. Jonah Jameson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #119-120","link":"amazing_spiderman_119120","credits":["Paul Reinman","John Romita Sr.","Tony Mortellaro","Gil Kane","Gerry Conway"],"i":1034},{"year":1973,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Gremlin","Hulk"],"name":"Hulk #163","link":"hulk_163","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":1035},{"year":1973,"characters":["Blade","Clifton Graves","Dracula","Edith Harker","Quincy Harker","Satana"],"name":"Tomb of Dracula #10, Vampire Tales #2 (Satana)","link":"tomb_of_dracula_10vampire_tale","credits":["Marv Wolfman","Roy Thomas","Gene Colan","Jack Abel","John Romita Sr."],"i":1036},{"year":1973,"characters":["Alicia Masters","Belle Thorne","Human Torch","Medusa","Miracle Man","Mr. Fantastic","Sam Thorne","Silent Fox","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #138-139","link":"fantastic_four_138-139","credits":["Joe Sinnott","John Buscema","Gerry Conway"],"i":1037},{"year":1973,"characters":["Black Panther","Captain America","Iron Man","Mantis","Scarlet Witch","Swordsman","Thor","Vision"],"name":"Avengers #113","link":"avengers_113","credits":["Steve Englehart","Frank W. Bolle","Bob Brown"],"i":1038},{"year":1973,"characters":["Betty Ross","Colonel Jack Armbruster","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Nick Fury"],"name":"Hulk #164-165","link":"hulk_164-165","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":1039},{"year":1973,"characters":["Doctor Hydro","Sub-Mariner","Vashti"],"name":"Sub-Mariner #63","link":"sub-mariner_63","credits":["Bill Everett","Syd Shores","Sam Kweskin","Steve Gerber"],"i":1040},{"year":1973,"characters":["Jill Tomahawk","Lobo (Thomas Thunderhead's Wolf)","Owayodata","Red Wolf (Thomas Thunderhead)"],"name":"Red Wolf #8","link":"red_wolf_8","credits":["Syd Shores","Chic Stone","Gardner Fox"],"i":1041},{"year":1973,"characters":["Bart Slade","Crash Simpson","Ghost Rider (Johnny Blaze)","Linda Littletree","Mephisto","Roxanne Simpson","Sam Silvercloud","Snake Dance"],"name":"Marvel Spotlight #6-11","link":"marvel_spotlight_11","credits":["Tom Sutton","Gary Friedrich","Jim Mooney","Mike Ploog","Frank Chiaramonte","Syd Shores","Chic Stone"],"i":1042},{"year":1973,"characters":["Bart Slade","Ghost Rider (Johnny Blaze)","Hellstorm","Linda Littletree","Mephisto","Roxanne Simpson","Sam Silvercloud","Snake Dance"],"name":"Ghost Rider #1-2","link":"ghost_rider_1-2","credits":["Syd Shores","Tom Sutton","Gary Friedrich","Jim Mooney"],"i":1043},{"year":1973,"characters":["Amon (Demon Steed)","Ghost Rider (Johnny Blaze)","Hecate (Demon Steed)","Hellstorm","Linda Littletree","Mephisto","Sam Silvercloud","Set (Demon Steed)","Snake Dance"],"name":"Marvel Spotlight #12","link":"marvel_spotlight_12","credits":["Herb Trimpe","Gary Friedrich","Frank Chiaramonte"],"i":1044},{"year":1973,"characters":["Amon (Demon Steed)","Ghost Rider (Johnny Blaze)","Hecate (Demon Steed)","Hellstorm","Linda Littletree","Roxanne Simpson","Set (Demon Steed)"],"name":"Ghost Rider #3","link":"ghost_rider_3","credits":["Gary Friedrich","Jim Mooney","John Tartaglione"],"i":1045},{"year":1974,"characters":["Ghost Rider (Johnny Blaze)","Linda Littletree","Mephisto","Roulette (Demon)","Roxanne Simpson"],"name":"Ghost Rider #4-5","link":"ghost_rider_45","credits":["Marv Wolfman","Doug Moench","Gary Friedrich","Jim Mooney","Vincent Colletta"],"i":1046},{"year":1974,"characters":["Amon (Demon Steed)","Hecate (Demon Steed)","Hellstorm","Satan","Set (Demon Steed)"],"name":"Marvel Spotlight #13","link":"marvel_spotlight_13","credits":["Herb Trimpe","Gary Friedrich","Frank Chiaramonte"],"i":1047},{"year":1973,"characters":["Green Goblin (Norman Osborn)","Gwen Stacy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #121-122","link":"amazing_spiderman_121122","credits":["John Romita Sr.","Gil Kane","Tony Mortellaro","Gerry Conway"],"i":1048},{"year":1973,"characters":["Adam Warlock","Brute (Alt. Reed Richards)","High Evolutionary","Man-Beast","Recorder","Soul Gem","Triax"],"name":"Warlock #3-8","link":"warlock_7","credits":["Tom Sutton","Bob Brown","Roy Thomas","Ron Goulart","Mike Friedrich","Gil Kane"],"i":1049},{"year":1973,"characters":["Colonel Jack Armbruster","General 'Thunderbolt' Ross","Glenn Talbot","Hawkeye","Hulk","Zzzax"],"name":"Hulk #166","link":"hulk_166","credits":["Herb Trimpe","Steve Englehart","Sal Trapani"],"i":1050},{"year":1973,"characters":["Black Panther","Captain America","Iron Man","Lion God","Mantis","Scarlet Witch","Swordsman","Thor","Vision"],"name":"Avengers #114","link":"avengers_114","credits":["Steve Englehart","Mike Esposito","Bob Brown"],"i":1051},{"year":1973,"characters":["Amanda Carter","Captain America","Cobra","Dave Cox","Eel","Falcon","Harrison Carter","Mr. Carter","Mrs. Carter","Peggy Carter","Redwing","Sharon Carter","Viper (Jordon Dixon)"],"name":"Captain America #163","link":"captain_america_163","credits":["John Verpoorten","Steve Englehart","Tony Mortellaro","Sal Buscema"],"i":1052},{"year":1973,"characters":["Captain America","Falcon","Nick Fury","Nightshade","Redwing","Yellow Claw"],"name":"Captain America #164","link":"captain_america_164","credits":["Steve Englehart","Alan Weiss"],"i":1053},{"year":1973,"characters":["Cal Trimble","Captain America","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Falcon","Hop Sung","Leila Taylor","Morgan","Nick Fury","Peggy Carter","Redwing","Sharon Carter","Suwan","Yellow Claw"],"name":"Captain America #165-167","link":"captain_america_165-167","credits":["Frank Giacoia","Steve Englehart","Frank McLaughlin","Sal Buscema"],"i":1054},{"year":1973,"characters":["Aragorn","Attuma","Black Knight Statue","Clea","Dr. Strange","Hawkeye","Hulk","Red Ghost","Silver Surfer","Sub-Mariner","Valkyrie","Wong"],"name":"Defenders #7-8","link":"defenders_7-8","credits":["Frank W. Bolle","Sal Buscema","Steve Englehart","Len Wein","Frank McLaughlin"],"i":1055},{"year":1973,"characters":["Black Panther","Captain America","Iron Man","Mantis","Scarlet Witch","Swordsman","Thor","Vision"],"name":"Avengers #115","link":"avengers_115","credits":["Steve Englehart","Mike Esposito","Bob Brown"],"i":1056},{"year":1973,"characters":["Aunt May","Aunt Watson","Betty Brant","Flash Thompson","Green Goblin (Norman Osborn)","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Luke Cage","Mary Jane Watson","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #123","link":"amazing_spiderman_123","credits":["John Romita Sr.","Gil Kane","Tony Mortellaro","Gerry Conway"],"i":1057},{"year":1973,"characters":["Chemistro","D.W. Griffith","J. Jonah Jameson","Luke Cage","Noah Burstein","Phil Fox","Spider-Man"],"name":"Hero For Hire #12","link":"hero_for_hire_12","credits":["Billy Graham","Steve Englehart","George Tuska"],"i":1058},{"year":1973,"characters":["Fred Duncan","Jakuna Singh","Mandrill","Nekra","Patrick McShane","Professor X","Shanna the She-Devil"],"name":"Shanna the She-Devil #5","link":"shanna_the_shedevil_5","credits":["Vincent Colletta","Ross Andru","Steve Gerber"],"i":1059},{"year":1973,"characters":["Adam Warlock","Aragorn","Asti the All-Seeing","Black Knight (Dane Whitman)","Black Knight Statue","Black Panther","Captain America","Chandu","Contessa Valentina Allegro De La Fontaine","Dormammu","Dr. Doom","Dr. Strange","Dracula","Dum Dum Dugan LMD","Ghost Rider (Johnny Blaze)","Gorgon","Hawkeye","Hulk","Human Torch","Iron Man","Ka-Zar","Karnak","Loki","Luke Cage","Man-Thing","Mantis","Medusa","Mr. Fantastic","Nick Fury","Scarlet Witch","Silver Surfer","Soul Gem","Spider-Man","Sub-Mariner","Sunfire","Swordsman","Thanos","Thing","Thor","Triton","Uatu the Watcher","Valkyrie","Vision","Wong","Zabu"],"name":"Avengers #115-118 / Defenders #8-11","link":"avengers_115118_defenders_811","credits":["Bob Brown","Frank Giacoia","Frank W. Bolle","Sal Buscema","Steve Englehart","Frank McLaughlin","Mike Esposito"],"i":1060},{"year":1990,"characters":["Black Knight (Dane Whitman)","Valinor"],"name":"Marvel Fanfare #52-54 (Black Knight)","link":"marvel_fanfare_5253","credits":["Ernie Chan","Scott Hampton","Al Milgrom","Christopher Ivy","John Buscema","Jose Marzan","Tom DeFalco","Tod Smith","Steven Grant"],"i":1061},{"year":1973,"characters":["Buck Cowan","Lissa Russell","Moondark","Spider-Man","Werewolf By Night"],"name":"Marvel Team-Up #12","link":"marvel_team-up_12","credits":["Ross Andru","Don Perlin","Len Wein","Gerry Conway"],"i":1062},{"year":1973,"characters":["Black Widow","Carl Kaxton","Daredevil","Stilt-Man"],"name":"Daredevil #102","link":"daredevil_102","credits":["Frank Giacoia","Syd Shores","Chris Claremont"],"i":1063},{"year":1973,"characters":["Blade","Dracula","Edith Harker","Frank Drake","Lucas Brand","Quincy Harker","Rachel Van Helsing","Safron Caulder","Saint (dog)","Taj Nital"],"name":"Tomb of Dracula #11-15","link":"tomb_of_dracula_1115","credits":["Jack Abel","Tom Palmer","Gene Colan","Marv Wolfman"],"i":1064},{"year":1973,"characters":["Dr. Skarab","Janice Carr","Living Mummy","Ron McAllister"],"name":"Supernatural Thrillers #5","link":"supernatural_thrillers_5","credits":["Frank Chiaramonte","Rich Buckler","Steve Gerber"],"i":1065},{"year":1957,"characters":["Magnetor"],"name":"Monsters on the Prowl #24","link":"monsters_on_the_prowl_24","credits":["Bill Everett","<b>Title:","\" Shangri-La\"","Larry Lieber","<em>Journey Into Unknown Worlds #55<","<b>Cover Date:","Dick Ayers","<b>Credits:","Stan Lee","Steve Ditko","Jack Kirby","em>","\"They Met on Mars!\"","Mar 57","<em>Mars<"],"i":1066},{"year":1973,"characters":["Black Widow","Daredevil","Ivan Petrovitch","Ramrod (Daredevil villain)","Spider-Man"],"name":"Daredevil #103","link":"daredevil_103","credits":["Don Heck","Sal Trapani","Steve Gerber"],"i":1067},{"year":1973,"characters":["Andrew Jackson Kale","Franklin Armstrong (F.A.) Schist","Jennifer Kale","Joshua Kale","Man-Thing","Margaret Thompson","Warren Thompson"],"name":"Fear #16","link":"fear_16","credits":["Val Mayerik","Sal Trapani","Steve Gerber"],"i":1068},{"year":1974,"characters":["Black Panther","Captain America","Collector","Iron Man","Jarvis","Loki","Mantis","Swordsman","Thor","Tom Fagan","Vision"],"name":"Avengers #119","link":"avengers_119","credits":["Steve Englehart","Don Heck","Bob Brown"],"i":1069},{"year":1973,"characters":["Captain America","Dum Dum Dugan LMD","Grey Gargoyle","Nick Fury","Spider-Man"],"name":"Marvel Team-Up #13","link":"marvel_team-up_13","credits":["Frank Giacoia","Gil Kane","Len Wein"],"i":1070},{"year":1973,"characters":["Baron Zemo (Helmut)","Captain America","Falcon","Redwing"],"name":"Captain America #168","link":"captain_america_168","credits":["Roy Thomas","Tony Isabella","Sal Buscema","John Tartaglione","George Roussos"],"i":1071},{"year":1973,"characters":["Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kristine Saunders","Man-Wolf (John Jameson)","Mary Jane Watson","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #124-125","link":"amazing_spiderman_124125","credits":["John Romita Sr.- Inker","Tony Mortellaro","Ross Andru","Gil Kane","Gerry Conway"],"i":1072},{"year":1973,"characters":["Dr. Dorcas","Piranha","Spider-Man","Sub-Mariner","Tiger Shark"],"name":"Marvel Team-Up #14","link":"marvel_team-up_14","credits":["Wayne Howard","Gil Kane","Len Wein"],"i":1073},{"year":1973,"characters":["Hulk","Human Torch","Kurrgo","Leader","Mr. Fantastic","Thing"],"name":"Marvel Feature #11","link":"marvel_feature_11","credits":["Joe Sinnott","Len Wein","Jim Starlin"],"i":1074},{"year":1974,"characters":["Black Panther","Blood Brothers","Captain America","Captain Mar-vell","Controller","Death","Drax the Destroyer","Eon","Iron Man","ISAAC","Jarvis","Kronos","Lou-Ann Savannah","Mentor","Rick Jones","Scarlet Witch","Space Parasite","Starfox","Super-Skrull","Thanos","Thing","Una","Vision"],"name":"Iron Man #55, Captain Marvel #25-30, Marvel Feature #12","link":"captain_marvel_2534_iron_man_5","credits":["Al Milgrom","Pablo Marcos","Joe Sinnott","Dave Cockrum","Jim Starlin","Mike Friedrich","Dan Green","Chic Stone","Mike Esposito"],"i":1075},{"year":1973,"characters":["Aunt May","Carter","Flash Thompson","Harry Osborn","Human Torch","J. Jonah Jameson","Jackal","Jonas Harrow","Kangaroo","Lombardo","Man-Wolf (John Jameson)","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #126","link":"amazing_spiderman_126","credits":["Jim Mooney","Ross Andru","Gerry Conway"],"i":1076},{"year":1973,"characters":["Ghost Rider (Johnny Blaze)","Mary Jane Watson","Orb","Roxanne Simpson","Spider-Man"],"name":"Marvel Team-Up #15","link":"marvel_team-up_15","credits":["Ross Andru","Don Perlin","Len Wein"],"i":1077},{"year":1973,"characters":["Andrew Jackson Kale","Jennifer Kale","Joshua Kale","Man-Thing","Wundarr (Aquarian)"],"name":"Fear #17","link":"fear_17","credits":["Val Mayerik","Sal Trapani","Steve Gerber"],"i":1078},{"year":1974,"characters":["Flash Thompson","Harry Osborn","Human Torch","J. Jonah Jameson","Jackal","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #127-128","link":"amazing_spiderman_127128","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1079},{"year":1973,"characters":["Agatha Harkness","Alicia Masters","Annihilus","Bob Landers","Carol Landers","Ebony","Franklin Richards","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #140-141","link":"fantastic_four_140-141","credits":["Joe Sinnott","John Buscema","Gerry Conway"],"i":1080},{"year":1974,"characters":["Ariel  (Zephyrean)","Dr. Strange","Force","Henry Croft","Human Torch","Ibbar","Joseph Jennings","Kabal","Medusa","Mr. Fantastic","Namorita","Neptune","Orka","Spider-Man","Sub-Mariner","Tamara Rahn","Thing","Triton","Vashti","Wyatt Wingfoot","Zargus"],"name":"Sub-Mariner #64-69","link":"sub-mariner_66-68","credits":["Don Perlin","Don Heck","Jim Mooney","Frank W. Bolle","George Tuska","Vincent Colletta","Steve Gerber"],"i":1081},{"year":1974,"characters":["Basilisk","Captain Mar-vell","Medusa","Mole Man","Mr. Fantastic","Rick Jones","Spider-Man"],"name":"Marvel Team-Up #16-17","link":"marvel_team-up_16-17","credits":["Frank Giacoia","Jim Mooney","Sal Trapani","Len Wein","Gil Kane","Mike Esposito"],"i":1082},{"year":1974,"characters":["Angar the Screamer","Black Widow","Captain Mar-vell","Daredevil","Dark Messiah","Ivan Petrovitch","Jason Sloan","Kerwin Broderick","Kraven the Hunter","Lucretia Jones","Moondragon","Paul Carson","Ramrod (Daredevil villain)","Rick Jones","Robert 'Ironguts' O'Hara","Terrex"],"name":"Daredevil #104-107","link":"daredevil_105107","credits":["Don Heck","Don Perlin","Bob Brown","Sal Trapani","Jim Starlin","Sal Buscema","Steve Gerber"],"i":1083},{"year":1973,"characters":["Dr. Strange","Iron Man","Jarvis"],"name":"Iron Man #56","link":"iron_man_56","credits":["Mike Esposito","Jim Starlin","Steve Gerber"],"i":1084},{"year":1973,"characters":["Iron Man","Mandarin","Marianne Rodgers","Pepper Potts","Unicorn"],"name":"Iron Man #57-58","link":"iron_man_57-58","credits":["Frank Giacoia","Mike Espositio","Mike Friedrich","George Tuska","Steve Gerber"],"i":1085},{"year":1973,"characters":["Firebrand","Happy Hogan","Iron Man","Pepper Potts","Roxanne Gilbert"],"name":"Iron Man #59","link":"iron_man_59","credits":["Mike Friedrich","George Tuska","Mike Esposito"],"i":1086},{"year":1973,"characters":["Betty Ross","Bi-Beast","Colonel Jack Armbruster","General 'Thunderbolt' Ross","Hulk","Jim Wilson","MODOK"],"name":"Hulk #167-170","link":"hulk_167","credits":["Herb Trimpe","Steve Englehart","Chris Claremont","Jack Abel"],"i":1087},{"year":1973,"characters":["Happy Hogan","Iron Man","Masked Marauder","Pepper Potts","Roxanne Gilbert"],"name":"Iron Man #60-61","link":"iron_man_60-61","credits":["Mike Friedrich","George Tuska","Mike Esposito"],"i":1088},{"year":1973,"characters":["Happy Hogan","Iron Man","Vicki Snow","Whiplash (Blacklash)"],"name":"Iron Man #62","link":"iron_man_62","credits":["Fran Giacoia","P. Craig Russell","Mike Friedrich","John Romita Sr.","Mike Esposito"],"i":1089},{"year":1974,"characters":["Abomination","Betty Ross","Colonel Jack Armbruster","Cyclops","General 'Thunderbolt' Ross","Hulk","Jean Grey","Jim Wilson","Juggernaut","Peter Corbeau","Professor X","Rhino"],"name":"Hulk #171-172","link":"hulk_172","credits":["Herb Trimpe","Tony Isabella","Steve Englehart","Jack Abel","Gerry Conway"],"i":1090},{"year":1973,"characters":["Eddie March","Happy Hogan","Iron Man","Krimonn the Power Prism","Pepper Potts","Roxanne Gilbert","Sinister Doctor Spectrum"],"name":"Iron Man #63","link":"iron_man_63","credits":["Mike Friedrich","George Tuska","Mike Esposito"],"i":1091},{"year":1974,"characters":["Eddie March","Happy Hogan","Iron Man","Jarvis","Krimonn the Power Prism","Luke Cage","Marty March","Pepper Potts","Roxanne Gilbert","Sinister Doctor Spectrum","Thor"],"name":"Iron Man #64-67","link":"iron_man_64-67","credits":["Mike Friedrich","George Tuska","Mike Esposito"],"i":1092},{"year":1974,"characters":["Angel","Banshee","Beast","Black Panther","Blob","Captain America","Contessa Valentina Allegro De La Fontaine","Cyclops","Dum Dum Dugan LMD","Falcon","Gabriel Jones","Havok","Iceman","Jean Grey","Leila Taylor","Linda Donaldson","Mastermind","Mesmero","Moonstone (Lloyd Bloch)","Nick Fury","Peggy Carter","Polaris","Professor X","Quentin Harderman","Redwing","Secret Empire Agent Number One","Sharon Carter","Stone-Face","Tanzika","Tumbler","Unus","Viper (Jordon Dixon)","Vision"],"name":"Captain America #169-175","link":"captain_america_169176","credits":["Sal Buscema","Mike Friedrich","Steve Englehart","Vincent Colletta","Frank McLaughlin"],"i":1093},{"year":1974,"characters":["Aquarius","Aries II","Black Panther","Cancer","Capricorn","Captain America","Damian Link","Gemini","Iron Man","Jarvis","Leo","Libra","Mantis","Pisces","Sagittarius","Scarlet Witch","Scorpio II","Star-Stalker","Swordsman","Taurus","Thor","Virgo","Vision"],"name":"Avengers #120-124","link":"avengers_120-124","credits":["Don Heck","John Buscema","Bob Brown","Dave Cockrum","Steve Englehart","Mike Esposito"],"i":1094},{"year":1974,"characters":["Black Lama","Eddie March","Happy Hogan","Iron Man","Mandarin","Marty March","Pepper Potts","Roxanne Gilbert","Sunfire","Ultimo","Unicorn","Yellow Claw"],"name":"Iron Man #68-71","link":"iron_man_68-71","credits":["Mike Friedrich","George Tuska","Mike Esposito"],"i":1095},{"year":1974,"characters":["Black Panther","Captain America","Iron Man","Libra","Lou-Ann Savannah","Mantis","Scarlet Witch","Swordsman","Thanos","Thor","Vision"],"name":"Avengers #125","link":"avengers_125","credits":["Dave Cockrum","Steve Englehart","John Buscema"],"i":1096},{"year":1974,"characters":["Black Panther","Captain America","Captain Mar-vell","Death","Drax the Destroyer","Iron Man","ISAAC","Jarvis","Kronos","Lou-Ann Savannah","Mantis","Mentor","Moondragon","Mordecai P. Boggs","Rick Jones","Scarlet Witch","Space Parasite","Starfox","Super-Skrull","Swordsman","Thanos","Thor","Vision"],"name":"Captain Marvel #31-33","link":"captain_marvel_3134","credits":["Al Milgrom","Jim Starlin","Mike Friedrich","Steve Englehart","Klaus Janson","Dan Green"],"i":1097},{"year":1974,"characters":["Man-Thing","Molecule Man","Sanford","Thing"],"name":"Marvel Two-In-One #1","link":"marvel_two-in-one_1","credits":["Joe Sinnott","Gil Kane","Steve Gerber"],"i":1098},{"year":1974,"characters":["Black Panther","Captain America","Iron Man","Jarvis","Klaw","Mantis","Scarlet Witch","Solarr","Swordsman","Thor","Vision"],"name":"Avengers #126","link":"avengers_126","credits":["Dave Cockrum","Steve Englehart","Bob Brown"],"i":1099},{"year":1974,"characters":["Captain America","Iron Man","Jarvis","Mantis","Nuklo","Scarlet Witch","Thor","Vision","Whizzer"],"name":"Giant-Size Avengers #1","link":"giant-size_avengers_1","credits":["Roy Thomas","Rich Buckler","Dan Adkins"],"i":1100},{"year":1994,"characters":["Barney Bushkin","Bennet Schwed","Beth Sheldon","Black Widow","Daredevil","Doctor Octopus","Doris Sheldon","Foggy Nelson","Ghost Rider (Danny Ketch)","Green Goblin (Norman Osborn)","Gwen Stacy","J. Jonah Jameson","Jenny Sheldon","Joe 'Robbie' Robertson","Luke Cage","Marcia Hardesty","Phil Sheldon","Spider-Man"],"name":"Marvels #4","link":"marvels_4","credits":["Alex Ross","Kurt Busiek","Tom DeFalco","Spencer Lamm","Marc McLaurin"],"i":1101},{"year":1973,"characters":["Jennifer Kale","Joshua Kale","Man-Thing"],"name":"Fear #18","link":"fear_18","credits":["Val Mayerik","Sal Trapani","Steve Gerber"],"i":1102},{"year":1974,"characters":["Andrew Jackson Kale","Black Widow","Dakimh The Enchanter","Daredevil","Howard The Duck","Jennifer Kale","Joshua Kale","Korrek","Man-Thing","Thog"],"name":"Fear #19 / Man-Thing #1","link":"fear_19_manthing_1","credits":["Val Mayerik","Sal Trapani","Steve Gerber"],"i":1103},{"year":1973,"characters":["Bambu","Brother Voodoo","Damballah"],"name":"Strange Tales #169-170","link":"strange_tales_169-170_tales_of","credits":["Gene Colan","Len Wein","Dan Adkins"],"i":1104},{"year":1973,"characters":["Claire Temple","Lionfang","Luke Cage","Noah Burstein","Phil Fox"],"name":"Hero For Hire #13","link":"hero_for_hire_13","credits":["Billy Graham","Steve Englehart"],"i":1105},{"year":1973,"characters":["Damian Link","Gemini","Ka-Zar","Mockingbird","Nick Fury","Parnival Plunder","Victorius","Wilma Calvin","Zabu"],"name":"Astonishing Tales #19-20","link":"astonishing_tales_19-20","credits":["Frank Giacoia","Dan Adkins","Jim Starlin","Mike Friedrich","Jack Abel","Werner Roth","Marie Severin"],"i":1106},{"year":1973,"characters":["Buck Cowan","Lissa Russell","Lou Hackett","Phillip Russell","Tatterdemalion","Werewolf By Night"],"name":"Werewolf By Night #9-10","link":"werewolf_by_night_9-10","credits":["Tom Sutton","Len Wein","Gerry Conway"],"i":1107},{"year":1992,"characters":["Mike 'Ice' Phillips","Punisher"],"name":"The 'Nam #68","link":"the_nam_68","credits":["Chuck Dixon","Kevin Kobasic","James Palmiotti"],"i":1108},{"year":1991,"characters":["Punisher"],"name":"The 'Nam #52-53","link":"the_nam_5253","credits":["Roger Salick","James Palmiotti","Mike Harris"],"i":1109},{"year":1973,"characters":["Big Ben Donovan","Billy Bob Rackham","Claire Temple","Comanche","Flea","Luke Cage","Mimi Jenks","Noah Burstein","Phil Fox","Shades","Stiletto"],"name":"Hero For Hire #14-16","link":"hero_for_hire_14-16","credits":["Billy Graham","Steve Englehart","Frank McLaughlin","Tony Isabella"],"i":1110},{"year":1973,"characters":["Buck Cowan","Clary Winter","Hangman","Lissa Russell","Phillip Russell","Raymond Coker","Sam (WWBN supporting cast)","Tina Sands","Werewolf By Night"],"name":"Werewolf By Night #11-12","link":"werewolf_by_night_11-12","credits":["Tom Sutton","Gil Kane","Don Perlin","Marv Wolfman"],"i":1111},{"year":1962,"characters":["Ruler of Earth"],"name":"Where Monsters Dwell #25","link":"where_monsters_dwell_25","credits":["<b>Title:","\"When the Earth vanished!\"","Larry Lieber","<em>Tales of Suspense #13<","\"The Man Who Fell!\"","Dick Ayers","<b>Credits:","Stan Lee","Steve Ditko","Jack Kirby","em>","<em>Strange Tales #85<","Paul Reinman","Russ Heath","\"They called her a witch\"","<em>Mystic #10<"],"i":1112},{"year":1973,"characters":["Bambu","Brother Voodoo"],"name":"Strange Tales #171","link":"strange_tales_171","credits":["Frank Giacoia","Gene Colan","Len Wein"],"i":1113},{"year":1973,"characters":["Fu Manchu","Shang-Chi","Shang-Chi's mother","Sir Denis Nayland Smith","Tak"],"name":"Special Marvel Edition #15","link":"special_marvel_edition_15","credits":["Steve Englehart","Al Milgrom","Jim Starlin"],"i":1114},{"year":2001,"characters":["Punisher"],"name":"Punisher: Bloodlines","link":"punisher_bloodlines","credits":["Jeffrey Albrecht","Dave Cockrum","Mark Powers","Terry Kavanagh","Gerry Conway"],"i":1115},{"year":1973,"characters":["Dracula"],"name":"Dracula Lives #1","link":"dracula_lives_1","credits":["Tom Palmer","Gene Colan","Gerry Conway"],"i":1116},{"year":1974,"characters":["Brad Wrangle","Clary Winter","Lissa Russell","Phillip Russell","Raymond Coker","Sam (WWBN supporting cast)","Taboo II","Topaz","Werewolf By Night"],"name":"Werewolf By Night #13-14","link":"werewolf_by_night_13-14","credits":["Frank Chiaramonte","Mike Ploog","Marv Wolfman"],"i":1117},{"year":1973,"characters":["Dracula","Marie Laveau","Zombie (Simon Garth)"],"name":"Dracula Lives #2 (Marie Laveau)","link":"dracula_lives_2_marie_laveau","credits":["Dick Giordano","Roy Thomas","Gene Colan"],"i":1118},{"year":1953,"characters":["Brian Stockwood","Donna Garth","Layla (Voodooienne)","Samuel Jagger","Zombie (Simon Garth)"],"name":"Tales of the Zombie #1, Menace #5 (Simon Garth)","link":"tales_of_the_zombie_1menace_5_","credits":["Bill Everett","John Buscema","Roy Thomas","Tom Palmer","Stan Lee","Syd Shores","Steve Gerber"],"i":1119},{"year":2009,"characters":["Doris Sheldon","Phil Sheldon"],"name":"Marvels: Eye of the Camera #1","link":"marvels_eye_of_the_camera_1","credits":["Kurt Busiek","Jay Anacleto","Tom Breevort","Jeanine Schaefer","Joe Quesada"],"i":1120},{"year":1974,"characters":["Bertha","D.W. Griffith","Iron Man","Luke Cage","Noah Burstein"],"name":"Power Man #17","link":"power_man_17","credits":["Billy Graham","George Tuska","Len Wein"],"i":1121},{"year":1977,"characters":["Half-Face","Midnight (M'Nai)"],"name":"Iron Man annual #4 (Midnight)","link":"iron_man_annual_4_midnight","credits":["Roger Stern","Don Newton","Jeff Aclin"],"i":1122},{"year":1974,"characters":["Aragorn","Dr. Strange","Hulk","Nighthawk","Valkyrie","Wong","Xemnu the Titan"],"name":"Defenders #12","link":"defenders_12","credits":["Jack Abel","Sal Buscema","Len Wein"],"i":1123},{"year":1974,"characters":["Abe Brown","Bob Diamond","Fu Manchu","Lin Sun"],"name":"Deadly Hands of Kung Fu #1","link":"deadly_hands_of_kung_fu_1","credits":["Al Milgrom","Jim Starlin","Steve Englehart","Dick Giordano","Gerry Conway"],"i":1124},{"year":1974,"characters":["Betty Brant","Harry Osborn","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Mary Jane Watson","Punisher","Spider-Man"],"name":"Amazing Spider-Man #129","link":"amazing_spiderman_129","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1125},{"year":1974,"characters":["Franklin Armstrong (F.A.) Schist","Man-Thing","Professor Slaughter","Richard Rory","Ruth Hart"],"name":"Man-Thing #2","link":"man-thing_2","credits":["Val Mayerik","Sal Trapani","Steve Gerber"],"i":1126},{"year":1974,"characters":["Fu Manchu","Midnight (M'Nai)","Shang-Chi"],"name":"Special Marvel Edition #16","link":"special_marvel_edition_16","credits":["Steve Englehart","Al Milgrom","Jim Starlin"],"i":1127},{"year":1974,"characters":["Blastaar","FAUST","Hulk","Human Torch","Wyatt Wingfoot"],"name":"Marvel Team-Up #18","link":"marvel_team-up_18","credits":["Frank Giacoia","Gil Kane","Len Wein","Mike Esposito"],"i":1128},{"year":1974,"characters":["Alicia Masters","Belle Thorne","Bob Landers","Carol Landers","Darkoth","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Sam Thorne","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #142-144","link":"fantastic_four_143","credits":["Joe Sinnott","Rich Buckler","Frank Giacoia","Gerry Conway"],"i":1129},{"year":1974,"characters":["Betty Dean","Henry Croft","Namorita","Piranha","Sub-Mariner","Tamara Rahn"],"name":"Sub-Mariner #70-71","link":"sub-mariner_70-71","credits":["Vincent Colletta","George Tuska","Marv Wolfman"],"i":1130},{"year":1974,"characters":["Satana"],"name":"Vampire Tales #3 (Satana)","link":"vampire_tales_3_satana","credits":["Esteban Maroto","Gerry Conway"],"i":1131},{"year":1973,"characters":["Claire Temple","D.W. Griffith","Flea","Luke Cage","Noah Burstein","Steeplejack","Steeplejack II","Wichita Kid"],"name":"Power Man #18","link":"power_man_18","credits":["Vincent Colletta","George Tuska","Len Wein"],"i":1132},{"year":1974,"characters":["Clea","Dr. Strange","Hulk","Sub-Mariner","Valkyrie"],"name":"Giant-Size Defenders #1","link":"giant-size_defenders_1","credits":["Al Milgrom","Tony Isabella","Jim Starlin"],"i":1133},{"year":1975,"characters":["Dr. Doom","Sub-Mariner"],"name":"Giant-Size Super-Villain Team-Up #1","link":"giantsize_supervillain_teamup","credits":["Joe Sinnott","Roy Thomas","John Buscema"],"i":1134},{"year":1973,"characters":["Dracula"],"name":"Dracula Lives #3","link":"dracula_lives_3","credits":["Alfonso Font","Gerry Conway"],"i":1135},{"year":1974,"characters":["Dr. Strange","Hulk","Krimonn the Power Prism","Nebulon","Nighthawk","Sinister Doctor Spectrum II","Sinister Hyperion","Speed Demon","Sub-Mariner","Valkyrie"],"name":"Defenders #13-14","link":"defenders_14","credits":["Klaus Janson","Sal Buscema","Len Wein","Dan Green"],"i":1136},{"year":1974,"characters":["Foolkiller (Ross Everbest)","Franklin Armstrong (F.A.) Schist","Man-Thing","Professor Slaughter","Richard Rory","Ruth Hart"],"name":"Man-Thing #3-4","link":"manthing_34","credits":["Mike Ploog","Jack Abel","Frank Chiaramonte","Val Mayerik","Steve Gerber"],"i":1137},{"year":1974,"characters":["Aunt May","Betty Brant","Doctor Octopus","Hammerhead","Human Torch","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #130-131","link":"amazing_spiderman_130131","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1138},{"year":1974,"characters":["Anna Reynolds","Doctor Sun","Dracula","Inspector Chelm","Lucas Brand","Quincy Harker","Rachel Van Helsing","Ricky Reynolds","Werewolf By Night"],"name":"Tomb of Dracula #16-17","link":"tomb_of_dracula_1617","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1139},{"year":1974,"characters":["Blade","Clifton Graves","Doctor Sun","Dracula","Frank Drake","Lucas Brand","Quincy Harker","Rachel Van Helsing","Taj Nital","Topaz","Werewolf By Night"],"name":"Tomb of Dracula #18, Werewolf By Night #15, Tomb of Dracula #19-21","link":"tomb_of_dracula_18werewolf_by","credits":["Marv Wolfman","Mike Ploog","Tom Palmer","Gene Colan","Frank Chiaramonte"],"i":1140},{"year":1974,"characters":["Dracula","Gary Stone","Liza Pyne","Louis Belski"],"name":"Dracula Lives #4","link":"dracula_lives_4","credits":["Ernie Chua","Mike Ploog","Marv Wolfman"],"i":1141},{"year":1974,"characters":["Baron Thunder","Buck Cowan","Clary Winter","Gary Stone","Lissa Russell","Liza Pyne","Lou Hackett","Louis Belski","Ma Mayhem","Phillip Russell","Raymond Coker","Tina Sands","Topaz","Werewolf By Night"],"name":"Werewolf By Night #16-19","link":"werewolf_by_night_16-19","credits":["Don Perlin","Mike Ploog","Michael W. Royer","Mike Friedrich","Frank Chiaramonte","Vincent Colletta"],"i":1142},{"year":1974,"characters":["Dracula"],"name":"Dracula Lives #5","link":"dracula_lives_5","credits":["Tony Isabella","Pablo Marcos","Gene Colan","Marv Wolfman"],"i":1143},{"year":1974,"characters":["Amon (Demon Steed)","Hecate (Demon Steed)","Hellstorm","Katherine Reynolds","Set (Demon Steed)"],"name":"Marvel Spotlight #14","link":"marvel_spotlight_14","credits":["Sal Trapani","Jim Mooney","Steve Gerber"],"i":1144},{"year":1974,"characters":["Bambu","Black Talon","Brother Voodoo","Loralee Tate","Samuel Tate"],"name":"Strange Tales #172-173","link":"strange_tales_173","credits":["Dick Giordano","Gene Colan","Len Wein"],"i":1145},{"year":1974,"characters":["Black Talon","Brother Voodoo","Loralee Tate","Samuel Tate"],"name":"Tales of the Zombie #6 (Brother Voodoo)","link":"tales_of_the_zombie_6","credits":["Gene Colan","Doug Moench","Len Wein","Frank Chiaramonte"],"i":1146},{"year":1974,"characters":["Black Panther","J. Jonah Jameson","Jarvis","Joe 'Robbie' Robertson","Ka-Zar","Lizard","Mary Jane Watson","Spider-Man","Stegron","Zabu"],"name":"Marvel Team-Up #19-20","link":"marvel_teamup_20","credits":["Frank Giacoia","Sal Trapani","Sal Buscema","Len Wein","Gil Kane","Mike Esposito"],"i":1147},{"year":1974,"characters":["Dracula"],"name":"Dracula Lives #6","link":"dracula_lives_6","credits":["Ernie Chua","Gene Colan","Steve Gerber"],"i":1148},{"year":1974,"characters":["Dracula"],"name":"Dracula Lives #7","link":"dracula_lives_7","credits":["Gery Conway","Vincente Alcazar"],"i":1149},{"year":1974,"characters":["Dracula"],"name":"Dracula Lives #8-9","link":"dracula_lives_8-9","credits":["Doug Moench","Alfredo P. Alcala","Frank Springer","Frank Robbins","Alfredo P. Alcala- Penciler","Tony DeZuniga","Gerry Conway"],"i":1150},{"year":1975,"characters":["Dracula"],"name":"Dracula Lives #13","link":"dracula_lives_13","credits":["Virgilio Redondo","George Tuska","Rich Margopoulos"],"i":1151},{"year":1974,"characters":["Bob O'Bryan","Diane Cummings","Doctor Vault","Dorian Delanzy","Felix Simon","Fin Fang Foom","Granitor","Grant Marshall","It the Living Colossus"],"name":"Astonishing Tales #21-24","link":"astonishing_tales_2324","credits":["Larry Lieber","Vincent Colletta","Tony Isabella","Dick Ayers"],"i":1152},{"year":1974,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith","Tak"],"name":"Master of Kung Fu #17","link":"master_of_kung_fu_17","credits":["Steve Englehart","Al Milgrom","Jim Starlin"],"i":1153},{"year":1974,"characters":["Baron Mordo","Clea","Dr. Strange","Wong"],"name":"Marvel Premiere #12-14","link":"marvel_premiere_12-14","credits":["Crusty Bunkers","Frank Brunner","Mike Friedrich","Steve Englehart","Dick Giordano"],"i":1154},{"year":1974,"characters":["Black Panther","Kazibe","Killmonger","Malice (Killmonger minion)","Monica Lynne","Preyy","Taku","Tanzika","Tayete","Venomm","W'Kabi"],"name":"Jungle Action #6-8","link":"jungle_action_68","credits":["Klaus Janson","Rich Buckler","Don McGregor"],"i":1155},{"year":1974,"characters":["Dr. Strange","Melinda Morrison","Spider-Man","Xandu"],"name":"Marvel Team-Up #21","link":"marvel_team-up_21","credits":["Frank Giacoia","Sal Buscema","Len Wein","Mike Esposito"],"i":1156},{"year":1974,"characters":["Baron Macabre","Black Panther","Kantu","Kazibe","Monica Lynne","Tanzika","Tayete"],"name":"Jungle Action #9","link":"jungle_action_9","credits":["Klaus Janson","Gil Kane","Don McGregor"],"i":1157},{"year":1974,"characters":["Betty Ross","Cobalt Man","Colonel Jack Armbruster","General 'Thunderbolt' Ross","Hulk","Ted Roberts"],"name":"Hulk #173-174","link":"hulk_173-174","credits":["Herb Trimpe","Roy Thomas","Jack Abel","Gerry Conway"],"i":1158},{"year":1974,"characters":["August Personage In Jade","Iron Fist","Lei Kung the Thunderer"],"name":"Marvel Premiere #15-16","link":"marvel_premiere_1516","credits":["Roy Thomas","Len Wein","Larry Hama","Dick Giordano","Gil Kane"],"i":1159},{"year":1974,"characters":["Human Torch","Medusa","Mr. Fantastic","Thing"],"name":"Fantastic Four #145-146","link":"fantastic_four_145-146","credits":["Joe Sinnott","Ross Andru","Gerry Conway"],"i":1160},{"year":1974,"characters":["Betty Ross","Black Bolt","Crystal","Gorgon","Hulk","Karnak","Lockjaw","Quicksilver","Triton"],"name":"Hulk #175","link":"hulk_175","credits":["Herb Trimpe","Roy Thomas","Jack Abel"],"i":1161},{"year":1974,"characters":["Betty Brant","Joe 'Robbie' Robertson","Liz Allan","Mary Jane Watson","Molten Man","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #132-133","link":"amazing_spiderman_132133","credits":["Frank Giacoia","Paul Reinman","John Romita Sr.","Tony Mortellaro","Ross Andru","David Hunt","Gerry Conway"],"i":1162},{"year":1974,"characters":["Bob Landers","Carol Landers","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Fantastic Four #147","link":"fantastic_four_147","credits":["Joe Sinnott","Rich Buckler","Gerry Conway"],"i":1163},{"year":1974,"characters":["Man-Thing","Richard Rory","Ruth Hart"],"name":"Man-Thing #5-6","link":"man-thing_5-6","credits":["Frank Chiaramonte","Mike Ploog","Steve Gerber"],"i":1164},{"year":1974,"characters":["Flash Thompson","J. Jonah Jameson","Joe 'Robbie' Robertson","Kristine Saunders","Man-Wolf (John Jameson)","Mary Jane Watson","Morbius","Spider-Man"],"name":"Giant-Size Super-Heroes #1","link":"giant-size_super-heroes_1","credits":["Mike Esposito","Gil Kane","Gerry Conway"],"i":1165},{"year":1974,"characters":["Byron Hyatt","Hellstorm","Katherine Reynolds","Satan"],"name":"Marvel Spotlight #15","link":"marvel_spotlight_15","credits":["Jim Mooney","Steve Gerber"],"i":1166},{"year":1973,"characters":["Morbius"],"name":"Vampire Tales #1","link":"vampire_tales_1","credits":["Pablo Marcos","Steve Gerber"],"i":1167},{"year":1974,"characters":["Adam Warlock","Betty Ross","General 'Thunderbolt' Ross","Gregory Kronski","Hulk","Man-Beast","Recorder","Soul Gem"],"name":"Hulk #176-178","link":"hulk_176178","credits":["Herb Trimpe","Roy Thomas","Tony Isabella","Jack Abel","Gerry Conway"],"i":1168},{"year":1974,"characters":["Hawkeye","Quasimodo","Spider-Man"],"name":"Marvel Team-Up #22","link":"marvel_team-up_22","credits":["Frank Giacoia","Sal Buscema","Len Wein"],"i":1169},{"year":1974,"characters":["Betty Ross","Clay Brickford","Colonel Jack Armbruster","General 'Thunderbolt' Ross","Gregory Kronski","Hulk","Missing Link"],"name":"Hulk #179","link":"hulk_179","credits":["Herb Trimpe","Jack Abel","Len Wein"],"i":1170},{"year":1974,"characters":["Hulk","Human Torch","Medusa","Mr. Fantastic","Thing","Thundra","Walter Collins"],"name":"Giant-Size Super-Stars #1","link":"giant-size_super-stars_1","credits":["Joe Sinnott","Rich Buckler","Gerry Conway"],"i":1171},{"year":1974,"characters":["Claire Temple","Cottonmouth (Crimelord)","D.W. Griffith","Luke Cage","Morgan","Noah Burstein"],"name":"Power Man #19-20","link":"power_man_1920","credits":["Vincent Colletta","George Tuska","Tony Isabella","Len Wein"],"i":1172},{"year":1974,"characters":["Dr. Skarab","Hellfire (Elementals)","Hydron (Elemental)","Janice Carr","Living Monolith","Living Mummy","Magnum","Ron McAllister","Zephyr"],"name":"Supernatural Thrillers #7-9","link":"supernatural_thrillers_7-9","credits":["Val Mayerik","Dan Adkins","Tony Isabella","Steve Gerber"],"i":1173},{"year":1974,"characters":["Giganto (Whale Man)","Human Torch","Invisible Woman","Medusa","Mr. Fantastic","Paste Pot Pete","Sandman","Sub-Mariner","Thing","Thundra","Triton","Wizard"],"name":"Fantastic Four #148-149","link":"fantastic_four_148149","credits":["Joe Sinnott","Rich Buckler","Gerry Conway"],"i":1174},{"year":1974,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #18","link":"master_of_kung_fu_18","credits":["Steve Englehart","Paul Gulacy","Al Milgrom"],"i":1175},{"year":1974,"characters":["Balkatar","Daemond","King Gerark","Lord I","Martine Bancroft","Morbius","Tara (Caretakers)"],"name":"Fear #20-23","link":"fear_20-23","credits":["P. Craig Russell","Luis Dominguez","Mike Friedrich","Jack Abel","Rich Buckler","Vincent Colletta","Gil Kane","Paul Gulacy","Steve Gerber"],"i":1176},{"year":1974,"characters":["Franklin Armstrong (F.A.) Schist","Man-Thing","Professor Slaughter","Richard Rory","Ruth Hart"],"name":"Man-Thing #7-8","link":"man-thing_7-8","credits":["Frank Chiaramonte","Mike Ploog","Steve Gerber"],"i":1177},{"year":1974,"characters":["Black Jack Tarr","Fu Manchu","Man-Thing","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #19","link":"master_of_kung_fu_19","credits":["Steve Englehart","Paul Gulacy","Al Milgrom"],"i":1178},{"year":1974,"characters":["Aunt May","Aunt Watson","Dracula","Equinox","Human Torch","Spider-Man"],"name":"Giant-Size Spider-Man #1","link":"giantsize_spiderman_1","credits":["Ross Andru","Don Heck","Len Wein"],"i":1179},{"year":1974,"characters":["Angel","Cyclops","Equinox","Human Torch","Iceman","Jean Grey","Spider-Man"],"name":"Marvel Team-Up #23","link":"marvel_team-up_23","credits":["Gil Kane","Len Wein","Mike Esposito"],"i":1180},{"year":1974,"characters":["Fu Manchu","Shang-Chi"],"name":"Master of Kung Fu #20-21","link":"master_of_kung_fu_20-21","credits":["Al Milgrom","Doug Moench","Ron Wilson","Paul Gulacy","Gerry Conway"],"i":1181},{"year":1974,"characters":["Baron Macabre","Black Panther","King Cadaver","Monica Lynne"],"name":"Jungle Action #10","link":"jungle_action_10","credits":["Billy Graham","Klaus Janson","Don McGregor"],"i":1182},{"year":1974,"characters":["Human Torch","Namorita","Sub-Mariner","Thing","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #2","link":"marvel_two-in-one_2","credits":["Joe Sinnott","Gil Kane","Steve Gerber"],"i":1183},{"year":1974,"characters":["Ka-Zar","Maa-Gor","Shanna the She-Devil","Zabu"],"name":"Ka-Zar #1-2","link":"kazar_12","credits":["Don Heck","Michael W. Royer","Mike Friedrich","Paul Reinman","Jack Abel"],"i":1184},{"year":1974,"characters":["Beetle","Biri","Black Widow","Candace Nelson","Daredevil","Debbie Harris","Foggy Nelson","Ina","Ivan Petrovitch","Lucretia Jones","Moondragon","Nekra","Robert 'Ironguts' O'Hara","Shanna the She-Devil"],"name":"Daredevil #108-109","link":"daredevil_108109_1","credits":["Bob Brown","Don Heck","Paul Gulacy","Steve Gerber"],"i":1185},{"year":1974,"characters":["Black Widow","Candace Nelson","Daredevil","Mandrill","Mr. Fantastic","Nekra","Robert 'Ironguts' O'Hara","Shanna the She-Devil","Thing","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #3","link":"marvel_two-in-one_3","credits":["Joe Sinnott","Sal Buscema","Steve Gerber"],"i":1186},{"year":1974,"characters":["Biri","Black Widow","Candace Nelson","Daredevil","Foggy Nelson","Ina","Mandrill","Nekra","Robert 'Ironguts' O'Hara","Shanna the She-Devil","Silver Samurai","Thing"],"name":"Daredevil #110-111","link":"daredevil_110","credits":["Bob Brown","Jim Mooney","Gene Colan","Frank Chiaramonte","Steve Gerber"],"i":1187},{"year":1974,"characters":["Black Widow","Daredevil","Foggy Nelson","Mandrill","Nekra","Robert 'Ironguts' O'Hara","Shanna the She-Devil"],"name":"Daredevil #112","link":"daredevil_112","credits":["Frank Giacoia","Gene Colan","Steve Gerber"],"i":1188},{"year":1974,"characters":["Captain America","Medusa","Mr. Fantastic","Namorita","Sharon Carter","Thing","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #4-5","link":"marvel_two-in-one_4-5","credits":["Frank Giacoia","Mike Esposito","Sal Buscema","Steve Gerber"],"i":1189},{"year":1974,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith","Spider-Man","Tak"],"name":"Giant-Size Spider-Man #2","link":"giant-size_spider-man_2","credits":["Ross Andru","Al Milgrom","Len Wein"],"i":1190},{"year":1974,"characters":["Captain America","Falcon","Iron Man","Jarvis","Peggy Carter","Sharon Carter","Thor","Vision"],"name":"Captain America #176","link":"captain_america_176","credits":["Vincent Colletta","Steve Englehart","Sal Buscema"],"i":1191},{"year":1974,"characters":["Brother Voodoo","Spider-Man"],"name":"Marvel Team-Up #24","link":"marvel_teamup_24","credits":["Sal Trapani","Jim Mooney","Len Wein"],"i":1192},{"year":1974,"characters":["El Tigre","Ka-Zar","Maa-Gor","Mockingbird","Nick Fury","Tongah","Wilma Calvin","Zabu"],"name":"Ka-Zar #3-5","link":"kazar_35","credits":["Mike Friedrich","Don Heck","Michael W. Royer","Mike Esposito"],"i":1193},{"year":1974,"characters":["Ape Man","Bird Man","Cat Man","Daredevil","Foggy Nelson","Spider-Man"],"name":"Marvel Team-Up #25","link":"marvel_team-up_25","credits":["Frank Giacoia","Jim Mooney","Len Wein"],"i":1194},{"year":1974,"characters":["Joanne Tumolo","Tigra","Werewolf By Night"],"name":"Giant-Size Creatures #1","link":"giantsize_creatures_1","credits":["Vincent Colletta","Don Perlin","Tony Isabella"],"i":1195},{"year":1974,"characters":["Betty Brant","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mary Jane Watson","Punisher","Spider-Man","Tarantula"],"name":"Amazing Spider-Man #134-135","link":"amazing_spiderman_134135","credits":["Frank Giacoia","Ross Andru","Gerry Conway"],"i":1196},{"year":1974,"characters":["Byron Hyatt","Hellstorm","Katherine Reynolds"],"name":"Marvel Spotlight #16-17","link":"marvel_spotlight_16-17","credits":["Sal Trapani","Jim Mooney","Steve Gerber"],"i":1197},{"year":1974,"characters":["Catherine (Devil Witch)","Desadia","Gabriel the Devil Hunter"],"name":"Haunt of Horror #2 (Gabriel the Devil Hunter)","link":"haunt_of_horror_2_gabriel_the_","credits":["Billy Graham","Doug Moench"],"i":1198},{"year":1974,"characters":["Basilisk (Satana's Demon)","Satan","Satana"],"name":"Haunt of Horror #2,4 (Satana)","link":"haunt_of_horror_2_4_satana","credits":["Enrique Romero","Tony Isabella","Gerry Conway"],"i":1199},{"year":1973,"characters":["Anton Cartier","Ciceron","Donna Garth","Mr. Six","Samuel Jagger","Zombie (Simon Garth)"],"name":"Tales of the Zombie #2","link":"tales_of_the_zombie_2","credits":["Pablo Marcos","Steve Gerber"],"i":1200},{"year":1974,"characters":["J. Jonah Jameson","Man-Wolf (John Jameson)","Simon Stroud"],"name":"Creatures On The Loose #30","link":"creatures_on_the_loose_30","credits":["Vincent Colletta","Doug Moench","George Tuska"],"i":1201},{"year":1974,"characters":["Human Torch","Medusa","Mr. Fantastic","Tempus","Thing","Uatu the Watcher","Willie Lumpkin"],"name":"Giant-Size Fantastic Four #2","link":"giantsize_fantastic_four_2","credits":["John Buscema","Chic Stone","Gerry Conway"],"i":1202},{"year":1974,"characters":["Dracula","Frank Drake","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #22","link":"tomb_of_dracula_22","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1203},{"year":1974,"characters":["Blade","Dracula","Frank Drake","Hannibal King","Inspector Chelm","Jyota Nital","Lilith (Dracula's Daughter)","Quincy Harker","Rachel Van Helsing","Safron Caulder","Saint (dog)","Shiela Whittier","Taj Nital"],"name":"Giant-Size Chillers #1, Tomb of Dracula #23-25","link":"giantsize_chillers_1tomb_of_dr","credits":["Frank Chiaramonte","Tom Palmer","Gene Colan","Marv Wolfman"],"i":1204},{"year":1974,"characters":["Anvil","Betty Ross","Colonel Jack Armbruster","General 'Thunderbolt' Ross","Gregory Kronski","Hammer","Hulk","Marie Cartier","Wendigo","Wendigo II","Wolverine"],"name":"Hulk #180-182","link":"hulk_180181","credits":["Herb Trimpe","Jack Abel","Len Wein"],"i":1205},{"year":1974,"characters":["Anton Cartier","Bruce Mason","Ciceron","Donna Garth","Katanya","Phillip Bliss","Zombie (Simon Garth)"],"name":"Tales of the Zombie #3","link":"tales_of_the_zombie_3","credits":["Pablo Marcos","Steve Gerber"],"i":1206},{"year":1974,"characters":["Glob","Jude the Entropic Man (Yagzan)","Man-Thing","Paul Benton","Professor Marshall","Richard Rory"],"name":"Giant-Size Man-Thing #1","link":"giant-size_man-thing_1","credits":["Frank Chiaramonte","Mike Ploog","Steve Gerber"],"i":1207},{"year":1974,"characters":["Anton Cartier","Bruce Mason","Donna Garth","Gene Gretch","Jeanette (Savor-It)","Katanya","Lois Bliss","Mr. Six","Phillip Bliss","Steve Bergen","Zombie (Simon Garth)"],"name":"Tales of the Zombie #4","link":"tales_of_the_zombie_4","credits":["Pablo Marcos","Steve Gerber"],"i":1208},{"year":1974,"characters":["Baron Thunder","Buck Cowan","Clary Winter","Geraldo Kabal","Lissa Russell","Lou Hackett","Ma Mayhem","Raymond Coker","Werewolf By Night"],"name":"Werewolf By Night #20","link":"werewolf_by_night_20","credits":["Vincent Colletta","Don Perlin","Doug Moench"],"i":1209},{"year":1974,"characters":["Baron Macabre","Black Panther","Kazibe","Lord Karnaj","Malice (Killmonger minion)","Monica Lynne","Taku","Tanzika","Tayete","W'Kabi"],"name":"Jungle Action #11","link":"jungle_action_11","credits":["Billy Graham","Klaus Janson","Don McGregor"],"i":1210},{"year":1975,"characters":["Alexandra Knox","Colonel Jack Armbruster","Hulk","Mark Revel","Zzzax"],"name":"Hulk #183","link":"hulk_183","credits":["Herb Trimpe","Len Wein"],"i":1211},{"year":1974,"characters":["Gene Gretch","Jeanette (Savor-It)","Lois Bliss","Mr. Six","Phillip Bliss","Steve Bergen","Zombie (Simon Garth)"],"name":"Tales of the Zombie #5","link":"tales_of_the_zombie_5","credits":["Pablo Marcos","Steve Gerber"],"i":1212},{"year":1974,"characters":["Agatha Harkness","Black Bolt","Crystal","Franklin Richards","Gorgon","Human Torch","Invisible Woman","Iron Man","Jarvis","Karnak","Lockjaw","Mantis","Maximus","Medusa","Mr. Fantastic","Omega","Quicksilver","Scarlet Witch","Swordsman","Thing","Thor","Triton","Ultron","Vision"],"name":"Avengers #127","link":"avengers_127","credits":["Joe Staton","Steve Englehart","Sal Buscema"],"i":1213},{"year":1974,"characters":["Agatha Harkness","Alicia Masters","Black Bolt","Crystal","Franklin Richards","Gorgon","Human Torch","Invisible Woman","Iron Man","Karnak","Lockjaw","Mantis","Maximus","Medusa","Mr. Fantastic","Omega","Quicksilver","Scarlet Witch","Swordsman","Thing","Thor","Triton","Ultron","Vision","Whizzer"],"name":"Fantastic Four #150","link":"fantastic_four_150","credits":["Joe Sinnott","Rich Buckler","Gerry Conway"],"i":1214},{"year":1974,"characters":["Agamotto","Ancient One","Clea","Dr. Strange","Eternity","Silver Dagger","Wong"],"name":"Doctor Strange #1-2,4-5","link":"doctor_strange_1-3","credits":["Dick Giordano","Steve Englehart","Frank Brunner"],"i":1215},{"year":1974,"characters":["Layla (Voodooienne)","Zombie (Simon Garth)"],"name":"Tales of the Zombie #6 (Simon Garth)","link":"tales_of_the_zombie_6_simon_ga","credits":["Pablo Marcos","Steve Gerber"],"i":1216},{"year":2009,"characters":["Bennet Schwed","Beth Sheldon","Doris Sheldon","Hawkeye","J. Jonah Jameson","Jenny Sheldon","Joe 'Robbie' Robertson","Mary Jane Watson","Nick Katzenberg","Phil Sheldon","Spider-Man"],"name":"Marvels: Eye of the Camera #2","link":"marvels_eye_of_the_camera_2","credits":["Kurt Busiek","Jay Anacleto","Tom Breevort","Jeanine Schaefer","Joe Quesada"],"i":1217},{"year":1974,"characters":["Alpha the Ultimate Mutant","Blob","Dr. Strange","Hulk","J.C. Pennyworth","Lorelei (Savage Land Mutate)","Magneto","Mastermind","Nighthawk","Professor X","Unus","Valkyrie"],"name":"Defenders #15-16","link":"defenders_1516","credits":["Klaus Janson","Sal Buscema","Len Wein","Mike Esposito"],"i":1218},{"year":1974,"characters":["Ellen Brandt","Man-Thing"],"name":"Monsters Unleashed #5 (Man-Thing)","link":"monsters_unleashed_5_man-thing","credits":["Tony Isabella","Vicente Alcazar"],"i":1219},{"year":1974,"characters":["Layla (Voodooienne)","Zombie (Simon Garth)"],"name":"Tales of the Zombie #7","link":"tales_of_the_zombie_7","credits":["Alfredo P. Alcala","Doug Moench","Pablo Marcos","Steve Gerber"],"i":1220},{"year":1974,"characters":["Asmodeus (Sons of Satannish)","Dr. Strange","Hellstorm","Hulk","Nighthawk","Satannish","Valkyrie"],"name":"Giant-Size Defenders #2","link":"giant-size_defenders_2","credits":["Klaus Janson","Gil Kane","Len Wein"],"i":1221},{"year":1974,"characters":["Betty Brant","Harry Osborn","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #136","link":"amazing_spiderman_136","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1222},{"year":1974,"characters":["Buck Cowan","Geraldo Kabal","Lou Hackett","Raymond Coker","Werewolf By Night"],"name":"Werewolf By Night #21","link":"werewolf_by_night_21","credits":["Vincent Colletta","Don Perlin","Doug Moench"],"i":1223},{"year":1974,"characters":["Layla (Voodooienne)","Papa Doc","Samuel Jagger","Zombie (Simon Garth)"],"name":"Tales of the Zombie #8","link":"tales_of_the_zombie_8","credits":["Pablo Marcos","Steve Gerber"],"i":1224},{"year":1974,"characters":["Azir","Colleen Wing","Iron Fist","Joy Meachum","Lee Wing","Ninja","Triple-Iron","Ward Meachum"],"name":"Marvel Premiere #17-19","link":"marvel_premiere_1719","credits":["Larry Hama","Dick Giordano","Doug Moench"],"i":1225},{"year":1974,"characters":["Black Widow","Candace Nelson","Daredevil","Death-Stalker","Foggy Nelson","Gladiator","Ivan Petrovitch","Man-Thing","Richard Rory","Robert 'Ironguts' O'Hara","Shanna the She-Devil"],"name":"Daredevil #113-115","link":"daredevil_113","credits":["Bob Brown","Vincent Colletta","Steve Gerber"],"i":1226},{"year":1975,"characters":["Anton Cartier","Brian Stockwood","Bruce Mason","Donna Garth","Layla (Voodooienne)","Mr. Six","Papa Doc","Samuel Jagger","Zombie (Simon Garth)"],"name":"Tales of the Zombie #9","link":"tales_of_the_zombie_9","credits":["Virgilio Redondo","Yong Montano","Tony Isabella","Chris Claremont","Winslow Mortimer","Alfredo P. Alcala"],"i":1227},{"year":1974,"characters":["Frankenstein Monster"],"name":"Frankenstein #12","link":"frankenstein_12","credits":["Val Mayerik","Vincent Colletta","Doug Moench"],"i":1228},{"year":1973,"characters":["Derek McDowell","Frankenstein Monster"],"name":"Monsters Unleashed #2","link":"monsters_unleashed_2","credits":["Syd Shores","Gary Friedrich","John Buscema"],"i":1229},{"year":1975,"characters":["Derek McDowell","Frankenstein Monster"],"name":"Monsters Unleashed #4-10 (Frankenstein)","link":"monsters_unleashed_4-10_franke","credits":["Garry Friedrich","Doug Moench","John Buscema","Winslow Mortimer","Val Mayerik","Syd Shores"],"i":1230},{"year":1975,"characters":["Frankenstein Monster"],"name":"Legion of Monsters #1 (Frankenstein)","link":"legion_of_monsters_1_frankenst","credits":["Val Mayerik","Dan Adkins","Doug Moench","Pablo Marcos"],"i":1231},{"year":1974,"characters":["Sub-Mariner"],"name":"Sub-Mariner #72","link":"sub-mariner_72","credits":["Steve Skeates","Dan Adkins","Vincent Colletta"],"i":1232},{"year":1974,"characters":["Golem","Jason Adamson","Rebecca Adamson","Wayne Logan"],"name":"Strange Tales #174","link":"strange_tales_174","credits":["Jim Mooney","Len Wein","John Buscema"],"i":1233},{"year":1974,"characters":["Desadia","Gabriel the Devil Hunter"],"name":"Haunt of Horror #3 (Gabriel the Devil Hunter)","link":"haunt_of_horror_3_gabriel_the_","credits":["Doug Moench","Pablo Marcos","Frank Giacoia","Billy Graham","Mike Esposito"],"i":1234},{"year":1974,"characters":["Dracula","Inspector Chelm","Kate Fraser"],"name":"Giant-Size Dracula #2","link":"giant-size_dracula_2","credits":["Frank McLaughlin","Don Heck","Chris Claremont"],"i":1235},{"year":1975,"characters":["Black Widow","Candace Nelson","Daredevil","Foggy Nelson","Ivan Petrovitch","Owl","Paul Carson","Shanna the She-Devil"],"name":"Daredevil #116-117","link":"daredevil_117","credits":["Bob Brown","Chris Claremont","Gene Colan","Vincent Colletta","Steve Gerber"],"i":1236},{"year":1974,"characters":["Aunt May","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #137","link":"amazing_spiderman_137","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1237},{"year":1974,"characters":["Human Torch","Jinku","Lann","Molto","Prince Rey","Thor","Tyrannus"],"name":"Marvel Team-Up #26","link":"marvel_teamup_26","credits":["Frank Giacoia","David Hunt","Jim Mooney","Len Wein"],"i":1238},{"year":1974,"characters":["Blade","Lord I","Morbius"],"name":"Fear #24","link":"fear_24","credits":["Jack Abel","P. Craig Russell","Steve Gerber"],"i":1239},{"year":1974,"characters":["Bertha","D.W. Griffith","Erik Josten","Luke Cage","Noah Burstein"],"name":"Power Man #21","link":"power_man_21","credits":["Vincent Colletta","Ron Wilson","Tony Isabella","Len Wein"],"i":1240},{"year":1974,"characters":["Abe Brown","Bob Diamond","Fu Manchu","Iron Fist","Lin Sun","Shang-Chi"],"name":"Deadly Hands of Kung Fu: Special Album Edition #1","link":"deadly_hands_of_kung_fu_specia","credits":["Herb Trimpe","Doug Moench","John Buscema","Dan Adkins","Tony Isabella","Chris Claremont","Crusty Bunkers","Mike Vosburg","Frank McLaughlin"],"i":1241},{"year":1974,"characters":["Buck Cowan","Frankenstein Monster","Lissa Russell","Werewolf By Night"],"name":"Giant-Size Werewolf By Night #2","link":"giant-size_werewolf_by_night_2","credits":["Vincent Colletta","Don Perlin","Doug Moench"],"i":1242},{"year":1974,"characters":["Golem","Jason Adamson","Kaballa","Professor Yeates","Rebecca Adamson","Saudia Yamal","Wayne Logan"],"name":"Strange Tales #176-177","link":"strange_tales_176-177","credits":["Mike Friedrich","Tony DeZuniga","Steve Austin"],"i":1243},{"year":1975,"characters":["Buck Cowan","Hangman","Lissa Russell","Phillip Russell","Tina Sands","Victor Northrup","Werewolf By Night"],"name":"Werewolf By Night #22-26","link":"werewolf_by_night_22-26","credits":["Vincent Colletta","Don Perlin","Doug Moench"],"i":1244},{"year":1975,"characters":["Baroness Victoria Von Frankenstein","Frankenstein Monster","Ralph Caccone"],"name":"Frankenstein #13-18","link":"frankenstein_17-18","credits":["Bill Mantlo","Doug Moench","Dan Adkins","Bob McLoed","Jack Abel","Klaus Janson","Val Mayerik","Dan Green"],"i":1245},{"year":1974,"characters":["Dracula","Inspector Chelm","Kate Fraser","Quincy Harker"],"name":"Giant-Size Dracula #3","link":"giant-size_dracula_3","credits":["Frank Springer","Don Heck","Chris Claremont"],"i":1246},{"year":1975,"characters":["Blackwing","Daredevil","Ernesto Gambonno","Foggy Nelson","Human Cannonball","Luigi Gambonno","Princess Python","Ringmaster"],"name":"Daredevil #118","link":"daredevil_118","credits":["Vincent Colletta","Don Heck","Gerry Conway"],"i":1247},{"year":1974,"characters":["Black Panther","Kantu","Kazibe","Killmonger","King Cadaver","Monica Lynne","Preyy","Sombre","Tayete"],"name":"Jungle Action #12","link":"jungle_action_12","credits":["Billy Graham","Klaus Janson","Don McGregor"],"i":1248},{"year":1975,"characters":["Aragorn","Bulldozer","Dr. Strange","Hulk","J.C. Pennyworth","Luke Cage","Nighthawk","Piledriver","Thunderball","Valkyrie","Wrecker"],"name":"Defenders #17-19","link":"defenders_1719","credits":["Chris Claremont","Sal Buscema","Len Wein","Dan Green","Mike Esposito"],"i":1249},{"year":1974,"characters":["Chameleon","Hulk","J. Jonah Jameson","Ned Leeds","Spider-Man"],"name":"Marvel Team-Up #27","link":"marvel_team-up_27","credits":["Frank Giacoia","Jim Mooney","Len Wein"],"i":1250},{"year":1974,"characters":["D.W. Griffith","Discus","Luke Cage","Stiletto","Tyler Stuart"],"name":"Power Man #22","link":"power_man_22","credits":["Vincent Colletta","Ron Wilson","Tony Isabella"],"i":1251},{"year":1975,"characters":["Black Lama","Iron Man","Man-Bull","Melter","Whiplash (Blacklash)"],"name":"Iron Man #72","link":"iron_man_72","credits":["Mike Friedrich","Vincent Colletta","Barry Alfonso","George Tuska"],"i":1252},{"year":1975,"characters":["Aries II","Beast","Captain America","Cobra","Commissioner Feingold","Dave Cox","Dum Dum Dugan LMD","Eel","Falcon","Figaro","Gabriel Jones","Gamecock","Hawkeye","Hugh Jones","Krang","Leila Taylor","Lucifer","Madame Hydra (Viper)","Morgan","Nick Fury","Peggy Carter","Princess Python","Rafe Michel","Red Skull","Redwing","Sam Reuther","Sharon Carter","Sub-Mariner","Viper (Jordon Dixon)"],"name":"Captain America #177-186","link":"captain_america_177186","credits":["Herb Trimpe","Frank Giacoia","Sal Buscema","John Warner","Steve Englehart","Frank Robbins","Vincent Colletta","Joe Giella","Mike Esposito"],"i":1253},{"year":1975,"characters":["Captain America","Contessa Valentina Allegro De La Fontaine","Druid","Eric Koenig","Falcon","Gabriel Jones","Jeff Cochren","Leila Taylor","Peggy Carter"],"name":"Captain America #187-188","link":"captain_america_187-188","credits":["Sal Buscema","John Warner","Frank Robbins","Frank Chiaramonte","Vincent Colletta"],"i":1254},{"year":1975,"characters":["Captain America","Contessa Valentina Allegro De La Fontaine","Eric Koenig","Falcon","Nightshade","Redwing"],"name":"Captain America #189-190","link":"captain_america_189190","credits":["Vincent Colletta","Tony Isabella","Frank Robbins","Frank Chiaramonte"],"i":1255},{"year":1997,"characters":["Angel","Beetle","Black Panther","Bulldozer","Daredevil","Equinox","Falcon","Hulk","Human Torch","Iceman","Janet Ruiz","Jeff Piper","Kingpin","Luke Cage","Moon Knight","Piledriver","Punisher","Spider-Man","Stegron","Sub-Mariner","Thing","Thunderball","Vengeance","Werewolf By Night","Wrecker"],"name":"Code of Honor #1","link":"code_of_honor_1","credits":["Chuck Dixon","Jason White","Brad Parker","Kelly Corvese","Tristan Shane"],"i":1256},{"year":1974,"characters":["Agatha Harkness","Ebony","Franklin Richards","Human Torch","Invisible Woman","Iron Man","Kang","Mantis","Medusa","Mr. Fantastic","Necrodamus","Scarlet Witch","Swordsman","Thing","Thor","Uatu the Watcher","Vision"],"name":"Avengers #128","link":"avengers_128","credits":["Joe Staton","Steve Englehart","Sal Buscema"],"i":1257},{"year":1974,"characters":["Captain Mar-vell","Carol Danvers","Iron Man","Lou-Ann Savannah","Mentor","Mordecai P. Boggs","Nitro","Rachel 'Dandy' Dandridge","Vision"],"name":"Captain Marvel #34","link":"captain_marvel_34","credits":["Steve Englehart","Jim Starlin","Jack Abel"],"i":1258},{"year":1974,"characters":["Annihilus","Captain Mar-vell","Carol Danvers","Henry Pym","Mordecai P. Boggs","Rachel 'Dandy' Dandridge","Rick Jones","Supreme Intelligence","Wasp"],"name":"Captain Marvel #35","link":"captain_marvel_35","credits":["Mike Friedrich","Steve Englehart","Alfredo P. Alcala"],"i":1259},{"year":1975,"characters":["Captain Mar-vell","Uatu the Watcher"],"name":"Captain Marvel #36","link":"captain_marvel_36_1","credits":["Steve Englehart","Jim Starlin"],"i":1260},{"year":1975,"characters":["Annihilus","Arjai-Ush","Aron the W-atcher","Captain Mar-vell","Fer-Porr","Henry Pym","Jarvis","Kay-Sade","Mordecai P. Boggs","Rachel 'Dandy' Dandridge","Rick Jones","Sro-Himm","Tohn-Bil","Uatu the Watcher","Wasp","Zarek"],"name":"Captain Marvel #37-39","link":"captain_marvel_37-39","credits":["Klaus Janson","Steve Englehart","Tony Isabella","Al Milgrom"],"i":1261},{"year":1975,"characters":["Aged Genghis","Clea","Dormammu","Dr. Strange","Gaea","Orini","Rama Kaliph","Umar","Wong"],"name":"Doctor Strange #6-7","link":"doctor_strange_6-7","credits":["Klaus Janson","Steve Englehart","John Romita Sr.","Gene Colan"],"i":1262},{"year":1975,"characters":["Agatha Harkness","Captain America","Crimson Dynamo III","Dormammu","Ebony","Gaea","Hawkeye","Immortus","Iron Man","Jarvis","Kang","Libra","Mantis","Moondragon","Radioactive Man","Razorblade","Scarlet Witch","Space Phantom","Swordsman","Synchro-Staff","Thor","Titanium Man","Umar","Vision","Wonder Man"],"name":"Avengers #129-135, Giant-Size Avengers #2-4","link":"avengers_129135_giantsize_aven","credits":["Don Heck","Dave Cockrum","Roy Thomas","Sal Buscema","Crusty Bunkers","Joe Staton","John Tartaglione","Steve Englehart","Frank Chiaramonte","George Tuska","John Costanza","Neal Adams","Joe Giella"],"i":1263},{"year":1975,"characters":["Aged Genghis","Azrael","Clea","Dormammu","Dr. Strange","Gaea","Orini","Rama Kaliph","Umar","Wong"],"name":"Doctor Strange #8-9","link":"doctor_strange_9","credits":["Steve Englehart","Tom Palmer","Gene Colan","Frank Chiaramonte"],"i":1264},{"year":1975,"characters":["Aron the Watcher","Captain Mar-vell","Carol Danvers","Jarvis","Mordecai P. Boggs","Rachel 'Dandy' Dandridge","Rick Jones","Uatu the Watcher","Una","Zarek"],"name":"Captain Marvel #40","link":"captain_marvel_40","credits":["Steve Englehart","Al Milgrom","Al McWilliams"],"i":1265},{"year":1974,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #22","link":"master_of_kung_fu_22","credits":["Paul Gulacy","Doug Moench","Dan Adkins"],"i":1266},{"year":1974,"characters":["Flash Thompson","Mindworm","Spider-Man"],"name":"Amazing Spider-Man #138","link":"amazing_spiderman_138","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1267},{"year":1974,"characters":["Ka-Zar","Zabu"],"name":"Ka-Zar #6","link":"kazar_6","credits":["Alfredo P. Alcala","John Buscema","Gerry Conway"],"i":1268},{"year":1974,"characters":["Desadia","Gabriel the Devil Hunter"],"name":"Haunt of Horror #4 (Gabriel the Devil Hunter)","link":"haunt_of_horror_4_gabriel_the_","credits":["Doug Moench","Sonny Trinidad"],"i":1269},{"year":1975,"characters":["Angie Freeman","Anton Vierkin","Blade","Dracula","Lilith (Dracula's Daughter)","Marguerite D'alescio","Martin Gold","Morbius","Quincy Harker","Safron Caulder","Saint (dog)"],"name":"Vampire Tales #2-9","link":"vampire_tales_2-9","credits":["Andres Balcells","<em>Blade","<b>Title:","Don McGregor","Doug Moench","Ernie Chua","<b>Credits:","\"Lilith","<em>Satana (?)","Bob Brown","<em>Lilith","\"Beware the legions!\"","Chris Claremont","Tom Palmer","\"Shards of a crystal rainbow\"","Frank Chiaramonte","Tony DeZuniga","Marv Wolfman","Tom Sutton","Rich Buckler","<em>Angie Freeman","Steve Gerber","Pablo Marcos","daughter of Dracula!\"","Klaus Janson","Mike Vosburg","\"Angie's soul\"","\"Bloodmoon\""],"i":1270},{"year":1975,"characters":["Adri Nital","Chastity Jones","Danny Summers","David Eshcol","Doctor Sun","Dracula","Frank Drake","Jyota Nital","Quincy Harker","Rachel Van Helsing","Shiela Whittier","Taj Nital"],"name":"Tomb of Dracula #26-28","link":"tomb_of_dracula_26-28","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1271},{"year":1973,"characters":["Dweller In Darkness","Heimdall","Hercules","Hildegarde","Iron Man","Jane Foster","Jarvis","Krista","Odin","Ralph Blumkenn","Sif","Thor","Vizier"],"name":"Thor #229-231","link":"thor_229-230","credits":["Joe Sinnott","John Buscema","Rich Buckler","Dick Giordano","Chic Stone","Gerry Conway"],"i":1272},{"year":1974,"characters":["Hercules","Spider-Man"],"name":"Marvel Team-Up #28","link":"marvel_team-up_28","credits":["Vincent Colletta","Jim Mooney","Gerry Conway"],"i":1273},{"year":1974,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #23","link":"master_of_kung_fu_23","credits":["Al Milgrom","Doug Moench","Klaus Janson"],"i":1274},{"year":1975,"characters":["Betty Brant","Flash Thompson","Glory Grant","Grizzly","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Liz Allan","Mamie Muggins","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #139-140","link":"amazing_spiderman_139","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1275},{"year":1974,"characters":["Allatou","Hellstorm","Katherine Reynolds"],"name":"Marvel Spotlight #18-19","link":"marvel_spotlight_19","credits":["Frank Chiaramonte","Mike Esposito","Gene Colan","Steve Gerber"],"i":1276},{"year":1975,"characters":["Daemond","Martine Bancroft","Morbius","Tara (Caretakers)"],"name":"Fear #25-26","link":"fear_2526","credits":["Frank Giacoia","Doug Moench","Frank Robbins","Steve Gerber"],"i":1277},{"year":1974,"characters":["Aquarius","Ghost Rider (Johnny Blaze)","Inferno","Jesus (Ghost Rider's Friend)","Mephisto","Roxanne Simpson","Stunt-Master"],"name":"Ghost Rider #6-9","link":"ghost_rider_9","credits":["Gary Friedrich","Jim Mooney","Sal Trapani","Tony Isabella","Jack Abel"],"i":1278},{"year":1974,"characters":["Hellfire (Elementals)","Hydron (Elemental)","Living Mummy","Magnum","Miles Olddan","Richard 'Asp' Harper","Zephyr"],"name":"Supernatural Thrillers #10","link":"supernatural_thrillers_10","credits":["Dan Adkins","Tony Isabella","Val Mayerick","Len Wein"],"i":1279},{"year":1975,"characters":["Adri Nital","David Eshcol","Dracula","Jyota Nital","Shiela Whittier","Taj Nital"],"name":"Tomb of Dracula #29","link":"tomb_of_dracula_29","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1280},{"year":1993,"characters":["Microchip","Microchip Jr.","Punisher"],"name":"Punisher: The Origin of Microchip #1-2","link":"punisher_the_origin_of_microch","credits":["Art Nichols","Don Daley","Josef Rubinstein","Carl Potts","Louis Williams","Mike Baron"],"i":1281},{"year":1975,"characters":["Black Panther","Kantu","Kazibe","Killmonger","King Cadaver","Monica Lynne","Salamander K'ruel","Sombre","Taku","Tayete","Venomm","W'Kabi"],"name":"Jungle Action #13-15","link":"jungle_action_1315","credits":["P. Craig Russell","Don McGregor","Pablo Marcos","Billy Graham","Dan Green"],"i":1282},{"year":1975,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #24","link":"master_of_kung_fu_24","credits":["Al Milgrom","Doug Moench","Walt Simonson","Sal Trapani","Alan Weiss","James Starlin"],"i":1283},{"year":1975,"characters":["Ka-Zar","Zabu"],"name":"Ka-Zar #7","link":"kazar_7","credits":["Bob McLeod","John Buscema","Gerry Conway"],"i":1284},{"year":1975,"characters":["Desadia","Gabriel the Devil Hunter"],"name":"Haunt of Horror #5 (Gabriel the Devil Hunter)","link":"haunt_of_horror_5_gabriel_the_","credits":["Doug Moench","Sonny Trinidad"],"i":1285},{"year":1975,"characters":["Satan","Satana"],"name":"Haunt of Horror #5 (Satana)","link":"haunt_of_horror_5_satana","credits":["George Evans","Chris Claremont"],"i":1286},{"year":1975,"characters":["Buck Cowan","Lissa Russell","Phillip Russell","Topaz","Werewolf By Night"],"name":"Giant-Size Werewolf By Night #3","link":"giant-size_werewolf_by_night_3","credits":["Don Perlin","Doug Moench","Sal Trapani"],"i":1287},{"year":1975,"characters":["Spider-Man"],"name":"Giant-Size Spider-Man #3","link":"giant-size_spider-man_3","credits":["Mike Esposito","Ross Andru","Gerry Conway"],"i":1288},{"year":1975,"characters":["Human Torch","Iron Man"],"name":"Marvel Team-Up #29","link":"marvel_team-up_29","credits":["Vincent Colletta","Jim Mooney","Gerry Conway"],"i":1289},{"year":1975,"characters":["Clea","Dr. Strange","Enchantress","Executioner","Thing","Valkyrie","Wong"],"name":"Marvel Two-In-One #6-7","link":"marvel_two-in-one_7","credits":["Mike Esposito","Sal Buscema","George Tuska","Steve Gerber"],"i":1290},{"year":1975,"characters":["Dr. Strange","Enchantress","Executioner","Nameless One","Nighthawk","Thing","Valkyrie"],"name":"Defenders #20","link":"defenders_20","credits":["Vincent Colletta","Sal Buscema","Steve Gerber"],"i":1291},{"year":1975,"characters":["Arthur Nagan","Chondu","Clea","Dr. Strange","Hulk","Jerry Morgan","Nighthawk","Thing","Trish Starr","Valkyrie"],"name":"Defenders #21","link":"defenders_21","credits":["Sal Trapani","Sal Buscema","Steve Gerber"],"i":1292},{"year":1974,"characters":["Franklin Richards","Human Torch","Invisible Woman","Mahkizmo","Medusa","Mr. Fantastic","Thing","Thundra"],"name":"Fantastic Four #151-153","link":"fantastic_four_151153","credits":["Joe Sinnott","Jim Mooney","Tony Isabella","Rich Buckler","Gerry Conway"],"i":1293},{"year":1975,"characters":["Falcon","Glory Grant","Redwing","Spider-Man"],"name":"Marvel Team-Up #30","link":"marvel_teamup_30","credits":["Vincent Colletta","Jim Mooney","Gerry Conway"],"i":1294},{"year":1975,"characters":["Human Torch","Mr. Fantastic","Nick Fury","Thing"],"name":"Fantastic Four #154","link":"fantastic_four_154","credits":["Bob Brown","Frank Giacoia","Dick Ayers","Stan Lee","Paul Reinman","Len Wein","Mike Esposito"],"i":1295},{"year":1974,"characters":["Death (Axi-Tun)","Famine (Axi-Tun)","Human Torch","Medusa","Mr. Fantastic","Pestilence (Axi-Tun)","Thing","War (Axi-Tun)"],"name":"Giant-Size Fantastic Four #3","link":"giant-size_fantastic_four_3","credits":["Gerry Conway","Rich Buckler","Joe Sinnott","Marv Wolfman"],"i":1296},{"year":1974,"characters":["Human Torch","Iron Man","Man-Thing","Mr. Fantastic","Thing"],"name":"Giant-Size Man-Thing #2","link":"giant-size_man-thing_2","credits":["Klaus Janson","John Buscema","Steve Gerber"],"i":1297},{"year":1975,"characters":["Daredevil","Dr. Strange","Dumog","Grandmaster","Grott","Hulk","Korvac","Mister Teju","Nighthawk","Prime Mover","Sub-Mariner","Tork","Valkyrie"],"name":"Giant-Size Defenders #3","link":"giant-size_defenders_3","credits":["Jim Mooney","Dan Adkins","Jim Starlin","Len Wein","Don Newton","Steve Gerber"],"i":1298},{"year":1975,"characters":["Candace Nelson","Crusher","Daredevil","Foggy Nelson","Kid Gawaine","Pop Fenton"],"name":"Daredevil #119","link":"daredevil_119","credits":["Don Heck","Tony Isabella","Bob Brown"],"i":1299},{"year":1975,"characters":["Black Jack Tarr","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #25","link":"master_of_kung_fu_25","credits":["Paul Gulacy","Doug Moench","Sal Trapani"],"i":1300},{"year":1974,"characters":["Man-Thing"],"name":"Man-Thing #9-10","link":"manthing_9","credits":["Frank Chiaramonte","Mike Ploog","Steve Gerber"],"i":1301},{"year":1975,"characters":["Aunt May","Betty Brant","Glory Grant","Gwen Stacy Clone","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Mamie Muggins","Mary Jane Watson","Mysterio II","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #141-142","link":"amazing_spiderman_141142","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1302},{"year":1974,"characters":["Man-Thing","Richard Rory","Sybil Mills"],"name":"Man-Thing #11","link":"manthing_11","credits":["Frank Chiaramonte","Mike Ploog","Steve Gerber"],"i":1303},{"year":1975,"characters":["Drom","Iron Fist","Spider-Man"],"name":"Marvel Team-Up #31","link":"marvel_team-up_31","credits":["Vincent Colletta","Jim Mooney","Gerry Conway"],"i":1304},{"year":1975,"characters":["Hellstorm","Katherine Reynolds","Madame Swabada"],"name":"Marvel Spotlight #20-22","link":"marvel_spotlight_20-22","credits":["Bob McLeod","Alden McWilliams","Sal Buscema","Joe Giella","Steve Gerber"],"i":1305},{"year":1975,"characters":["Batroc","Colleen Wing","Iron Fist","Joy Meachum","Lee Wing","Master Khan","Misty Knight","Ninja","Ward Meachum","Warhawk"],"name":"Marvel Premiere #20-23","link":"marvel_premiere_2023","credits":["Pat Broderick","Bob McLeod","Tony Isabella","Chris Claremont","Arvell Malcolm Jones","Aubrey Bradford","Vincent Colletta","Dan Green"],"i":1306},{"year":1975,"characters":["D.W. Griffith","Luke Cage","Mace"],"name":"Power Man #23","link":"power_man_23","credits":["David Hunt","Ron Wilson","Tony Isabella"],"i":1307},{"year":1975,"characters":["Dr. Doom","Human Torch","Medusa","Mephisto","Mr. Fantastic","Shalla Bal","Silver Surfer","Thing"],"name":"Fantastic Four #155-157","link":"fantastic_four_155-157","credits":["Roy Thomas","Rich Buckler","Len Wein","Joe Sinnott"],"i":1308},{"year":1975,"characters":["Dr. Skarab","Hellfire (Elementals)","Hydron (Elemental)","Janice Carr","Living Mummy","Magnum","Miles Olddan","Richard 'Asp' Harper","Ron McAllister","Zephyr"],"name":"Supernatural Thrillers #11-15","link":"supernatural_thrillers_11-15","credits":["Tom Sutton","Tony Isabella","Alden McWilliams","John Warner","Klaus Janson","Val Mayerik","Dan Green"],"i":1309},{"year":1975,"characters":["Fah Lo Suee","Fu Manchu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #26","link":"master_of_kung_fu_26","credits":["Keith Pollard","Doug Moench","Sal Trapani"],"i":1310},{"year":1974,"characters":["Brian Lazarus","Man-Thing","Richard Rory","Sybil Mills"],"name":"Man-Thing #12","link":"man-thing_12","credits":["Klaus Janson","John Buscema","Steve Gerber"],"i":1311},{"year":1975,"characters":["Moses Magnum","Punisher","Spider-Man"],"name":"Giant-Size Spider-Man #4","link":"giantsize_spiderman_4","credits":["Mike Esposito","Ross Andru","Gerry Conway"],"i":1312},{"year":1975,"characters":["Ghost Rider (Johnny Blaze)","Hulk","Inferno","Mephisto"],"name":"Ghost Rider #11","link":"ghost_rider_11","credits":["John Tartaglione","Tony Isabella","Sal Buscema","George Roussos"],"i":1313},{"year":1975,"characters":["Betty Ross","Colonel Jack Armbruster","Devastator","General 'Thunderbolt' Ross","Gregory Kronski","Hulk","Kaa"],"name":"Hulk #184-186","link":"hulk_184-186","credits":["Herb Trimpe","Len Wein"],"i":1314},{"year":1975,"characters":["Crimson Dynamo III","Happy Hogan","Iron Man","Marty March","Pepper Potts","Radioactive Man","Roxanne Gilbert","Titanium Man"],"name":"Iron Man #73","link":"iron_man_73","credits":["Tom Orzechowski","Jim Mooney","Arvell Malcolm Jones","Mike Friedrich","Keith Pollard"],"i":1315},{"year":1975,"characters":["Alicia Masters","Annie Christopher","Becky Rainbow","Franklin Richards","Ghost Rider (Johnny Blaze)","Human Torch","Invisible Woman","Medusa","Miracle Man","Mr. Fantastic","Namorita","Thing","Wundarr (Aquarian)","Wyatt Wingfoot"],"name":"Marvel Two-In-One #8","link":"marvel_twoinone_8","credits":["Mike Esposito","Sal Buscema","Steve Gerber"],"i":1316},{"year":1975,"characters":["Betty Ross","Clay Quartermain","Gaffer (SHIELD Scientist)","General 'Thunderbolt' Ross","Glenn Talbot","Gregory Kronski","Gremlin","Hulk","Nick Fury"],"name":"Hulk #187-188","link":"hulk_187188","credits":["Herb Trimpe","Joe Staton","Len Wein"],"i":1317},{"year":1975,"characters":["Captain Fate","Man-Thing"],"name":"Man-Thing #13-14","link":"manthing_14","credits":["Alfredo P. Alcala","John Buscema","Tom Sutton","Steve Gerber"],"i":1318},{"year":1975,"characters":["Ka-Zar","Zabu"],"name":"Ka-Zar #8","link":"kazar_8","credits":["Alfredo P. Alcala","John Buscema","Gerry Conway"],"i":1319},{"year":1975,"characters":["Hulk","Mole Man"],"name":"Hulk #189","link":"hulk_189","credits":["Herb Trimpe","Joe Staton","Len Wein"],"i":1320},{"year":1975,"characters":["Dakimh The Enchanter","Jennifer Kale","Klonus","Korrek","Man-Thing","Mortak"],"name":"Giant-Size Man-Thing #3","link":"giant-size_man-thing_3","credits":["Alfredo P. Alcala","Steve Gerber"],"i":1321},{"year":1975,"characters":["Hellstorm","Human Torch","Katherine Reynolds","Silent Fox","Thing","Wyatt Wingfoot"],"name":"Marvel Team-Up #32","link":"marvel_team-up_32","credits":["Vincent Colletta","Sal Buscema","Gerry Conway"],"i":1322},{"year":1975,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Glorian","Hulk","Shaper of Worlds"],"name":"Hulk #190-191","link":"hulk_190191","credits":["Joe Staton","Herbe Trimpe","Len Wein","Marie Severin"],"i":1323},{"year":1975,"characters":["Sainte-Cloud"],"name":"Man-Thing #15","link":"man-thing_15","credits":["Rico Rival","Steve Gerber"],"i":1324},{"year":1975,"characters":["Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Hulk #192","link":"hulk_192","credits":["Herb Trimpe","Joe Staton","Len Wein"],"i":1325},{"year":1975,"characters":["Buck Cowan","Doctor Glitternight","Jeesala","Lissa Russell","Raymond Coker","Taboo II","Tina Sands","Topaz","Victor Northrup","Werewolf By Night"],"name":"Werewolf By Night #27-30","link":"werewolf_by_night_27-30","credits":["Don Perlin","Doug Moench"],"i":1326},{"year":1975,"characters":["Bambu","Brother Voodoo","Loralee Tate","Samuel Tate"],"name":"Tales of the Zombie #10","link":"tales_of_the_zombie_10","credits":["Doug Moench","Tony DeZuniga"],"i":1327},{"year":1975,"characters":["Dracula"],"name":"Tomb of Dracula #30","link":"tomb_of_dracula_30","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1328},{"year":1975,"characters":["Fah Lo Suee","Fu Manchu","Shang-Chi"],"name":"Master of Kung Fu #27","link":"master_of_kung_fu_27","credits":["Frank Springer","Doug Moench","John Buscema"],"i":1329},{"year":1975,"characters":["Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Hulk #193","link":"hulk_193","credits":["Herb Trimpe","Joe Staton","Len Wein"],"i":1330},{"year":1975,"characters":["Absorbing Man","Black Panther","Cyclops","Daredevil","Dr. Strange","Firelord","Hawkeye","Hercules","Hildegarde","Hulk","Iron Man","Jane Foster","Jarvis","Krista","Loki","Odin","Possessor","Quicksilver","Ralph Blumkenn","Sam 'Happy Sam' Sawyer","Sgt. Ralph Blumkenn","Sif","Silver Surfer","Spider-Man","Thor","Vision","Vizier"],"name":"Thor #232-236","link":"thor_232234","credits":["John Buscema","Joe Sinnott","Dick Giordano","Chic Stone","Gerry Conway"],"i":1331},{"year":1975,"characters":["Annie Christopher","Human Torch","Invisible Woman","Mr. Fantastic","Namorita","Puppet Master","Radion (Dr. Henri Sorel)","Thing","Thor","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #9","link":"marvel_two-in-one_9","credits":["Herb Trimpe","Joe Giella","Chris Claremont","Steve Gerber"],"i":1332},{"year":1975,"characters":["Iron Man"],"name":"Iron Man #78","link":"iron_man_78","credits":["Vincent Colletta","Bill Mantlo","George Tuska"],"i":1333},{"year":1975,"characters":["Betty Brant","Cyclone","Flash Thompson","Gwen Stacy Clone","Jackal","Joe 'Robbie' Robertson","Liz Allan","Mamie Muggins","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #143","link":"amazing_spiderman_143","credits":["Frank Giacoia","David Hunt","Ross Andru","Gerry Conway"],"i":1334},{"year":1975,"characters":["Brad Wrangle","Buck Cowan","Clary Winter","Martine Bancroft","Morbius","Werewolf By Night"],"name":"Giant-Size Werewolf By Night #4","link":"giant-size_werewolf_by_night_4","credits":["Yong Montano","Doug Moench","Virgilio Redondo"],"i":1335},{"year":1975,"characters":["Buck Cowan","Lissa Russell","Phillip Russell","Werewolf By Night"],"name":"Giant-Size Werewolf By Night #5","link":"giant-size_werewolf_by_night_5","credits":["Doug Moench","Yong Montano"],"i":1336},{"year":1975,"characters":["Aragorn","Dr. Strange","Egghead","Henry Pym","Hulk","Krimonn the Power Prism","Nighthawk","Sinister Doctor Spectrum II","Sinister Hyperion","Speed Demon","Trish Starr","Valkyrie","Wasp"],"name":"Giant-Size Defenders #4","link":"giant-size_defenders_4","credits":["Vincent Colletta","Don Heck","Steve Gerber"],"i":1337},{"year":1975,"characters":["Black Jack Tarr","Clive Reston","Dr. Petrie","Fu Manchu","Shadow-Stalker","Shang-Chi","Sir Denis Nayland Smith"],"name":"Giant-Size Master of Kung Fu #3","link":"giant-size_master_of_kung_fu_3","credits":["Paul Gulacy","Doug Moench","Vincent Colletta"],"i":1338},{"year":1975,"characters":["Bill Foster","Bruto the Strongman","Claire Temple","Clown","D.W. Griffith","Ernesto Gambonno","Livewire","Luigi Gambonno","Luke Cage","Noah Burstein","Princess Python","Ringmaster"],"name":"Power Man #24-25","link":"power_man_24","credits":["Bill Mantlo","Fred Kida","Tony Isabella","Ron Wilson","George Tuska","David Hunt"],"i":1339},{"year":1975,"characters":["Hell-Eyes","Martine Bancroft","Morbius","Simon Stroud"],"name":"Fear #27-31","link":"fear_27","credits":["Bill Mantlo","Doug Moench","Don Heck","Bob McLeod","Frank Springer","George Evans","Frank Robbins","D. Fraser","Vincent Colletta"],"i":1340},{"year":1975,"characters":["Black Widow","Blackwing","Candace Nelson","Contessa Valentina Allegro De La Fontaine","Daredevil","Debbie Harris","Dreadnaught","Dum Dum Dugan LMD","El Jaguar","Foggy Nelson","Ivan Petrovitch","Jackhammer","Kraken","Man-Killer","Mentallo","Nick Fury","Silvermane"],"name":"Daredevil #120-123","link":"daredevil_120-123","credits":["Vincent Colletta","Tony Isabella","Bob Brown"],"i":1341},{"year":1975,"characters":["Morbius"],"name":"Vampire Tales #10-11","link":"vampire_tales_10-11","credits":["Doug Moench","Sonny Trinidad"],"i":1342},{"year":1975,"characters":["Black Lama","Crimson Dynamo III","Firebrand","Hawkeye","Iron Man","Mad Thinker","Marianne Rodgers","MODOK","Pepper Potts","Radioactive Man","Roxanne Gilbert","Scarlet Witch","Thor","Titanium Man","Vision","Yellow Claw"],"name":"Iron Man #74-75,77,80-81","link":"iron_man_7475778081","credits":["Dick Ayers","Arvell Malcolm Jones","Mike Friedrich","Keith Pollard","Vincent Colletta","Chic Stone"],"i":1343},{"year":1975,"characters":["Aunt May","Aunt Watson","Betty Brant","Cyclone","Gwen Stacy Clone","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Mary Jane Watson","Ned Leeds","Scorpion","Spider-Man"],"name":"Amazing Spider-Man #144-146","link":"amazing_spiderman_144146","credits":["Frank Giacoia","Ross Andru","David Hunt","John Romita Sr. + Bullpen","Gerry Conway"],"i":1344},{"year":1975,"characters":["Jeremiah","Looter","Nighthawk","Spider-Man"],"name":"Marvel Team-Up #33","link":"marvel_team-up_33","credits":["Vincent Colletta","Sal Buscema","Gerry Conway"],"i":1345},{"year":1975,"characters":["Aragorn","Clea","Dr. Strange","Jeremiah","Looter","Nighthawk","Spider-Man","Valkyrie"],"name":"Marvel Team-Up #34-35","link":"marvel_team-up_34-35","credits":["Vincent Colletta","Sal Buscema","Gerry Conway"],"i":1346},{"year":1975,"characters":["Aunt May","Aunt Watson","Betty Brant","Gwen Stacy Clone","J. Jonah Jameson","Lizard","Man-Thing","Martha Connors","Mary Jane Watson","Spider-Man"],"name":"Giant-Size Spider-Man #5","link":"giant-size_spider-man_5","credits":["Mike Esposito","Ross Andru","Gerry Conway"],"i":1347},{"year":1975,"characters":["Black Jack Tarr","Clive Reston","Fah Lo Suee","Fu Manchu","Shadow-Stalker","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #28","link":"master_of_kung-fu_28","credits":["Doug Moench","Ed Hannigan","Sal Trapani","Ron Wilson","Aubrey Bradford"],"i":1348},{"year":1974,"characters":["Astrid Josefsen","Man-Thing","Viking Josefsen"],"name":"Man-Thing #16","link":"man-thing_16","credits":["John Buscema","Tom Palmer","Steve Gerber"],"i":1349},{"year":1975,"characters":["Man-Thing"],"name":"Giant-Size Man-Thing #4","link":"giant-size_man-thing_4","credits":["Frank Springer","Ron Wilson","Annette Kawecki","Edward Hannigan","Steve Gerber"],"i":1350},{"year":1975,"characters":["Howard The Duck","Officer Tompkins"],"name":"Giant-Size Man-Thing #4 (Howard the Duck)","link":"giantsize_manthing_4_howard_th","credits":["Frank Brunner","Steve Gerber"],"i":1351},{"year":1975,"characters":["Astrid Josefsen","Carol Selby","Man-Thing","Richard Rory","Viking Josefsen"],"name":"Man-Thing #17-18","link":"manthing_17","credits":["Jim Mooney","Steve Gerber"],"i":1352},{"year":1975,"characters":["Amon (Demon Steed)","Aragorn","Clea","Daredevil","Dr. Strange","Elf with a Gun","Hecate (Demon Steed)","Hellstorm","Henry Pym","Hulk","J.C. Pennyworth","Jack Norriss","Luke Cage","Nighthawk","Set (Demon Steed)","Valkyrie","Wong"],"name":"Defenders #22-25","link":"defenders_2225","credits":["Bob McLeod","Sal Buscema","Steve Gerber","Jack Abel","Vincent Colletta","Mike Esposito"],"i":1353},{"year":1975,"characters":["Alexandra Rasputina","Angel","Banshee","Colossus","Cyclops","Havok","Iceman","Jean Grey","Krakoa","Magik","Nightcrawler","Nikolai Rasputin","Polaris","Professor X","Storm","Sunfire","Thunderbird","Wolverine"],"name":"Giant-Size X-Men #1","link":"giantsize_xmen_1","credits":["Dave Cockrum","Len Wein"],"i":1354},{"year":2005,"characters":["Banshee","Colossus","Nightcrawler","Storm","Sunfire","Thunderbird","Wolverine"],"name":"Giant-Size X-Men #3","link":"giant-size_x-men_3","credits":["Neal Adams","Joss Whedon"],"i":1355},{"year":1986,"characters":["Angel","Banshee","Colossus","Cyclops","Havok","Iceman","Jean Grey","Nightcrawler","Polaris","Professor X","Storm","Sunfire","Thunderbird","Wolverine"],"name":"Classic X-Men #1 (2nd story)","link":"bizarre_adventures_27_classic","credits":["Chris Claremont","John Bolton"],"i":1356},{"year":1975,"characters":["Desadia","Gabriel the Devil Hunter"],"name":"Monsters Unleashed #11 (Gabriel the Devil Hunter)","link":"monsters_unleashed_11_gabriel_","credits":["Doug Moench","Sonny Trinidad"],"i":1357},{"year":1975,"characters":["Punisher"],"name":"Marvel Preview #2","link":"marvel_preview_2","credits":["Tony DeZuniga","Gerry Conway"],"i":1358},{"year":1975,"characters":["Iron Man"],"name":"Iron Man #79","link":"iron_man_79","credits":["Mike Friedrich","Vincent Colletta","George Tuska"],"i":1359},{"year":1975,"characters":["Black Jack Tarr","Carlton Velcro","Clive Reston","Dr. Petrie","Pavane","Razorfist","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #29-31","link":"master_of_kung_fu_2931","credits":["Paul Gulacy","Doug Moench","Dan Adkins"],"i":1360},{"year":1975,"characters":["Amon (Demon Steed)","Byron Hyatt","Hecate (Demon Steed)","Hellstorm","Katherine Reynolds","Set (Demon Steed)"],"name":"Marvel Spotlight #23","link":"marvel_spotlight_23","credits":["Mike Friedrich","Dan Green","Sal Buscema","Steve Gerber"],"i":1361},{"year":1975,"characters":["Ka-Zar","Zabu"],"name":"Ka-Zar #9","link":"ka-zar_9","credits":["John Buscema","Sonny Trinidad","Gerry Conway"],"i":1362},{"year":1975,"characters":["Black Panther","Kantu","Monica Lynne","Taku","Venomm","W'Kabi"],"name":"Jungle Action #16","link":"jungle_action_16","credits":["Billy Graham","Don McGregor"],"i":1363},{"year":1975,"characters":["Coot Collier","Denny Armstrong","Ghost Rider (Johnny Blaze)","Gus Utermohle","Karen Page","Paste Pot Pete","Phantom Eagle","Roxanne Simpson","Stunt-Master"],"name":"Ghost Rider #12-13","link":"ghost_rider_12-13","credits":["Frank Giacoia","Tony Isabella","Frank Robbins","George Tuska","Vincent Colletta","Mike Esposito"],"i":1364},{"year":1975,"characters":["Captain America","Contessa Valentina Allegro De La Fontaine","Falcon","Gabriel Jones","Iron Man","Jeff Cochren","Leila Taylor","Nick Fury","Paste Pot Pete","Peggy Carter","Redwing","Stilt-Man"],"name":"Captain America #191","link":"captain_america_191","credits":["Bill Mantlo","D. Bruce Berry","Tony Isabella","Frank Robbins"],"i":1365},{"year":1975,"characters":["Agatha Harkness","Beast","Black Panther","Black Widow","Captain America","Hawkeye","Henry Pym","Hercules","Iron Man","Jarvis","Moondragon","Quicksilver","Sam Reuther","Scarlet Witch","Thor","Toad","Vision","Wasp"],"name":"Avengers #137-138","link":"avengers_137","credits":["Vincent Colletta","Steve Englehart","George Tuska"],"i":1366},{"year":1975,"characters":["Carol Selby","Dakimh The Enchanter","Klonus","Man-Thing","Mortak","Richard Rory","Scavenger","Thog"],"name":"Man-Thing #19-22","link":"man-thing_19-22","credits":["Frank Springer","Jim Mooney","Steve Gerber"],"i":1367},{"year":1975,"characters":["Arnold Astrovik","Charlie-27","Dr. Strange","Hulk","Justice","Major Victory","Nighthawk","Norma Astrovik","Valkyrie","Yondu"],"name":"Giant-Size Defenders #5","link":"giant-size_defenders_5","credits":["Roger Slifer","Don Heck","Gerry Conway","Chris Claremont","Scott Edelman","Mike Esposito","Len Wein","David Hunt","Steve Gerber"],"i":1368},{"year":1975,"characters":["Aleta","Charlie-27","Dr. Strange","Hulk","Jack Norriss","John Ogord","Justice","Major Victory","Martinex","Nighthawk","Sita Ogord","Starhawk","Tara Ogord","Valkyrie","Yondu"],"name":"Defenders #26-29","link":"defenders_2629","credits":["Frank Giacoia","Sal Buscema","John Tartaglione","Vincent Colletta","Steve Gerber"],"i":1369},{"year":1975,"characters":["Angar the Screamer","Azir","Ballox","Colleen Wing","Iron Fist","Khumbala Bey","Lee Wing","Master Khan","Rafael Scarfe"],"name":"Marvel Premiere #24-25","link":"marvel_premiere_2425","credits":["Pat Broderick","Chris Claremont","John Byrne","Al McWilliams","Vincent Colletta"],"i":1370},{"year":1975,"characters":["Beast","Hellcat","Henry Pym","Iron Man","Jarvis","Moondragon","Scarlet Witch","Thor","Vision","Wasp","Whirlwind"],"name":"Avengers #139-140","link":"avengers_139-140","credits":["Vincent Colletta","Steve Englehart","George Tuska"],"i":1371},{"year":1975,"characters":["Deathlok (alt. Luther Manning)"],"name":"Astonishing Tales #31","link":"astonishing_tales_31","credits":["Keith Pollard","Rich Buckler","Doug Moench","Klaus Janson"],"i":1372},{"year":1975,"characters":["Aunt May","Aunt Watson","Betty Brant","Gwen Stacy Clone","J. Jonah Jameson","Jackal","Joe 'Robbie' Robertson","Lizard","Mary Jane Watson","Ned Leeds","Scarlet Spider","Spencer Smythe","Spider-Man","Tarantula"],"name":"Amazing Spider-Man #147-150","link":"amazing_spiderman_147148","credits":["Archie Goodwin","Gerry Conway","Ross Andru","David Hunt","Gil Kane","Mike Esposito"],"i":1373},{"year":1975,"characters":["Alicia Masters","Human Torch","Madrox the Multiple Man","Medusa","Mr. Fantastic","Professor X","Thing"],"name":"Giant-Size Fantastic Four #4","link":"giant-size_fantastic_four_4","credits":["Joe Sinnott","John Buscema","Chris Claremont","Len Wein","Chic Stone"],"i":1374},{"year":1975,"characters":["Angel","Ape Man","Banshee","Beast","Bird Man","Cat Man","Colossus","Count Nefaria","Cyclops","Dragonfly","Frog Man","General Fredericks","Havok","Iceman","Jean Grey","Moira MacTaggert","Nightcrawler","Polaris","Professor X","Reverend Craig","Storm","Sunfire","Thunderbird","Warpath","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #94-95","link":"uncanny_xmen_9495","credits":["Dave Cockrum","Bob McLeod","Sam Grainger","Chris Claremont","Len Wein"],"i":1375},{"year":1975,"characters":["Alicia Masters","Black Widow","Thing"],"name":"Marvel Two-In-One #10","link":"marvel_two-in-one_10","credits":["Klaus Janson","Chris Claremont","Bob Brown"],"i":1376},{"year":1975,"characters":["Hellcow","Howard The Duck","Officer Tompkins"],"name":"Giant-Size Man-Thing #5 (Howard the Duck)","link":"giantsize_manthing_5_howard_th","credits":["Frank Brunner","Tom Palmer","Steve Gerber"],"i":1377},{"year":1975,"characters":["Alicia Masters","Black Bolt","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Medusa","Mr. Fantastic","Phineas (5th Dimension)","Quicksilver","Thing","Triton","Valeria (5th Dimension)","Xemu (5th Dimension)"],"name":"Fantastic Four #158-159","link":"fantastic_four_158-159","credits":["Roy Thomas","Rich Buckler","Joe Sinnott"],"i":1378},{"year":1975,"characters":["Dave Duncan","Harmony Maxwell","Jess Duncan","Straw Man"],"name":"Dead of Night #11","link":"dead_of_night_11","credits":["Rico Rival","Scott Edelman"],"i":1379},{"year":1975,"characters":["D.W. Griffith","Luke Cage"],"name":"Power Man #26","link":"power_man_26","credits":["Vincent Colletta","Steve Englehart","George Tuska"],"i":1380},{"year":1975,"characters":["Armstrong Smith","Black Widow","Blake Tower","Copperhead","Daredevil","Foggy Nelson","Ivan Petrovitch","WHO"],"name":"Daredevil #124-125","link":"daredevil_124-125","credits":["Marv Wolfman","Bob Brown","Gene Colan","Klaus Janson","Len Wein"],"i":1381},{"year":1975,"characters":["Ka-Zar","Zabu"],"name":"Ka-Zar #10-11","link":"ka-zar_10-11","credits":["Fred Kida","Don Heck","Doug Moench","John Buscema","Frank Springer","Gerry Conway"],"i":1382},{"year":1976,"characters":["Ann Reynolds","Jeff Turner","Raymond Corey","Senator 'Stoneface' Turner","Skull the Slayer"],"name":"Skull the Slayer #1-8","link":"skull_the_slayer_1-8","credits":["Marv Wolfman","Bill Mantlo","Pablo Marcos","Steve Gan","Sal Buscema","Steve Englehart","Sonny Trinidad","Mike Esposito"],"i":1383},{"year":1975,"characters":["Baron Macabre","Black Panther","Kantu","Kazibe","Killmonger","King Cadaver","Lord Karnaj","Malice (Killmonger minion)","Monica Lynne","Taku","Tayete","Venomm","W'Kabi"],"name":"Jungle Action #17","link":"jungle_action_17","credits":["Billy Graham","Don McGregor","Virgilio Redondo"],"i":1384},{"year":1979,"characters":["Garth of Mournhelm","Gorjoon","J. Jonah Jameson","Kristine Saunders","Lambert","Lunatik","Man-Wolf (John Jameson)","Simon Stroud"],"name":"Marvel Premiere #45-46","link":"marvel_premiere_45-46","credits":["David Anthony Kraft","George Perez","Ricardo Villamonte","Frank Giacoia"],"i":1385},{"year":1975,"characters":["Armstrong Smith","Daredevil","Foggy Nelson","Heather Glenn","Torpedo","WHO"],"name":"Daredevil #126-127","link":"daredevil_126-127","credits":["Bob Brown","Klaus Janson","Marv Wolfman"],"i":1386},{"year":1975,"characters":["Black Jack Tarr","Clive Reston","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #32","link":"master_of_kung_fu_32","credits":["Doug Moench","Sal Buscema","Mike Esposito"],"i":1387},{"year":1975,"characters":["Adri Nital","Brother Voodoo","Danny Summers","Deacon Frost","Dr. Scott","Dracula","Frank Drake","Inspector Chelm","Jyota Nital","Quincy Harker","Rachel Van Helsing","Saint (dog)","Taj Nital"],"name":"Tomb of Dracula #31-35","link":"tomb_of_dracula_31-35","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1388},{"year":1975,"characters":["Anton Vierkin","Blade","Dai Thomas","Dracula","Kate Fraser","Marguerite D'alescio","Safron Caulder"],"name":"Marvel Preview #3","link":"marvel_preview_magazine_3","credits":["Rico Rival","Tony DeZuniga","Chris Claremont"],"i":1389},{"year":1975,"characters":["Buck Cowan","Buttons Marston","Elaine Marston","Jeesala","Lissa Russell","Raymond Coker","Topaz","Victor Northrup","Werewolf By Night"],"name":"Werewolf By Night #31","link":"werewolf_by_night_31","credits":["Don Perlin","Doug Moench"],"i":1390},{"year":1975,"characters":["Buck Cowan","Buttons Marston","Elaine Marston","Frenchie","Jeesala","Lissa Russell","Lt. Victor Northrup","Moon Knight","Phillip Russell","Raymond Coker","Topaz","Werewolf By Night"],"name":"Werewolf By Night #32-33","link":"werewolf_by_night_32-33","credits":["Don Perlin","Doug Moench","Howie Perlin"],"i":1391},{"year":1975,"characters":["Ch'thon","Modred the Mystic"],"name":"Marvel Chillers #1","link":"marvel_chillers_1","credits":["Bill Mantlo","Yong Montano","Marv Wolfman"],"i":1392},{"year":1975,"characters":["Frankenstein Monster","Man-Wolf (John Jameson)","Spider-Man"],"name":"Marvel Team-Up #36-37","link":"marvel_teamup_37","credits":["Vincent Colletta","Sal Buscema","Gerry Conway"],"i":1393},{"year":1975,"characters":["Black Jack Tarr","Brynocki","Clive Reston","Leiko Wu","Mordillo","Pavane","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #33-35","link":"master_of_kungfu_3335","credits":["Paul Gulacy","Doug Moench","Dan Adkins"],"i":1394},{"year":1975,"characters":["Beast","Griffin","Spider-Man"],"name":"Marvel Team-Up #38","link":"marvel_teamup_38","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1395},{"year":1976,"characters":["Joanne Tumolo","Lobo (Will Talltree's Wolf)","Red Wolf (Will Talltrees)","Super-Skrull","Tigra"],"name":"Marvel Chillers #3","link":"marvel_chillers_3","credits":["Frank Chiaramonte","Sam Grainger","Tony Isabella","Will Meugniot"],"i":1396},{"year":1975,"characters":["Albert Devoor","Alicia Masters","Arkon","Ben Grimm (Earth-A)","Crystal","Franklin Richards","Gaard","Grand Vizier (Polemachus)","Human Torch","Invisible Woman","Lockjaw","Mr. Fantastic","Phineas (5th Dimension)","Quicksilver","Reed Richards (Earth-A)","Sue Grimm (Earth-A)","Thing","Valeria (5th Dimension)"],"name":"Fantastic Four #160-163","link":"fantastic_four_163","credits":["Joe Sinnott","John Buscema","Roy Thomas","Rich Buckler","Chic Stone"],"i":1397},{"year":1975,"characters":["Avius","Black Bolt","Blastaar","Centarius","Gorgon","Iridia","Karnak","Leonus","Maximus","Medusa","Stallior","Timberius","Triton"],"name":"Inhumans #1-2","link":"inhumans_1-2","credits":["George Perez","Doug Moench","Fred Kida","Frank Chiaramonte"],"i":1398},{"year":1975,"characters":["Luke Cage"],"name":"Power Man #27","link":"power_man_27","credits":["Bill Mantlo","George Perez","Alden McWilliams"],"i":1399},{"year":1975,"characters":["Doomsman","Dr. Doom","Sub-Mariner"],"name":"Giant-Size Super-Villain Team-Up #2","link":"giantsize_supervillain_teamup_1","credits":["Roy Thomas","Sam Grainger","Mike Sekowsky"],"i":1400},{"year":1976,"characters":["Attuma","Betty Dean","Dr. Doom","Dr. Dorcas","Henry Croft","Joseph Jennings","Saru-San","Simon Ryker","Sub-Mariner","Symbionic Man","Tamara Rahn","Tiger Shark"],"name":"Super-Villain Team-Up #1-4","link":"supervillain_teamup_14","credits":["Bill Everett","Bill Mantlo","Herb Trimpe","Fred Kida","Jim Mooney","Frank Springer","Tony Isabella","Sal Buscema","George Evans","Jack Abel","Jim Shooter","George Tuska"],"i":1401},{"year":1975,"characters":["Brad Carter","P.D.Q. Werner","Ulluxy'l Kwan Tae Syn","Ulysses Bloodstone"],"name":"Marvel Presents #1-2","link":"marvel_presents_1-2","credits":["Pat Boyette","Bob McLeod","John Warner","Mike Vosburg","Sonny Trinidad"],"i":1402},{"year":1976,"characters":["Aged Genghis","Ancient One","Azrael","Baron Mordo","Clea","Dr. Strange","Dreamstalker","Eternity","Nightmare","Rama Kaliph"],"name":"Doctor Strange #10-13","link":"doctor_strange_10-13","credits":["Steve Englehart","Tom Palmer","Gene Colan","Frank Chiaramonte"],"i":1403},{"year":1976,"characters":["Buck Cowan","Elaine Marston","Lissa Russell","Phillip Russell","Topaz","Werewolf By Night"],"name":"Werewolf By Night #34-37","link":"werewolf_by_night_34-37","credits":["Don Perlin","Doug Moench"],"i":1404},{"year":1976,"characters":["Aurora Rabinowitz","Brother Voodoo","Chastity Jones","Danny Summers","Doctor Sun","Dr. Scott","Dracula","Frank Drake","Harold H. Harold","Inspector Chelm","Juno","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #36-40","link":"tomb_of_dracula_36-40","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1405},{"year":1975,"characters":["Black Panther","Kantu","Kazibe","Madame Slay","Monica Lynne","Preyy","Taku","Tayete","Venomm","W'Kabi"],"name":"Jungle Action #18","link":"jungle_action_18","credits":["Billy Graham","Bob McLeod","Don McGregor"],"i":1406},{"year":1975,"characters":["Captain America","Dr. Faustus","Moonstone (Karla Sofen)"],"name":"Captain America #192","link":"captain_america_192","credits":["D. Bruce Berry","Frank Robbins","Marv Wolfman"],"i":1407},{"year":1975,"characters":["Alicia Masters","Golem","Jason Adamson","Kaballa","Professor Yeates","Rebecca Adamson","Saudia Yamal","Thing","Wayne Logan"],"name":"Marvel Two-In-One #11","link":"marvel_two-in-one_11","credits":["Bill Mantlo","Jack Abel","Roy Thomas","Bob Brown"],"i":1408},{"year":1976,"characters":["Aireo","Arides","Avius","Black Bolt","Crystal","Falcona","Falzon","Gorgon","Iridia","Karnak","Leonus","Lockjaw","Maximus","Medusa","Phae-Dor","Quicksilver","Stallior","Timberius","Triton"],"name":"Inhumans #3-6","link":"inhumans_3-6","credits":["George Perez","Doug Moench","Frank Chiaramonte","Vincent Colletta","Gil Kane","Mike Esposito"],"i":1409},{"year":1976,"characters":["Angar the Screamer","Colleen Wing","Iron Fist","Iron Man","John Cheever","Master Khan","Misty Knight","Radion (Dr. Henri Sorel)","Rafael Scarfe","Steel Serpent","Ward Meachum"],"name":"Iron Fist #1-4","link":"iron_fist_14","credits":["Frank Chiaramonte","John Byrne","Chris Claremont","Al McWilliams"],"i":1410},{"year":1976,"characters":["Kraven the Hunter","Tigra"],"name":"Marvel Chillers #4","link":"marvel_chillers_4","credits":["Vincent Colletta","Chris Claremont","Frank Robbins"],"i":1411},{"year":1976,"characters":["Amphibian (Squadron Supreme)","Beast","Captain America","Captain Hawk","Doctor Spectrum","Golden Archer","Hawkeye","Hellcat","Henry Pym","Hugh Jones","Hyperion","Immortus","Iron Man","Jarvis","Kang","Kid Colt","Lady Lark","Mad Dog (Buzz Baxter)","Moondragon","Night Rider (Carter Slade)","Orka","Rawhide Kid","Ringo Kid","Scarlet Witch","Thor","Tom Thumb","Two-Gun Kid","Vision","Wasp","Whizzer (Squadron Supreme)"],"name":"Avengers #141-144,147-149","link":"avengers_141144147149","credits":["George Perez","Sam Grainger","Steve Englehart","Vincent Colletta","Mike Esposito"],"i":1412},{"year":1976,"characters":["Betty Brant","Doctor Octopus","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Ned Leeds","Scarlet Spider","Shocker","Spider-Man"],"name":"Amazing Spider-Man #151-152","link":"amazing_spiderman_151152","credits":["Frank Giacoia","John Romita Sr.","Ross Andru","Len Wein","Mike Esposito"],"i":1413},{"year":1975,"characters":["Iron Man","Prester John","Thing"],"name":"Marvel Two-In-One #12","link":"marvel_two-in-one_12","credits":["Bill Mantlo","Ron Wilson","Vincent Colletta"],"i":1414},{"year":1975,"characters":["Abe Brown","Bob Diamond","Fancy Dan","Human Torch","Lin Sun","Lotus Shinchuko","Montana","Sandman","Spider-Man"],"name":"Marvel Team-Up #39-40","link":"marvel_teamup_40","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1415},{"year":1975,"characters":["Geirrodur","Hercules","Horus","Isis","Jane Foster","Odin","Osiris","Ralph Blumkenn","Richard Fenster","Thor","Ulik","Vizier"],"name":"Thor #237-239","link":"thor_238","credits":["Joe Sinnott","John Buscema","Roy Thomas","Sal Buscema","Gerry Conway"],"i":1416},{"year":1975,"characters":["Alicia Masters","Crusader (Robert Grayson duplicate)","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Nova (Frankie Raye)","Thing"],"name":"Fantastic Four #164-165","link":"fantastic_four_164-165","credits":["Roy Thomas","George Perez","Joe Sinnott"],"i":1417},{"year":1975,"characters":["Arjai-Ush","Captain Mar-vell","Fer-Porr","Kay-Sade","Rick Jones","Ronan the Accuser","Sro-Himm","Supreme Intelligence","Tohn-Bil","Zarek"],"name":"Captain Marvel #41","link":"captain_marvel_41","credits":["Al Milgrom","Berni Wrightson","P. Craig Russell","Bob McLeod","Terry Austin","Steve Englehart"],"i":1418},{"year":1975,"characters":["Ka-Zar","Tongah","Zabu"],"name":"Ka-Zar #12-13","link":"ka-zar_12-13","credits":["Larry Hama","Fred Kida","Doug Moench","Russ Heath"],"i":1419},{"year":1975,"characters":["Dr. Strange","Hulk","Nighthawk","Valkyrie","Wong"],"name":"Defenders #30","link":"defenders_30","credits":["Bill Mantlo","Sam Grainger","Jack Abel"],"i":1420},{"year":1976,"characters":["Basilisk (Satana's Demon)","Satana"],"name":"Marvel Preview #7 (Satana)","link":"marvel_preview_7_satana","credits":["Vincent Alcazar","Chris Claremont"],"i":1421},{"year":1975,"characters":["Ch'thon","Modred the Mystic"],"name":"Marvel Chillers #2","link":"marvel_chillers_2","credits":["Bill Mantlo","Sonny Trinidad"],"i":1422},{"year":1975,"characters":["Basilisk (Satana's Demon)","Hellstorm","Katherine Reynolds","Kthara","Satana"],"name":"Marvel Spotlight #24","link":"marvel_spotlight_24","credits":["Bob McLeod","Chris Claremont","Sal Buscema"],"i":1423},{"year":1975,"characters":["Banshee","Colonel Michael Rossi","Colossus","Cyclops","Harry Morrel","Kierrok","Moira MacTaggert","Nightcrawler","Professor X","Steven Lang","Storm","Wolverine"],"name":"Uncanny X-Men #96","link":"uncanny_xmen_96","credits":["Dave Cockrum","Bill Mantlo","Sam Grainger","Chris Claremont"],"i":1424},{"year":1975,"characters":["Basilisk (Satana's Demon)","Satana"],"name":"Marvel Premiere #27","link":"marvel_premiere_27","credits":["The Tribe","Chris Claremont"],"i":1425},{"year":1975,"characters":["Amon (Demon Steed)","Hecate (Demon Steed)","Hellstorm","Satan","Set (Demon Steed)"],"name":"Son of Satan #1","link":"son_of_satan_1","credits":["John Warner","Jim Mooney","Jim Starlin"],"i":1426},{"year":2007,"characters":["Abomination","Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hulk","Locust"],"name":"Hulk #194","link":"hulk_194","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1427},{"year":1975,"characters":["Daredevil","Death-Stalker","Foggy Nelson","Heather Glenn","Sky-Walker"],"name":"Daredevil #128","link":"daredevil_128","credits":["Bob Brown","Klaus Janson","Marv Wolfman"],"i":1428},{"year":1976,"characters":["Simon Ryker","Sub-Mariner","Symbionic Man"],"name":"Marvel Spotlight #27","link":"marvel_spotlight_27","credits":["Bill Mantlo","Jim Mooney"],"i":1429},{"year":1976,"characters":["Luke Cage","Mr. Fish"],"name":"Power Man #29","link":"power_man_29","credits":["Vincent Colletta","Bill Mantlo","George Tuska"],"i":1430},{"year":1976,"characters":["Ghost Rider (Johnny Blaze)","Man-Thing","Morbius","Werewolf By Night"],"name":"Marvel Premiere #28","link":"marvel_premiere_28","credits":["Bill Mantlo","Steve Gan","Frank Robbins"],"i":1431},{"year":1978,"characters":["Aginar","Ajak","Arishem","Daniel Damian","Domo","Dromedan","Druig","Eson","Gammenon","Gilgamesh","Hargen","Hulk (Cosmos Automation)","Ikaris","Jemiah","Karkas","Kingo Sunen","Kro","Makkari","Margo Damian","Mister Bradford","Nezarr","One Above All","Oneg","Ran-Sak the Reject","Sam Holden","Sersi","SHIELD Agent Parks","SHIELD Agent Stevenson","SHIELD Agent Tyler","Sigmar","Sprite","Tefral","Thena","Tode","Tutinax","Valkin","Zakka","Zarin","Ziran","Zuras"],"name":"Eternals #1-19, Annual #1","link":"eternals_119_annual_1","credits":["Jack Kirby","Mike Royer","John Verpoorten"],"i":1432},{"year":1976,"characters":["Shang-Chi"],"name":"Master of Kung Fu #36-37","link":"master_of_kung_fu_36","credits":["Keith Pollard","Doug Moench","Sal Trapani"],"i":1433},{"year":1976,"characters":["Dr. Doom","Iron Man","Moondragon","Scarlet Witch","Spider-Man","Vision"],"name":"Marvel Team-Up #41-44","link":"marvel_teamup_4344","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1434},{"year":1976,"characters":["Spider-Man"],"name":"Marvel Team-Up #45","link":"marvel_teamup_45","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1435},{"year":1976,"characters":["Spider-Man"],"name":"Marvel Team-Up #46","link":"marvel_team-up_46","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1436},{"year":1976,"characters":["Charlton Grundge","Christie Chase","Cockroach Hamilton","D.W. Griffith","Grassy Moss","Luke Cage","Noah Burstein","Piranha Jones","Quentin Chase","Spear","Win (DW's girlfriend)"],"name":"Power Man #28,30-31","link":"power_man_2830-31","credits":["Don McGregor","Keith Pollard","George Tuska","Sal Buscema","Crusty Bunkers","Rich Buckler","Arvell Malcom Jones","Vincent Colletta"],"i":1437},{"year":1976,"characters":["Blade","Morbius"],"name":"Marvel Preview #8","link":"marvel_preview_magazine_8","credits":["Marv Wolfman","Don McGregor","Doug Moench","Mike Ploog","Gene Colan","John Warner","Russ Jones","Val Mayerik","Sonny Trinidad","Marie Severin"],"i":1438},{"year":1976,"characters":["Dave Duncan","Harmony Maxwell","Jess Duncan","Kalumai","Straw Man"],"name":"Marvel Spotlight #26","link":"marvel_spotlight_26","credits":["Ruben Yandoc","Scott Edelman"],"i":1439},{"year":1976,"characters":["Luke Cage","Thing"],"name":"Marvel Two-In-One #13","link":"marvel_two-in-one_13","credits":["Marv Wolfman","Roger Slifer","Ron Wilson","Len Wein","Vincent Colletta"],"i":1440},{"year":1976,"characters":["Alicia Masters","Hellstorm","Kthara","Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #14","link":"marvel_two-in-one_14","credits":["Herb Trimpe","Bill Mantlo","John Tartaglione"],"i":1441},{"year":1976,"characters":["Alicia Masters","Living Eraser","Morbius","Thing"],"name":"Marvel Two-In-One #15","link":"marvel_two-in-one_15","credits":["Arvell Malcom Jones","Bill Mantlo","Ron Wilson","Dick Giordano"],"i":1442},{"year":1976,"characters":["Basilisk","Human Torch","Invisible Woman","Ka-Zar","Mary Jane Watson","Mr. Fantastic","Nick Fury","Spider-Man","Thing","Zabu"],"name":"Marvel Two-In-One #16-17","link":"marvel_two-in-one_16-17","credits":["Bill Mantlo","Dan Adkins","Sal Buscema","Ron Wilson","Mike Esposito"],"i":1443},{"year":1976,"characters":["Basilisk","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man","Thing"],"name":"Marvel Team-Up #47","link":"marvel_team-up_47","credits":["Bill Mantlo","Ron Wilson","Dan Adkins"],"i":1444},{"year":1976,"characters":["Alicia Masters","Dave Duncan","Harmony Maxwell","Jess Duncan","Kalumai","Straw Man","Thing"],"name":"Marvel Two-In-One #18","link":"marvel_two-in-one_18","credits":["Bill Mantlo","Jim Mooney","Dan Adkins","Scott Edelman","Ron Wilson"],"i":1445},{"year":1976,"characters":["Hulk","Xemnu the Titan"],"name":"Hulk annual #5","link":"hulk_annual_5","credits":["Jack Abel","Sal Buscema","Chris Claremont","Len Wein"],"i":1446},{"year":1976,"characters":["Thing","Tigra"],"name":"Marvel Two-In-One #19","link":"marvel_two-in-one_19","credits":["Bill Mantlo","Tony Isabella","Sal Buscema","Don Heck"],"i":1447},{"year":1976,"characters":["Joanne Tumolo","Lobo (Will Talltree's Wolf)","Red Wolf (Will Talltrees)","Super-Skrull","Tigra"],"name":"Marvel Chillers #5-7","link":"marvel_chillers_5-7","credits":["Frank Springer","Tony Isabella","Sal Trapani","Will Meugniot","John Byrne","Jim Shooter","George Tuska","Vincent Colletta"],"i":1448},{"year":1976,"characters":["Hulk","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #166-167","link":"fantastic_four_166167","credits":["Roy Thomas","George Perez","Vincent Colletta","Joe Sinnott"],"i":1449},{"year":1976,"characters":["Arthur Nagan","Chondu","Dr. Strange","Elf with a Gun","Hulk","Jack Norriss","Jerry Morgan","Nighthawk","Valkyrie","Wong"],"name":"Defenders #31","link":"defenders_31","credits":["Jim Mooney","Sal Buscema","Steve Gerber"],"i":1450},{"year":1976,"characters":["Beverly Switzler","Howard The Duck","J. Jonah Jameson","Kidney Lady","Officer Tompkins","Spider-Man"],"name":"Howard the Duck #1-3","link":"howard_the_duck_13","credits":["Stephen Leialoha","John Buscema","Frank Brunner","Steve Gerber"],"i":1451},{"year":1976,"characters":["Captain Mar-vell","Drax the Destroyer","Rick Jones","Stranger"],"name":"Captain Marvel #42","link":"captain_marvel_42","credits":["Frank Giacoia","Steve Englehart","Al Milgrom","Mike Esposito"],"i":1452},{"year":1976,"characters":["Black Panther","Jessica Lynne","Kevin Trublood","Lloyd Lynne","Monica Lynne","Roderick Tate"],"name":"Jungle Action #19","link":"jungle_action_19","credits":["Billy Graham","Bob McLeod","Don McGregor"],"i":1453},{"year":1976,"characters":["Blake Tower","Daredevil","Foggy Nelson","Heather Glenn","Man-Bull","Matador"],"name":"Daredevil #129","link":"daredevil_129","credits":["Bob Brown","Klaus Janson","Marv Wolfman"],"i":1454},{"year":1976,"characters":["Mockingbird","Punisher","Wilma Calvin"],"name":"Marvel Super Action #1","link":"marvel_super_action_1","credits":["Archie Goodwin","<b>Title:","\"Red-Eyed Jack is wild!\"","Rico Rival","Frank Springer","<b>Credits:","<em>Huntress<","John Warner","em>","Mike Friedrich","George Evans","Tony DeZuniga"],"i":1455},{"year":1977,"characters":["Bernard Kloss","Ka-Zar","Kirk Marston","Klaw","Seesha","Tandy Snow","Tongah","Zabu"],"name":"Ka-Zar #14-20","link":"kazar_14","credits":["Ernie Chan","Doug Moench","Jack Abel","Larry Hama","Val Mayerik","Mike Esposito"],"i":1456},{"year":1976,"characters":["Arthur Nagan","Chondu","Dr. Strange","Hellstorm","Hulk","Jack Norriss","Jerry Morgan","Nebulon","Nighthawk","Ruby Thursday","Valkyrie"],"name":"Defenders #32-33","link":"defenders_3233","credits":["Jim Mooney","Sal Buscema","Steve Gerber"],"i":1457},{"year":1976,"characters":["Flash Thompson","Harry Osborn","Mary Jane Watson","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #153","link":"amazing_spiderman_153","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1458},{"year":1976,"characters":["Banshee","Colossus","Cyclops","Eric the Red","Havok","Jean Grey","Lilandra","Moira MacTaggert","Nightcrawler","Polaris","Professor X","Steven Lang","Storm","White King","Wolverine"],"name":"Uncanny X-Men #97","link":"uncanny_xmen_97","credits":["Dave Cockrum","Sam Grainger","Chris Claremont"],"i":1459},{"year":1976,"characters":["Doctor Octopus","Kingpin","Sandman","Spider-Man"],"name":"Amazing Spider-Man #154","link":"amazing_spiderman_154","credits":["Sal Buscema","Len Wein","Mike Esposito"],"i":1460},{"year":1979,"characters":["Hawkeye","Purple Man","Two-Gun Kid"],"name":"Marvel Tales #100 (Hawkeye)","link":"marvel_tales_100_hawkeye","credits":["Terry Austin","Scott Edelman","Mike Nasser"],"i":1461},{"year":1976,"characters":["Aurora Rabinowitz","Blade","Deacon Frost","Doctor Sun","Dracula","Frank Drake","Harold H. Harold","Juno","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #41-43","link":"tomb_of_dracula_41-43","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1462},{"year":1976,"characters":["Blake Tower","Candace Nelson","Daredevil","Foggy Nelson","Heather Glenn"],"name":"Daredevil #130","link":"daredevil_130","credits":["Bob Brown","Klaus Janson","Marv Wolfman"],"i":1463},{"year":1976,"characters":["Cat (Shen Kuei)","Juliette (British Spy)","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #38-39","link":"master_of_kung_fu_3839","credits":["Paul Gulacy","Doug Moench","Dan Adkins"],"i":1464},{"year":1976,"characters":["Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Luke Cage","Mr. Fantastic","Puppet Master","Thing","Wrecker"],"name":"Fantastic Four #168-170","link":"fantastic_four_168170","credits":["Roy Thomas","Rich Buckler","George Perez","Joe Sinnott"],"i":1465},{"year":1976,"characters":["Black Panther","Jessica Lynne","Kevin Trublood","Lloyd Lynne","Monica Lynne","Roderick Tate"],"name":"Jungle Action #20-21","link":"jungle_action_20-21","credits":["Billy Graham","Bob McLeod","Don McGregor"],"i":1466},{"year":1976,"characters":["Captain Mar-vell","Drax the Destroyer","Rick Jones","Supreme Intelligence"],"name":"Captain Marvel #43-46","link":"captain_marvel_43-46","credits":["Steve Englehart","Terry Austin","Chris Claremont","Al Milgrom"],"i":1467},{"year":1976,"characters":["Ambrose Connors","Atom-Smasher","Bill Foster","Celia Jackson","Dale West","Henry Pym","Herbert Bell","Iron Man","Talia Kruma","Warhawk","Wasp"],"name":"Black Goliath #1-3","link":"black_goliath_23","credits":["Vincent Colletta","Tony Isabella","Chris Claremont","George Tuska"],"i":1468},{"year":1976,"characters":["Chondu","Dr. Strange","Hulk","Jack Norriss","Nebulon","Nighthawk","Valkyrie","Wong"],"name":"Defenders #34","link":"defenders_34","credits":["Jim Mooney","Sal Buscema","Steve Gerber"],"i":1469},{"year":1976,"characters":["Beast","Bill Foster","Captain America","Falcon","Hawkeye","Henry Pym","Iron Man","Mr. Fantastic","Scarlet Witch","Thor","Vision","Wasp"],"name":"Avengers #145-146","link":"avengers_145-146","credits":["Don Heck","Tony Isabella","Scott Edelman","John Tartaglione","Keith Pollard"],"i":1470},{"year":1976,"characters":["Armstrong Smith","Blake Tower","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man","WHO"],"name":"Amazing Spider-Man #155","link":"amazing_spiderman_155","credits":["Sal Buscema","Len Wein","Mike Esposito"],"i":1471},{"year":1976,"characters":["Bert Rose","Blake Tower","Bullseye","Daredevil","Foggy Nelson","Heather Glenn","Jake Conover"],"name":"Daredevil #131-132","link":"daredevil_132","credits":["Bob Brown","Klaus Janson","Marv Wolfman"],"i":1472},{"year":1976,"characters":["Iron Man","Jude the Entropic Man (Yagzan)","Man-Thing","Molecule Man","Mr. Fantastic","Paul Benton","Professor Marshall","Richard Rory","Sanford","Vision"],"name":"Iron Man annual #3","link":"iron_man_annual_3","credits":["Jack Abel","Sal Buscema","Steve Gerber"],"i":1473},{"year":1976,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Fantastic Four annual #11","link":"fantastic_four_annual_11","credits":["Roy Thomas","Sam Grainger","John Buscema"],"i":1474},{"year":1976,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Marvel Two-In-One annual #1","link":"marvel_two-in-one_annual_1","credits":["Roy Thomas","Sam Grainger","Sal Buscema","George Roussos","John Tartaglione"],"i":1475},{"year":1976,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Marvel Two-In-One #20","link":"marvel_two-in-one_20","credits":["Roy Thomas","Sam Grainger","Sal Buscema"],"i":1476},{"year":1976,"characters":["Bert Rose","Blake Tower","Daredevil","Jester (Jonathan Powers)","Mindwave"],"name":"Daredevil #133","link":"daredevil_133","credits":["Bob Brown","Jim Mooney","Marv Wolfman"],"i":1477},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","James Larner","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #40","link":"master_of_kung_fu_40","credits":["Paul Gulacy","Doug Moench","Dan Adkins"],"i":1478},{"year":1976,"characters":["Aragorn","Arthur Nagan","Chondu","Dr. Strange","Hulk","Jerry Morgan","Nebulon","Nighthawk","Red Guardian (Tania Belinksy)","Ruby Thursday","Valkyrie"],"name":"Defenders #35","link":"defenders_35","credits":["Klaus Janson","Sal Buscema","Steve Gerber"],"i":1479},{"year":1977,"characters":["Betty Brant","Dibbuk","Electro","Foolkiller (Greg Salinger)","Hulk","J. Jonah Jameson","James-Michael Starling","Man-Brute","Nitro","Omega The Unknown","Richard Rory","Ruby Thursday","Ruth Hart","Spider-Man"],"name":"Omega The Unknown #1-10","link":"omega_the_unknown_110","credits":["Lee Elias","Pablo Marcos","Jim Mooney","Scott Edelman","Mike Esposito","Mary Skrenes","Roger Stern","Steve Gerber"],"i":1480},{"year":1976,"characters":["Aragorn","Dr. Strange","Eel","Elf with a Gun","Hulk","Jack Norriss","Luke Cage","Nebulon","Nighthawk","Plantman","Porcupine","Red Guardian (Tania Belinksy)","Valkyrie","Wong"],"name":"Defenders #36-38","link":"defenders_3638","credits":["Klaus Janson","Mary Skrenes","Sal Buscema","Steve Gerber"],"i":1481},{"year":1976,"characters":["Abomination","Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Hulk #195","link":"hulk_195","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1482},{"year":1976,"characters":["Abraham Klein","Guardsman II (Michael O'Brien)","Happy Hogan","Igor (Super Ape)","Iron Man","Mikhlo (Super Ape)","Peator (Super Ape)","Pepper Potts","Red Ghost","Roxanne Gilbert"],"name":"Iron Man #82-83","link":"iron_man_82-83","credits":["Herb Trimpe","Jack Abel","Len Wein","Marie Severin"],"i":1483},{"year":1976,"characters":["Aunt May","Aunt Watson","Betty Brant","Doctor Octopus","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mamie Muggins","Martha Robertson","Mary Jane Watson","Mirage (Desmond Charne)","Ned Leeds","Randy Robertson","Spider-Man"],"name":"Amazing Spider-Man #156","link":"amazing_spiderman_156","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1484},{"year":1976,"characters":["Alex Simmons","Beth Simmons","Christie Chase","Luke Cage","Quentin Chase","Sandra Simmons","Wildfire"],"name":"Power Man #32","link":"power_man_32","credits":["Vincent Colletta","Don McGregor","Frank Robbins"],"i":1485},{"year":1976,"characters":["Bert Rose","Blake Tower","Chameleon","Daredevil","Foggy Nelson","Heather Glenn","Jester (Jonathan Powers)","Maxwell Glenn","Stone (Glenn Industries)","Torpedo"],"name":"Daredevil #134","link":"daredevil_134","credits":["Bob Brown","Jim Mooney","Marv Wolfman"],"i":1486},{"year":1976,"characters":["Guardsman II (Michael O'Brien)","Happy Hogan","Iron Man","Pepper Potts","Roxanne Gilbert"],"name":"Iron Man #84-85","link":"iron_man_84-85","credits":["Herb Trimpe","Roger Slifer","John Tartaglione","Len Wein","Marie Severin"],"i":1487},{"year":1976,"characters":["Bert Rose","Blake Tower","Daredevil","Foggy Nelson","Heather Glenn","Jester (Jonathan Powers)","Killer Croesus","Maxwell Glenn","Spider-Man","Stone (Glenn Industries)"],"name":"Daredevil #135-137","link":"daredevil_135-137","credits":["Bob Brown","John Buscema","Jim Mooney","Marv Wolfman"],"i":1488},{"year":1976,"characters":["Aunt May","Doctor Octopus","Flash Thompson","Glory Grant","Hammerhead","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Liz Allan","Mary Jane Watson","Spider-Man","Tinkerer","Toy"],"name":"Amazing Spider-Man #157-159","link":"amazing_spiderman_157159","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1489},{"year":1976,"characters":["Fly","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man annual #10","link":"amazing_spider-man_annual_10","credits":["Bill Mantlo","Frank Giacoia","Len Wein","Gil Kane","Mike Esposito"],"i":1490},{"year":1976,"characters":["Aunt May","Carter","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Lombardo","Mary Jane Watson","Spider-Man","Tinkerer","Toy"],"name":"Amazing Spider-Man #160","link":"amazing_spider-man_160","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1491},{"year":1976,"characters":["Abomination","Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hulk"],"name":"Hulk #196","link":"hulk_196","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1492},{"year":1976,"characters":["Aurora Rabinowitz","Blade","Deacon Frost","Dr. Strange","Dracula","Hannibal King","Harold H. Harold"],"name":"Tomb of Dracula #44","link":"tomb_of_dracula_44","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1493},{"year":1976,"characters":["Dr. Strange","Dracula","Wong"],"name":"Doctor Strange #14","link":"dr_strange_14","credits":["Steve Englehart","Tom Palmer","Gene Colan"],"i":1494},{"year":1976,"characters":["Anton Lupeski","Blade","Domini","Dr. Strange","Dracula","Frank Drake","Hannibal King","Harold H. Harold","Quincy Harker","Rachel Van Helsing","Saint (dog)","Wong"],"name":"Tomb of Dracula #45-46","link":"tomb_of_dracula_30tomb_of_drac","credits":["Tom Palmer","Gene Coleman","Marv Wolfman"],"i":1495},{"year":1976,"characters":["Azrael","Clea","Dr. Strange","James Mandarin","Rama Kaliph","Satan","Wong"],"name":"Doctor Strange #15-16","link":"doctor_strange_15-16","credits":["Steve Englehart","Tom Palmer","Gene Colan"],"i":1496},{"year":1976,"characters":["Betty Ross","Clay Quartermain","Collector","Doc Samson","General 'Thunderbolt' Ross","Glob","Hulk","Jude the Entropic Man (Yagzan)","Man-Thing"],"name":"Hulk #197-198","link":"hulk_197-198","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1497},{"year":1976,"characters":["Colossus","Flash Thompson","Harry Osborn","J. Jonah Jameson","Jigsaw","Joe 'Robbie' Robertson","Liz Allan","Marla Madison Jameson","Mary Jane Watson","Nightcrawler","Punisher","Spider-Man","Wolverine"],"name":"Amazing Spider-Man #161-162","link":"amazing_spiderman_161162","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1498},{"year":1976,"characters":["Brother Voodoo","Buck Cowan","Doctor Glitternight","Jeesala","Lissa Russell","Raymond Coker","Topaz","Victor Northrup","Werewolf By Night"],"name":"Werewolf By Night #38-41","link":"werewolf_by_night_38-41","credits":["Don Perlin","Doug Moench"],"i":1499},{"year":1976,"characters":["Blizzard","Guardsman II (Michael O'Brien)","Happy Hogan","Iron Man","Pepper Potts"],"name":"Iron Man #86-87","link":"iron_man_86-87","credits":["Vincent Colletta","Bill Mantlo","George Tuska"],"i":1500},{"year":1976,"characters":["Betty Ross","Clay Quartermain","Doc Samson","Gabriel Jones","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Nick Fury"],"name":"Hulk #199","link":"hulk_199","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1501},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","James Larner","Shang-Chi"],"name":"Master of Kung Fu #41","link":"master_of_kung_fu_41","credits":["Doug Moench","Sal Buscema","Mike Esposito"],"i":1502},{"year":1976,"characters":["Captain America","Cheer Chadwick","Falcon","Hesperus Chadwick","Leila Taylor","Mason Harding","William Malcolm Taurey"],"name":"Captain America #193-200","link":"captain_america_193200","credits":["Jack Kirby","D. Bruce Berry","Frank Giacoia"],"i":1503},{"year":1976,"characters":["Abraham Klein","Beast","Blood Brothers","Controller","Daredevil","Guardsman II (Michael O'Brien)","Happy Hogan","Harry Key","Iron Man","Madame Masque","Pepper Potts","Roxanne Gilbert"],"name":"Iron Man #88-91","link":"iron_man_88-91","credits":["Archie Goodwin","Jack Abel","Bob Layton","Jim Shooter","George Tuska","Vincent Colletta","Gerry Conway"],"i":1504},{"year":1977,"characters":["Buck Cowan","Buttons Marston","Daredevil","Elaine Marston","Iron Man","Jarvis","Lissa Russell","Masked Marauder","Topaz","Werewolf By Night"],"name":"Werewolf By Night #42-43","link":"werewolf_by_night_43","credits":["Don Perlin","Doug Moench"],"i":1505},{"year":1976,"characters":["Brother Inquisitor","Brother Wonderful","Captain America","Contemplator","Falcon","Leila Taylor","Mason Harding","Sharon Carter","Texas Jack Muldoon"],"name":"Marvel Treasury Special: Captain America's Bicentennial Battles, Captain America #201-203","link":"captain_america_203","credits":["Herb Trimpe","Barry Windsor-Smith","Frank Giacoia","Jack Kirby","John Romita Sr."],"i":1506},{"year":1975,"characters":["Coot Collier","Cosgrove (Delanzy accountant)","Denny Armstrong","Ghost Rider (Johnny Blaze)","Gus Utermohle","Jesus (Ghost Rider's Friend)","Karen Page","Orb","Richard Pini","Roxanne Simpson","Stunt-Master","Wendy Pini"],"name":"Ghost Rider #14-15","link":"ghost_rider_14-15","credits":["Don Heck","Bob Brown","Tony Isabella","George Tuska","Vincent Colletta"],"i":1507},{"year":1976,"characters":["Ghost Rider (Johnny Blaze)"],"name":"Ghost Rider #16","link":"ghost_rider_16","credits":["Vincent Colletta","Bill Mantlo","George Tuska"],"i":1508},{"year":1977,"characters":["Angel","Ares","Athena","Black Widow","Cerberus (Greek myth)","Crimson Dynamo IV","Darkstar","Dionysius","Emerson Bale","Ghost Rider (Johnny Blaze)","Griffin","Hercules","Hippolyta","Huntsman","Iceman","Ivan Petrovitch","Pluto","Rampage","Richard Fenster","Titanium Man","Venus","Zeus"],"name":"Champions #1-10","link":"champions_113","credits":["Bill Mantlo","Bob Hall","Don Heck","Bruce D. Patterson","Frank Giacoia","Tony Isabella","Chris Claremont","John Tartaglione","Bob Layton","George Tuska","Vincent Colletta","Mike Esposito"],"i":1509},{"year":1976,"characters":["Daredevil","Dr. Strange","Emerson Bale","Hulk","Iron Man","J. Jonah Jameson","Jean DeWolff","Moondragon","Nick Fury","Professor X","Spider-Man","Wraith"],"name":"Marvel Team-Up #48-51","link":"marvel_team-up_48-51","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1510},{"year":1976,"characters":["Coot Collier","Death-Stalker","Ghost Rider (Johnny Blaze)","Hellstorm","Karen Page","Katherine Reynolds","Mephisto","Richard Pini","Roxanne Simpson","Smasher (Ghost Rider Foe)","Stunt-Master","Wendy Pini"],"name":"Ghost Rider #17-19","link":"ghost_rider_17-19","credits":["Vincent Colletta","Tony Isabella","Frank Robbins","Jim Shooter"],"i":1511},{"year":1976,"characters":["Blake Tower","Daredevil","Death-Stalker","Foggy Nelson","Ghost Rider (Johnny Blaze)","Heather Glenn","Karen Page","Roxanne Simpson","Smasher (Ghost Rider Foe)","Stone (Glenn Industries)","Stunt-Master"],"name":"Daredevil #138","link":"daredevil_138","credits":["John Byrne","Jim Mooney","Marv Wolfman"],"i":1512},{"year":1976,"characters":["Daredevil","Death-Stalker","Ghost Rider (Johnny Blaze)","Karen Page","Roxanne Simpson","Smasher (Ghost Rider Foe)","Stunt-Master"],"name":"Ghost Rider #20","link":"ghost_rider_20","credits":["John Byrne","Don Perlin","Marv Wolfman"],"i":1513},{"year":2011,"characters":["Angel","Black Widow","Gambit","Ghost Rider (Johnny Blaze)","Hercules","Iceman","MODOK","Rampage","Spat"],"name":"Gambit and the Champions: From the Marvel Vault #1","link":"gambit_and_the_champions_from_","credits":["Scott Lobdell","George Tuska"],"i":1514},{"year":1977,"characters":["Flash Thompson","Glory Grant","Harry Osborn","Joe 'Robbie' Robertson","Kingpin","Liz Allan","Lizard","Mamie Muggins","Mary Jane Watson","Randy Robertson","Richard Fisk","Spider-Man","Vanessa Fisk"],"name":"Amazing Spider-Man #163-164","link":"amazing_spider-man_163-164","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1515},{"year":1976,"characters":["Flash Thompson","Glory Grant","Lightmaster","Mary Jane Watson","Spider-Man","Tarantula"],"name":"Peter Parker, the Spectacular Spider-Man #1","link":"peter_parker_the_spectacular_s_46","credits":["Mike Esposito","Sal Buscema","Gerry Conway"],"i":1516},{"year":1976,"characters":["Aunt May","Batroc","Brother Inquisitor","Brother Wonderful","Captain America","Falcon","J. Jonah Jameson","Joe 'Robbie' Robertson","Leila Taylor","Mary Jane Watson","Spider-Man","Texas Jack Muldoon"],"name":"Marvel Team-Up #52","link":"marvel_team-up_52","credits":["Mike Esposito","Sal Buscema","Gerry Conway"],"i":1517},{"year":1977,"characters":["Aunt May","Aunt Watson","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Kraven the Hunter","Lightmaster","Lizard","Spider-Man","Tarantula"],"name":"Peter Parker, the Spectacular Spider-Man #2","link":"peter_parker_the_spectacular_s_47","credits":["Mike Esposito","Sal Buscema","Gerry Conway"],"i":1518},{"year":1977,"characters":["Brother Power","Flash Thompson","Glory Grant","Joe 'Robbie' Robertson","Lightmaster","Sha Shan","Spider-Man","Tarantula"],"name":"Peter Parker, the Spectacular Spider-Man #3","link":"peter_parker_the_spectacular_s_48","credits":["Mike Esposito","Jim Shooter","Sal Buscema","Gerry Conway"],"i":1519},{"year":1976,"characters":["Angel","Beast","Black Widow","Captain America","General Pollock","Ghost Rider (Johnny Blaze)","Hellcat","Henry Pym","Hercules","Iceman","Iron Man","Jarvis","Living Laser","Moondragon","Sam Reuther","Scarlet Witch","Thing","Thor","Vision","Wasp","Whizzer","Wonder Man"],"name":"Avengers #150-151","link":"avengers_150151","credits":["George Perez","Duffy Vohland","Dick Ayers","Stan Lee","John Tartaglione","Jack Kirby","Steve Englehart","Jim Shooter","Gerry Conway"],"i":1520},{"year":1976,"characters":["Beast","Black Talon II","Captain America","Damballah","Henry Pym","Iron Man","Jarvis","Sam Reuther","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #152","link":"avengers_152","credits":["Joe Sinnott","Steve Englehart","John Buscema","Gerry Conway"],"i":1521},{"year":1976,"characters":["Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Hulk #200","link":"hulk_200","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1522},{"year":1976,"characters":["Destroyer (Asgardian armor)","Galactus","Gorr","High Evolutionary","Human Torch","Impossible Man","Invisible Woman","Mr. Fantastic","Nova (Frankie Raye)","Thing","Torgo"],"name":"Fantastic Four #171-175","link":"fantastic_four_171175","credits":["Bill Mantlo","George Perez","Carla Conway","John Buscema","Joe Sinnott","Roy Thomas","Rich Buckler","David Hunt"],"i":1523},{"year":1976,"characters":["Ancient One","Azrael","Clea","Dr. Strange","James Mandarin","Xander"],"name":"Doctor Strange #17-19","link":"doctor_strange_17-19","credits":["Marv Wolfman","Tom Palmer","Gene Colan","Steve Englehart","Alfredo P. Alcala"],"i":1524},{"year":1976,"characters":["Ast (Time-Keeper)","Ast (Time-Twister)","Balder","Fandral","Heimdall","Hogun","Horus","Igron","Isis","Jane Foster","Mangog","Mimir","Odin","Osiris","Servitor","Seth","Sif","Thor","Tyr","Vizier","Volstagg","Vort (Time-Keeper)","Vort (Time-Twister)","Zanth (Time-Keeper)","Zanth (Time-Twister)","Zarrko the Tomorrow Man"],"name":"Thor #240-245","link":"thor_240-245","credits":["Bill Mantlo","John Buscema","Joe Sinnott","Roy Thomas","Sal Buscema","Klaus Janson","Len Wein"],"i":1525},{"year":1976,"characters":["Dr. Doom","Human Torch","Invisible Woman","Mr. Fantastic","Shroud","Sub-Mariner","Thing"],"name":"Super-Villain Team-Up #5","link":"supervillain_teamup_57","credits":["Herb Trimpe","Steve Englehart","Don Perlin"],"i":1526},{"year":1976,"characters":["Black Panther","Daredevil","Foggy Nelson","Heather Glenn","Sub-Mariner","Thunderbolt"],"name":"Daredevil annual #4","link":"daredevil_annual_4","credits":["Frank Chiaramonte","Chris Claremont","George Tuska","Marv Wolfman"],"i":1527},{"year":1976,"characters":["Amon (Demon Steed)","Hecate (Demon Steed)","Hellstorm","Satan","Set (Demon Steed)"],"name":"Son of Satan #2-3","link":"son_of_satan_2-3","credits":["John Warner","Sonny Trinidad"],"i":1528},{"year":1975,"characters":["Hercules","Richard Fenster","Typhon","Zeus"],"name":"Marvel Premiere #26","link":"marvel_premiere_26","credits":["Vincent Colletta","Bill Mantlo","George Tuska"],"i":1529},{"year":1976,"characters":["Hulk"],"name":"Hulk #201","link":"hulk_201","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1530},{"year":1977,"characters":["Horus","Human Torch","Isis","Osiris","Seth","Thing","Thor","Tom Lightner"],"name":"Marvel Two-In-One #21-23","link":"marvel_two-in-one_23","credits":["Bill Mantlo","Pablo Marcos","Marie Severin- Penciler","Ron Wilson","Jim Shooter"],"i":1531},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","Dr. Petrie","James Larner","Shang-Chi","Shockwave","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #42","link":"master_of_kung_fu_42","credits":["Paul Gulacy","Tom Sutton","Doug Moench"],"i":1532},{"year":1976,"characters":["Balder","Fandral","Firelord","Hildegarde","Hogun","Igron","Jane Foster","Mangog","Thor","Volstagg"],"name":"Thor #246-247","link":"thor_246","credits":["Joe Sinnott","John Buscema","Len Wein","Marv Wolfman"],"i":1533},{"year":1976,"characters":["Iron Fist","Shang-Chi"],"name":"Master of Kung Fu annual #1","link":"master_of_kung_fu_annual_1","credits":["Keith Pollard","Duffy Vohland","Doug Moench","John Tartaglione"],"i":1534},{"year":1977,"characters":["Billy Connors","Flash Thompson","Glory Grant","Harry Osborn","J. Jonah Jameson","Liz Allan","Lizard","Marla Madison Jameson","Martha Connors","Mary Jane Watson","Randy Robertson","Spider-Man","Stegron"],"name":"Amazing Spider-Man #165-166","link":"amazing_spider-man_165-166","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1535},{"year":1976,"characters":["Alan Cavenaugh","Angar the Screamer","August Personage In Jade","Colleen Wing","Iron Fist","Jeryn Hogarth","Khumbala Bey","Lei Kung the Thunderer","Master Khan","Misty Knight","Scimitar II"],"name":"Iron Fist #5-7","link":"iron_fist_57","credits":["John Byrne","Chris Claremont","Frank Chiaramonte"],"i":1536},{"year":1976,"characters":["Clea","Commissioner Feingold","Dr. Strange","Jack Norriss","Luke Cage","Nighthawk","Red Guardian (Tania Belinksy)","Valkyrie","Wong"],"name":"Defenders #39","link":"defenders_39","credits":["Klaus Janson","Sal Buscema","Steve Gerber"],"i":1537},{"year":1977,"characters":["Brother Power","Flash Thompson","Hitman","Mary Jane Watson","Morgan","Sha Shan","Spider-Man","Vulture"],"name":"Peter Parker, the Spectacular Spider-Man #4-5","link":"peter_parker_the_spectacular_s_49","credits":["Sal Buscema","Archie Goodwin","Mike Esposito"],"i":1538},{"year":1976,"characters":["Fandral","Hogun","Volstagg"],"name":"Marvel Spotlight #30","link":"marvel_spotlight_30","credits":["Joe Sinnott","Len Wein","John Buscema"],"i":1539},{"year":1976,"characters":["Bill Foster","Celia Jackson","Centurion","Dale West","Herbert Bell","Iron Man","Regina Clayborne","Stilt-Man","Talia Kruma"],"name":"Black Goliath #4-5","link":"black_goliath_45","credits":["Keith Pollard","Rich Buckler","Don Heck","Chris Claremont"],"i":1540},{"year":1977,"characters":["Aunt May","Aunt Watson","Flash Thompson","Green Goblin (Bart Hamilton)","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Jonas Harrow","Liz Allan","Marla Madison Jameson","Mary Jane Watson","Spider-Man","Will O' The Wisp"],"name":"Amazing Spider-Man #167-168","link":"amazing_spider-man_167-168","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1541},{"year":1976,"characters":["Frenchie","Marlene Alraune","Moon Knight","Samuels"],"name":"Marvel Spotlight #29","link":"marvel_spotlight_29","credits":["Don Perlin","Doug Moench"],"i":1542},{"year":1976,"characters":["Black Panther","Jessica Lynne","Kevin Trublood","Lloyd Lynne","Monica Lynne"],"name":"Jungle Action #22","link":"jungle_action_22","credits":["Don McGregor","Jim Mooney","Bob Mcleod","Rich Buckler","Billy Graham"],"i":1543},{"year":1977,"characters":["Bill Foster","Dale West","Herbert Bell","Hijacker","Iron Man","Talia Kruma","Thing"],"name":"Marvel Two-In-One #24","link":"marvel_two-in-one_24","credits":["Bill Mantlo","Pablo Marcos","Sal Buscema","Jim Shooter"],"i":1544},{"year":1976,"characters":["Alex Simmons","Beth Simmons","Charlton Grundge","Claire Temple","D.W. Griffith","Grassy Moss","Luke Cage","Noah Burstein","Quentin Chase","Sandra Simmons","Win (DW's girlfriend)"],"name":"Power Man #33","link":"power_man_33","credits":["Vincent Colletta","Don McGregor","Frank Robbins"],"i":1545},{"year":1977,"characters":["Abe Brown","Awilda Ayala","Bob Diamond","Filippo Ayala","Harmony Killdragon","Iron Fist","Jack of Hearts","James D'Angelo","Lin Sun","Lotus Shinchuko","Misty Knight","Nathaniel 'Blackbyrd' Byrd","Shang-Chi","White Tiger"],"name":"Deadly Hands of Kung Fu #31-32","link":"deadly_hands_of_kung_fu_31-32","credits":["Joe Staton","Bill Mantlo","Sonny Trinidad","Michelle Brand"],"i":1546},{"year":1976,"characters":["Alan Cavenaugh","Chaka","Colleen Wing","Iron Fist","Jeryn Hogarth","Joy Meachum","Mary Jane Watson","Misty Knight","Rafael Scarfe","Spider-Man","Steel Serpent","Ward Meachum","William Hao"],"name":"Iron Fist #8-10","link":"iron_fist_810","credits":["Frank Chiaramonte","John Byrne","Chris Claremont","Dan Adkins"],"i":1547},{"year":1976,"characters":["Beverly Switzler","Howard The Duck","Paul Same"],"name":"Howard the Duck #4","link":"howard_the_duck_4","credits":["Stephen Leialoha","Gene Colan","Steve Gerber"],"i":1548},{"year":1976,"characters":["Balder","Fandral","Heimdall","Hildegarde","Hogun","Igron","Jane Foster","Karnilla","Krista","Mangog","Sif","Thor","Vizier","Volstagg"],"name":"Thor #248-250","link":"thor_248249","credits":["John Buscema","Tony DeZuniga","Len Wein","Marv Wolfman"],"i":1549},{"year":1977,"characters":["Alicia Masters","Iron Fist","Thing"],"name":"Marvel Two-In-One #25","link":"marvel_two-in-one_25","credits":["Ron Wilson","Sam Grainger","Marv Wolfman"],"i":1550},{"year":1977,"characters":["Burglar (Carradine)","Dr. Faustus","Green Goblin (Bart Hamilton)","Harry Osborn","J. Jonah Jameson","Liz Allan","Marla Madison Jameson","Spider-Man"],"name":"Amazing Spider-Man #169-170","link":"amazing_spider-man_169-170","credits":["Frank Giacoia","Ross Andru","Len Wein","Mike Esposito"],"i":1551},{"year":1976,"characters":["Anubis","Hellstorm","Seripha Thames"],"name":"Son of Satan #4-7","link":"son_of_satan_4-7","credits":["John Warner","Sonny Trinidad","P. Craig Russell","Ed Hannigan"],"i":1552},{"year":1976,"characters":["Clea","Dr. Strange","Xander"],"name":"Doctor Strange #20","link":"doctor_strange_20","credits":["Rudy D. Nebres","Marv Wolfman"],"i":1553},{"year":1976,"characters":["Ancient One","Dr. Strange"],"name":"Dr. Strange annual #1","link":"dr_strange_annual_1","credits":["P. Craig Russell","Marv Wolfman"],"i":1554},{"year":1977,"characters":["Apalla","Clea","Dr. Strange","Wong"],"name":"Doctor Strange #22","link":"doctor_strange_22","credits":["Rudy D. Nebres","Marv Wolfman"],"i":1555},{"year":1977,"characters":["Cory Payne","Deathlok (alt. Luther Manning)","Devil-Slayer"],"name":"Marvel Spotlight #33","link":"marvel_spotlight_33","credits":["Klaus Janson","Arvell Malcom Jones","Mike Nasser","Rich Buckler","David Anthony Kraft"],"i":1556},{"year":1977,"characters":["Count Otto Vermis","Nick Fury","Spider-Woman (Jessica Drew)"],"name":"Marvel Spotlight #32","link":"marvel_spotlight_32","credits":["Sal Buscema","Jim Mooney","Archie Goodwin"],"i":1557},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","Ducharme","Leiko Wu","Shang-Chi","Shockwave","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #43","link":"master_of_kung_fu_43","credits":["Paul Gulacy","Doug Moench","Jack Abel"],"i":1558},{"year":1976,"characters":["Alex Simmons","Bertha","Beth Simmons","Christie Chase","D.W. Griffith","Luke Cage","Mangler (Luke Cage villain)","Noah Burstein","Oliver P. Sinagle","Quentin Chase","Spear","Win (DW's girlfriend)"],"name":"Power Man #34","link":"power_man_34","credits":["Frank Springer","Don McGregor","Frank Robbins"],"i":1559},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","Dr. Petrie","Ducharme","Fah Lo Suee","Fu Manchu","Leiko Wu","Shang-Chi","Shockwave","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #44-45","link":"master_of_kung_fu_4445","credits":["Paul Gulacy","Doug Moench","Pablo Marcos","Jack Abel"],"i":1560},{"year":1976,"characters":["Woodgod"],"name":"Marvel Premiere #31","link":"marvel_premiere_31","credits":["Keith Giffen","Bill Mantlo","Klaus Janson"],"i":1561},{"year":1976,"characters":["Betty Ross","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jarella","Psyklop"],"name":"Hulk #202-203","link":"hulk_202-203","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1562},{"year":1976,"characters":["Anton Lupeski","Aurora Rabinowitz","Blade","Domini","Dracula","Frank Drake","Hannibal King","Harold H. Harold","Rachel Van Helsing","Safron Caulder"],"name":"Tomb of Dracula #47","link":"tomb_of_dracula_47","credits":["Gene Colan","Tom Palmer","Marv Wolfman"],"i":1563},{"year":1976,"characters":["Alex Simmons","Bertha","Beth Simmons","Claire Temple","D.W. Griffith","Luke Cage","Mangler (Luke Cage villain)","Noah Burstein","Quentin Chase","Sandra Simmons","Spear"],"name":"Power Man #35","link":"power_man_35","credits":["Marv Wolfman","Don McGregor","Frank Giacoia","Joe Giella","Marie Severin"],"i":1564},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","Fah Lo Suee","Fu Manchu","Leiko Wu","Shang-Chi"],"name":"Master of Kung Fu #46","link":"master_of_kung_fu_46","credits":["Paul Gulacy","Doug Moench","Pablo Marcos"],"i":1565},{"year":1976,"characters":["Bernie Dillon","Caps Cooper","Charles Rider","Donna-Lee Dover","Ginger Jaye-Firestone","Gloria Rider","Mike Burley","Nova (Rich Rider)","Robbie Rider"],"name":"Nova #1","link":"nova_1","credits":["Joe Sinnott","John Buscema","Marv Wolfman"],"i":1566},{"year":1976,"characters":["Balder","Fandral","Harokin","Hela","Hogun","Karnilla","Sif","Thor","Vizier","Volstagg"],"name":"Thor #251","link":"thor_251","credits":["Tony DeZuniga","Len Wein","John Buscema"],"i":1567},{"year":1976,"characters":["Luke Cage","Moses Magnum","White King"],"name":"Power Man annual #1","link":"power_man_annual_1","credits":["Lee Elias","David Hunt","Chris Claremont"],"i":1568},{"year":1976,"characters":["Black Jack Tarr","Clive Reston","Dr. Petrie","Ducharme","Fah Lo Suee","Fu Manchu","James Larner","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith","Ward Sarsfield"],"name":"Master of Kung Fu #47","link":"master_of_kung_fu_47","credits":["Paul Gulacy","Doug Moench","Pablo Marcos"],"i":1569},{"year":1976,"characters":["Betty Ross","Crypto-Man","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jarella","Temporal Man"],"name":"Hulk #204-205","link":"hulk_204205","credits":["Herb Trimpe","Sal Buscema","Joe Staton","Len Wein"],"i":1570},{"year":1976,"characters":["Clea","Daredevil","Dr. Strange","Elf with a Gun","Hulk","Jack Norriss","Luke Cage","Nighthawk","Red Guardian (Tania Belinksy)","Valkyrie","Wong"],"name":"Defenders #40","link":"defenders_40","credits":["Klaus Janson","Sal Buscema","Steve Gerber"],"i":1571},{"year":1977,"characters":["Black Jack Tarr","Clive Reston","Fah Lo Suee","Fu Manchu","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith","Ward Sarsfield"],"name":"Master of Kung Fu #48-51","link":"master_of_kung_fu_4851","credits":["Doug Moench","Pablo Marcos","Dan Adkins","Jack Abel","Paul Gulacy","Mike Esposito"],"i":1572},{"year":1976,"characters":["Bernie Dillon","Caps Cooper","Condor","Donna-Lee Dover","Ginger Jaye-Firestone","Gloria Rider","Mike Burley","Nova (Rich Rider)","Powerhouse","Robbie Rider"],"name":"Nova #2","link":"nova_2","credits":["Joe Sinnott","John Buscema","Marv Wolfman"],"i":1573},{"year":1977,"characters":["Betty Ross","Clay Quartermain","Doc Samson","Dr. Strange","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jarella","Jarvis","Nighthawk","Red Guardian (Tania Belinksy)","Valkyrie","Wong"],"name":"Hulk #206-207","link":"hulk_206207","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1574},{"year":1976,"characters":["Captain Britain","Merlin","Reaver","Roma"],"name":"Captain Britain #1-2","link":"captain_britain_1","credits":["Herb Trimpe","Fred Kida","Chris Claremont","Larry Lieber"],"i":1575},{"year":1976,"characters":["Monark Starstalker"],"name":"Marvel Premiere #32","link":"marvel_premiere_32","credits":["Howard Chaykin"],"i":1576},{"year":1977,"characters":["Black Bolt","Crystal","Falzon","Gorgon","Iridia","Karnak","Lockjaw","Medusa","Quicksilver","Triton"],"name":"Inhumans #7-8,10","link":"inhumans_7-810","credits":["George Perez","Doug Moench","Don Perlin","Keith Pollard","Gil Kane"],"i":1577},{"year":1977,"characters":["Absorbing Man","April Sommers","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jim Wilson","Leader"],"name":"Hulk #208","link":"hulk_208","credits":["Joe Staton","Sal Buscema","Len Wein"],"i":1578},{"year":1976,"characters":["Arthur Nagan","Chondu","Dr. Strange","Hulk","Jack Norriss","Jerry Morgan","Luke Cage","Nebulon","Nighthawk","Red Guardian (Tania Belinksy)","Ruby Thursday","Valkyrie"],"name":"Defenders annual #1","link":"defenders_annual_1","credits":["Klaus Janson","Sal Buscema","Steve Gerber"],"i":1579},{"year":1976,"characters":["Bernie Dillon","Caps Cooper","Charles Rider","Condor","Diamondhead","Donna-Lee Dover","Ginger Jaye-Firestone","Gloria Rider","Mike Burley","Nova (Rich Rider)","Robbie Rider"],"name":"Nova #3","link":"nova_3","credits":["Tom Palmer","Sal Buscema","Marv Wolfman"],"i":1580},{"year":1976,"characters":["Balder","Geirrodur","Karnilla","Mimir","Sif","Thor","Ulik","Vizier"],"name":"Thor #252-253","link":"thor_252-253","credits":["Tony DeZuniga","Len Wein","John Buscema"],"i":1581},{"year":1976,"characters":["Clea","Dr. Strange","Hulk","Jack Norriss","Nighthawk","Red Guardian (Tania Belinksy)","Shazana","Trish Starr","Valkyrie"],"name":"Defenders #41","link":"defenders_41","credits":["Klaus Janson","Sal Buscema","Steve Gerber"],"i":1582},{"year":1977,"characters":["Carlo Zota","Dr. Strange","Hulk","Jerome Hamilton","Kismet (Her)","Maris Morlak","Wladyslav Shinski"],"name":"Hulk annual #6","link":"hulk_annual_6","credits":["Herb Trimpe","Frank Giacoia","Len Wein","David Anthony Kraft","Mike Esposito"],"i":1583},{"year":1976,"characters":["Beast","Captain America","Henry Pym","Iron Man","Jarvis","Living Laser","Scarlet Witch","Vision","Wasp","Whizzer","Wonder Man"],"name":"Avengers #153","link":"avengers_153","credits":["Joe Sinnott","John Buscema","Gerry Conway"],"i":1584},{"year":1976,"characters":["Beast","Captain America","General Pollock","Henry Pym","Iron Man","Jarvis","Living Laser","Nuklo","Scarlet Witch","Vision","Wasp","Whirlwind","Whizzer","Wonder Man"],"name":"Avengers annual #6","link":"avengers_annual_6","credits":["Herb Trimpe","George Perez","Duffy Vohland","Gerry Conway","Scott Edelman","John Tartaglione","Mike Esposito"],"i":1585},{"year":1977,"characters":["Black Bolt","Falzon","Gorgon","Karnak","Lockjaw","Medusa","Pursuer","Triton"],"name":"Inhumans #11","link":"inhumans_11","credits":["Keith Pollard","Doug Moench","Jim Mooney"],"i":1586},{"year":1976,"characters":["Abraham Klein","Guardsman II (Michael O'Brien)","Harry Key","Iron Man","Madame Masque","Melter"],"name":"Iron Man #92","link":"iron_man_92","credits":["Jack Abel","George Tuska","Gerry Conway"],"i":1587},{"year":1976,"characters":["Captain Mar-vell","Cheetah","Human Torch","Kree Sentry 459","Mac-Ronn","Mordecai P. Boggs","Rick Jones","Ronan the Accuser","Tara (Kree)"],"name":"Captain Marvel #47","link":"captain_marvel_47","credits":["Bill Mantlo","Al Milgrom","Gerry Conway"],"i":1588},{"year":1977,"characters":["Bertha","Chemistro","Chemistro II","Claire Temple","D.W. Griffith","Luke Cage","Noah Burstein","Oliver P. Sinagle"],"name":"Power Man #37-40","link":"power_man_3738","credits":["Lee Elias","Bill Mantlo","Marv Wolfman","Bob Brown","Jim Mooney","Frank Giacoia","Klaus Janson","Ron Wilson","Aubrey Bradford"],"i":1589},{"year":1976,"characters":["Bernie Dillon","Corruptor","Donna-Lee Dover","Ginger Jaye-Firestone","Mike Burley","Nova (Rich Rider)","Thor"],"name":"Nova #4","link":"nova_4","credits":["Tom Palmer","Sal Buscema","Marv Wolfman"],"i":1590},{"year":1977,"characters":["Balder","Fandral","Hogun","Karnilla","Sif","Thor","Vizier","Volstagg"],"name":"Thor #255","link":"thor_255","credits":["Tony DeZuniga","Len Wein"],"i":1591},{"year":1976,"characters":["Beverly Switzler","Black Hole","Doctor Angst","Dr. Strange","Howard The Duck","Hulk","Kidney Lady","Mary Jane Watson","Nighthawk","Rev. Joon Moon","Sitting Bullseye","Spanker","Spider-Man","Tillie the Hun","Valkyrie"],"name":"Howard the Duck #5-7, Marvel Treasury Edition #12","link":"howard_the_duck_57_marvel_trea","credits":["Stephen Leialoha","Sal Buscema","Gene Colan","Klaus Janson","Steve Gerber"],"i":1592},{"year":1977,"characters":["Beverly Switzler","Clea","Dr. Strange","Howard The Duck"],"name":"Howard the Duck #8","link":"howard_the_duck_8","credits":["Stephen Leialoha","Gene Colan","Steve Gerber"],"i":1593},{"year":1977,"characters":["Balder","Fandral","Grey Gargoyle","Hogun","Karnilla","Recorder","Sif","Thor","Volstagg"],"name":"Thor #256-257","link":"thor_256-257","credits":["Tony DeZuniga","Len Wein","John Buscema"],"i":1594},{"year":1976,"characters":["Black Panther","Jessica Lynne","Kevin Trublood","Lloyd Lynne","Monica Lynne","Roderick Tate","Windeagle"],"name":"Jungle Action #24","link":"jungle_action_24","credits":["Keith Pollard","Rich Buckler","Don McGregor"],"i":1595},{"year":1977,"characters":["Black Bolt","Crystal","Falzon","Gorgon","Hulk","Iridia","Karnak","Lockjaw","Medusa","Pursuer","Quicksilver","Thraxon","Triton"],"name":"Inhumans #12","link":"inhumans_12","credits":["Keith Pollard","Bob Wiacek","Doug Moench"],"i":1596},{"year":1976,"characters":["Aurora Rabinowitz","Blade","Blade Doppelganger","Domini","Dracula","Frank Drake","Hannibal King","Harold H. Harold","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #48","link":"tomb_of_dracula_48","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1597},{"year":1976,"characters":["Anton Lupeski","Blade","Blade Doppelganger","Domini","Dracula","Frank Drake","Hannibal King","Harold H. Harold","Rachel Van Helsing"],"name":"Tomb of Dracula #49","link":"tomb_of_dracula_49","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1598},{"year":1976,"characters":["Anton Lupeski","Blade","Blade Doppelganger","Deacon Frost","Domini","Dracula","Frank Drake","Golden Angel","Hannibal King","Harold H. Harold","Quincy Harker","Rachel Van Helsing","Saint (dog)","Silver Surfer"],"name":"Tomb of Dracula #50-51","link":"tomb_of_dracula_50-51","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1599},{"year":1976,"characters":["Daredevil","Jake Conover"],"name":"Daredevil #139","link":"daredevil_139","credits":["Jim Mooney","Sal Buscema","Marv Wolfman"],"i":1600},{"year":1977,"characters":["Captain Mar-vell","Cheetah","Ethan Wilford","Kree Sentry 459","Lizzie Wilford","Mac-Ronn","Rick Jones","Ronan the Accuser","Tara (Kree)"],"name":"Captain Marvel #48-49","link":"captain_marvel_48-49","credits":["Al Milgrom","Terry Austin","Scott Edelman","the West Coast Wombats","Gerry Conway"],"i":1601},{"year":1977,"characters":["Balder","Enchantress","Executioner","Fandral","Grey Gargoyle","Hogun","Karnilla","Recorder","Sif","Thor","Vizier","Volstagg"],"name":"Thor #258-259","link":"thor_258","credits":["Tony DeZuniga","Len Wein","John Buscema"],"i":1602},{"year":1977,"characters":["Blade","Blade Doppelganger","Domini","Dracula","Frank Drake","Golden Angel","Hannibal King","Harold H. Harold","Rachel Van Helsing","Safron Caulder"],"name":"Tomb of Dracula #52","link":"tomb_of_dracula_52","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1603},{"year":2007,"characters":["Aunt May","Carol Danvers","Destructor","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Scorpion","Spider-Man"],"name":"Ms. Marvel #1","link":"ms_marvel_1","credits":["Joe Sinnott","David Hunt","John Buscema","Gerry Conway"],"i":1604},{"year":1976,"characters":["Contessa Valentina Allegro De La Fontaine","Nick Fury"],"name":"Marvel Spotlight #31","link":"marvel_spotlight_31","credits":["Howard Chaykin","Jim Starlin"],"i":1605},{"year":1976,"characters":["Dr. Doom","Human Torch","Invisible Woman","Joseph Jennings","Mr. Fantastic","Namorita","Shroud","Sub-Mariner","Tamara Rahn","Thing"],"name":"Super-Villain Team-Up #6-7","link":"super-villain_team-up_6-7","credits":["Herb Trimpe","Steve Englehart","Pablo Marcos","Jack Abel"],"i":1606},{"year":1977,"characters":["Balder","Destroyer (Asgardian armor)","Enchantress","Executioner","Fandral","Hogun","Karnilla","Kroda the Duelist","Loki","Odin","Recorder","Sif","Soul-Eater","Thor","Volstagg"],"name":"Thor #260-266","link":"thor_260-266","credits":["Ernie Chan","Walt Simonson","Joe Sinnott","Len Wein","Tony DeZuniga"],"i":1607},{"year":1977,"characters":["Blade","Blade Doppelganger","Deacon Frost","Domini","Dracula","Frank Drake","Hannibal King","Harold H. Harold","Hellstorm","Rachel Van Helsing","Safron Caulder"],"name":"Tomb of Dracula #53","link":"tomb_of_dracula_53","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1608},{"year":1976,"characters":["Boris (Doom's servant)","Clown","Dr. Doom","Ernesto Gambonno","Henry Croft","Human Cannonball","Joseph Jennings","Luigi Gambonno","Namorita","Prince Rudolfo","Princess Python","Ringmaster","Shroud","Sub-Mariner","Tamara Rahn"],"name":"Super-Villain Team-Up #8","link":"supervillain_teamup_8","credits":["Keith Giffen","Steve Englehart","Owen McCarron"],"i":1609},{"year":1976,"characters":["Attuma","Beast","Captain America","Henry Pym","Iron Man","Jarvis","Lord Arno","Scarlet Witch","Tyrak","Vision","Wasp","Whizzer","Wonder Man"],"name":"Avengers #154","link":"avengers_154","credits":["George Perez","Pablo Marcos","Gerry Conway"],"i":1610},{"year":1976,"characters":["Attuma","Beast","Captain America","Dr. Doom","Henry Pym","Iron Man","Namorita","Prince Rudolfo","Princess Python","Scarlet Witch","Shroud","Sub-Mariner","Tamara Rahn","Vision","Wasp","Whizzer","Wonder Man"],"name":"Super-Villain Team-Up #9","link":"supervillain_teamup_9","credits":["Bill Mantlo","Sal Trapani","Jim Shooter"],"i":1611},{"year":1977,"characters":["Attuma","Beast","Captain America","Dr. Doom","Henry Pym","Iron Man","Joseph Jennings","Lord Arno","Namorita","Scarlet Witch","Sub-Mariner","Tamara Rahn","Tyrak","Vision","Wasp","Whizzer","Wonder Man"],"name":"Avengers #155-156","link":"avengers_155156","credits":["George Perez","Pablo Marcos","Sal Buscema","Jim Shooter","Gerry Conway"],"i":1612},{"year":1977,"characters":["Beast","Bill Bishop","Black Bolt","Captain America","Captain Mar-vell","Crystal","Doctor Minerva","Ethan Wilford","Falzon","Gertie","Gorgon","Iron Man","J. Jonah Jameson","Jarvis","K.C. Ritter","Karnak","Lizzie Wilford","Lockjaw","Mac-Ronn","Medusa","Mercurio the 4-D Man","Mike 'Mousy' Armstrong","Mordecai P. Boggs","Phae-Dor","Rachel 'Dandy' Dandridge","Rick Jones","Ronan the Accuser","Scarlet Witch","Super-Adaptoid","Triton","Vision"],"name":"Captain Marvel #50-53","link":"captain_marvel_50-53","credits":["Al Milgrom","Bob Wiacek","Terry Austin","Scott Edelman"],"i":1613},{"year":1978,"characters":["Captain Mar-vell","Gertie","Mordecai P. Boggs","Nitro","Rick Jones","Wonder Man"],"name":"Captain Marvel #54","link":"captain_marvel_54","credits":["Dave Cockrum","George Tuska","Terry Austin","Scott Edelman"],"i":1614},{"year":1976,"characters":["Amanda Sefton","Banshee","Betsy Wilford","Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Black Tom","Colonel Michael Rossi","Colossus","Contessa Valentina Allegro De La Fontaine","Cyclops","Daredevil","Eamon O'Donnell","Jean Grey","Juggernaut","Lilandra","Mikhail Kutuzov","Moira MacTaggert","Nick Fury","Nightcrawler","Peter Corbeau","Phoenix Force","Professor X","Steven Lang","Storm","Tessa","White King","White Queen (Emma Frost)","Wolverine"],"name":"Uncanny X-Men #98-101","link":"uncanny_xmen_98101","credits":["Dave Cockrum","Sam Grainger","Chris Claremont","Frank Chiaramonte"],"i":1615},{"year":1976,"characters":["Beetle","Daredevil","Gladiator"],"name":"Daredevil #140","link":"daredevil_140","credits":["Klaus Janson","Bill Mantlo","Sal Buscema"],"i":1616},{"year":1976,"characters":["Banshee","Colossus","Cyclops","Nightcrawler","Phoenix Force","Professor X","Senator 'Stoneface' Turner","Spider-Man","Storm","Wolverine"],"name":"Marvel Team-Up annual #1","link":"marvel_teamup_annual_1","credits":["Bill Mantlo","Chris Claremont","Sal Buscema","Bonnie Wilford","Mike Esposito"],"i":1617},{"year":1992,"characters":["Banshee","Butte","Cactus","Colossus","Cyclops","Gila","Hulk","Nightcrawler","Phoenix Force","Professor X","Spider-Man","Storm","Sunstroke","Wolverine","Woodgod"],"name":"Marvel Team-Up #53-54","link":"marvel_teamup_5354","credits":["Bill Mantlo","Robert Walker","Vince Evans","Frank Giacoia","Jim Sanders III","Scott Lobdell","John Byrne","Barry Dutter","Mike Esposito"],"i":1618},{"year":1977,"characters":["Banshee","Black Tom","Colossus","Cyclops","D'ken","Eamon O'Donnell","Eric the Red","Juggernaut","Lilandra","Magneto","Misty Knight","Moira MacTaggert","Nightcrawler","Phoenix Force","Professor X","Sabretooth","Storm","Wolverine"],"name":"Uncanny X-Men #102-103","link":"uncanny_xmen_102105","credits":["Dave Cockrum","Sam Grainger","Chris Claremont"],"i":1619},{"year":1977,"characters":["Abraham Klein","Iron Man","Kraken","Madame Masque"],"name":"Iron Man #93-94","link":"iron_man_93-94","credits":["Herb Trimpe","Jack Abel","Gerry Conway"],"i":1620},{"year":1977,"characters":["Drax the Destroyer","Thanos"],"name":"Logan's Run #6 (Thanos)","link":"logans_run_6_thanos","credits":["Scott Edelman","Mike Zeck"],"i":1621},{"year":1977,"characters":["Contessa Valentina Allegro De La Fontaine","Deathlok (alt. Luther Manning)","Dum Dum Dugan LMD","Fixer","Human Torch","Impossible Man","Invisible Woman","Mentallo","Mr. Fantastic","Nick Fury","Thing","Willie Lumpkin"],"name":"Marvel Two-In-One #26-27","link":"marvel_twoinone_2627","credits":["Ron Wilson","Pablo Marcos","Marv Wolfman"],"i":1622},{"year":1977,"characters":["Alicia Masters","Deathlok (alt. Luther Manning)","Human Torch","Invisible Woman","Mr. Fantastic","Nick Fury","Piranha","Sub-Mariner","Thing"],"name":"Marvel Two-In-One #28","link":"marvel_two-in-one_28","credits":["Ron Wilson","John Tartaglione","Marv Wolfman"],"i":1623},{"year":1977,"characters":["Alicia Masters","Deathlok (alt. Luther Manning)","Invisible Woman","Nick Fury","Shang-Chi","Spider-Woman (Jessica Drew)","Thing"],"name":"Marvel Two-In-One #29-32","link":"marvel_twoinone_32","credits":["Marv Wolfman","Pablo Marcos","John Buscema","Sam Grainger","Ron Wilson"],"i":1624},{"year":1977,"characters":["Alicia Masters","Modred the Mystic","Spider-Woman (Jessica Drew)","Thing"],"name":"Marvel Two-In-One #33","link":"marvel_two-in-one_33","credits":["Ron Wilson","Pablo Marcos","Marv Wolfman"],"i":1625},{"year":1977,"characters":["Deathlok (alt. Luther Manning)","Dum Dum Dugan LMD","Nick Fury","Nighthawk","Thing"],"name":"Marvel Two-In-One #34","link":"marvel_two-in-one_34","credits":["Ron Wilson","Pablo Marcos","Marv Wolfman"],"i":1626},{"year":1978,"characters":["Ann Reynolds","Jeff Turner","Mr. Fantastic","Raymond Corey","Skull the Slayer","Thing"],"name":"Marvel Two-In-One #35-36","link":"marvel_two-in-one_35-36","credits":["Ernie Chan","Marv Wolfman"],"i":1627},{"year":1977,"characters":["Brute (Alt. Reed Richards)","Captain Ultra","Human Torch","Impossible Man","Invisible Woman","Mr. Fantastic","Paste Pot Pete","Sandman","Texas Twister","Thing","Thundra","Tigra","Walter Collins","Wizard"],"name":"Fantastic Four #176-178","link":"fantastic_four_176177","credits":["George Perez","Joe Sinnott","Roy Thomas","Mike Friedrich","David Hunt"],"i":1628},{"year":1977,"characters":["Adam Warlock","Autolycus","Beast","Captain America","Captain Mar-vell","Drax the Destroyer","Gamora","Gardener","Heater Delight","Hulk","In-Betweener","Iron Man","Kray-Tor","Lord Chaos","Magus (Evil Adam Warlock)","Master Order","Matriarch","Moondragon","Pip the Troll","Scarlet Witch","Soul Gem","Sphinxor","Spider-Man","Star Thief","Starfox","Stranger","Thanos","Thing","Thor","Vision","Woodgod"],"name":"Strange Tales #178-181, Warlock #9-15, Marvel Team-Up #55, Avengers annual #7, Marvel Two-In-One annual #2","link":"strange_tales_178181warlock_91","credits":["Bill Mantlo","Al Milgrom","Stephen Leialoha","Josef Rubinstein","Jim Starlin","John Byrne","David Hunt"],"i":1629},{"year":1977,"characters":["Angel","Bill Foster","Black Widow","Darkstar","Ghost Rider (Johnny Blaze)","Hawkeye","Hercules","Iceman","Kaa","Possessor","Regina Clayborne","Stilt-Man","Stranger","Two-Gun Kid"],"name":"Champions #11-13","link":"champions_1113","credits":["Bill Mantlo","John Byrne","Bob Layton"],"i":1630},{"year":1978,"characters":["Abner Little","Black Panther","Carnivore","Joshua Itobu","N'Gassi","Princess Zanda"],"name":"Black Panther #1-7","link":"black_panther_17","credits":["Jack Kirby","Michael W. Royer"],"i":1631},{"year":1977,"characters":["Charles L. Delazny","Coot Collier","Cosgrove (Delanzy accountant)","Denny Armstrong","Eel","Enforcer","Ghost Rider (Johnny Blaze)","Gladiator","Gus Utermohle","Karen Page","Roxanne Simpson","Stunt-Master"],"name":"Ghost Rider #21-22","link":"ghost_rider_21-22","credits":["Don Heck","Sam Grainger","Don Glut","Keith Pollard","Gil Kane","Gerry Conway"],"i":1632},{"year":1998,"characters":["Betty Ross","General 'Thunderbolt' Ross","Glenn Talbot","Hulk"],"name":"Rampaging Hulk #1","link":"rampaging_hulk_1","credits":["Glenn Greenberg","Tom Palmer","Rick Leonardi","Dan Green","Denys Cowan"],"i":1633},{"year":1977,"characters":["Bernie Dillon","Donna-Lee Dover","Ginger Jaye-Firestone","Gloria Rider","Harold H. Harold","Mike Burley","Nova (Rich Rider)","Robbie Rider"],"name":"Nova #5","link":"nova_5","credits":["Tom Palmer","Sal Buscema","Marv Wolfman"],"i":1634},{"year":1977,"characters":["Bullseye","Cobra","Daredevil","Debbie Harris","Foggy Nelson","Heather Glenn","Maxwell Glenn","Mr. Hyde","Nova (Rich Rider)","Stone (Glenn Industries)"],"name":"Daredevil #141-143","link":"daredevil_141143","credits":["Marv Wolfman","Bob Brown","Jim Mooney","Jim Shooter","Keith Pollard","Gil Kane"],"i":1635},{"year":1977,"characters":["Clea","Cobalt Man","Dr. Strange","Egghead","Hulk","Luke Cage","Nighthawk","Red Guardian (Tania Belinksy)","Rhino","Solarr","Valkyrie"],"name":"Defenders #42-43","link":"defenders_4243","credits":["Keith Giffen","Klaus Janson","Gerry Conway"],"i":1636},{"year":1977,"characters":["Captain America","Dr. Doom","Prince Rudolfo","Red Skull","Shroud","Sub-Mariner"],"name":"Super-Villain Team-Up #10-12","link":"supervillain_teamup_1012","credits":["Bill Mantlo","Don Perlin","Bob Hall"],"i":1637},{"year":1977,"characters":["Aragorn","Captain America","Chris Keating","Clea","Dr. Strange","Elf with a Gun","Hellcat","Hulk","Iron Man","Jack Norriss","Luke Cage","Nick Fury LMD","Nighthawk","Red Guardian (Tania Belinksy)","Rhino","Scorpio (Jake Fury LMD)","Solarr","Valkyrie","Wong"],"name":"Defenders #44-46","link":"defenders_4446","credits":["Roger Slifer","Keith Giffen","Klaus Janson","David Anthony Kraft","Gerry Conway"],"i":1638},{"year":1977,"characters":["Bert Rose","Daredevil","Foggy Nelson","Heather Glenn","Man-Bull","Owl","Professor Kerwin"],"name":"Daredevil #144","link":"daredevil_144","credits":["Gerry Conway","Dan Green","Lee Elias","Jim Shooter"],"i":1639},{"year":1977,"characters":["Brother Inquisitor","Brother Wonderful","Captain America","Falcon","Sharon Carter"],"name":"Captain America #204-205","link":"captain_america_204-205","credits":["Jack Kirby","John Verpoorten","Frank Giacoia"],"i":1640},{"year":1977,"characters":["Clea","Hellcat","Hulk","Jack Norriss","Moon Knight","Nick Fury LMD","Nighthawk","Valkyrie","Wonder Man","Wong"],"name":"Defenders #47","link":"defenders_47","credits":["Roger Slifer","John Warner","Keith Giffen","Klaus Janson","David Anthony Kraft"],"i":1641},{"year":1977,"characters":["Alan Cavenaugh","Boomerang","Bulldozer","Captain America","Colleen Wing","Cyclops","Daredevil","Heather Glenn","Iron Fist","Jarvis","Misty Knight","Phoenix Force","Piledriver","Steel Serpent","Thunderball","Ward Meachum","Wrecker"],"name":"Iron Fist #11-13","link":"iron_fist_1113","credits":["John Byrne","Chris Claremont","Dan Adkins"],"i":1642},{"year":1977,"characters":["Carol Danvers","Destructor","Doomsday Man","J. Jonah Jameson","Mary Jane Watson","Mike Barnett","Scorpion"],"name":"Ms. Marvel #2-4","link":"ms_marvel_24","credits":["Joe Sinnott","John Buscema","Jim Mooney","Chris Claremont","Gerry Conway"],"i":1643},{"year":1977,"characters":["Hellstorm","Satan"],"name":"Son of Satan #8","link":"son_of_satan_8","credits":["Bill Mantlo","John Romita Sr.","Archie Goodwin","Russ Heath"],"i":1644},{"year":1977,"characters":["Anton Lupeski","Blade","Domini","Dracula","Frank Drake","Harold H. Harold","Janus (Golden Angel)","Quincy Harker","Rachel Van Helsing","Safron Caulder","Saint (dog)"],"name":"Tomb of Dracula #54","link":"tomb_of_dracula_54","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1645},{"year":1977,"characters":["Beverly Switzler","Howard The Duck"],"name":"Howard the Duck #9","link":"howard_the_duck_9","credits":["Stephen Leialoha","Gene Colan","Steve Gerber"],"i":1646},{"year":1977,"characters":["Angel","Black Widow","Charles L. Delazny","Coot Collier","Enforcer","Ghost Rider (Johnny Blaze)","Hercules","Iceman","Ivan Petrovitch","Roxanne Simpson","Stunt-Master","Water Wizard"],"name":"Ghost Rider #23-24","link":"ghost_rider_23-24","credits":["Don Heck","Jim Shooter","Keith Pollard","Don Newton","Gerry Conway"],"i":1647},{"year":1977,"characters":["Bernie Dillon","Caps Cooper","Charles Rider","Condor","Diamondhead","Ginger Jaye-Firestone","Gloria Rider","Megaman","Nova (Rich Rider)","Powerhouse","Protector","Robbie Rider","Sayge","Sphinx","Xandarian Worldmind"],"name":"Nova #6-9","link":"nova_6-9","credits":["Frank Giacoia","Sal Buscema","Marv Wolfman"],"i":1648},{"year":1977,"characters":["Angel","Black Widow","Darkstar","Ghost Rider (Johnny Blaze)","Hercules","Iceman","Ivan Petrovitch","Swarm"],"name":"Champions #14-15","link":"champions_1415","credits":["Bill Mantlo","John Byrne","Mike Esposito"],"i":1649},{"year":1977,"characters":["Angel","Black Widow","Darkstar","Ghost Rider (Johnny Blaze)","Hercules","Iceman","Iron Man","MODOK"],"name":"Iron Man annual #4","link":"iron_man_annual_4","credits":["Bill Mantlo","Don Perlin","George Tuska"],"i":1650},{"year":1977,"characters":["Bertha","Claire Temple","D.W. Griffith","Goldbug","Luke Cage","Mace","Noah Burstein","Oliver P. Sinagle","Thunderbolt"],"name":"Power Man #41-46","link":"power_man_4142","credits":["Lee Elias","Marv Wolfman","Roger Slifer","Ed Hannigan","Tom Palmer","Alex Nino"],"i":1651},{"year":1977,"characters":["Barney Bushkin","Blizzard","Daredevil","Electro","Glory Grant","J. Jonah Jameson","Spider-Man"],"name":"Marvel Team-Up #56","link":"marvel_team-up_56","credits":["David Hunt","Bill Mantlo","Sal Buscema"],"i":1652},{"year":1977,"characters":["Absorbing Man","April Sommers","Betty Ross","Clay Quartermain","Doc Samson","Dr. Druid","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jim Wilson","Lann","Leader","Maha Yogi","Mongu","Prince Rey","Tyrannus"],"name":"Hulk #209-211","link":"hulk_209","credits":["Joe Staton","Ernie Chan","Sal Buscema","Len Wein"],"i":1653},{"year":1977,"characters":["Howard The Duck"],"name":"Howard the Duck #10","link":"howard_the_duck_10","credits":["Stephen Leialoha","Gene Colan","Steve Gerber"],"i":1654},{"year":1977,"characters":["Empathoid","Morbius","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #6","link":"peter_parker_the_spectacular_s_50","credits":["Frank Giacoia","Ross Andru","Gerry Conway"],"i":1655},{"year":1989,"characters":["Dum Dum Dugan LMD","Gaffer (SHIELD Scientist)","Gail Runciter","Gilbert Vaughn","Iron Man","Lisa Vaughn","Nick Fury","Quasar"],"name":"Quasar #1","link":"quasar_1","credits":["Mark Gruenwald","Paul Ryan","Dan Bulanadi","Howard Mackie"],"i":1656},{"year":1977,"characters":["Beverly Switzler","Howard The Duck","Kidney Lady","Winda Wester"],"name":"Howard the Duck #11","link":"howard_the_duck_11","credits":["Stephen Leialoha","Gene Colan","Steve Gerber"],"i":1657},{"year":1977,"characters":["Aunt May","Aunt Watson","Brother Power","Empathoid","Flash Thompson","Glory Grant","Mary Jane Watson","Morbius","Morgan","Sha Shan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #7-8","link":"peter_parker_the_spectacular_s_51","credits":["Sal Buscema","Jim Mooney","Archie Goodwin","Mike Esposito"],"i":1658},{"year":1977,"characters":["Anton Lupeski","Aurora Rabinowitz","Domini","Dracula","Frank Drake","Harold H. Harold","Janus (Golden Angel)","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #55","link":"tomb_of_dracula_55","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1659},{"year":1977,"characters":["Anton Lupeski","Domini","Dracula","Frank Drake","Quincy Harker","Rachel Van Helsing"],"name":"Tomb of Dracula #57","link":"tomb_of_dracula_57","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1660},{"year":1977,"characters":["Carol Danvers","Lynn Anderson","Mike Barnett","MODOK","Vision"],"name":"Ms. Marvel #5","link":"ms_marvel_5","credits":["Archie Goodwin","Joe Sinnott","Jim Mooney","Chris Claremont","Jim Shooter"],"i":1661},{"year":1977,"characters":["Black Widow","Silver Samurai","Spider-Man"],"name":"Marvel Team-Up #57","link":"marvel_teamup_57","credits":["David Hunt","Chris Claremont","Sal Buscema"],"i":1662},{"year":1977,"characters":["Beverly Switzler","Doctor Reich","Hellstorm","Howard The Duck","Kidney Lady","Nurse Barbara","Paul Same","Rev. Joon Moon","Winda Wester"],"name":"Howard the Duck #12-14","link":"howard_the_duck_12-14","credits":["Stephen Leialoha","Klaus Janson","Gene Colan","Steve Gerber"],"i":1663},{"year":1977,"characters":["Daredevil","Foggy Nelson","Heather Glenn","Owl"],"name":"Daredevil #145","link":"daredevil_145","credits":["Gerry Conway","Jim Mooney","George Tuska","Jim Shooter"],"i":1664},{"year":1977,"characters":["Rufus T. Hackstabber","Shang-Chi","Tiger-Claw"],"name":"Master of Kung Fu #52","link":"master_of_kung_fu_52","credits":["Keith Pollard","Doug Moench"],"i":1665},{"year":1977,"characters":["Aurora Rabinowitz","Harold H. Harold"],"name":"Tomb of Dracula #56","link":"tomb_of_dracula_56","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1666},{"year":1978,"characters":["Beverly Switzler","Howard The Duck"],"name":"Howard the Duck #28","link":"howard_the_duck_28","credits":["Marv Wolfman","Frank Giacoia","Carmine Infantino","Mary Skrenes","Jim Shooter","Mark Gruenwald","Steve Gerber"],"i":1667},{"year":1977,"characters":["Bernie Dillon","Caps Cooper","Charles Rider","Condor","Diamondhead","Donna-Lee Dover","Firefly","Ginger Jaye-Firestone","Gloria Rider","Mike Burley","Nova (Rich Rider)","Powerhouse","Robbie Rider","Sayge","Sphinx"],"name":"Nova #10-11","link":"nova_1011","credits":["Frank Giacoia","Sal Buscema","Marv Wolfman"],"i":1668},{"year":1977,"characters":["Aquarius (Robot)","Aries (Robot)","Cancer (Robot)","Capricorn (Robot)","Chris Keating","Clea","Dollar Bill","Gemini (Robot)","Hellcat","Hulk","Jack Norriss","Leo (Robot)","Libra (Robot)","Lunatik","Moon Knight","Nick Fury","Nick Fury LMD","Nighthawk","Pisces (Robot)","Red Guardian (Tania Belinksy)","Ringer","Sagittarius (Robot)","Scorpio (Jake Fury LMD)","Taurus (Robot)","Valkyrie","Virgo (Robot)","Wonder Man"],"name":"Defenders #48-51","link":"defenders_4850","credits":["Don McGregor","Dave Cockrum","Michael W. Royer","John Tartaglione","Keith Giffen","Klaus Janson","David Anthony Kraft","Dan Green"],"i":1669},{"year":1977,"characters":["Carol Danvers","Frank Gianelli","Grotesk","J. Jonah Jameson","Lynn Anderson","MODOK"],"name":"Ms. Marvel #6-7","link":"ms_marvel_67","credits":["Chris Claremont","Jim Mooney","Joe Sinnott"],"i":1670},{"year":1977,"characters":["Beast","Black Knight Statue","Black Panther","Captain America","Daredevil","Graviton","Henry Pym","Iron Man","Jarvis","Joe Parks","Judith Parks","Scarlet Witch","Thor","Ultron","Vision","Wasp","Wonder Man"],"name":"Avengers #157-159","link":"avengers_157","credits":["Don Heck","Pablo Marcos","Sal Buscema","Jim Shooter","Gerry Conway"],"i":1671},{"year":1977,"characters":["Bullseye","Daredevil","Debbie Harris","Foggy Nelson","Heather Glenn","Maxwell Glenn","Purple Man"],"name":"Daredevil #146-147","link":"daredevil_146147","credits":["Klaus Janson","Gil Kane","Jim Mooney","Jim Shooter"],"i":1672},{"year":1991,"characters":["Coot Collier","Ghost Rider (Johnny Blaze)","Mary Jane Watson","Paste Pot Pete","Spider-Man","Wizard"],"name":"Marvel Team-Up #58","link":"marvel_teamup_58","credits":["Pablo Marcos","Phil Sheehy","Vince Evans","Dave Cockrum","Scott Lobdell","Chris Claremont","Sal Buscema"],"i":1673},{"year":1977,"characters":["Beast","Black Panther","Captain America","Grim Reaper","Henry Pym","Iron Man","Scarlet Witch","Thor","Vision","Wasp","Whizzer","Wonder Man"],"name":"Avengers #160","link":"avengers_160","credits":["George Perez","Pablo Marcos","Jim Shooter"],"i":1674},{"year":1977,"characters":["Carol Danvers","Frank Gianelli","Grotesk","Mike Barnett","Tracy Burke"],"name":"Ms. Marvel #8","link":"ms_marvel_8","credits":["Chris Claremont","Jim Mooney","Joe Sinnott"],"i":1675},{"year":1977,"characters":["Dr. Doom","Krang","Sub-Mariner","Vashti"],"name":"Super-Villain Team-Up #13","link":"supervillain_teamup_13","credits":["Keith Giffen","Bill Mantlo","Don Perlin"],"i":1676},{"year":1977,"characters":["Beverly Switzler","Howard The Duck","Paul Same","Winda Wester"],"name":"Howard the Duck annual #1","link":"howard_the_duck_annual_1","credits":["Val Mayerik","Steve Gerber"],"i":1677},{"year":1977,"characters":["Black Jack Tarr","Fu Manchu","Shang-Chi"],"name":"Master of Kung Fu #55","link":"master_of_kung_fu_55","credits":["Doug Moench","Jim Mooney","Archie Goodwin","Mike Zeck"],"i":1678},{"year":1977,"characters":["Beast","Black Panther","Captain America","Hawkeye","Henry Pym","Iron Man","Jarvis","Jocasta","Scarlet Witch","Thor","Two-Gun Kid","Ultron","Vision","Wasp","Wonder Man"],"name":"Avengers #161-162","link":"avengers_161162","credits":["George Perez","Pablo Marcos","Jim Shooter"],"i":1679},{"year":1982,"characters":["J'Son","Star-Lord"],"name":"Star-Lord: Guardian of the Galaxy","link":"marvel_preview_11","credits":["<em>Marvel Preview #11<","<b>Title:","Doug Moench","Bill Sienkiewicz","N","<em>Marvel Preview #18<","Bob McLeod","Spring 1979","<b>Credits:","A","Chris Clarement","<em>Marvel Preview #15<","\"World in a bottle\"","Feb 82","Bob Wiacek","<em>Star-Lord: The Special Edition #1 (framing sequence)<","Sparta","Logos\"","\"The Saga of Star-Lord\"","\"Planet story\"","Terry Austin","Chris Claremont","Tom Palmer","em>","Steve Englehart","John Byrne","\"Prologue","<em>Marvel Super Special #10<","Michael Golden","Cinnibar","Tom Sutton","Jul 80","<em>Marvel Spotlight #6<","Spring 78","<em>Marvel Preview #14<","May 80","\"Windholme","Berni Wrightson","\"Tears for the world called Heaven\"","\"Less than human\"","The hollow crown\"","Aug 81","Steve Gan","<b>Cover Date:","\"A matter of necessity!\"","Carmine Infantino","Summer 78","Gene Colan","<em>Marvel Premiere #61<","Summer 1977","<em>Marvel Spotlight #7<","Sandsong"],"i":1680},{"year":1977,"characters":["Blade","Frank Drake","Harold H. Harold","Quincy Harker","Rachel Van Helsing","Safron Caulder","Saint (dog)"],"name":"Tomb of Dracula #58","link":"tomb_of_dracula_58","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1681},{"year":1978,"characters":["Clea","Dollar Bill","Dr. Strange","Hellcat","Hulk","Jarvis","Lunatik","Nick Fury","Nicodemus","Nighthawk","Presence","Red Guardian (Tania Belinksy)","Spider-Man","Sub-Mariner","Valkyrie"],"name":"Defenders #52-56","link":"defenders_5254","credits":["Dave Cockrum","Bob McLeod","Terry Austin","Carmine Infantino","Keith Giffen","Klaus Janson","David Anthony Kraft","Michael Golden","Chic Stone"],"i":1682},{"year":1977,"characters":["Carol Danvers","Centurion","Deathbird","Frank Gianelli","J. Jonah Jameson","Jean DeWolff","Lynn Anderson","MODOK","Mr. Ellior","Tabitha Townshend","Tracy Burke"],"name":"Ms. Marvel #9-10","link":"ms_marvel_910","credits":["Joe Sinnott","Sam Grainger","Chris Claremont","Sal Buscema","Tom Palmer","Keith Pollard"],"i":1683},{"year":1978,"characters":["Carol Danvers","Clea","Dr. Strange","Hellcat","Hulk","Mike Barnett","Nighthawk","Valkyrie"],"name":"Defenders #57","link":"defenders_57","credits":["Dave Cockrum","Chris Claremont","George Tuska","Dan Green","Gerry Conway"],"i":1684},{"year":1978,"characters":["Ancient One","Apalla","Clea","Dr. Strange","In-Betweener","Lord Chaos","Master Order","Styrgo","Wong"],"name":"Doctor Strange #23-28","link":"doctor_strange_2428","credits":["Marv Wolfman","Al Milgrom","Tom Sutton","Ernie Chan","Pablo Marcos","Rudy D. Nebres","Jim Starlin","Roger Stern"],"i":1685},{"year":1977,"characters":["Colleen Wing","Iron Fist","Jeryn Hogarth","Sabretooth"],"name":"Iron Fist #14","link":"iron_fist_14_1","credits":["John Byrne","Dan Green","Chris Claremont"],"i":1686},{"year":1977,"characters":["Charles Rider","Franklin Risk","Harry Daze","Nova (Rich Rider)","Photon (Jason Dean)","Spider-Man"],"name":"Nova #12","link":"nova_12","credits":["Frank Giacoia","Sal Buscema","Marv Wolfman"],"i":1687},{"year":1977,"characters":["Charles Rider","Franklin Risk","Harry Daze","Harry Osborn","Liz Allan","Molten Man","Nova (Rich Rider)","Photon (Jason Dean)","Spider-Man"],"name":"Amazing Spider-Man #171","link":"amazing_spiderman_171","credits":["Ross Andru","Len Wein","Mike Esposito"],"i":1688},{"year":1977,"characters":["Coot Collier","Ghost Rider (Johnny Blaze)","Karen Page","Roxanne Simpson","Stunt-Master"],"name":"Ghost Rider #25","link":"ghost_rider_25","credits":["Don Heck","Tony DeZuniga","Jim Shooter"],"i":1689},{"year":1977,"characters":["Beverly Switzler","Doctor Bong","Fifi","Howard The Duck","Paul Same","Winda Wester"],"name":"Howard the Duck #15-18","link":"howard_the_duck_15-18","credits":["Klaus Janson","Gene Colan","Steve Gerber"],"i":1690},{"year":1977,"characters":["Dum Dum Dugan LMD","Godzilla","Jimmy Woo","Nick Fury","Robert Takiguchi","Tamara Hashioka","Yuriko Takiguchi"],"name":"Godzilla #1","link":"godzilla_1","credits":["Herb Trimpe","Doug Moench","Jim Mooney"],"i":1691},{"year":1977,"characters":["Beast","Black Widow","Hercules","Iceman","Iron Man","Typhon"],"name":"Avengers #163","link":"avengers_163","credits":["Pablo Marcos","George Tuska","Jim Shooter"],"i":1692},{"year":1977,"characters":["Carol Danvers","Equinox","Henry Pym","Human Torch","Jean DeWolff","Rafael Scarfe","Spider-Man","Super-Skrull","Wasp"],"name":"Marvel Team-Up #59-62","link":"marvel_teamup_5962","credits":["David Hunt","John Byrne","Chris Claremont"],"i":1693},{"year":1978,"characters":["Black Panther","Captain America","Iron Man","Jason Beere"],"name":"Avengers #169","link":"avengers_169","credits":["David Hunt","Sal Buscema","Marv Wolfman"],"i":1694},{"year":1977,"characters":["Bernard Harris","Blake Tower","Daredevil","Death-Stalker","Foggy Nelson","Heather Glenn","Joisey Joe","Nose Norton"],"name":"Daredevil #148-149","link":"daredevil_148-149","credits":["Carmine Infantino","Klaus Janson","Gil Kane","Jim Shooter"],"i":1695},{"year":1977,"characters":["Human Fly","Spider-Man"],"name":"Human Fly #1","link":"human_fly_1","credits":["Lee Elias","Bill Mantlo"],"i":1696},{"year":1977,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Jimmy Woo","Robert Takiguchi","Tamara Hashioka","Yuriko Takiguchi"],"name":"Godzilla #2","link":"godzilla_2","credits":["Herb Trimpe","Doug Moench","George Tuska","Frank Giacoia"],"i":1697},{"year":1977,"characters":["Bernie Dillon","Caps Cooper","Charles Rider","Crimebuster","Donna-Lee Dover","Fritz Voltzmann","Ginger Jaye-Firestone","Mike Burley","Nova (Rich Rider)","Sandman","Thing","Yellow Claw"],"name":"Nova #13-14","link":"nova_13-14","credits":["Joe Sinnott","Dick Giordano","Sal Buscema","Marv Wolfman"],"i":1698},{"year":1977,"characters":["Annihilus","Brute (Alt. Reed Richards)","Human Torch","Impossible Man","Invisible Woman","Mr. Fantastic","Thing","Thundra","Tigra"],"name":"Fantastic Four #179","link":"fantastic_four_179","credits":["Joe Sinnott","Roy Thomas","Ron Wilson","Gerry Conway"],"i":1699},{"year":1977,"characters":["Agatha Harkness","Alicia Masters","Annihilus","Brute (Alt. Reed Richards)","Franklin Richards","Human Torch","Impossible Man","Invisible Woman","Mad Thinker","Mr. Fantastic","Nova (Frankie Raye)","Thing","Thundra","Tigra"],"name":"Fantastic Four #181-184","link":"fantastic_four_183","credits":["Archie Goodwin","Bill Mantlo","George Perez","Joe Sinnott","Roy Thomas","Sal Buscema","Ron Wilson","Len Wein","Jim Shooter"],"i":1700},{"year":1977,"characters":["Agatha Harkness","Brutacus","Frank","Gazelle","Human Torch","Hydron (Salem Seven)","Impossible Man","Invisible Woman","Klaw","Molecule Man","Mr. Fantastic","Nicholas Scratch","Reptilla","Thing","Thornn","Vakume","Vertigo (Salem Seven)"],"name":"Fantastic Four #185-186","link":"fantastic_four_185-186","credits":["George Perez","Len Wein","Joe Sinnott"],"i":1701},{"year":1977,"characters":["Agatha Harkness","Human Torch","Impossible Man","Invisible Woman","Klaw","Molecule Man","Mr. Fantastic","Thing","Uatu the Watcher"],"name":"Fantastic Four #187-188","link":"fantastic_four_188","credits":["George Perez","Len Wein","Joe Sinnott"],"i":1702},{"year":1978,"characters":["Carol Danvers","Frank Gianelli","Golden-Blade","Hecate","Hellfire (Elementals)","Hydron (Elemental)","Joe Danvers","Lynn Anderson","Magnum","Marie Danvers","Mike Barnett","Miles Olddan","Richard 'Asp' Harper","Sapper","Tracy Burke","Zephyr"],"name":"Ms. Marvel #11-13","link":"ms_marvel_1113","credits":["Joe Sinnott","Frank Giacoia","Jim Mooney","Chris Claremont","Sal Buscema"],"i":1703},{"year":1977,"characters":["Beast","Black Panther","Captain America","Count Nefaria","Django Maximoff","Erik Josten","Henry Peter Gyrich","Henry Pym","Iron Man","Jarvis","Living Laser","Scarlet Witch","Thor","Vision","Wasp","Whirlwind","Whizzer","Wonder Man"],"name":"Avengers #164-166","link":"avengers_164165","credits":["John Byrne","Pablo Marcos","Jim Shooter"],"i":1704},{"year":1977,"characters":["Angus MacWhirter","Banshee","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","D'ken","Elaine Grey","Eric the Red","Firelord","Havok","John Grey","K'rk","Lilandra","Madrox the Multiple Man","Magneto","Misty Knight","Moira MacTaggert","Nightcrawler","Phoenix Force","Polaris","Professor X","S'lar","Storm","Wolverine"],"name":"Uncanny X-Men #104-105","link":"uncanny_xmen_104105","credits":["Dave Cockrum","Sam Grainger","Chris Claremont","Bob Layton"],"i":1705},{"year":1977,"characters":["Elaine Grey","Firelord","John Grey","Misty Knight","Professor X"],"name":"Uncanny X-Men #106","link":"uncanny_x-men_106","credits":["Bill Mantlo","Tom Sutton","Bob Brown","Dave Cockrum","Chris Claremont"],"i":1706},{"year":1977,"characters":["Astra","Banshee","Beast","Black Panther","Captain America","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","D'ken","Elaine Grey","Electron","Eric the Red","Fang","Firelord","Gladiator (Shiar)","Henry Pym","Hepzibah","Hobgoblin (Shiar)","Human Torch","Impulse (Imperial Guard)","Jahf","John Grey","Lilandra","Magic","Mentor (Shiar)","Misty Knight","Modt","Mr. Fantastic","Neutron","Nightcrawler","Nightside","Oracle","Peter Corbeau","Phoenix Force","Professor X","Raza Longknife","Scintilla","Sikorsky","Smasher (Shiar)","Soul-Drinker","Starbolt","Storm","Tempest","Thing","Titan","Waldo","Wasp","Wolverine"],"name":"Uncanny X-Men #107-108","link":"uncanny_xmen_107108","credits":["Dave Cockrum","Terry Austin","Chris Claremont","John Byrne","Dan Green"],"i":1707},{"year":1977,"characters":["Arnim Zola","Burner (Crucible)","Captain America","Captive","Donna Maria Puentes","Doughboy","Falcon","Hate Monger (Hitler)","Kligger","Leila Taylor","Lifter (Meteorite)","Magneto","Night Flyer","Peeper (Occult)","Primus","Red Skull","Sharon Carter","Shocker (Paralyzer)","Slither","Veda"],"name":"Captain America #206-214, Captain America annual #3-4","link":"captain_america_206214_captain","credits":["Frank Giacoia","Michael W. Royer","John Verpoorten","John Tartaglione","Jack Kirby","Dan Green"],"i":1708},{"year":1977,"characters":["Captain America","Falcon"],"name":"Captain America #215","link":"captain_america_215","credits":["Roy Thomas","Pablo Marcos","George Tuska"],"i":1709},{"year":1977,"characters":["Angel","Beast","Black Widow","Captain America","Darkstar","Dr. Doom","Ghost Rider (Johnny Blaze)","Henry Pym","Hercules","Iceman","Iron Man","Magneto","Scarlet Witch","Thor","Vision","Wasp","Wonder Man"],"name":"Super-Villain Team-Up #14","link":"supervillain_teamup_14_1","credits":["Bill Mantlo","Don Perlin","Bob Hall","Duffy Vohland"],"i":1710},{"year":1977,"characters":["Angel","Beast","Black Widow","Darkstar","Dr. Doom","Ghost Rider (Johnny Blaze)","Hercules","Hulk","Iceman","Magneto"],"name":"Champions #16","link":"champions_16","credits":["Bill Mantlo","Bob Hall","Mike Esposito"],"i":1711},{"year":2006,"characters":["Angel","Black Widow","Darkstar","Ghost Rider (Johnny Blaze)","Hercules","Hulk","Iceman","She-Hulk"],"name":"Giant-Size Hulk #1 (Champions)","link":"giantsize_hulk_1","credits":["Peter David","Tom Breevort","Marc Sumerak","Raul Fernandez","Juan Santacruz","Bobbie Chase"],"i":1712},{"year":1977,"characters":["Banshee","Bushmaster","Colossus","Cyclops","Iron Fist","Lilandra","Misty Knight","Moira MacTaggert","Nightcrawler","Phoenix Force","Professor X","Rafael Scarfe","Steel Serpent","Storm","Wolverine"],"name":"Iron Fist #15","link":"iron_fist_15","credits":["John Byrne","Dan Green","Chris Claremont"],"i":1713},{"year":1978,"characters":["Carol Danvers","Centurion","Dracula","Frank Gianelli","Joe Danvers","Marie Danvers","Steeplejack II","Tracy Burke"],"name":"Ms. Marvel #14","link":"ms_marvel_14","credits":["Stephen Leialoha","Chris Claremont","Carmine Infantino"],"i":1714},{"year":1977,"characters":["Abraham Klein","Fujiko Watanabe","Guardsman II (Michael O'Brien)","Harry Key","Iron Man","Jarvis","Jasper Sitwell","Jonathan Rich","Madame Masque","Mandarin","Professor Goro Watanabe","Senator Andrew Hawk","Senator Byrd","Sunfire","Ultimo"],"name":"Iron Man #95-100","link":"iron_man_98","credits":["Bill Mantlo","Don Perlin","Gerry Conway","George Tuska","Mike Esposito"],"i":1715},{"year":1977,"characters":["Captain America","Captain Britain","Courtney Ross","Dai Thomas","Dum Dum Dugan LMD","Emma Collins","Highwayman (British)","Hurricane","Jacko Tanner","Jamie Braddock","Kate Fraser","Lance Hunter","Manipulator (Ubazi)","Mastermind (Computer)","Merlin","Nick Fury","Psylocke","Red Skull","Roma"],"name":"Captain Britain #3-39, Super Spider-Man and Captain Britain #231-232","link":"captain_britain_3-39super_spid","credits":["Herb Trimpe","Fred Kida","Pablo Marcos","Bob Budiansky","John Buscema","Gary Friedrich","Larry Lieber","Chris Claremont","Tom Palmer","Ron Wilson","Len Wein","Jim Lawrence"],"i":1716},{"year":1977,"characters":["Alexandra Knox","Luke Cage","Mark Revel","Zzzax"],"name":"Power Man #47","link":"power_man_47","credits":["Bob Smith","Chris Claremont","George Tuska"],"i":1717},{"year":1977,"characters":["Nathaniel 'Blackbyrd' Byrd","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #9-10","link":"peter_parker_the_spectacular_s_52","credits":["Frank Giacoia","Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1718},{"year":1977,"characters":["April Sommers","Betty Ross","Clay Quartermain","Constrictor","Doc Samson","Gaffer (SHIELD Scientist)","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jack of Hearts","Jim Wilson","Kroptokin the Great","Leader","Nick Fury"],"name":"Hulk #212-213","link":"hulk_212","credits":["Ernie Chan","Tom Palmer","Sal Buscema","Len Wein"],"i":1719},{"year":1977,"characters":["April Sommers","Betty Ross","Bi-Beast II","Clay Quartermain","Clown","Doc Samson","Ernesto Gambonno","Gaffer (SHIELD Scientist)","General 'Thunderbolt' Ross","Hulk","Human Cannonball","Jack of Hearts","Jim Wilson","Kroptokin the Great","Leader","Luigi Gambonno","Princess Python","Ringmaster"],"name":"Hulk #214-217","link":"hulk_214-215","credits":["Ernie Chan","Sal Buscema","Len Wein"],"i":1720},{"year":1977,"characters":["Ghost Rider (Johnny Blaze)","Human Fly"],"name":"Human Fly #2","link":"human_fly_2","credits":["Bill Mantlo","Dan Green","Carmine Infantino"],"i":1721},{"year":1977,"characters":["Baroness Victoria Von Frankenstein","Dreadknight","Frankenstein Monster","Harry Key","Hellhorse","Iron Man","Jack of Hearts","Jasper Sitwell","Madame Masque"],"name":"Iron Man #101-102","link":"iron_man_101-102","credits":["Bill Mantlo","George Tuska","Mike Esposito"],"i":1722},{"year":1978,"characters":["Annie Christopher","Arabella Jones","Beast","Carol Danvers","Frank Gianelli","Jean DeWolff","Mike Barnett","Mystique","Namorita","Scarlet Witch","Tabitha Townshend","Tiger Shark","Tracy Burke","Wundarr (Aquarian)"],"name":"Ms. Marvel #15-16","link":"ms_marvel_15-16","credits":["Frank Springer","Tony DeZuniga","Chris Claremont","Jim Mooney"],"i":1723},{"year":1978,"characters":["Abraham Klein","Eddie March","Guardsman II (Michael O'Brien)","Harry Key","Iron Man","Jack of Hearts","Jasper Sitwell","Jean DeWolff","Madame Masque","Marianne Rodgers","Midas","Nick Fury","Wraith"],"name":"Iron Man #103-107","link":"iron_man_103-107","credits":["Bill Mantlo","Fred Kida","George Tuska","Keith Pollard","Mike Esposito"],"i":1724},{"year":1978,"characters":["Aunt May","Spider-Man"],"name":"Amazing Spider-Man #181","link":"amazing_spider-man_181","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1725},{"year":1977,"characters":["Angel","Black Widow","Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Hercules","Iceman","Iron Man","Jimmy Woo","Robert Takiguchi","Tamara Hashioka","Yuriko Takiguchi"],"name":"Godzilla #3","link":"godzilla_3","credits":["Herb Trimpe","Doug Moench","Tony DeZuniga"],"i":1726},{"year":1978,"characters":["Eddie March","Growing Man","Guardsman II (Michael O'Brien)","Henry Pym","Iron Man","Jack of Hearts","Jasper Sitwell","Jean DeWolff","Madame Masque","Wraith"],"name":"Iron Man #108","link":"iron_man_108","credits":["Bill Mantlo","Bob Wiacek","Carmine Infantino"],"i":1727},{"year":1977,"characters":["Black Bolt","Crystal","Falzon","Gorgon","Karnak","Lockjaw","Mary Jane Watson","Medusa","Spider-Man","Triton"],"name":"Peter Parker, the Spectacular Spider-Man #11","link":"peter_parker_the_spectacular_s_23","credits":["Chris Claremont","Jim Mooney","Mike Esposito"],"i":1728},{"year":1977,"characters":["Anton Lupeski","Domini","Dracula","Frank Drake","Harold H. Harold","Janus (Golden Angel)","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #59-60","link":"tomb_of_dracula_59-60","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1729},{"year":1977,"characters":["Captain Britain","Courtney Ross","Dai Thomas","Jacko Tanner","Jamie Braddock","Psylocke","Satan","Slaymaster"],"name":"Super Spider-Man and Captain Britain #233-247","link":"super_spider-man_and_captain_b","credits":["Fred Kida","Larry Lieber","Ron Wilson","Pablo Marcos Studio","Jim Lawrence","Mike Esposito"],"i":1730},{"year":1977,"characters":["Aunt May","Aunt Watson","J. Jonah Jameson","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man annual #11","link":"amazing_spider-man_annual_11","credits":["Archie Goodwin","Bill Mantlo","Al Milgrom","John Romita Jr.","Don Perlin","Jim Mooney","Scott Edelman"],"i":1731},{"year":1977,"characters":["Flash Thompson","Glory Grant","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Lizard","Marla Madison Jameson","Molten Man","Rocket Racer","Spider-Man"],"name":"Amazing Spider-Man #172-173","link":"amazing_spider-man_172","credits":["Frank Giacoia","Ross Andru","Jim Mooney","Len Wein"],"i":1732},{"year":1977,"characters":["Flash Thompson","Glory Grant","Green Goblin (Bart Hamilton)","Harry Osborn","Hitman","J. Jonah Jameson","Joe 'Robbie' Robertson","Mamie Muggins","Marla Madison Jameson","Punisher","Spider-Man"],"name":"Amazing Spider-Man #174-175","link":"amazing_spiderman_174175","credits":["Ross Andru","Tony DeZuniga","Jim Mooney","Len Wein"],"i":1733},{"year":2009,"characters":["Beast","Beth Sheldon","Captain America","Doris Sheldon","Falcon","Hellcat","Henry Pym","Hitman","J. Jonah Jameson","Jenny Sheldon","Marcia Hardesty","Phil Sheldon","Punisher","Sam Reuther","Scarlet Witch","Thor","Vision"],"name":"Marvels: Eye of the Camera #3","link":"marvels_eye_of_the_camera_3","credits":["Kurt Busiek","Jay Anacleto","Tom Breevort","Jeanine Schaefer","Roger Stern","Joe Quesada"],"i":1734},{"year":1978,"characters":["Aunt May","Aunt Watson","Flash Thompson","Green Goblin (Bart Hamilton)","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mamie Muggins","Mary Jane Watson","Silvermane","Spider-Man"],"name":"Amazing Spider-Man #176-180","link":"amazing_spider-man_176-180","credits":["Jim Mooney","Ross Andru","Len Wein","Tony DeZuniga","Mike Esposito"],"i":1735},{"year":1977,"characters":["Black Jack Tarr","Clive Reston","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #54,56-58","link":"master_of_kung_fu_58","credits":["Doug Moench","Jim Craig","John Tartaglione"],"i":1736},{"year":1987,"characters":["August Personage In Jade","Bushmaster","Colleen Wing","Human Torch","Invisible Woman","Iron Fist","Lei Kung the Thunderer","Misty Knight","Mr. Fantastic","Puppet Master","Spider-Man","Steel Serpent","Thing"],"name":"Marvel Team-Up #63-64","link":"marvel_teamup_6364","credits":["James Fry","Chris Claremont","Sholly Fisch","Mark McKenna","John Byrne","David Hunt"],"i":1737},{"year":1977,"characters":["Batragon","Centipor","Doctor Demonicus","Dum Dum Dugan LMD","Gabriel Jones","Ghilaron","Godzilla","Jimmy Woo","Lepirax","Robert Takiguchi","Tamara Hashioka","Yuriko Takiguchi"],"name":"Godzilla #4-5","link":"godzilla_4-5","credits":["Klaus Janson","Tom Sutton","Doug Moench","Tony DeZuniga"],"i":1738},{"year":1977,"characters":["Charles Rider","Crimebuster","Mike Burley","Nick Fury","Nova (Rich Rider)","Robbie Rider"],"name":"Nova #15","link":"nova_15","credits":["Carmine Infantino","Tom Palmer","Marv Wolfman"],"i":1739},{"year":1977,"characters":["Aurora Rabinowitz","Blade","Domini","Dracula","Frank Drake","Harold H. Harold","Janus (Golden Angel)","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #61","link":"tomb_of_dracula_61","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1740},{"year":1977,"characters":["Doc Samson","Hulk","Rhino"],"name":"Hulk #218","link":"hulk_218","credits":["Ernie Chan","George Tuska","Roger Stern","Len Wein","Keith Pollard"],"i":1741},{"year":1978,"characters":["Black Jack Tarr","Clive Reston","Dr. Doom","Fu Manchu","Leiko Wu","Prime Mover","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #59-60","link":"master_of_kung_fu_5960","credits":["John Tartaglione","Doug Moench","Mike Zeck"],"i":1742},{"year":1978,"characters":["Beverly Switzler","Doctor Bong","Howard The Duck","Lee Switzler"],"name":"Howard the Duck #19-21","link":"howard_the_duck_19-21","credits":["Klaus Janson","Carmine Infantino","Gene Colan","Steve Gerber"],"i":1743},{"year":1977,"characters":["Korvac","Thor"],"name":"Thor annual #6","link":"thor_annual_6","credits":["Sal Buscema","Klaus Janson","Roger Stern","Len Wein"],"i":1744},{"year":1978,"characters":["Danny Jones","Kligger","Lorry Jones","Tammy Anne Jones","Torpedo"],"name":"Marvel Premiere #39-40","link":"marvel_premiere_39-40","credits":["Marv Wolfman","Bill Mantlo","Al Milgrom","Bob Brown","Many Hands"],"i":1745},{"year":1978,"characters":["Brother Power","Flash Thompson","Man-Beast","Razorback","Sha Shan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #12-15","link":"peter_parker_the_spectacular_s_53","credits":["Ernie Chan","Bill Mantlo","Archie Goodwin","Sal Buscema","Mike Esposito"],"i":1746},{"year":1977,"characters":["Machine Man","Oliver Broadhurst","Simon Kragg"],"name":"2001: A Space Odyssey #1-10","link":"2001_a_space_odyssey_1-10","credits":["Jack Kirby","Michael W. Royer"],"i":1747},{"year":1977,"characters":["Captain America"],"name":"Captain America #216","link":"captain_america_216","credits":["Frank Giacoia","Roy Thomas","David Cockrum"],"i":1748},{"year":1978,"characters":["Daredevil","Debbie Harris","Foggy Nelson","Heather Glenn","Paladin","Purple Man"],"name":"Daredevil #150-151","link":"daredevil_150-151","credits":["Roger McKenzie","Carmine Infantino","Klaus Janson","Jim Shooter","Gil Kane"],"i":1749},{"year":1981,"characters":["Angie Freeman","Colleen Wing","Misty Knight"],"name":"Deadly Hands of Kung Fu #32-33, Bizarre Adventures #25 (Daughters of the Dragon)","link":"deadly_hands_of_kung_fu_3233_d","credits":["Bob McLeod","Marshall Rogers","Chris Claremont"],"i":1750},{"year":1978,"characters":["Caps Cooper","Charles Rider","Fritz Voltzmann","Ginger Jaye-Firestone","Gloria Rider","Nick Fury","Nova (Rich Rider)","Robbie Rider","Yellow Claw"],"name":"Nova #16-18","link":"nova_17-18","credits":["Carmine Infantino","The Tribe","Tom Palmer","Marv Wolfman"],"i":1751},{"year":1978,"characters":["April Sommers","Captain Barracuda","Clay Quartermain","David Purvis","Doc Samson","Gaffer (SHIELD Scientist)","General 'Thunderbolt' Ross","Hulk","Jim Wilson","Leader","Nick Fury","Stingray"],"name":"Hulk #219-221","link":"hulk_219-221","credits":["Ernie Chan","Sal Buscema","Roger Stern","Len Wein","Alfredo P. Alcala"],"i":1752},{"year":1978,"characters":["Arcade","Captain Britain","Courtney Ross","Jean DeWolff","Miss Locke","Mr. Chambers","Sabrina Morrel","Spider-Man"],"name":"Marvel Team-Up #65-66","link":"marvel_team-up_65-66","credits":["David Hunt","John Byrne","Chris Claremont"],"i":1753},{"year":1978,"characters":["Angel","Black Widow","Blob","Darkstar","Ghost Rider (Johnny Blaze)","Hercules","Iceman","Lorelei (Savage Land Mutate)","Unus","Vanisher"],"name":"Champions #17","link":"champions_17","credits":["Bill Mantlo","John Byrne","George Tuska"],"i":1754},{"year":1977,"characters":["Charles L. Delazny","Dr. Druid","Ghost Rider (Johnny Blaze)","Karen Page","Roxanne Simpson"],"name":"Ghost Rider #26","link":"ghost_rider_26","credits":["Sam Grainger","Don Perlin","Jim Shooter"],"i":1755},{"year":1978,"characters":["Bushmaster","Claire Temple","Colleen Wing","Comanche","Gadget","Iron Fist","Luke Cage","Misty Knight","Noah Burstein","Shades"],"name":"Power Man #48-49","link":"power_man_48-49","credits":["John Byrne","Dan Green","Chris Claremont"],"i":1756},{"year":1977,"characters":["Brahma Bill","Ghost Rider (Johnny Blaze)","Hawkeye","Manticore","Two-Gun Kid"],"name":"Ghost Rider #27","link":"ghost_rider_27","credits":["Dan Green","Don Perlin","Jim Shooter"],"i":1757},{"year":1978,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Hugh Howards","Jimmy Woo","Red Ronin","Robert Takiguchi","Tamara Hashioka","Yuriko Takiguchi"],"name":"Godzilla #6-8","link":"godzilla_6","credits":["Herb Trimpe","Fred Kida","Doug Moench","<b>Credits:"],"i":1758},{"year":1978,"characters":["Alicia Masters","Thing"],"name":"Fantastic Four #190","link":"fantastic_four_190","credits":["Tony DeZuniga","Sal Buscema","Marv Wolfman"],"i":1759},{"year":1978,"characters":["Domini","Dracula","Frank Drake","Janus (Golden Angel)","Mephisto","Quincy Harker","Rachel Van Helsing","Saint (dog)","Topaz"],"name":"Tomb of Dracula #62-65","link":"tomb_of_dracula_62-65","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1760},{"year":1978,"characters":["Hercules","Human Torch","Thing","Zeus"],"name":"Marvel Two-In-One #44","link":"marvel_two-in-one_44","credits":["Marv Wolfman","Bob Hall","Jim Salicrup","Frank Giacoia","Roger Stern"],"i":1761},{"year":1978,"characters":["Banshee","Colossus","Cyclops","Elaine Grey","Gary Cody","Gladiator (Shiar)","Guardian (James Mac Hudson)","John Grey","Lilandra","Moira MacTaggert","Nightcrawler","Oracle","Phoenix Force","Professor X","Starbolt","Storm","Vindicator (Heather Hudson)","Wolverine"],"name":"Uncanny X-Men #109","link":"uncanny_x-men_109","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":1762},{"year":1978,"characters":["Black Jack Tarr","Clive Reston","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith","Skull-Crusher"],"name":"Master of Kung Fu #61","link":"master_of_kung_fu_61","credits":["Doug Moench","Jim Craig","John Tartaglione"],"i":1763},{"year":1978,"characters":["Man-Thing"],"name":"Rampaging Hulk #7 (Man-Thing)","link":"rampaging_hulk_7_man-thing","credits":["Bob Wiacek","Jim Starlin","Steve Gerber"],"i":1764},{"year":1978,"characters":["Brahma Bill","Ghost Rider (Johnny Blaze)","Orb","Roxanne Simpson"],"name":"Ghost Rider #28","link":"ghost_rider_28","credits":["Tom Sutton","Don Perlin","Pablo Marcos","Roger McKenzie","Owen McCarron"],"i":1765},{"year":1978,"characters":["Agatha Harkness","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Nova (Frankie Raye)","Parnival Plunder","Sergius O'Hoolihan","Thing","Thundra","Walter Collins","Willie Lumpkin"],"name":"Fantastic Four #191","link":"fantastic_four_191","credits":["George Perez","Len Wein","Joe Sinnott"],"i":1766},{"year":1979,"characters":["Black Panther","Ishanta","Joshua Itobu","Khanata","N'Gassi","Zuni"],"name":"Black Panther #8-13","link":"black_panther_8-13","credits":["Jerry Bingham","Ed Hannigan","Gene Day","Michael W. Royer","Jack Kirby","Jim Shooter"],"i":1767},{"year":1978,"characters":["Beast","Captain America","Iron Man","Thor","Uatu the Watcher","Vision"],"name":"What If? #9","link":"what_if_9","credits":["Bill Black","Don Glut","Alan Kupperberg"],"i":1768},{"year":1978,"characters":["Black Jack Tarr","Cat (Shen Kuei)","Clive Reston","Juliette (British Spy)","Leiko Wu","Pavane","Shang-Chi","Sir Denis Nayland Smith","Skull-Crusher"],"name":"Master of Kung Fu #62-63","link":"master_of_kung_fu_62-63","credits":["Doug Moench","Jim Craig","John Tartaglione"],"i":1769},{"year":1978,"characters":["Kraven the Hunter","Spider-Man","Tigra"],"name":"Marvel Team-Up #67","link":"marvel_team-up_67","credits":["David Hunt","John Byrne","Chris Claremont"],"i":1770},{"year":1978,"characters":["Dakimh The Enchanter","Howard The Duck","Jennifer Kale","Korrek","Man-Thing"],"name":"Howard the Duck #22-23","link":"howard_the_duck_22-23","credits":["Val Mayerik","William Wray","Steve Gerber"],"i":1771},{"year":1978,"characters":["Beetle","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #16","link":"peter_parker_the_spectacular_s_54","credits":["Mike Esposito","Sal Buscema","Elliot S! Maggin"],"i":1772},{"year":1978,"characters":["Ameridroid","Animus (Vamp)","Blue Streak","Captain America","Dum Dum Dugan LMD","Falcon","General Lyle Dekker","Iron Man","Jarvis","Kligger","Nick Fury","Quasar","Redwing","Sharon Carter","Texas Twister","Veda"],"name":"Captain America #217-221","link":"captain_america_218","credits":["Bob Budiansky","John Buscema","Roy Thomas","Don Glut","Sal Buscema","John Tartaglione","Scott Edelman","Mike Esposito","David Anthony Kraft","Alan Gordon","Steve Gerber"],"i":1773},{"year":1978,"characters":["Jerry Hunt","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #1","link":"spider-woman_1","credits":["Carmine Infantino","Tony DeZuniga","Marv Wolfman"],"i":1774},{"year":1978,"characters":["Howard The Duck","Jennifer Kale","Korrek","Man-Thing","Paul Same","Winda Wester"],"name":"Howard the Duck #24","link":"howard_the_duck_24","credits":["Tom Palmer","Gene Colan","Steve Gerber"],"i":1775},{"year":1978,"characters":["Animus (Vamp)","Captain America","Dum Dum Dugan LMD","Jarvis","Kligger","Mason Harding","Nick Fury","Red Skull","Veda"],"name":"Captain America #222-223,225-227","link":"captain_america_222-223225","credits":["Roger McKenzie","Sal Buscema","John Tartaglione","Steve Gerber","Mike Esposito"],"i":1776},{"year":1978,"characters":["Beast","Belathauzer","Captain America","Devil-Slayer","Dollar Bill","Dr. Strange","Hellcat","Hulk","Iron Man","Jack Norriss","Nighthawk","Red Guardian (Tania Belinksy)","Scarlet Witch","Valkyrie","Wong"],"name":"Defenders #58-60","link":"defenders_58-60","credits":["David Anthony Kraft","Klaus Janson","Dan Green","Ed Hannigan"],"i":1777},{"year":1978,"characters":["Banshee","Captain Delany","Colosso","Colossus","Cyclops","Moira MacTaggert","Nightcrawler","Phoenix Force","Professor X","Storm","Warhawk","Wolverine"],"name":"Uncanny X-Men #110","link":"uncanny_x-men_110","credits":["Dave Cockrum","Tony DeZuniga","Chris Claremont"],"i":1778},{"year":1978,"characters":["Hulk"],"name":"Hulk #222","link":"hulk_222","credits":["Alfredo P. Alcala","Len Wein","Jim Starlin"],"i":1779},{"year":1978,"characters":["Amanda Sefton","Betsy Wilford","Claire Temple","Colleen Wing","Discus","Harmony Young","Iron Fist","Jeryn Hogarth","Luke Cage","Misty Knight","Rafael Scarfe","Stiletto"],"name":"Power Man & Iron Fist #50","link":"power_man_and_iron_fist_50","credits":["John Byrne","Dan Green","Chris Claremont"],"i":1780},{"year":1978,"characters":["Amos Jardine","D'Spayre","Dakimh The Enchanter","Jennifer Kale","Man-Thing","Mary Jane Watson","Spider-Man"],"name":"Marvel Team-Up #68","link":"marvel_team-up_68","credits":["John Byrne","Bob Wiacek","Chris Claremont"],"i":1781},{"year":1978,"characters":["Hercules","Wolverine"],"name":"Marvel Treasury Edition #26","link":"marvel_treasury_edition_26","credits":["Mary Jo Duffy","George Perez","Ken Landgraf"],"i":1782},{"year":1978,"characters":["Copperhead II","Daredevil","Human Fly","White Tiger"],"name":"Human Fly #8-9","link":"human_fly_8-9","credits":["Bill Mantlo","New York Tribe","Frank Robbins","Mike Esposito"],"i":1783},{"year":1978,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Hugh Howards","Red Ronin","Robert Takiguchi","Tamara Hashioka","Yuriko Takiguchi"],"name":"Godzilla #9","link":"godzilla_9","credits":["Herb Trimpe","Fred Kida","Doug Moench"],"i":1784},{"year":1978,"characters":["Clea","Dormammu","Dr. Strange","Ghost Rider (Johnny Blaze)","Wong","Zarathos"],"name":"Ghost Rider #29-32","link":"ghost_rider_29-31","credits":["New York Tribe","Don Perlin","Jim Mooney","Roger McKenzie","Bob Layton","Rick Bryant"],"i":1785},{"year":1978,"characters":["Machine Man","Oliver Broadhurst","Peter Spaulding","Simon Kragg"],"name":"Machine Man #1","link":"machine_man_1","credits":["Jack Kirby","Michael W. Royer"],"i":1786},{"year":1978,"characters":["Captain Mar-vell","Doctor Minerva","Ethan Wilford","Gertie","Henry Pym","Iron Man","Mac-Ronn","Mordecai P. Boggs","Rick Jones","Ronan the Accuser"],"name":"Captain Marvel #55-56","link":"captain_marvel_55-56","credits":["Pat Broderick","Doug Moench","Scott Edelman","Jim Shooter","Bob Wiacek"],"i":1787},{"year":1978,"characters":["Captain Mar-vell","Rick Jones","Thor"],"name":"Captain Marvel #57","link":"captain_marvel_57","credits":["Pat Broderick","Bob Wiacek","Roger McKenzie"],"i":1788},{"year":1979,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #33-34","link":"ghost_rider_33-34","credits":["Don Perlin","Roger McKenzie"],"i":1789},{"year":1978,"characters":["Aleta","Beast","Black Panther","Black Widow","Captain America","Captain Mar-vell","Carina Korvac","Carol Danvers","Charlie-27","Collector","Crystal","Django Maximoff","Dr. Strange","Eternity","Hawkeye","Heimdall","Henry Peter Gyrich","Henry Pym","Hera","Hercules","Iron Man","Jarvis","Jocasta","Justice","Korvac","Major Victory","Martinex","Mary Jane Watson","Mephisto","Moondragon","Nick Fury","Nighthawk","Nikki","Norma Astrovik","Odin","Porcupine","Quicksilver","Scarlet Witch","Silver Surfer","Spider-Man","Starhawk","Thor","Two-Gun Kid","Tyrak","Uatu the Watcher","Ultron","Vision","Wasp","Whizzer","Wonder Man","Yondu","Zeus"],"name":"Avengers #167-168, 170-177","link":"avengers_167-168_170-177","credits":["Bill Mantlo","George Perez","Pablo Marcos","Bob McLeod","Josef Rubinstein","Ricardo Villamonte","Sal Buscema","Klaus Janson","Roger Stern","David Wenzel","David Michelinie","Jim Shooter","Mark Gruenwald","Winslow Mortimer","Dan Green","Rick J. Bryant"],"i":1790},{"year":1978,"characters":["Azir","Beast","Havok","Living Monolith","Polaris","Spider-Man","Thor"],"name":"Marvel Team-Up #69-70","link":"marvel_team-up_69-70","credits":["John Byrne","Ricardo Villamonte","Chris Claremont","Tony DeZuniga"],"i":1791},{"year":1978,"characters":["Alicia Masters","Daredevil","Eugene Everett","Foggy Nelson","Henry Pym","Mad Thinker","Thing","Vision"],"name":"Marvel Two-In-One #37-39","link":"marvel_two-in-one_37-39","credits":["Marv Wolfman","Roger Slifer","Pablo Marcos","Jim Mooney","Ron Wilson"],"i":1792},{"year":1978,"characters":["Black Panther","Brother Voodoo","Daredevil","Eugene Everett","Henry Pym","J. Jonah Jameson","Joe 'Robbie' Robertson","Maria Henckle","Sinister Doctor Spectrum","Thing"],"name":"Marvel Two-In-One #40-41","link":"marvel_two-in-one_40-41","credits":["Roger Slifer","Pablo Marcos","Tom DeFalco","Ron Wilson","David Anthony Kraft"],"i":1793},{"year":1978,"characters":["Jerry Hunt","Magnus","Morgan Le Fey","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #2","link":"spider-woman_2","credits":["Carmine Infantino","Tony DeZuniga","Marv Wolfman"],"i":1794},{"year":1984,"characters":["Growler","Hoder","Huginn","Muninn","Odin","Thor","Vidar"],"name":"Thor annual #12","link":"thor_annual_12","credits":["Alan Zelenetz","Mark Gruenwald","Bob Budiansky","Michael Gustovich"],"i":1795},{"year":1978,"characters":["April Sommers","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hulk","Jim Wilson","Kroptokin the Great","Leader","Omnivac","Spad McCraken"],"name":"Hulk #223-226","link":"hulk_223-226","credits":["Joe Sinnott","Josef Rubinstein","Sal Buscema","Klaus Janson","Roger Stern"],"i":1796},{"year":1978,"characters":["Balder","Blastaar","Fandral","Heimdall","Hogun","Karnilla","Loki","Odin","Recorder","Sif","Stilt-Man","Thor","Volstagg"],"name":"Thor #267-268","link":"thor_267-268","credits":["Tony DeZuniga","Walt Simonson","Len Wein"],"i":1797},{"year":1978,"characters":["Becky Blake","Ben Urich","Cobra","Daredevil","Death-Stalker","Debbie Harris","Foggy Nelson","Gladiator","Heather Glenn","Jester (Jonathan Powers)","Mr. Hyde","Paladin","Purple Man"],"name":"Daredevil #152-154","link":"daredevil_152-154","credits":["Stephen Leialoha","Roger McKenzie","Gene Colan","Carmine Infantino","Klaus Janson","Tony DeZuniga"],"i":1798},{"year":1978,"characters":["Alicia Masters","Becky Rainbow","Human Torch","Invisible Woman","Mr. Fantastic","Texas Twister","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #192","link":"fantastic_four_192","credits":["George Perez","Roger Slifer","Len Wein","Joe Sinnott"],"i":1799},{"year":1978,"characters":["Blackout","Ginger Jaye-Firestone","Nova (Rich Rider)"],"name":"Nova #19","link":"nova_19","credits":["Carmine Infantino","Tom Palmer","Marv Wolfman"],"i":1800},{"year":1978,"characters":["Arcturus","Crimson Dynamo V","Darkstar","Happy Hogan","Iron Man","Jack of Hearts","Jasper Sitwell","Madame Masque","Pepper Potts","Punisher Robot","Recorder","Sir Lepard","Sir Liyan","Sir Ossilot","Spymaster","Titanium Man","Tony Stark LMD Unit 6","Unicorn","Vanguard"],"name":"Iron Man #109-112","link":"iron_man_110-112","credits":["Bill Mantlo","Fred Kida","Carmine Infantino","Keith Pollard","Bob Wiacek","Alfredo P. Alcala"],"i":1801},{"year":1978,"characters":["Agatha Harkness","Alicia Masters","Darkoth","Diablo","Dr. Doom Clone","Franklin Richards","Human Torch","Impossible Man","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #193-194","link":"fantastic_four_193-194","credits":["Bill Mantlo","Joe Sinnott","Len Wein","Keith Pollard","David Hunt"],"i":1802},{"year":1978,"characters":["Iron Man","Jack of Hearts","Jasper Sitwell","Madame Masque","Spymaster","Titanium Man","Tony Stark LMD Unit 6","Unicorn"],"name":"Iron Man #113","link":"iron_man_113","credits":["Herb Trimpe","Bill Mantlo","Keith Pollard","Josef Rubinstein"],"i":1803},{"year":1978,"characters":["Beast","Blastaar","Captain America","Captain Mar-vell","Dr. Doom","Fandral","FAUST","Hogun","Howard The Duck","Iron Man","Nick Fury","Nova (Rich Rider)","Odin","Scarlet Witch","Shang-Chi","Spider-Man","Stilt-Man","Thor","Vision","Volstagg","Wonder Man"],"name":"Thor #269-271","link":"thor_271","credits":["Tony DeZuniga","Walt Simonson","Len Wein"],"i":1804},{"year":1978,"characters":["Arabella Jones","Carol Danvers","Centurion","Contessa Valentina Allegro De La Fontaine","Frank Gianelli","Henry Pym","Lynn Anderson","Mystique","Scarlet Witch","Sharon Cole","Supreme Intelligence","Tabitha Townshend","Tracy Burke","Vision","Wasp","Wonder Man"],"name":"Ms. Marvel #17-18","link":"ms_marvel_17-18","credits":["Tony DeZuniga","Chris Claremont","Jim Mooney","Ricardo Villamonte"],"i":1805},{"year":1978,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Hugh Howards","Jimmy Woo","Red Ronin","Robert Takiguchi","Tamara Hashioka","Yetrigar"],"name":"Godzilla #10-11","link":"godzilla_10-11","credits":["Herb Trimpe","Fred Kida","Doug Moench"],"i":1806},{"year":1978,"characters":["Jack of Hearts","Major Martins"],"name":"Marvel Premiere #44","link":"marvel_premiere_44","credits":["Keith Giffen","Bill Mantlo","Rudy D. Nebres","Roger Stern"],"i":1807},{"year":1978,"characters":["Machine Man","Peter Spaulding","Simon Kragg","Ten For","Tracy Warner"],"name":"Machine Man #2-6","link":"machine_man_2-6","credits":["Jack Kirby","Michael W. Royer"],"i":1808},{"year":1978,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Jimmy Woo","Nick Fury","Red Ronin","Robert Takiguchi","Tamara Hashioka"],"name":"Godzilla #12-14","link":"godzilla_12-14","credits":["Herb Trimpe","Fred Kida","Bob Hall","Doug Moench","Jim Shooter","Dan Green"],"i":1809},{"year":1978,"characters":["Brothers Grimm","James Wyatt","Magnus","Mr. Doll","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #3","link":"spider-woman_3","credits":["Carmine Infantino","Tony DeZuniga","Marv Wolfman"],"i":1810},{"year":1978,"characters":["Angel","Flash Thompson","Holly Gillis","Iceman","Lightmaster","Rampage","Sha Shan","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #17-18","link":"spectacular_spider-man_17-18","credits":["David Hunt","Bill Mantlo","Sal Buscema"],"i":1811},{"year":1978,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Godzilla","Jimmy Woo","Red Ronin","Robert Takiguchi","Tamara Hashioka"],"name":"Godzilla #15-16","link":"godzilla_15-16","credits":["Herb Trimpe","Dan Green","Doug Moench","Bob Hall"],"i":1812},{"year":1978,"characters":["Beast","Black Knight Statue","Clea","Death-Stalker","Dr. Strange","Henry Pym","Iron Man","Nighthawk","Wong"],"name":"Doctor Strange #29","link":"dr_strange_29","credits":["Ernie Chan","Tom Sutton","Roger Stern"],"i":1813},{"year":1978,"characters":["Big Ben Donovan","Blake Tower","Colleen Wing","Harmony Young","Iron Fist","Jeryn Hogarth","Joy Meachum","Luke Cage","Misty Knight","Morgan","Nightshade","Rafael Scarfe","Shreeve","Wichita Kid"],"name":"Power Man & Iron Fist #51-53","link":"power_man_and_iron_fist_51-53","credits":["Ernie Chan","Michael Zeck","Ed Hannigan","Jim Mooney","Ricardo Villamonte","Chris Claremont","Sal Buscema"],"i":1814},{"year":1978,"characters":["Fancy Dan","Flash Thompson","Glory Grant","Holly Gillis","J. Jonah Jameson","Joe 'Robbie' Robertson","Lightmaster","Mamie Muggins","Montana","Ox III","Sha Shan","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #19-20","link":"peter_parker_the_spectacular_s_55","credits":["Bill Mantlo","Sal Buscema","Mike Esposito"],"i":1815},{"year":1979,"characters":["Banshee","Beast","C'jime","Colossus","Cyclops","Fahe","Garokk","John Cheever","Ka-Zar","Lilandra","M'rin","Magneto","Mesmero","Misty Knight","Nanny","Nereel","Nightcrawler","Phoenix Force","Professor X","Sauron","Seesha","Storm","Tandy Snow","Tongah","Wolverine","Zabu","Zaladane"],"name":"Uncanny X-Men #111-117","link":"uncanny_x-men_111-117","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":1816},{"year":1978,"characters":["Beverly Switzler","Bruto the Strongman","Clown","Doctor Bong","Ernesto Gambonno","Howard The Duck","Human Cannonball","Lee Switzler","Livewire","Luigi Gambonno","Paul Same","Princess Python","Ringmaster","Winda Wester"],"name":"Howard the Duck #25-27","link":"howard_the_duck_25-27","credits":["Klaus Janson","Gene Colan","Steve Gerber"],"i":1817},{"year":1978,"characters":["Angel","Candy Southern","Doc Samson","General 'Thunderbolt' Ross","Hulk","Iceman","Jim Wilson","Master Mold","Terri Sue Bottoms"],"name":"Hulk annual #7","link":"hulk_annual_7","credits":["John Byrne","Roger Stern","Bob Layton"],"i":1818},{"year":1978,"characters":["Dr. Doom Clone","Human Torch","Impossible Man","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Fantastic Four #195","link":"fantastic_four_195","credits":["Keith Pollard","Pablo Marcos","Marv Wolfman"],"i":1819},{"year":1978,"characters":["Joanne Tumolo","Tabur","Tigra"],"name":"Marvel Premiere #42","link":"marvel_premiere_42","credits":["Ernie Chan","John Warner","Ed Hannigan","Mike Vosburg"],"i":1820},{"year":1991,"characters":["Ananta","Dorothy Betz","Shanna the She-Devil"],"name":"Marvel Fanfare #56-59 (Shanna)","link":"marvel_fanfare_56-59","credits":["Al Milgrom","Rob Tokar","Steve Gerber","Carmine Infantino","Sarra Mossoff","Tony DeZuniga","Bret Blevins"],"i":1821},{"year":1978,"characters":["Captain America","Dum Dum Dugan LMD","Falcon","Nick Fury","Plantman","Redwing","Spider-Man"],"name":"Marvel Team-Up #71","link":"marvel_team-up_71","credits":["David Wenzel","Dan Green","Bill Kunkel"],"i":1822},{"year":1978,"characters":["Bill Foster","Brothers Grimm","Hangman","James Wyatt","Jerry Hunt","Magnus","Morgan Le Fey","Spider-Woman (Jessica Drew)","Werewolf By Night"],"name":"Spider-Woman #4-6","link":"spider-woman_4-6","credits":["Carmine Infantino","Tony DeZuniga","Rick J. Bryant","Marv Wolfman"],"i":1823},{"year":1978,"characters":["Aunt May","Betty Brant","Big Wheel","Flash Thompson","Glory Grant","J. Jonah Jameson","Mamie Muggins","Mary Jane Watson","Rocket Racer","Spider-Man","Tinkerer","Toy"],"name":"Amazing Spider-Man #182-183","link":"amazing_spider-man_182-183","credits":["Mike Esposito","Bob McLeod","Ross Andru","Marv Wolfman"],"i":1824},{"year":1978,"characters":["Betty Brant","J. Jonah Jameson","Man-Wolf (John Jameson)","Marla Madison Jameson","Phillip Chang","Randy Robertson","Spider-Man","White Dragon"],"name":"Amazing Spider-Man #184-185","link":"amazing_spider-man_184-185","credits":["Frank Giacoia","Mike Esposito","Ross Andru","Marv Wolfman"],"i":1825},{"year":1978,"characters":["Flash Thompson","Glory Grant","Holly Gillis","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Scorpion","Sha Shan","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #21","link":"peter_parker_the_spectacular_s_56","credits":["Bill Mantlo","Jim Mooney","Mike Esposito"],"i":1826},{"year":1978,"characters":["Iron Man","Jean DeWolff","Spider-Man","Whiplash (Blacklash)","Wraith"],"name":"Marvel Team-Up #72","link":"marvel_team-up_72","credits":["Bill Mantlo","Jim Mooney"],"i":1827},{"year":1978,"characters":["Betrand Crawley","Betty Brant","Cyclone","Flash Thompson","Frenchie","Gena Landers","Holly Gillis","Mamie Muggins","Marlene Alraune","Mary Jane Watson","Masked Marauder","Moon Knight","Sha Shan","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #22-23","link":"peter_parker_the_spectacular_s_32","credits":["Bill Mantlo","Bruce D. Patterson","Jim Mooney","Mick Zeck","Mike Esposito"],"i":1828},{"year":1978,"characters":["Clea","Dr. Strange","Dweller In Darkness","Ralph Blumkenn"],"name":"Doctor Strange #30","link":"dr_strange_30-31","credits":["Tom Sutton","Roger Stern"],"i":1829},{"year":1978,"characters":["Agatha Harkness","Alicia Masters","Dr. Doom","Dr. Doom Clone","Dr. Hauptmann","Franklin Richards","Human Torch","Igor (Super Ape)","Invisible Woman","Mikhlo (Super Ape)","Mr. Fantastic","Nick Fury","Peator (Super Ape)","Red Ghost","Thing","Zorba"],"name":"Fantastic Four #196-200","link":"fantastic_four_198-200","credits":["Joe Sinnott","Keith Pollard","Pablo Marcos","Marv Wolfman"],"i":1830},{"year":1978,"characters":["Captain Mar-vell","Carol Danvers","Doctor Minerva","Ethan Wilford","J. Jonah Jameson","Lizzie Wilford","Mac-Ronn","Marla Madison Jameson","Ronan the Accuser","Supreme Intelligence"],"name":"Ms. Marvel #19","link":"ms_marvel_19","credits":["Bob McLeod","Chris Claremont","Carmine Infantino"],"i":1831},{"year":1978,"characters":["Balder","Enchantress","Executioner","Fandral","Fenris","Frigga","Harris Hobbs","Heimdall","Hela","Hermod","Hoder","Hogun","Joey Burnett","Loki","Midgard Serpent","Odin","Red Norvell","Sif","Sigyn","Sleipnir","Thor","Tyr","Volstagg"],"name":"Thor #272-278","link":"thor_272-278","credits":["Roy Thomas","Chic Stone","Tom Palmer","John Buscema"],"i":1832},{"year":1978,"characters":["Hermod","Mimir","Odin","Sif","Sleipnir","Thor"],"name":"Thor annual #7","link":"thor_annual_7","credits":["Ernie Chan","Roy Thomas","Mark Gruenwald","Walt Simonson"],"i":1833},{"year":1978,"characters":["Beast","Captain America","Dr. Faustus","Henry Pym","Iron Man","Jarvis","Nick Fury","Scarlet Witch","Senor Muerte","Tarantula","Thor","Vision","Wasp"],"name":"Captain America #224","link":"captain_america_224","credits":["John Tartaglione","Michael Zeck","Peter Gillis","Mike Esposito"],"i":1834},{"year":1978,"characters":["Paladin"],"name":"Marvel Premiere #43","link":"marvel_premiere_43","credits":["Tom Sutton","Don McGregor"],"i":1835},{"year":1978,"characters":["Aunt May","Betty Brant","Blake Tower","Chameleon","Flash Thompson","J. Jonah Jameson","Joe 'Robbie' Robertson","Spencer Smythe","Spider-Man"],"name":"Amazing Spider-Man #186","link":"amazing_spider-man_186","credits":["Keith Pollard","Mike Esposito","Marv Wolfman"],"i":1836},{"year":1978,"characters":["Clay Quartermain","Doc Samson","Hulk","Jim Wilson","Kroptokin the Great"],"name":"Hulk #227","link":"hulk_227","credits":["Sal Buscema","Klaus Janson","Roger Stern","Peter Gillis"],"i":1837},{"year":1978,"characters":["Daredevil","Owl","Professor Kerwin","Spider-Man"],"name":"Marvel Team-Up #73","link":"marvel_team-up_73","credits":["Kerry Gammil","Don Perlin","Gary Friedrich"],"i":1838},{"year":1978,"characters":["Agatha Harkness","Alicia Masters","Blake Tower","Chris Keating","Daredevil","Franklin Richards","Human Torch","Invisible Woman","Mole Man","Mr. Fantastic","Thing"],"name":"Fantastic Four annual #13","link":"fantastic_four_annual_13","credits":["Bill Mantlo","Sal Buscema","Joe Sinnott"],"i":1839},{"year":1978,"characters":["Arsenal","Beast","Captain America","Count Nefaria","Henry Pym","Iron Man","Madame Masque","Scarlet Witch","Spymaster","Titanium Man","Unicorn","Vision","Wonder Man"],"name":"Iron Man #114","link":"iron_man_114","credits":["Keith Giffen","Bill Mantlo","Bruce D. Patterson"],"i":1840},{"year":1978,"characters":["Betty Brant","Flash Thompson","Glory Grant","Harry Osborn","Hypno-Hustler","Liz Allan","Mary Jane Watson","Sha Shan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #24","link":"peter_parker_the_spectacular_s_33","credits":["Bill Mantlo","Frank Springer"],"i":1841},{"year":1978,"characters":["Domini","Dracula","Lilith (Dracula's Daughter)"],"name":"Tomb of Dracula #66","link":"tomb_of_dracula_66","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1842},{"year":1978,"characters":["Brothers Grimm","James Wyatt","Jerry Hunt","Magnus","Mr. Doll","Nick Fury","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #7","link":"spider-woman_7","credits":["Stephen Leialoha","Carmine Infantino","Alan Gordon","Marv Wolfman"],"i":1843},{"year":1978,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Thing","Walter Collins","Zorba"],"name":"Fantastic Four #201","link":"fantastic_four_201","credits":["Joe Sinnott","Keith Pollard","Marv Wolfman"],"i":1844},{"year":1977,"characters":["Black Bolt","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Medusa","Mr. Fantastic","Quicksilver","Sphinx","Thing","Thraxon","Triton"],"name":"Fantastic Four annual #12","link":"fantastic_four_annual_12","credits":["Marv Wolfman","Bob Hall","Keith Pollard","Bob Wiacek","Marie Severin"],"i":1845},{"year":1978,"characters":["Ape Man","Beast","Bird Man","Captain America","Cat Man","Count Nefaria","Frog Man","Henry Pym","Iron Man","Jason Beere","Madame Masque","Scarlet Witch","Spymaster","Titanium Man","Tony Stark LMD Unit 6","Unicorn","Wasp","Wonder Man"],"name":"Iron Man #115-116","link":"iron_man_116","credits":["Bill Mantlo","John Romita Jr.","Jim Salicrup","Roger Stern","Bob Layton","David Michelinie","Dan Green"],"i":1846},{"year":1978,"characters":["Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hulk","Jim Wilson","Moonstone (Karla Sofen)","Spad McCraken"],"name":"Hulk #228-229","link":"hulk_228-229","credits":["Bob McLeod","Sal Buscema","Roger Stern","Peter Gillis","Mike Esposito"],"i":1847},{"year":1978,"characters":["Carol Danvers","Frank Gianelli","Serpentyne","Sharon Cole"],"name":"Ms. Marvel #20-21","link":"ms_marvel_20-21","credits":["Dave Cockrum","Bob Wiacek","Chris Claremont","Al Milgrom"],"i":1848},{"year":1984,"characters":["Human Torch","Invisible Woman","Jarvis","Klaw","Mad Thinker","Mr. Fantastic","Scarlet Witch","Thing","Vision"],"name":"Marvel Fanfare #14 (Vision & FF)","link":"marvel_fanfare_14","credits":["Josef Rubinstein","Roger McKenzie","Rick Leonardi"],"i":1849},{"year":1978,"characters":["Captain America","Jude the Entropic Man (Yagzan)","Man-Thing","Thing","Tom Lightner","Victorius","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #42-43","link":"marvel_two-in-one_42-43","credits":["Ralph Macchio","Sam Grainger","Sal Buscema","\"Friends\"","John Byrne","Alfredo P. Alcala"],"i":1850},{"year":1978,"characters":["Clea","Dr. Strange","Sub-Mariner"],"name":"Doctor Strange #31","link":"dr_strange_31","credits":["Tom Sutton","Don McGregor","Ricardo Villamonte"],"i":1851},{"year":1978,"characters":["Mary Jane Watson","Rick Jones","Silver Samurai","Spider-Man"],"name":"Marvel Team-Up #74","link":"marvel_team-up_74","credits":["Bob Hall","Chris Claremont","Marie Severin"],"i":1852},{"year":1978,"characters":["Frenchie","Hulk","Marlene Alraune","Moon Knight"],"name":"Hulk Magazine #11","link":"hulk_magazine_11","credits":["Doug Moench","Fran Matera","Gene Colan","Ron Wilson","Tony DeZuniga"],"i":1853},{"year":1978,"characters":["Curtiss Jackson (Power Broker)","Machine Man","Miles Brickman","Peter Spaulding","Simon Kragg"],"name":"Machine Man #7-9","link":"machine_man_8","credits":["Jack Kirby","Michael W. Royer"],"i":1854},{"year":1978,"characters":["Bernie Dillon","Caps Cooper","Jarvis","Nova (Rich Rider)","Thing"],"name":"Marvel Two-In-One annual #3","link":"marvel_two-in-one_annual_3","credits":["Frank Giacoia","David Hunt","Sal Buscema","Marv Wolfman"],"i":1855},{"year":1978,"characters":["Bernie Dillon","Caps Cooper","Charles Rider","Comet","Corruptor","Donna-Lee Dover","Ginger Jaye-Firestone","Gloria Rider","Mike Burley","Nova (Rich Rider)","Robbie Rider"],"name":"Nova #20-21","link":"nova_20-21","credits":["Marv Wolfman","John Buscema","Bob McLeod","Josef Rubinstein","Carmine Infantino","David Hunt"],"i":1856},{"year":1979,"characters":["Captain Mar-vell","Chaos (Titan)","Dionysus (Titan)","Drax the Destroyer","Elysius","Gaea (Titan)","Gertie","ISAAC","Mentor","Mordecai P. Boggs","Rick Jones","Starfox","Stellarax"],"name":"Captain Marvel #58-62","link":"captain_marvel_58-62","credits":["Pat Broderick","Doug Moench","Jim Salicrup","Bruce D. Patterson","Bob McLeod","Roger Stern"],"i":1857},{"year":1979,"characters":["Captain Mar-vell","Chaos (Titan)","Dionysus (Titan)","Drax the Destroyer","Elysius","Eon","Gaea (Titan)","Gertie","ISAAC","Mentor","Rick Jones","Starfox","Stellarax"],"name":"Marvel Spotlight #1-3","link":"marvel_spotlight_1","credits":["Pat Broderick","Doug Moench","Jim Salicrup","Gene Day","Bruce D. Patterson","Roger Stern"],"i":1858},{"year":1978,"characters":["Dum Dum Dugan LMD","Gabriel Jones","Gladstone Hawkins","Godzilla","Henry Pym","Hugh Howards","Jimmy Woo","Red Ronin","Robert Takiguchi","Tamara Hashioka","Wasp","Yuriko Takiguchi"],"name":"Godzilla #17","link":"godzilla_17","credits":["Herb Trimpe","Dan Green","Doug Moench"],"i":1859},{"year":1979,"characters":["Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Quasimodo","Thing"],"name":"Fantastic Four #202","link":"fantastic_four_202","credits":["Joe Sinnott","John Buscema","Marv Wolfman"],"i":1860},{"year":1978,"characters":["Jerry Hunt","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #8","link":"spider-woman_8","credits":["Carmine Infantino","Alan Gordon","Marv Wolfman"],"i":1861},{"year":1978,"characters":["Dollar Bill","Hellcat","Hulk","J. Jonah Jameson","Joe 'Robbie' Robertson","Lunatik","Nighthawk","Presence","Spider-Man","Valkyrie"],"name":"Defenders #61","link":"defenders_61","credits":["David Anthony Kraft","Bob Lubbers","Ed Hannigan"],"i":1862},{"year":1979,"characters":["Black Knight Statue","Captain America","Clea","Cyrus Black","D'Spayre","Dr. Strange","Dweller In Darkness","Iron Man","Ludi","Marcia Trent","Murdoch Adams","Nightmare","Ningal","Sub-Mariner","Tiboro","Umar","Victoria Bentley","Wong"],"name":"Doctor Strange #32-37","link":"doctor_strange_32-37","credits":["Ralph Macchio","Tom Sutton","P. Craig Russell","Alan Kupperberg","Rudy D. Nebres","Gene Colan","Roger Stern"],"i":1863},{"year":1978,"characters":["Harmony Young","Luke Cage","Mary Jane Watson","Spider-Man"],"name":"Marvel Team-Up #75","link":"marvel_team-up_75","credits":["John Byrne","Alan Gordon","Chris Claremont","Ralph Macchio"],"i":1864},{"year":1978,"characters":["Batroc","Beetle","Bill Foster","Blob","Boomerang","Captain Mar-vell","Captain Ultra","Carol Danvers","Dollar Bill","Electro","Falcon","Havok","Hellcat","Hellstorm","Hercules","Hulk","Iron Fist","Jack of Hearts","Joe the Gorilla","Leap-Frog","Libra (Robot)","Looter","Lunatik","Melter","Nighthawk","Nova (Rich Rider)","Paladin","Pecos","Plantman","Polaris","Porcupine","Presence","Prowler","Quasar","Red Guardian (Tania Belinksy)","Redwing","Sagittarius (Robot)","Shocker","Stingray","Tagak","Toad","Torpedo","Valkyrie","Whirlwind","White Tiger"],"name":"Defenders #62-64","link":"defenders_62-64","credits":["David Anthony Kraft","Don Perlin","Jim Mooney","Sal Buscema"],"i":1865},{"year":1978,"characters":["Alicia Masters","Boss Barker","Captain Mar-vell","Thing","Torgo"],"name":"Marvel Two-In-One #45","link":"marvel_two-in-one_45","credits":["Mike Esposito","Peter Gillis","Alan Kupperberg"],"i":1866},{"year":1978,"characters":["Beetle","Bill Foster","Blob","Chris Keating","Dollar Bill","Havok","Hellcat","Hercules","Iron Fist","Lunatik","Millie The Model","Nighthawk","Porcupine","Presence","Red Guardian (Tania Belinksy)","Sagittarius (Robot)","Valkyrie","Whirlwind"],"name":"Defenders #65","link":"defenders_65","credits":["David Anthony Kraft","Don Perlin","Bruce D. Patterson"],"i":1867},{"year":1979,"characters":["Agamotto","Carol Danvers","Clea","Dr. Strange","Marie Laveau","Mary Jane Watson","Silver Dagger","Spider-Man","Wong"],"name":"Marvel Team-Up #76-77","link":"marvel_team-up_76-77","credits":["Juan Ortiz","Chris Claremont","Howard Chaykin","Jeff Aclin"],"i":1868},{"year":1979,"characters":["Bernie Dillon","Charles Rider","Comet","Crimebuster","Diamondhead","Doctor Sun","Ginger Jaye-Firestone","Gloria Rider","Mike Burley","Nova (Rich Rider)","Powerhouse","Robbie Rider","Sphinx"],"name":"Nova #22-25","link":"nova_22-25","credits":["Marv Wolfman","Stephen Leialoha","Carmine Infantino","Klaus Janson","Many Hands","Mike Esposito"],"i":1869},{"year":1978,"characters":["Human Fly"],"name":"Human Fly #15","link":"human_fly_15","credits":["Lee Elias","Bill Mantlo","Ricardo Villamonte"],"i":1870},{"year":1978,"characters":["Beast","Black Panther","Captain America","Carol Danvers","Clea","Dr. Strange","Hawkeye","Henry Pym","Iron Man","Jarvis","Krimonn the Power Prism","Quicksilver","Scarlet Witch","Sinister Doctor Spectrum II","Sinister Hyperion","Speed Demon","Thor","Thundra","Vision","Wasp","Wonder Man","Wong"],"name":"Avengers annual #8","link":"avengers_annual_8","credits":["George Perez","Roger Slifer","Pablo Marcos","Ricardo Villamonte"],"i":1871},{"year":1978,"characters":["Howard The Duck","Hulk","Human Torch","Invisible Woman","Karen Page","Mr. Fantastic","Thing","Willie Lumpkin"],"name":"Marvel Two-In-One #46","link":"marvel_two-in-one_46","credits":["Chic Stone","Roger Stern","Alan Kupperberg"],"i":1872},{"year":1990,"characters":["Iron Man","Mrs. Arbogast","Whirlwind"],"name":"Iron Man annual #11 (Mrs. Arbogast)","link":"iron_man_annual_11_mrs_arbogas","credits":["Steve Ditko","Carrie Barre","Howard Mackie","Len Kaminski"],"i":1873},{"year":1979,"characters":["Thor"],"name":"Thor #279","link":"thor_279","credits":["Don Glut","Pablo Marcos","Alan Kupperberg"],"i":1874},{"year":1979,"characters":["Griffin","Spider-Man","Wonder Man"],"name":"Marvel Team-Up #78","link":"marvel_team-up_78","credits":["Frank Giacoia","Don Perlin","Bill Kunkel"],"i":1875},{"year":1979,"characters":["Captain America","Devil Dinosaur","Dum Dum Dugan LMD","Gabriel Jones","Gladstone Hawkins","Godzilla","Henry Pym","Hugh Howards","Human Torch","Invisible Woman","Iron Man","J. Jonah Jameson","Jimmy Woo","Joe 'Robbie' Robertson","Moonboy","Mr. Fantastic","Robert Takiguchi","Scarlet Witch","Spider-Man","Tamara Hashioka","Thing","Thor","Vision","Wasp","Yuriko Takiguchi"],"name":"Godzilla #18-24","link":"godzilla_22","credits":["Herb Trimpe","Mary Jo Duffy","Doug Moench","Jack Abel","Dan Green"],"i":1876},{"year":1978,"characters":["Angel O'Hara","Domini","Dracula","Harold H. Harold","Janus (Golden Angel)","Lilith (Dracula's Daughter)","Martin Gold","Quincy Harker","Rachel Van Helsing"],"name":"Tomb of Dracula #67","link":"tomb_of_dracula_67","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1877},{"year":1978,"characters":["Bethany Cabe","Buck Richlen","Chad Mountebank","Iron Man","Nick Fury","Spymaster","Tony Stark LMD Unit 6","Val Adair"],"name":"Iron Man #117","link":"iron_man_117","credits":["John Romita Jr.","Bob Layton","David Michelinie"],"i":1878},{"year":1979,"characters":["Basilisk (Satana's Demon)","Cissy Ironwood","Clea","Dr. Strange","Mr. Chambers","Satana","Spider-Man","Wong"],"name":"Marvel Team-Up #80-81","link":"marvel_team-up_80-81","credits":["Stephen Leialoha","Gene Day","Chris Claremont","Mike Vosburg"],"i":1879},{"year":1978,"characters":["Brothers Grimm","Jerry Hunt","Mr. Doll","Needle","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #9","link":"spider-woman_9","credits":["Mark Gruenwald","Alan Gordon","Carmine Infantino"],"i":1880},{"year":1978,"characters":["Beast","Captain America","Jarvis","Manipulator II","Wasp","Wonder Man"],"name":"Avengers #178","link":"avengers_178","credits":["Carmine Infantino","Rudy D. Nebres","Steve Gerber"],"i":1881},{"year":1979,"characters":["Anvil","Hammer","Martinex","Nikki","Spider-Man","Starhawk"],"name":"Marvel Team-Up #86","link":"marvel_team-up_86","credits":["Allyn Brodsky","Bob McLeod","Chris Claremont"],"i":1882},{"year":1979,"characters":["Ape Man II","Beast","Becky Blake","Bird Man II","Black Widow","Captain America","Cat Man II","Daredevil","Death-Stalker","Debbie Harris","Foggy Nelson","Heather Glenn","Hercules","Jarvis"],"name":"Daredevil #155-157","link":"daredevil_155-157","credits":["Mary Jo Duffy","Frank Springer","Roger McKenzie","Gene Colan","Klaus Janson","Frank Robbins"],"i":1883},{"year":1979,"characters":["Aubrey Pearson","Black Panther","Hellrazor","J.T. Gamelin","Spider-Man"],"name":"Marvel Team-Up #87","link":"marvel_team-up_87","credits":["Frank Springer","Steven Grant","Gene Colan"],"i":1884},{"year":1979,"characters":["Awilda Ayala","Betty Brant","Carrion","Daredevil","Darter","Flash Thompson","Harry Osborn","Holly Gillis","J. Jonah Jameson","Mamie Muggins","Mary Jane Watson","Masked Marauder","Sha Shan","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #25-31","link":"peter_parker_the_spectacular_s","credits":["Frank Miller","Bill Mantlo","Frank Springer","Jim Mooney"],"i":1885},{"year":1978,"characters":["Iron Fist","Jeryn Hogarth","Joy Meachum","Luke Cage","Ward Meachum"],"name":"Power Man & Iron Fist #54","link":"power_man_iron_fist_54","credits":["Lee Elias","Bob Jenny","Ed Hannigan","Ricardo Villamonte"],"i":1886},{"year":1979,"characters":["Arabella Jones","Carol Danvers","Deathbird","Frank Gianelli","Lynn Anderson","Mike Barnett","Mystique","Tracy Burke"],"name":"Ms. Marvel #22","link":"ms_marvel_22","credits":["Chris Claremont","Mike Vosburg","Mike Zeck"],"i":1887},{"year":1979,"characters":["Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Willie Evans Jr.","Willie Evans Sr."],"name":"Fantastic Four #203","link":"fantastic_four_203","credits":["Joe Sinnott","Keith Pollard","Marv Wolfman"],"i":1888},{"year":1979,"characters":["Gypsy Moth","Jerry Hunt","Magnus","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #10","link":"spider-woman_10","credits":["Mark Gruenwald","Alan Gordon","Carmine Infantino"],"i":1889},{"year":1978,"characters":["Captain America","Dum Dum Dugan LMD","Electro","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man #187","link":"amazing_spider-man_187","credits":["Bob McLeod","Jim Starlin","Marv Wolfman"],"i":1890},{"year":1979,"characters":["Aunt May","Betty Brant","Flash Thompson","Harry Osborn","J. Jonah Jameson","Jigsaw","Joe 'Robbie' Robertson","Liz Allan","Man-Wolf (John Jameson)","Mary Jane Watson","Sha Shan","Spider-Man"],"name":"Amazing Spider-Man #188","link":"amazing_spider-man_188","credits":["Keith Pollard","Mike Esposito","Marv Wolfman"],"i":1891},{"year":1979,"characters":["Beast","Black Panther","Henry Pym","Iron Man","Jarvis","Scarlet Witch","Thor","Vision","Wasp","Wonder Man"],"name":"Avengers #179-180","link":"avengers_179-180","credits":["Tom DeFalco","Alan Gordon","Jim Mooney","Mike Esposito"],"i":1892},{"year":1979,"characters":["Angus MacWhirter","Banshee","Colleen Wing","Colossus","Cyclops","Havok","Iron Fist","Lilandra","Madrox the Multiple Man","Mariko Yashida","Misty Knight","Moira MacTaggert","Moses Magnum","Nightcrawler","Osama","Phoenix Force","Polaris","Professor X","Storm","Sunfire","Wolverine"],"name":"Uncanny X-Men #118-119","link":"uncanny_x-men_118-119","credits":["John Byrne","Terry Austin","Ricardo Villamonte","Chris Claremont"],"i":1893},{"year":1979,"characters":["Agatha Harkness","Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Jack of Hearts","Machinesmith","Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #47-48","link":"marvel_two-in-one_48","credits":["Tex Blaisdell","Bill Mantlo","Chic Stone"],"i":1894},{"year":1986,"characters":["Glory Grant","Joe 'Robbie' Robertson","Mamie Muggins","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #120","link":"peter_parker_the_spectacular_s_82","credits":["Christopher Priest","Bill Mantlo","Danny Fingeroth","Keith Giffen","Vincent Colletta"],"i":1895},{"year":1979,"characters":["Dr. Strange","Thing"],"name":"Marvel Two-In-One #49","link":"marvel_two-in-one_49","credits":["Mary Jo Duffy","Jim Salicrup","Tex Blaisdell","Roger Stern","Chic Stone"],"i":1896},{"year":1979,"characters":["Captain Hawk","Doctor Spectrum","Golden Archer","Hyperion","Lady Lark","Master Menace","Sinister Hyperion","Thor","Tom Thumb","Whizzer (Squadron Supreme)"],"name":"Thor #280","link":"thor_280","credits":["Maggie Thompson","Don Thompson","Roy Thomas","Tom Palmer","Wayne Boring"],"i":1897},{"year":1979,"characters":["Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #50","link":"marvel_two-in-one_50","credits":["John Byrne","Joe Sinnott"],"i":1898},{"year":1979,"characters":["Immortus","Space Phantom","Tempus","Thor"],"name":"Thor #281-282","link":"thor_281-282","credits":["Ralph Macchio","Pablo Marcos","Mark Gruenwald","Mike Catron","Keith Pollard","Peter Gillis"],"i":1899},{"year":1979,"characters":["Alicia Masters","Black Bolt","Graviton","Jarvis","Judith Parks","Lockjaw","Medusa","Nick Fury","Thing"],"name":"Marvel Two-In-One annual #4","link":"marvel_two-in-one_annual_4","credits":["Bruce D. Patterson","Bob Budiansky","Allyn Brodsky","David Michelinie","Jim Craig"],"i":1900},{"year":1979,"characters":["Howard The Duck"],"name":"Howard the Duck #29","link":"howard_the_duck_29","credits":["Mark Evanier","Ricardo Villamonte","Will Meugniot","Mark Gruenwald","Steve Gerber"],"i":1901},{"year":1979,"characters":["Aunt May","Barney Bushkin","Betty Brant","Blake Tower","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","KJ Klayton","Man-Wolf (John Jameson)","Marla Madison Jameson","Spencer Smythe","Spider-Man"],"name":"Amazing Spider-Man #189-190","link":"amazing_spider-man_189-190","credits":["John Byrne","Jim Mooney","Marv Wolfman"],"i":1902},{"year":1979,"characters":["Ant-Man (Scott Lang)","Beast","Black Panther","Black Widow","Captain America","Captain Mar-vell","Carol Danvers","Charlie-27","Django Maximoff","Hawkeye","Henry Peter Gyrich","Henry Pym","Hercules","Iron Man","Jarvis","Jocasta","Martinex","Moondragon","Nikki","Quicksilver","Scarlet Witch","Starhawk","Thor","Vision","Wasp","Wonder Man","Yondu"],"name":"Avengers #181-182","link":"avengers_181-182_1","credits":["Klaus Janson","John Byrne","Gene Day","David Michelinie"],"i":1903},{"year":1979,"characters":["Adora","Agatha Harkness","Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Jarvis","Monocle","Mr. Fantastic","Nova (Frankie Raye)","Thing"],"name":"Fantastic Four #204","link":"fantastic_four_204","credits":["Joe Sinnott","Keith Pollard","Marv Wolfman"],"i":1904},{"year":1979,"characters":["Carol Danvers","Faceless One","Major Victory"],"name":"Ms. Marvel #23","link":"ms_marvel_23","credits":["Bruce D. Patterson","Chris Claremont","Mike Vosburg"],"i":1905},{"year":1979,"characters":["Aubrey Pearson","Beast","Black Panther","Captain America","Iron Man","Kevin Trublood","Klaw","Monica Lynne","Scarlet Witch","Vision","Windeagle"],"name":"Black Panther #14-15","link":"black_panther_14-15","credits":["Jerry Bingham","Ed Hannigan","Jim Salicrup","Gene Day","Roger Stern"],"i":1906},{"year":1980,"characters":["Black Panther","Jessica Lynne","Kevin Trublood","Lloyd Lynne","Monica Lynne","Roderick Tate","Spider-Man","Taku","Windeagle"],"name":"Marvel Premiere #51-53","link":"marvel_premiere_51","credits":["Jerry Bingham","Ed Hannigan","Jim Salicrup","Gene Day","Roger Stern"],"i":1907},{"year":1978,"characters":["Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hulk","Moonstone (Karla Sofen)"],"name":"Hulk #230","link":"hulk_230","credits":["Bob Layton","Jim Mooney","Elliot S! Maggin"],"i":1908},{"year":1978,"characters":["Animus (Vamp)","Beast","Blue Streak","Captain America","Constrictor","Hercules","Iron Man","Jasper Sitwell","Kligger","Quasar","Scarlet Witch","Texas Twister","Thor","Vision"],"name":"Captain America #228","link":"captain_america_228","credits":["John Tartaglione","Roger McKenzie","Sal Buscema","Mike Esposito"],"i":1909},{"year":1979,"characters":["Clay Quartermain","Doc Samson","Fred Sloan","Hulk","Jim Wilson","Kligger","Moonstone (Karla Sofen)","Senator Andrew Hawk"],"name":"Hulk #231","link":"hulk_231","credits":["Roger Stern","Sal Buscema","Mike Esposito"],"i":1910},{"year":2012,"characters":["Beast","Captain America","Hawkeye","Henry Peter Gyrich","Hulk","Iron Man","Jarvis","Scarlet Witch","Senator Andrew Hawk","Vision","Wasp"],"name":"Hulk Smash Avengers #2","link":"hulk_smash_avengers_2","credits":["Max Fiumara","Bill Rosemann","Jacob Thomas","Axel Alonso","Joe Casey"],"i":1911},{"year":1979,"characters":["Animus (Vamp)","Beast","Blue Streak","Captain America","Constrictor","Curtiss Jackson (Power Broker)","Falcon","Fred Sloan","Hercules","Hulk","Jarvis","Jasper Sitwell","Jim Wilson","Moonstone (Karla Sofen)","Quasar","Texas Twister","Thor"],"name":"Captain America #229-230","link":"captain_america_229-230","credits":["Don Perlin","Roger McKenzie","Roger Stern","Sal Buscema"],"i":1912},{"year":1979,"characters":["Animus (Vamp)","Betty Ross","Captain America","Clay Quartermain","Curtiss Jackson (Power Broker)","Doc Samson","Falcon","Fred Sloan","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jasper Sitwell","Jim Wilson","Kligger","Machine Man","Miles Brickman","Moonstone (Karla Sofen)","Peter Spaulding","Quasar","Simon Kragg","Tracy Warner","Trish Starr"],"name":"Hulk #232-237","link":"hulk_232-237","credits":["Sal Buscema","Jack Abel","Roger Stern","David Michelinie","Chic Stone","Mike Esposito"],"i":1913},{"year":1979,"characters":["Animus (Vamp)","Becky Blake","Blue Streak","Captain America","Captain America (Grand Director)","Commissioner Feingold","Daredevil","Dr. Faustus","Dwight Stanford","Falcon","Foggy Nelson","Jim Wilson","Morgan","Peggy Carter","Sharon Carter"],"name":"Captain America #231-236","link":"captain_america_231-234","credits":["Michael Fleisher","Don Perlin","Roger McKenzie","Sal Buscema","Jack Abel","Jim Shooter"],"i":1914},{"year":1979,"characters":["Machine Man","Miles Brickman","Oliver Broadhurst","Peter Spaulding","Simon Kragg"],"name":"Machine Man #10","link":"machine_man_10","credits":["Steve Ditko","Marv Wolfman"],"i":1915},{"year":1979,"characters":["Bethany Cabe","Buck Richlen","Iron Man","Mrs. Arbogast","Nick Fury","Val Adair","War Machine"],"name":"Iron Man #118-119","link":"iron_man_118-119","credits":["John Byrne","Bob Layton","John Romita Jr.","David Michelinie"],"i":1916},{"year":1979,"characters":["Aurora","Banshee","Colleen Wing","Colossus","Cyclops","Guardian (James Mac Hudson)","Jeryn Hogarth","Mariko Yashida","Misty Knight","Moira MacTaggert","Nightcrawler","Northstar","Osama","Phoenix Force","Sasquatch","Shaman","Snowbird","Storm","Sunfire","Vindicator (Heather Hudson)","Wolverine"],"name":"Uncanny X-Men #120-121","link":"uncanny_x-men_120-121","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":1917},{"year":1979,"characters":["Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Kulan Gath","Marla Madison Jameson","Mary Jane Watson","Red Sonja","Spider-Man"],"name":"Marvel Team-Up #79","link":"marvel_team-up_79","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":1918},{"year":1979,"characters":["Black Widow","Boomerang","Clay Quartermain","Contessa Valentina Allegro De La Fontaine","Jasper Sitwell","Madame Hydra (Viper)","Nick Fury","Shang-Chi","Silver Samurai","Spider-Man"],"name":"Marvel Team-Up #82-85","link":"marvel_team-up_82-85","credits":["Stephen Leialoha","Chris Claremont","Sal Buscema"],"i":1919},{"year":1979,"characters":["Hulk","Sasquatch"],"name":"Hulk annual #8","link":"hulk_annual_8","credits":["John Byrne","Roger Stern","Sal Buscema","Alfredo P. Alcala"],"i":1920},{"year":1980,"characters":["Betty Ross","Captain Bowman","Clay Quartermain","Doc Samson","Fred Sloan","Gammenon","General 'Thunderbolt' Ross","Glenn Talbot","Goldbug","Hulk","Iron Fist","Jarella","Lann","Lt. Perriwinkle","Luke Cage","Prince Rey","Tinkerer","Toy","Trish Starr","Tulak","Tyrannus","Wilfred Maxwell"],"name":"Hulk #238-243","link":"hulk_238-242","credits":["Joe Sinnott","Sal Buscema","Jack Abel","Roger Stern","Steven Grant","Mike Esposito"],"i":1921},{"year":1979,"characters":["Bull","Iron Fist","Jeryn Hogarth","Luke Cage"],"name":"Power Man & Iron Fist #55","link":"power_man_iron_fist_55","credits":["Lee Elias","Ed Hannigan","Jim Mooney"],"i":1922},{"year":1979,"characters":["Betty Brant","Blake Tower","Flash Thompson","Fly","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Lizard","Marla Madison Jameson","Mary Jane Watson","Sha Shan","Spencer Smythe","Spider-Man"],"name":"Amazing Spider-Man #191-192","link":"amazing_spider-man_192","credits":["Keith Pollard","Jim Mooney","Marv Wolfman"],"i":1923},{"year":1979,"characters":["Harokin","Heimdall","Hela","Hellcat","Hulk","Nighthawk","Odin","Queen Casiolena","Valkyrie"],"name":"Defenders #66-68","link":"defenders_66","credits":["Herb Trimpe","Bruce D. Patterson","Pablo Marcos","Ed Hannigan","David Anthony Kraft"],"i":1924},{"year":1979,"characters":["Aunt May","Barney Bushkin","Betty Brant","Burglar (Carradine)","Fly","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Mysterio","Ned Leeds","Sandy Jones","Spider-Man"],"name":"Amazing Spider-Man #193","link":"amazing_spider-man_193","credits":["Keith Pollard","Jim Mooney","Marv Wolfman"],"i":1925},{"year":1979,"characters":["Human Fly"],"name":"Human Fly #18-19","link":"human_fly_18-19","credits":["Lee Elias","Bill Mantlo","Tex Blaisdell","Ricardo Villamonte"],"i":1926},{"year":1979,"characters":["Betrand Crawley","Frenchie","Gena Landers","Hulk","Lupinar","Marlene Alraune","Moon Knight"],"name":"Hulk Magazine #13-14 (Moon Knight)","link":"hulk_magazine_13-14_moon_knigh","credits":["Bob McLeod","Josef Rubinstein","Doug Moench","Bill Sienkiewicz"],"i":1927},{"year":1979,"characters":["Brothers Grimm","Jerry Hunt","Magnus","Mr. Doll","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #11-12","link":"spider-woman_11-12","credits":["Mark Gruenwald","Alan Gordon","Carmine Infantino"],"i":1928},{"year":1979,"characters":["Basque","Charn","Combatra","Danguard Ace","Dr. Tambura","Genji Odashu","Ilongo Savage","Raydeen","Richard Carson","Rok-korr","Sherna"],"name":"Shogun Warriors #1","link":"shogun_warriors_1","credits":["Herb Trimpe","Dan Green","Doug Moench"],"i":1929},{"year":1979,"characters":["Dracula","Frank Drake","Harold H. Harold","Janus (Golden Angel)","Mephisto","Quincy Harker","Rachel Van Helsing","Saint (dog)"],"name":"Tomb of Dracula #68","link":"tomb_of_dracula_68","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1930},{"year":1979,"characters":["Beverly Switzler","Claude Starkowski","Doctor Bong","Howard The Duck","Lee Switzler","Paul Same","Winda Wester"],"name":"Howard the Duck #30-31","link":"howard_the_duck_30-31","credits":["Bill Mantlo","Al Milgrom","Gene Colan","Jim Shooter","Mark Gruenwald"],"i":1931},{"year":1979,"characters":["Dr. Strange","Hellcat","Hulk","Nighthawk","Valkyrie","Yandroth"],"name":"Defenders #69","link":"defenders_69","credits":["Herb Trimpe","Mary Jo Duffy","Al Migrom","Jim Shooter"],"i":1932},{"year":1979,"characters":["Domini","Dracula","Frank Drake","Harold H. Harold","Janus (Golden Angel)","Quincy Harker","Rachel Van Helsing"],"name":"Tomb of Dracula #69-70","link":"tomb_of_dracula_69-70","credits":["Tom Palmer","Gene Colan","Marv Wolfman"],"i":1933},{"year":1979,"characters":["Clea","Dollar Bill","Dr. Strange","Foolkiller (Greg Salinger)","Hellcat","Hulk","Lunatik","Nighthawk","Omega The Unknown","Richard Rory","Ruth Hart","Sub-Mariner","Valkyrie","Vashti","Wong"],"name":"Defenders #70-75","link":"defenders_70-74","credits":["Herb Trimpe","Fred Kida","Steven Mitchell","Ed Hannigan","Jack Abel","Mike Esposito"],"i":1934},{"year":1979,"characters":["Death Ryder","Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #35","link":"ghost_rider_35","credits":["Stephen Leialoha","Al Milgrom","Michael Nasser","Jim Starlin"],"i":1935},{"year":1979,"characters":["Jerry Hunt","Laura Brown","Lindsay McCabe","Magnus","Nekra","Shroud","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #13-15","link":"spider-woman_13-15","credits":["Mark Gruenwald","Alan Gordon","Carmine Infantino"],"i":1936},{"year":1979,"characters":["Ant-Man (Scott Lang)","Darren Cross","Erica Sondheim","Henry Pym","Iron Man","Stature"],"name":"Marvel Premiere #47-48","link":"marvel_premiere_47-48","credits":["John Byrne","Bob Layton","David Michelinie"],"i":1937},{"year":1980,"characters":["Arnim Zola","Hate Monger (Hitler)","Red Skull"],"name":"Super-Villain Team-Up #16-17","link":"super-villain_team-up_16-17","credits":["Arvell Malcolm Jones","Bruce D. Patterson","Peter Gillis","Carmine Infantino"],"i":1938},{"year":1979,"characters":["Colleen Wing","Cyclops","D.W. Griffith","Iron Fist","Jennie Royce","Jeryn Hogarth","Living Monolith","Luke Cage","Misty Knight","Nightcrawler","Storm"],"name":"Power Man & Iron Fist #56-57","link":"power-man_iron_fist_56","credits":["Mary Jo Duffy","Frank Springer","Trevor Von Eeden"],"i":1939},{"year":1979,"characters":["Absorbing Man","Beast","Bova","Captain America","Carol Danvers","Ch'thon","Django Maximoff","Falcon","Hawkeye","Henry Peter Gyrich","Iron Man","Jarvis","Modred the Mystic","Quicksilver","Redwing","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #183-187","link":"avengers_181-182","credits":["Klaus Janson","John Byrne","Brett Breeding","David Michelinie","Mark Gruenwald","Dan Green","Steven Grant"],"i":1940},{"year":1979,"characters":["Ant-Man (Scott Lang)","Artemus Pithins","Beast","Beetle","Bethany Cabe","Blizzard","Captain America","Carol Danvers","Constrictor","Discus","Falcon","Iron Man","Jarvis","Jonas Hale","Justin Hammer","Leap-Frog","Ling McPherson","Man-Killer","Melter","Mrs. Arbogast","Philip Barnett","Porcupine","Spymaster","Stiletto","Sub-Mariner","Uranus Bliss","Vision","War Machine","Wasp","Water Wizard","Whiplash (Blacklash)"],"name":"Iron Man #120-128","link":"iron_man_120-128","credits":["John Romita Jr.","Jim Shooter","Carmine Infantino","Bob Layton","David Michelinie"],"i":1941},{"year":1980,"characters":["Adora","Barney Bushkin","Carlo Zota","Comet","Crimebuster","Diamondhead","Doctor Sun","Dorrek","Dum Dum Dugan LMD","Empress R'Klll","Galactus","HERBIE","Human Torch","Invisible Woman","Iron Man","Jarvis","Maris Morlak","Medusa","Monocle","Mr. Fantastic","Mrs. Arbogast","Nova (Rich Rider)","Nova-Prime","Powerhouse","Protector","Sayge","Sphinx","Spider-Man","Terrax","Thing","Uatu the Watcher","Xandarian Worldmind"],"name":"Fantastic Four #205-214","link":"fantastic_four_206-214","credits":["Marv Wolfman","Joe Sinnott","Sal Buscema","John Byrne","Keith Pollard","Many Hands"],"i":1942},{"year":1979,"characters":["Beast","Black Bolt","Captain America","Carol Danvers","Crystal","Falcon","Gorgon","Karnak","Quicksilver","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #188","link":"avengers_188","credits":["Bill Mantlo","Frank Springer","John Byrne","Jim Shooter","Dan Green"],"i":1943},{"year":1979,"characters":["Billy Connors","Flash Thompson","Glory Grant","Holly Gillis","Iguana","James D'Angelo","Lizard","Marcy Kane","Martha Connors","Morris Sloan","Sha Shan","Spider-Man","Swarm","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #32-34","link":"peter_parker_the_spectacular_s_57","credits":["Bill Mantlo","Frank Springer","Jim Mooney"],"i":1944},{"year":1979,"characters":["Beast","Blake Tower","Carol Danvers","Dum Dum Dugan LMD","General Pollock","Jarvis","Nick Fury","Thing","Wonder Man"],"name":"Marvel Two-In-One #51","link":"marvel_two-in-one_51","credits":["Frank Miller","Bob McLeod","Peter Gillis"],"i":1945},{"year":1992,"characters":["Carol Danvers","Iron Man","Jasper Sitwell","Mike Barnett","Sabretooth"],"name":"Marvel Super Heroes #10 (Ms. Marvel)","link":"marvel_super_heroes_10","credits":["Rob Tokar","Dan Cuddy","Chris Claremont","Mike Vosburg"],"i":1946},{"year":1992,"characters":["Avalanche","Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Carol Danvers","Destiny","Iron Man","Mystique","Pyro","Rogue","Tessa","White Bishop (Donald Pierce)"],"name":"Marvel Super Heroes #11 (Ms. Marvel)","link":"marvel_super_heroes_11","credits":["Simon Furman","Dan Cuddy","Rob Tokar","Chris Claremont","Michael Gustovich","Mike Vosburg","Anna Mazzarelli","Joe Andreani"],"i":1947},{"year":1979,"characters":["Betrand Crawley","Gena Landers","Hulk","Marlene Alraune","Moon Knight","Shadowknight"],"name":"Hulk Magazine #15,17-18 (Moon Knight)","link":"hulk_magazine_1517-18_moon_kni","credits":["Bob McLeod","Doug Moench","Bill Sienkiewicz","Klaus Janson"],"i":1948},{"year":1979,"characters":["Anna Kappelbaum","Beast","Captain America","Carol Danvers","Falcon","Josh Cooper","Mike Farrel","Nick Fury","Spider-Man","Vision","Wasp"],"name":"Captain America #237","link":"captain_america_237","credits":["Don Perlin","Roger McKenzie","Chris Claremont","Sal Buscema"],"i":1949},{"year":1979,"characters":["Captain America","Mentallo","Mind-Master (Steven Tuval)","Nick Fury"],"name":"Captain America #238-239","link":"captain_america_238-239","credits":["Fred Kida","Don Perlin","Peter Gillis"],"i":1950},{"year":1979,"characters":["Araki","Arcade","Banshee","Black Tom","Colleen Wing","Colossus","Cyclops","Havok","Juggernaut","Lilandra","Luke Cage","Madrox the Multiple Man","Maelen","Mariko Yashida","Mastermind","Miss Locke","Misty Knight","Moira MacTaggert","Nightcrawler","Phoenix Force","Polaris","Professor X","Storm","Wolverine"],"name":"Uncanny X-Men #122","link":"uncanny_x-men_122","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":1951},{"year":1979,"characters":["Acroyear","Baron Karza","Biotron","Bug","Commander Arcturus Rann","Force Commander","Galactic Defender","Marionette","Microtron","Oberon","Shaitan"],"name":"Micronauts annual #1","link":"micronauts_annual_1","credits":["Steve Ditko","Bill Mantlo"],"i":1952},{"year":1979,"characters":["Acroyear","Baron Karza","Biotron","Bug","Captain Universe (Uni-Power)","Cilicia","Colonel Macey","Commander Arcturus Rann","Duchess Belladonna","Dum Dum Dugan LMD","Force Commander","Major D'ark","Man-Thing","Marionette","Microtron","Muffin","Nick Fury","Oberon","Raymond Coffin","Shaitan","Slug (Micronaut)","Steve Coffin","Time Traveler","Toymaster"],"name":"Micronauts #1-12","link":"micronauts_1-10","credits":["Bill Mantlo","Al Milgrom","Bob McLeod","Josef Rubinstein","Michael Golden"],"i":1953},{"year":1979,"characters":["Black Jack Tarr","Clive Reston","Fah Lo Suee","Fu Manchu","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith","Ward Sarsfield","Zaran"],"name":"Master of Kung Fu #77-79","link":"master_of_kung_fu_77-79","credits":["Alan Gordon","Doug Moench","Gene Day","Mike Zeck"],"i":1954},{"year":1979,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #36","link":"ghost_rider_36","credits":["Michael Fleisher","Don Perlin","Roger Stern"],"i":1955},{"year":1979,"characters":["Alexandra Rasputina","Amanda Sefton","Arcade","Banshee","Betsy Wilford","Colleen Wing","Colonel Alexei Vazhin","Colossus","Cyclops","Magik","Mariko Yashida","Miss Locke","Mr. Chambers","Nightcrawler","Nikolai Rasputin","Spider-Man","Storm","Wolverine"],"name":"Uncanny X-Men #123-124","link":"uncanny_x-men_123-124","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":1956},{"year":1979,"characters":["Captain America"],"name":"Captain America #240","link":"captain_america_240","credits":["Don Perlin","Paul Kupperberg","Alan Kupperberg"],"i":1957},{"year":1979,"characters":["Arkon","Banshee","Colosso","Colossus","Cyclops","Grand Vizier (Polemachus)","Nightcrawler","Storm","Wolverine"],"name":"Uncanny X-Men annual #3","link":"uncanny_x-men_annual_3","credits":["George Perez","Terry Austin","Chris Claremont"],"i":1958},{"year":1979,"characters":["Jerry Hunt","Laura Brown","Nekra","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #16","link":"spider-woman_16","credits":["Mark Gruenwald","Alan Gordon","Carmine Infantino"],"i":1959},{"year":1979,"characters":["D.W. Griffith","El Aguila","Harmony Young","Iron Fist","Jeryn Hogarth","Luke Cage","Misty Knight"],"name":"Power Man & Iron Fist #58","link":"power_man_iron_fist_58","credits":["Mary Jo Duffy","Dan Green","Trevor Von Eeden"],"i":1960},{"year":1979,"characters":["Lindsay McCabe","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #17-18","link":"spider-woman_17-18","credits":["John Wilburn","Mark Gruenwald","Mike Esposito","Carmine Infantino"],"i":1961},{"year":1979,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #37","link":"ghost_rider_37","credits":["Michael Fleisher","Don Perlin","Roger Stern"],"i":1962},{"year":1980,"characters":["Anna Kappelbaum","Captain America","Josh Cooper","Mike Farrel","Punisher"],"name":"Captain America #241","link":"captain_america_241","credits":["Pablo Marcos","Jim Salicrup","Frank Springer","Roger Stern","Mike Barr"],"i":1963},{"year":1981,"characters":["Colossus","Cyclops","Nightcrawler","Storm","Vanisher","Wolverine"],"name":"Bizarre Adventures #27 (Nightcrawler)","link":"bizarre_adventures_27_Night","credits":["Ralph Macchio","Mary Jo Duffy","Dave Cockrum","Ricardo Villamonte","Bob Layton","Denny O'Neil"],"i":1964},{"year":1979,"characters":["Alan Cavenaugh","Azir","Bob Diamond","Colleen Wing","D.W. Griffith","Farouk","Gadget","Iron Fist","Jennie Royce","Luke Cage","Misty Knight","Rafael Scarfe"],"name":"Power Man & Iron Fist #59-60","link":"power_man_iron_fist_59","credits":["Mary Jo Duffy","Stephen Leialoha","Trevor Von Eeden","Alan Gordon","Marie Severin"],"i":1965},{"year":1980,"characters":["Captain America","Cowled Commander","Manipulator II"],"name":"Captain America #242","link":"captain_america_242","credits":["Don Perlin","Jim Salicrup","Joe Sinnott","Roger Stern","Steven Grant"],"i":1966},{"year":1979,"characters":["April Maye","Aunt May","Barney Bushkin","Betty Brant","Black Cat","Burglar (Carradine)","Flash Thompson","Glory Grant","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Lydia Hardy","Mysterio","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #194-195","link":"amazing_spider-man_194-195","credits":["Frank Giacoia","Keith Pollard","Many Hands","Marv Wolfman"],"i":1967},{"year":1979,"characters":["Captain America","Falcon","J. Jonah Jameson","Joe 'Robbie' Robertson","Leila Taylor","Redwing"],"name":"Marvel Premiere #49","link":"marvel_premiere_49","credits":["Mark Evanier","Dave Simons","Sal Buscema"],"i":1968},{"year":1979,"characters":["Arsenal","Beast","Captain America","Hawkeye","Henry Peter Gyrich","Henry Pym","Iron Man","Jarvis","Scarlet Witch","Thor","Vision","Wonder Man"],"name":"Avengers annual #9","link":"avengers_annual_9","credits":["Bill Mantlo","Josef Rubinstein","Don Newton","Jack Abel"],"i":1969},{"year":1979,"characters":["Dibbuk","Hellcat","Hulk","James-Michael Starling","Moondragon","Nighthawk","Omega The Unknown","Richard Rory","Ruby Thursday","Ruth Hart","Valkyrie","Wasp"],"name":"Defenders #76-77","link":"defenders_76-77","credits":["Herb Trimpe","Al Milgrom","Steven Mitchell","Mark Gruenwald","Steven Grant"],"i":1970},{"year":1979,"characters":["Byron Benjamin","Eddie Harris","Kublai Khan","Machine Man","Maggie Jones","Miles Brickman","Peter Spaulding"],"name":"Machine Man #11","link":"machine_man_11","credits":["Steve Ditko","Marv Wolfman"],"i":1971},{"year":1979,"characters":["Dracula","Inspector Chelm"],"name":"Tomb of Dracula Magazine #1","link":"tomb_of_dracula_magazine_1","credits":["Ralph Macchio","Marv Wolfman","Bob McLeod","Roy Thomas","Richard Marschall","Gene Colan","Mark Gruenwald"],"i":1972},{"year":1979,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #38-39","link":"ghost_rider_38-39","credits":["Michael Fleisher","Don Perlin","Roger Stern"],"i":1973},{"year":1979,"characters":["Henry Peter Gyrich","Man-Thing"],"name":"Man-Thing #1","link":"man-thing_1","credits":["Bob Wiacek","Michael Fleisher","Jim Mooney"],"i":1974},{"year":1979,"characters":["Beast","Captain America","Deathbird","Falcon","Hawkeye","Henry Peter Gyrich","Henry Pym","Iron Man","Jarvis","Jocasta","Redwing","Scarlet Witch","Thor","Vision","Wonder Man"],"name":"Avengers #189","link":"avengers_189","credits":["John Byrne","Roger Stern","David Michelinie","Mark Gruenwald","Dan Green","Steven Grant"],"i":1975},{"year":1980,"characters":["Aunt Watson","Betty Brant","Burglar (Carradine)","Debra Whitman","Flash Thompson","Glory Grant","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Liz Allan","Marla Madison Jameson","Mysterio","Sha Shan","Spider-Man","Vanessa Fisk"],"name":"Amazing Spider-Man #196-200","link":"amazing_spider-man_196-200","credits":["Marv Wolfman","Al Milgrom","Frank Giacoia","Jim Mooney","Sal Buscema","Stan Lee","Keith Pollard"],"i":1976},{"year":1979,"characters":["Mindworm","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #35","link":"peter_parker_the_spectacular_s_58","credits":["Lee Elias","Tony Isabella","Mike Esposito"],"i":1977},{"year":1980,"characters":["Aginar","Ajak","Apollo","Ares","Arishem","Athena","Balder","Brahma","Brightsword","Caduceus","Calculus","Daniel Damian","Daydreamer","Destroyer (Asgardian armor)","Domo","Dragona","El Toro Rojo","Erishkigal","Eson","Fafnir","Fandral","Forgotten One","Frigga","Gaea","Gammenon","Genii","Hargen","Harvest","Heimdall","Hercules","Hermes","Hermod","Highnote","Hoder","Hogun","Horus","Iduna","Ikaris","Indra","Isis","Jemiah","Karkas","Karnilla","Kro","Loki","Makkari","Manitou","Margo Damian","Metabo","Mimir","Moonstalker","Nezarr","Odin","One Above All","Oneg","Osiris","Ran-Sak the Reject","Sersi","Sif","Sigyn","Splice","Sprite","Tefral","Tezcatlipoca","Thena","Thor","Tode","Valkin","Varua","Vesta","Volstagg","Zeus","Ziran","Zuras"],"name":"Thor #283-301 ","link":"thor_annual_7_thor_283-301","credits":["Ralph Macchio","Gene Day","John Buscema","Mark Gruenwald","Roy Thomas","Arvell Malcolm Jones","Keith Pollard","Chic Stone"],"i":1978},{"year":1979,"characters":["Debra Whitman","Lizard","Marcy Kane","Morris Sloan","Phillip Chang","Schizoid Man","Spider-Man","Steve Hopkins","Swarm"],"name":"Peter Parker, the Spectacular Spider-Man #36-37","link":"peter_parker_the_spectacular_s_7","credits":["Bill Mantlo","Pablo Marcos","Jim Mooney","Mike Esposito"],"i":1979},{"year":1980,"characters":["Anna Kappelbaum","Captain America","Josh Cooper","Mike Farrel","Moon Knight"],"name":"Captain America #243-245","link":"captain_america_243-245","credits":["Tom Sutton","Don Perlin","Bob Budiansky","Jim Salicrup","Josef Rubinstein","Roger McKenzie","Carmine Infantino","Rich Buckler"],"i":1980},{"year":1979,"characters":["Doctor Octopus","Kent Blake","Spider-Man"],"name":"Amazing Spider-Man annual #13","link":"amazing_spider-man_annual_13","credits":["John Byrne","Terry Austin","Marv Wolfman"],"i":1981},{"year":1979,"characters":["Doctor Octopus","Marcy Kane","Morris Sloan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man annual #1","link":"peter_parker_the_spectacular_s_44","credits":["Bill Mantlo","Rich Buckler","Jim Mooney"],"i":1982},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #40","link":"ghost_rider_40","credits":["Michael Fleisher","Don Perlin","Roger Stern"],"i":1983},{"year":1991,"characters":["Fandral","Frigga","Grid","Growler","Hoder","Hogun","Odin","Sif","Thor","Vidar","Volstagg","Ymir"],"name":"Marvel Super Heroes #5 (Thor)","link":"marvel_super_heroes_5_thor","credits":["Sue Flaxman","Mike Rockwitz","Jim Valentino","Barry Dutter","Tony DeZuniga"],"i":1984},{"year":1980,"characters":["Balder","Fandral","Frigga","Heimdall","Hogun","Loki","Odin","Sif","Sigyn","Thor","Tyr","Volstagg"],"name":"Thor #302","link":"thor_302","credits":["Ralph Macchio","Al Milgrom","Jim Salicrup","Mark Gruenwald","Keith Pollard","Chic Stone"],"i":1985},{"year":1980,"characters":["Ape Man II","Beast","Becky Blake","Ben Urich","Betsy Beatty Potter","Bird Man II","Black Widow","Blake Tower","Bullseye","Candace Nelson","Captain America","Cat Man II","Daredevil","Death-Stalker","Debbie Harris","Doctor Octopus","Edwin Cord","Eric Slaughter","Foggy Nelson","Gladiator","Heather Glenn","Hulk","Human Torch","Invisible Woman","Iron Fist","Iron Man","J. Jonah Jameson","Joe 'Robbie' Robertson","Josie (Bar owner)","Lt. Nick Manolis","Luke Cage","Mary Jane Watson","Mr. Fantastic","Scarlet Witch","Spider-Man","Thing","Thor","Turk","Vision"],"name":"Daredevil #158-161,163-167","link":"daredevil_158-167","credits":["Michael Fleisher","Marv Wolfman","Roger McKenzie","Frank Miller","Klaus Janson","David Michelinie"],"i":1986},{"year":1980,"characters":["Cat (Shroud's agent)","Mouse (Shroud's agent)","Shroud"],"name":"Marvel Preview #21 (Shroud)","link":"marvel_preview_21_shroud","credits":["Ralph Macchio","Roy Thomas","Steve Ditko","Lynn Graeme","Mark Gruenwald","Steven Grant"],"i":1987},{"year":1979,"characters":["Alicia Masters","Franklin Richards","Henry Pym","Invisible Woman","Jean DeWolff","Morgan","Spider-Man","Wasp"],"name":"Marvel Team-Up #88","link":"marvel_team-up_88","credits":["Eduardo Barreto","Chris Claremont","Sal Buscema"],"i":1988},{"year":1979,"characters":["Bethany Cabe","Iron Man","Mrs. Arbogast","Nick Fury","War Machine"],"name":"Iron Man #129","link":"iron_man_129","credits":["D. Minds","Sal Buscema","M. Hands","David Michelinie"],"i":1989},{"year":1980,"characters":["Beast","Captain America","Carol Danvers","Daredevil","Dwight Stanford","Emerson Bale","Falcon","Grey Gargoyle","Henry Peter Gyrich","Iron Man","Jarvis","Jeryn Hogarth","Redwing","Scarlet Witch","Vision","Wasp"],"name":"Avengers #190-191","link":"avengers_190-191","credits":["John Byrne","Roger Stern","David Michelinie","Dan Green","Steven Grant"],"i":1990},{"year":1980,"characters":["Amanda Sefton","Amos Jardine","Arcade","Cutthroat","Miss Locke","Nightcrawler","Spider-Man"],"name":"Marvel Team-Up #89","link":"marvel_team-up_89-90","credits":["last 3 pages)","Michael Nasser (w","Josef Rubinstein","Chris Claremont","Rich Buckler"],"i":1991},{"year":1980,"characters":["Beast","Cissy Ironwood","Killer Shrike","Modular Man","Spider-Man"],"name":"Marvel Team-Up #90","link":"marvel_team-up_90","credits":["Bob McLeod","Steven Grant","Mike Vosburg"],"i":1992},{"year":1991,"characters":["Anvil","Ghost Rider (Johnny Blaze)","Glory Grant","Gorilla Girl","Hammer","Moondark","Muck Monster","Six","Spider-Man"],"name":"Marvel Team-Up #91","link":"marvel_team-up_91","credits":["Dan Slott","Mark Pacella","Pat Broderick","Bruce D. Patterson","Scott Lobdell","Dan Panosian","Steven Grant"],"i":1993},{"year":1980,"characters":["Hawkeye","Mr. Fear (Alan Fagan)","Spider-Man"],"name":"Marvel Team-Up #92","link":"marvel_team-up_92","credits":["Pablo Marcos","Carmine Infantino","Mark Gruenwald","Denny O'Neil","Steven Grant"],"i":1994},{"year":1980,"characters":["Man-Thing"],"name":"Man-Thing #2-3","link":"man-thing_2-3","credits":["Bob Wiacek","Michael Fleisher","Jim Mooney"],"i":1995},{"year":1980,"characters":["Azrael","Baron Mordo","Clea","Dr. Strange","Eye Killers","Madeline Revell","Sara Wolfe","Wong"],"name":"Doctor Strange #38-40","link":"doctor_strange_38-40","credits":["Dan Green","Chris Claremont","Gene Colan"],"i":1996},{"year":1980,"characters":["Azrael","Baron Mordo","Dr. Strange","Jennifer Kale","Madeline Revell","Man-Thing"],"name":"Man-Thing #4","link":"man-thing_4","credits":["Bob Wiacek","Don Perlin","Chris Claremont"],"i":1997},{"year":1980,"characters":["Andrew Jackson Kale","Baron Mordo","Dr. Strange","Jennifer Kale","Joshua Kale","Man-Thing"],"name":"Doctor Strange #41","link":"doctor_strange_41","credits":["Dan Green","Chris Claremont","Gene Colan"],"i":1998},{"year":1979,"characters":["Buck Cowan","Enforcer","Lindsay McCabe","Mike Mullany","Spider-Man","Spider-Woman (Jessica Drew)","Werewolf By Night"],"name":"Spider-Woman #19-20","link":"spider-woman_19-20","credits":["Frank Springer","Carmine Infantino","Mark Gruenwald","Steven Grant","Mike Esposito"],"i":1999},{"year":1979,"characters":["Cissy Ironwood","Colonel Alexei Vazhin","Crimson Dynamo V","Darkstar","Hulk","Invisible Woman","Mr. Fantastic","Spider-Man","Vanguard"],"name":"Marvel Team-Up annual #2","link":"marvel_team-up_annual_2","credits":["Al Milgrom","Alan Kupperberg","Chris Claremont","Sal Buscema","Jack Abel"],"i":2000},{"year":1979,"characters":["Crossfire","Frenchie","Moon Knight","Thing"],"name":"Marvel Two-In-One #52","link":"marvel_two-in-one_52","credits":["Pablo Marcos","Jim Salicrup","Roger Stern","Steven Grant","Jim Craig"],"i":2001},{"year":1979,"characters":["ROM","Starshine II"],"name":"ROM #1","link":"rom_1","credits":["Bill Mantlo","Sal Buscema"],"i":2002},{"year":1980,"characters":["Buck Cowan","Cat (Shroud's agent)","Dansen Macabre","Mouse (Shroud's agent)","Shroud","Spider-Man","Tatterdemalion","Werewolf By Night"],"name":"Marvel Team-Up #93-94","link":"marvel_team_93-94","credits":["Tom Sutton","Mike Zeck","Jim Mooney","Carmine Infantino","Mark Gruenwald","Denny O'Neil","Steven Grant","Mike Esposito"],"i":2003},{"year":1979,"characters":["Black Jack Tarr","Clive Reston","Fah Lo Suee","Fu Manchu","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith","Zaran"],"name":"Master of Kung Fu #83","link":"master_of_kung_fu_83","credits":["Doug Moench","Gene Day","Mike Zeck"],"i":2004},{"year":1980,"characters":["Mockingbird","Nick Fury","Spider-Man"],"name":"Marvel Team-Up #95","link":"marvel_team-up_95","credits":["Jimmy Janes","Bruce D. Patterson","Steven Grant"],"i":2005},{"year":1979,"characters":["Captain Alexander Walsh","Lindsay McCabe","Scotty McDowell","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #21","link":"spider-woman_21","credits":["Michael Fleisher","Frank Springer","Mike Esposito"],"i":2006},{"year":1979,"characters":["Machine Man"],"name":"Machine Man #12","link":"machine_man_12","credits":["Steve Ditko","Mark Gruenwald","Marv Wolfman"],"i":2007},{"year":1979,"characters":["Atom-Smasher","Bill Foster","Deathlok (alt. Luther Manning)","Electro","Jeannine O'Connell","Klaw","Letha","Nuklo","Poundcakes","Quasar","Radion (Dr. Henri Sorel)","Solarr","Songbird (Screaming Mimi)","Thing","Thundra","Titania (Grappler)","Tom Lightner","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #53-58","link":"marvel_two-in-one_53-58","credits":["Ralph Macchio","George Perez","Gene Day","Joe Sinnott","John Byrne","Mark Gruenwald"],"i":2008},{"year":1979,"characters":["Angus MacWhirter","Araki","Banshee","Beast","Colossus","Cyclops","Havok","Joe MacTaggart","Lilandra","Madrox the Multiple Man","Magneto","Mastermind","Moira MacTaggert","Nightcrawler","Phoenix Force","Polaris","Professor X","Proteus","Shakati","Storm","Wolverine"],"name":"Uncanny X-Men #125-128","link":"uncanny_x-men_125-128","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":2009},{"year":1979,"characters":["Dimensional Man","Dracula"],"name":"Tomb of Dracula Magazine #2","link":"tomb_of_dracula_magazine_2","credits":["Ralph Macchio","Marv Wolfman","Roy Thomas","Steve Ditko","Lynn Graeme","Mark Gruenwald"],"i":2010},{"year":1980,"characters":["Clea","Dr. Strange","Madeline Revell","Sara Wolfe","Wong"],"name":"Doctor Strange #42-44","link":"doctor_strange_42-44","credits":["Dan Green","Chris Claremont","Gene Colan"],"i":2011},{"year":1980,"characters":["Captain America","Joe Smith","Josh Cooper"],"name":"Captain America #246","link":"captain_america_246","credits":["Jerry Bingham","Alan Gordon","Peter Gillis"],"i":2012},{"year":1980,"characters":["Banshee","Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Carmen Pryde","Colossus","Cyclops","Dazzler","Havok","Madrox the Multiple Man","Mastermind","Moira MacTaggert","Nightcrawler","Phoenix Force","Polaris","Professor X","Proteus","Shadowcat (Kitty Pryde)","Storm","Terri Pryde","White Bishop (Donald Pierce)","White Queen (Emma Frost)","Wolverine"],"name":"Uncanny X-Men #129-131","link":"uncanny_x-men_129-131","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":2013},{"year":1980,"characters":["Burner (Crucible)","Clea","Dr. Strange","Hellcat","Henry Pym","Hulk","James-Michael Starling","Lifter (Meteorite)","Mandrill","Moondragon","Nighthawk","Omega The Unknown","Peeper (Occult)","Richard Rory","Ruth Hart","Shocker (Paralyzer)","Slither","Sub-Mariner","Valkyrie","Wasp","Wong"],"name":"Defenders #78-83","link":"defenders_78","credits":["Herb Trimpe","Don Perlin","Ed Hannigan","Joe Sinnott","Jack Abel","Dan Green","Mike Esposito"],"i":2014},{"year":1985,"characters":["Captain America","Daredevil","Doctor Octopus","Electro","Grey Gargoyle","Iron Man","Jarvis","Sandman","Scarlet Witch","Turk","Vic Martinelli","Vision"],"name":"Marvel Fanfare #22-23","link":"marvel_fanfare_22-23","credits":["Ken Steacy","Roger McKenzie"],"i":2015},{"year":1980,"characters":["Grandfather Chu","Iron Man","Soo Lin Chu"],"name":"Iron Man #130","link":"iron_man_130","credits":["Bob Layton","David Michelinie"],"i":2016},{"year":1980,"characters":["Baron Von Strucker Robot","Bernie Rosenthal","Captain America","Dum Dum Dugan LMD","Josh Cooper","Machinesmith","Magneto Robot","Manipulator II","Mike Farrel","Nick Fury"],"name":"Captain America #247","link":"captain_america_247","credits":["John Byrne","Josef Rubinstein","Roger Stern"],"i":2017},{"year":1980,"characters":["Black Panther","Clea","Dr. Strange","Hellcat","Hulk","Mandrill","Nighthawk","Sub-Mariner","Valkyrie","Vashti"],"name":"Defenders #84-85","link":"defenders_84-85","credits":["Tex Blaisdell","Don Perlin","Ed Hannigan","Jim Mooney"],"i":2018},{"year":1980,"characters":["Air-Walker","Bernie Rosenthal","Captain America","Dragon Man","Dum Dum Dugan LMD","Gaffer (SHIELD Scientist)","Josh Cooper","Machinesmith","Magneto Robot","Mike Farrel","Nick Fury","Thing Robot"],"name":"Captain America #248-249","link":"captain_america_248-249","credits":["John Byrne","Josef Rubinstein","Roger Stern"],"i":2019},{"year":1980,"characters":["Basque","Cerberus (Demonicus creature)","Charn","Combatra","Danguard Ace","Deena James","Doctor Demonicus","Dr. Tambura","Dum Dum Dugan LMD","Gabriel Jones","Genji Odashu","Hand of Five","Ilongo Savage","Judith Johns","Raydeen","Richard Carson","Sherna","Starchild (Demonicus creature)"],"name":"Shogun Warriors #12-14","link":"shogun_warriors_12-14","credits":["Herb Trimpe","Doug Moench","Mike Esposito"],"i":2020},{"year":1980,"characters":["Firefall (Archie Stryker)","John Clark","ROM","Sarah Clark","SHIELD Agent Kraller (Dire Wraith)","Sister Sweet (Dire Wraith)","Starshine II","Steve Jackson"],"name":"ROM #2","link":"rom_2","credits":["Bill Mantlo","Sal Buscema","Mary Jo Duffy"],"i":2021},{"year":1980,"characters":["Lindsay McCabe","Scotty McDowell","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #22","link":"spider-woman_22","credits":["Michael Fleisher","Frank Springer","Jim Shooter","Mark Gruenwald","Mike Esposito"],"i":2022},{"year":1980,"characters":["Captain Mar-vell"],"name":"Marvel Spotlight #4","link":"marvel_spotlight_4","credits":["Archie Goodwin","Marv Wolfman","Jim Salicrup","Steve Ditko","Roger Stern"],"i":2023},{"year":1980,"characters":["Commissioner Feingold","Hulk"],"name":"Hulk annual #9","link":"hulk_annual_9","credits":["Steve Ditko","Al Milgrom","Doug Moench","Jim Salicrup"],"i":2024},{"year":1980,"characters":["Human Torch","Thing"],"name":"Marvel Two-In-One #59","link":"marvel_two-in-one_59","credits":["Marv Wolfman","Ralph Macchio","Jim Salicrup","Roger Stern","Alan Gordon","Chic Stone"],"i":2025},{"year":1980,"characters":["Big Ben Donovan","Ceasar Cicero","Colleen Wing","Iron Fist","Jennie Royce","Luke Cage","Man-Mountain Marko","Misty Knight","Thunderbolt","William Hao"],"name":"Power Man & Iron Fist #61-62","link":"power_man_iron_fist_61-62","credits":["Mary Jo Duffy","Kerry Gammill","Steven Grant","Bruce D. Patterson"],"i":2026},{"year":1980,"characters":["Alicia Masters","Bull Brogin","Handsome Harry Phillips","Impossible Man","Impossible Woman","Mr. Fantastic","Puppet Master","Thing","Yogi Dakor"],"name":"Marvel Two-In-One #60","link":"marvel_two-in-one_60","credits":["Ralph Macchio","George Perez","Jim Salicrup","Gene Day","Roger Stern","Mark Gruenwald"],"i":2027},{"year":1980,"characters":["Black Panther","Dr. Strange","Hellcat","Hulk","Invisible Woman","Mandrill","Mr. Fantastic","Nighthawk","Valkyrie"],"name":"Defenders #86","link":"defenders_86","credits":["Pablo Marcos","Don Perlin","Ed Hannigan"],"i":2028},{"year":1980,"characters":["Ant-Man (Scott Lang)","Bethany Cabe","Erica Sondheim","Hulk","Iron Man","Mrs. Arbogast","Titanium Man","Vic Martinelli","War Machine","Wilfred Maxwell"],"name":"Iron Man #131-133","link":"iron_man_131-133","credits":["Bob Layton","Jerry Bingham","David Michelinie"],"i":2029},{"year":1980,"characters":["Adam Warlock","Aleta","Alicia Masters","High Evolutionary","Jarvis","Kismet (Her)","Moondragon","Soul Gem","Sphinxor","Starhawk","Thing"],"name":"Marvel Two-In-One #61-63","link":"marvel_two-in-one_61-63","credits":["Mark Gruenwald","Jerry Bingham","Gene Day"],"i":2030},{"year":1980,"characters":["Beast","Captain America","Carol Danvers","Falcon","Henry Peter Gyrich","Henry Pym","Inferno II","Iron Man","Jarvis","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #192-193","link":"avengers_192-193","credits":["Ricardo Villamonte","Sal Buscema","Arvell Malcolm Jones","David Michelinie","Dan Green"],"i":2031},{"year":1980,"characters":["Blastaar","Captain America","Doctor Sun","Franklin Richards","Futurist","HERBIE","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Vision"],"name":"Fantastic Four #215-216","link":"fantastic_four_215-216","credits":["Marv Wolfman","Bill Mantlo","Pablo Marcos","Joe Sinnott","John Byrne"],"i":2032},{"year":1980,"characters":["Hulk","She-Hulk"],"name":"She-Hulk #1","link":"she-hulk_1","credits":["John Buscema","Chic Stone","Stan Lee"],"i":2033},{"year":1980,"characters":["Bob O'Bryan","Diane Cummings","Doctor Vault","Dorian Delanzy","Felix Simon","Grant Marshall","Hulk","It the Living Colossus"],"name":"Hulk #244","link":"hulk_244","credits":["Mike Esposito","Steven Grant","Carmine Infantino"],"i":2034},{"year":1979,"characters":["Agatha Harkness","Brutacus","Captain America","Captain Mar-vell","Carol Danvers","Falcon","Franklin Richards","Gazelle","Human Torch","Hydron (Salem Seven)","Invisible Woman","Iron Man","Mr. Fantastic","Nicholas Scratch","Nighthawk","Quasar","Reptilla","Sandman","Spider-Man","Thing","Thornn","Vakume","Vertigo (Salem Seven)","Vision","Wonder Man"],"name":"Fantastic Four annual #14","link":"fantastic_four_annual_14","credits":["George Perez","Pablo Marcos","Marv Wolfman"],"i":2035},{"year":1980,"characters":["April Maye","Aunt May","Aunt Watson","Barney Bushkin","Electro","J. Jonah Jameson","Lizard","Marcy Kane","Mary Jane Watson","Morbius","Paste Pot Pete","Phillip Chang","Robert Martin","Sandman","Schizoid Man","Spider-Man","Steve Hopkins","Wizard"],"name":"Peter Parker, the Spectacular Spider-Man #38-40","link":"peter_parker_the_spectacular_s_59","credits":["Bill Mantlo","John Romita Jr.","Jim Mooney","Frank Springer","Ricardo Villamonte","Sal Buscema","Jim Shooter","Mark Gruenwald","Chic Stone"],"i":2036},{"year":1980,"characters":["April Maye","Aunt May","Barney Bushkin","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Marla Madison Jameson","Mary Jane Watson","Punisher","Spider-Man"],"name":"Amazing Spider-Man #201-202","link":"amazing_spider-man_201-202","credits":["Keith Pollard","Jim Mooney","Marv Wolfman"],"i":2037},{"year":1980,"characters":["Firefall (Archie Stryker)","John Clark","ROM","Sarah Clark","SHIELD Agent Kraller (Dire Wraith)","Sister Sweet (Dire Wraith)","Starshine II","Steve Jackson"],"name":"ROM #3-4","link":"rom_3-4","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Mary Jo Duffy"],"i":2038},{"year":1980,"characters":["Byron Benjamin","Eddie Harris","Kublai Khan","Machine Man","Maggie Jones","Peter Spaulding"],"name":"Machine Man #13","link":"machine_man_13","credits":["Steve Ditko","Mark Gruenwald","Marv Wolfman"],"i":2039},{"year":1980,"characters":["Anna Reynolds","Dracula","Ricky Reynolds"],"name":"Tomb of Dracula Magazine #3","link":"tomb_of_dracula_magazine_3","credits":["Ralph Macchio","Marv Wolfman","Roy Thomas","Tom Palmer","Gene Colan","Lynn Graeme"],"i":2040},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Gina Langtree","Zarathos"],"name":"Ghost Rider #41-42","link":"ghost_rider_41-42","credits":["Don Perlin","Jim Salicrup","Roger Stern","Denny O'Neil","Mike Fleisher"],"i":2041},{"year":1980,"characters":["Betty Ross","Captain Mar-vell","Centaurio","Doc Samson","Elysius","Fred Sloan","Gardener","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Jarella","Rick Jones","Trish Starr"],"name":"Hulk #245-248","link":"hulk_245-246","credits":["Bill Mantlo","Sal Buscema"],"i":2042},{"year":1980,"characters":["Agatha Harkness","Alicia Masters","Anaconda","Black Mamba","Death Adder","Henry Croft","Hugh Jones","Mr. Fantastic","Scarlet Witch","Set","Sidewinder","Sinister Hyperion","Stingray","Thing","Thundra","Triton","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #64-66","link":"marvel_two-in-one_64","credits":["Ralph Macchio","George Perez","Jerry Bingham","Gene Day","Mark Gruenwald"],"i":2043},{"year":1980,"characters":["Albert Devoor","Alicia Masters","Bill Foster","Brother Wonderful","Mr. Fantastic","Quasar","Sinister Hyperion","Thing","Thundra"],"name":"Marvel Two-In-One #67","link":"marvel_two-in-one_67","credits":["Ralph Macchio","Gene Day","Ron Wilson","Mark Gruenwald","Many Hands"],"i":2044},{"year":1980,"characters":["Buck Bukowski","Daniel 'Zapper' Ridge","Lou Monkton","Morris Walters","She-Hulk"],"name":"She-Hulk #2-5","link":"she-hulk_2-5","credits":["David Anthony Kraft","Chic Stone","Mike Vosburg"],"i":2045},{"year":1980,"characters":["Artie Packer","Firefall (Archie Stryker)","House of Shadows","ROM","SHIELD Agent Kraller (Dire Wraith)","Sister Sweet (Dire Wraith)","Starshine II","Steve Jackson"],"name":"ROM #5","link":"rom_5","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Mary Jo Duffy"],"i":2046},{"year":1980,"characters":["Dragon Lord","Mary Shamara","Phyllis Shamara"],"name":"Marvel Spotlight #5","link":"marvel_spotlight_5_1","credits":["Steve Ditko","Marv Wolfman"],"i":2047},{"year":1980,"characters":["Frenchie","Marlene Alraune","Moon Knight","Samuels"],"name":"Hulk Magazine #20, Marvel Preview #21 (Moon Knight)","link":"hulk_magazine_20marvel_preview","credits":["Dan Green","Doug Moench","Bill Sienkiewicz","Tom Palmer"],"i":2048},{"year":1980,"characters":["Dazzler","Doctor Sun","HERBIE","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #217","link":"fantastic_four_217","credits":["Bill Mantlo","John Byrne","Joe Sinnott"],"i":2049},{"year":1980,"characters":["Captain Alexander Walsh","Lindsay McCabe","Scotty McDowell","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #23-25","link":"spider-woman_25","credits":["Michael Fleisher","Stephen Leialoha","Trevor Von Eeden","Jim Shooter","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2050},{"year":1980,"characters":["Artie Packer","Doctor Deadalus (Dire Wraith)","Firefall (Archie Stryker)","John Clark","Most High One","ROM","Sarah Clark","Serpentyne","SHIELD Agent Kraller (Dire Wraith)","Silas Lane","Sister Sweet (Dire Wraith)","Starshine II","Steve Jackson"],"name":"ROM  #6-9","link":"rom_8-9","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Mary Jo Duffy"],"i":2051},{"year":1980,"characters":["Bill Foster","Looter","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #41","link":"peter_parker_the_spectacular_s_60","credits":["Denny O'Neil","Tom DeFalco","Mark Gruenwald","Jim Mooney"],"i":2052},{"year":1980,"characters":["Angel","Angelo Macon","Araki","Banshee","Beast","Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Candy Southern","Colossus","Cyclops","Dazzler","Diablo","Dr. Strange","Lilandra","Maelen","Mastermind","Moira MacTaggert","Mr. Fantastic","Murray Reese","Nightcrawler","Peter Corbeau","Phoenix Force","Professor X","Senator Kelly","Silver Surfer","Spider-Man","Storm","Tessa","Thing","Wade Cole","White Bishop (Donald Pierce)","Wolverine"],"name":"Uncanny X-Men #132-135","link":"uncanny_x-men_132-135","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":2053},{"year":1980,"characters":["Byron Benjamin","Eddie Harris","Machine Man","Maggie Jones","Miles Brickman","Oliver Broadhurst","Peter Spaulding"],"name":"Machine Man #14","link":"machine_man_14","credits":["Steve Ditko","Mark Gruenwald","Marv Wolfman"],"i":2054},{"year":1980,"characters":["Aunt May","Barney Bushkin","Dazzler","Flash Thompson","Harry Osborn","Lightmaster","Spider-Man"],"name":"Amazing Spider-Man #203","link":"amazing_spider-man_203","credits":["Keith Pollard","Friends","Mike Esposito","Marv Wolfman"],"i":2055},{"year":1980,"characters":["Dracula"],"name":"Tomb of Dracula Magazine #4","link":"tomb_of_dracula_magazine_4","credits":["Ralph Macchio","Roy Thomas","Roger McKenzie","Tom Palmer","Gene Colan","Lynn Graeme"],"i":2056},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #43-44","link":"ghost_rider_43-44","credits":["Denny O'Neil","Tom Sutton","Ricardo Villamonte","Carmine Infantino","Mark Gruenwald","Mike Fleisher"],"i":2057},{"year":1980,"characters":["Basque","Charn","Combatra","Danguard Ace","Deena James","Dr. Tambura","Genji Odashu","Ilongo Savage","Raydeen","Richard Carson","Sherna"],"name":"Shogun Warriors #16","link":"shogun_warriors_16","credits":["Herb Trimpe","Doug Moench","Mike Esposito"],"i":2058},{"year":1980,"characters":["Debra Whitman","Electro","Lizard","Marcy Kane","Morris Sloan","Paste Pot Pete","Phillip Chang","Sandman","Spider-Man","Steve Hopkins","Wizard"],"name":"Peter Parker, the Spectacular Spider-Man #42","link":"peter_parker_the_spectacular_s_17","credits":["Bill Mantlo","Jim Mooney","Mike Zeck"],"i":2059},{"year":1980,"characters":["Electro","Human Torch","Invisible Woman","Mr. Fantastic","Paste Pot Pete","Sandman","Spider-Man","Thing","Wizard"],"name":"Fantastic Four #218","link":"fantastic_four_218","credits":["Bill Mantlo","John Byrne","Joe Sinnott"],"i":2060},{"year":1980,"characters":["Angel","Araki","Beast","Bel-Dann","Colossus","Cyclops","Death","Earthquake","Elaine Grey","Empress R'Klll","Gladiator (Shiar)","Hussar","Jarvis","John Grey","Lilandra","Manta","Nightcrawler","Nightside","Oracle","Peter Corbeau","Phoenix Force","Professor X","Raksor","Recorder","Sara Grey","Smasher (Shiar)","Starbolt","Storm","Supreme Intelligence","Tempest","Uatu the Watcher","Warstar","Wolverine"],"name":"Uncanny X-Men #136-137","link":"uncanny_x-men_136","credits":["Jim Salicrup","Bob Budiansky","Terry Austin","Chris Claremont","John Byrne"],"i":2061},{"year":1980,"characters":["Bethany Cabe","Iron Man","Ling McPherson","Mrs. Arbogast","Titanium Man"],"name":"Iron Man #134-135","link":"iron_man_134-135","credits":["Bob Layton","Jerry Bingham","David Michelinie"],"i":2062},{"year":1980,"characters":["Acroyear","Biotron","Bug","Cilicia","Commander Arcturus Rann","Force Commander","Human Torch","Invisible Woman","Jasmine","Marionette","Microtron","Mr. Fantastic","Oberon","Psycho-Man","Slug (Micronaut)","Thing","Time Traveler","Wartstaff"],"name":"Micronauts #14-17","link":"micronauts_14-17","credits":["Bill Mantlo","Al Milgrom","Howard Chaykin"],"i":2063},{"year":1980,"characters":["Barney Bushkin","Black Cat","Flash Thompson","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Jonas Harrow","Sha Shan","Spider-Man","Steve Hopkins"],"name":"Amazing Spider-Man #204-205","link":"amazing_spider-man_204-205","credits":["Marv Wolfman","Pablo Marcos","Jim Mooney","David Michelinie","Keith Pollard"],"i":2064},{"year":1980,"characters":["Belladonna","Debra Whitman","Hobgoblin (Roderick Kingsley)","Sandy Jones","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #43","link":"peter_parker_the_spectacular_s_1","credits":["Roger Stern","Steven Mitchell","Mike Zeck"],"i":2065},{"year":1980,"characters":["Bob Diamond","D.W. Griffith","Harmony Young","Iron Fist","Jennie Royce","Jeryn Hogarth","Luke Cage","Rafael Scarfe","Senor Muerte","Senor Suerte II"],"name":"Power Man & Iron Fist #63-64","link":"power_man_iron_fist_63-64","credits":["Mary Jo Duffy","Ricardo Villamonte","Kerry Gammill","Jon D'Agostino","Dan Green"],"i":2066},{"year":1980,"characters":["Angel","Beast","Colossus","Cyclops","Destiny","Elaine Grey","Iceman","John Grey","Lilandra","Mystique","Nightcrawler","Paul Bailey","Professor X","Rogue","Sara Grey","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #138","link":"uncanny_x-men_138","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":2067},{"year":1980,"characters":["Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Jonas Harrow","Marla Madison Jameson","Spider-Man"],"name":"Amazing Spider-Man #206","link":"amazing_spider-man_206","credits":["John Byrne","Roger Stern","Gene Day"],"i":2068},{"year":1980,"characters":["Betty Ross","Blizzard","Centaurio","Doc Samson","Fred Sloan","General 'Thunderbolt' Ross","Hulk","Rick Jones"],"name":"Hulk #249","link":"hulk_249","credits":["Steve Ditko","Bill Mantlo"],"i":2069},{"year":1980,"characters":["Rupert Dockery","Scotty McDowell","Spider-Man","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #26","link":"spider-woman_26","credits":["Michael Fleisher","Stephen Leialoha","Associates","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2070},{"year":1980,"characters":["Barney Bushkin","Spider-Man","Vulture"],"name":"Peter Parker, the Spectacular Spider-Man #44-45","link":"peter_parker_the_spectacular_s_2","credits":["Marv Wolfman","Steven Mitchell","Stephen Leialoha","Roger Stern","Alan Gordon","Marie Severin"],"i":2071},{"year":1980,"characters":["Byron Benjamin","Eddie Harris","Gears Garvin","Human Torch","Invisible Woman","Ion","Machine Man","Maggie Jones","Mr. Fantastic","Pamela Quinn","Peter Spaulding","Thing"],"name":"Machine Man #15","link":"machine_man_15","credits":["Steve Ditko","Tom DeFalco","Mark Gruenwald","Denny O'Neil"],"i":2072},{"year":1980,"characters":["Angel O'Hara","Dracula","Lilith (Dracula's Daughter)"],"name":"Tomb of Dracula Magazine #5","link":"tomb_of_dracula_magazine_5","credits":["Ralph Macchio","Dave Simons","John Buscema","Bob McLeod","Roy Thomas","Roger McKenzie","Gene Colan","Lynn Graeme","Peter Gillis"],"i":2073},{"year":1980,"characters":["Flagg Fargo","Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #45-46","link":"ghost_rider_45-46","credits":["Denny O'Neil","Mike Fleisher","Mark Gruenwald","Don Perlin"],"i":2074},{"year":1980,"characters":["Black Widow","Boulder (Outcasts)","Daredevil","Digger (Outcasts)","Hulk","Human Torch","Invisible Woman","Kala","Landslide","Mole Man","Mr. Fantastic","Spider-Man","Thing","Water Witch (Outcasts)"],"name":"Marvel Treasury Edition #25","link":"marvel_treasury_edition_25","credits":["Herb Trimpe","Bill Mantlo","Bruce D. Patterson","Mark Gruenwald","Steven Grant"],"i":2075},{"year":1980,"characters":["Daniel 'Zapper' Ridge","Iron Man","Morris Walters","Ralphie Hutchins","She-Hulk"],"name":"She-Hulk #6","link":"she-hulk_6","credits":["David Anthony Kraft","Chic Stone","Mike Vosburg"],"i":2076},{"year":1980,"characters":["Debra Whitman","J. Jonah Jameson","Joe 'Robbie' Robertson","Mesmero","Spider-Man"],"name":"Amazing Spider-Man #207","link":"amazing_spider-man_207","credits":["Denny O'Neil","Pablo Marcos","Jim Mooney"],"i":2077},{"year":1980,"characters":["Ant-Man (Scott Lang)","Beast","Captain America","Carol Danvers","Falcon","Henry Pym","Iron Man","Jarvis","Jocasta","Redwing","Taskmaster","Vision","Wasp","Wonder Man"],"name":"Avengers #194-196","link":"avengers_194","credits":["George Perez","Josef Rubinstein","Jack Abel","David Michelinie","Dan Green"],"i":2078},{"year":1980,"characters":["Ant-Man (Scott Lang)","Beast","Captain America","Carol Danvers","Henry Pym","Iron Man","Jarvis","Jocasta","Red Ronin","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #197","link":"avengers_197","credits":["Al Milgrom","Carmine Infantino","Brett Breeding","David Michelinie","Vincent Colletta"],"i":2079},{"year":1980,"characters":["Beast","Bernie Rosenthal","Captain America","Daredevil","Dr. Strange","Dum Dum Dugan LMD","Iron Man","J. Jonah Jameson","Jarvis","Joe 'Robbie' Robertson","Joe Danvers","Josh Cooper","Mike Farrel","Nick Fury","Spider-Man","Vision","Wasp"],"name":"Captain America #250","link":"captain_america_250","credits":["John Byrne","Josef Rubinstein","Roger Stern"],"i":2080},{"year":1980,"characters":["Beast","Captain America","Carol Danvers","Hawkeye","Henry Pym","Iron Man","Jarvis","Jocasta","Nick Fury","Red Ronin","Scarlet Witch","Thor","Vision","Wasp","Wonder Man"],"name":"Avengers #198-199","link":"avengers_198-199","credits":["George Perez","Dan Green","David Michelinie"],"i":2081},{"year":1980,"characters":["Beast","Captain America","Carol Danvers","Hawkeye","Henry Pym","Iron Man","Jarvis","Jocasta","Marcus Immortus","Scarlet Witch","Thor","Vision","Wasp","Wonder Man"],"name":"Avengers #200","link":"avengers_200","credits":["George Perez","Jim Shooter","Bob Layton","David Michelinie","Dan Green"],"i":2082},{"year":1980,"characters":["Angel","Arcade","Candy Southern","Human Torch","Thing","Toad"],"name":"Marvel Two-In-One #68","link":"marvel_two-in-one_68","credits":["Ron Wilson","Mark Gruenwald","Pablo Marcos","Ralph Macchio"],"i":2083},{"year":1980,"characters":["Arnold Astrovik","Captain America","Captain Mar-vell","Charlie-27","Daredevil","Franklin Richards","Human Torch","Invisible Woman","Iron Man","Justice","Major Victory","Martinex","Mr. Fantastic","Nikki","Norma Astrovik","Spider-Man","Starhawk","Storm","Thing","Thor","Vision","Wundarr (Aquarian)","Yondu"],"name":"Marvel Two-In-One #69","link":"marvel_two-in-one_69","credits":["Ralph Macchio","Bob Budiansky","Gene Day","Jim Salicrup","Ron Wilson","Mark Gruenwald"],"i":2084},{"year":1980,"characters":["Alicia Masters","Human Torch","Invisible Woman","Livewire","Mr. Fantastic","Shellshock","Thing"],"name":"Marvel Two-In-One #70","link":"marvel_two-in-one_70","credits":["Mark Gruenwald","Michael Nasser","Gene Day","Ralph Macchio"],"i":2085},{"year":1981,"characters":["Black Bolt","Crystal","Deathurge","Gorgon","Gronk","Helio","Henry Croft","Joseph Jennings","Karnak","Maelstrom","Mr. Fantastic","Phaeder","Phobius","Quicksilver","Stingray","Thing","Triton"],"name":"Marvel Two-In-One #71-72","link":"marvel_two-in-one_71-72","credits":["Ralph Macchio","Gene Day","Ron Wilson","Mark Gruenwald","Chic Stone"],"i":2086},{"year":1981,"characters":["Quasar","Thing"],"name":"Marvel Two-In-One #73","link":"marvel_two-in-one_73","credits":["Ralph Macchio","Jim Salicrup","Bob Budiansky","Ron Wilson","Chic Stone"],"i":2087},{"year":1980,"characters":["Captain Barracuda","Giganto (Whale Man)","Human Torch","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Fantastic Four #219","link":"fantastic_four_219","credits":["Doug Moench","Bill Sienkiewicz","Joe Sinnott"],"i":2088},{"year":1980,"characters":["Captain Alexander Walsh","Enforcer","Rupert Dockery","Scotty McDowell","Spider-Man","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #27-29","link":"spider-woman_29","credits":["Ernie Chan","Michael Fleisher","Jerry Bingham","Stephen Leialoha","Frank Springer","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2089},{"year":1980,"characters":["Alicia Masters","Captain America","Franklin Richards","Guardian (James Mac Hudson)","Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Scarlet Witch","Thing","Vision"],"name":"Fantastic Four #220-221","link":"fantastic_four_220-221","credits":["John Byrne","Joe Sinnott"],"i":2090},{"year":1980,"characters":["Endotherm","Iron Man"],"name":"Iron Man #136","link":"iron_man_136","credits":["Peter John Palmer","Alan Weiss","David Michelinie","Bob Wiacek"],"i":2091},{"year":1980,"characters":["Man-Thing","Professor Slaughter","Richard Rory","She-Hulk"],"name":"She-Hulk #7-8","link":"she-hulk_7-8","credits":["David Anthony Kraft","Chic Stone","Mike Vosburg"],"i":2092},{"year":1980,"characters":["Captain Cymell","Combatra","Danguard Ace","Genji Odashu","Gingantauron","Human Torch","Ilongo Savage","Invisible Woman","Judith Johns","Maur-Kon","Mr. Fantastic","Raydeen","Richard Carson","Sh'Bleen","Thing"],"name":"Shogun Warriors #19-20","link":"shogun_warriors_19-20","credits":["Herb Trimpe","Doug Moench"],"i":2093},{"year":1980,"characters":["Barney Bushkin","Chris Keating","Cobra","Debra Whitman","Marcy Kane","Mr. Hyde","Phillip Chang","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #46","link":"peter_parker_the_spectacular_s_3","credits":["Roger Stern","Bruce D. Patterson","Mike Zeck"],"i":2094},{"year":1980,"characters":["Captain Alexander Walsh","Fly","Karl Malus","Rupert Dockery","Scotty McDowell","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #30","link":"spider-woman_30","credits":["Stephen Leialoha","Michael Fleisher","Jim Mooney"],"i":2095},{"year":1980,"characters":["April Maye","Aunt May","Aunt Watson","Barney Bushkin","Fusion","Lance Bannon","Mike Mullany","Rupert Dockery","Spider-Man"],"name":"Amazing Spider-Man #208","link":"amazing_spider-man_208","credits":["Al Milgrom","John Romita Jr.","the fans at MapleCon II in Ottowa","Brett Breeding","Jim Shooter","Mark Gruenwald","Denny O'Neil"],"i":2096},{"year":1980,"characters":["Ant-Man (Scott Lang)","Artemus Pithins","Bethany Cabe","Erica Sondheim","Iron Man","Jarvis","John Ehrmann","Ling McPherson","Mrs. Arbogast","Spymaster","Stature","Uranus Bliss","Vic Martinelli","War Machine","Yvette Avril"],"name":"Iron Man #137","link":"iron_man_137","credits":["Bob Layton","David Michelinie"],"i":2097},{"year":1980,"characters":["Captain Britain","Collective Man","Crimson Dynamo V","Darkstar","Hulk","Human Torch","Invisible Woman","Mr. Fantastic","Red Guardian (Tania Belinksy)","Sabra","Silver Surfer","Sub-Mariner","Thing","Vanguard"],"name":"Hulk #250","link":"hulk_250","credits":["Bill Mantlo","Sal Buscema"],"i":2098},{"year":1980,"characters":["Madame Masque Bio-Duplicate","Wonder Man"],"name":"Marvel Premiere #55","link":"marvel_premiere_55","credits":["Jim Salicrup","Joe Sinnott","Ron Wilson","Bob Layton","David Michelinie"],"i":2099},{"year":1980,"characters":["Howard The Duck","Spider-Man"],"name":"Marvel Team-Up #96","link":"marvel_team-up_96","credits":["Denny O'Neil","Mark Gruenwald","Alan Kupperberg"],"i":2100},{"year":1980,"characters":["Beverly Switzler","Claude Starkowski","Dracula","Harold H. Harold","Howard The Duck","Lee Switzler","Paul Same","Winda Wester"],"name":"Howard the Duck Magazine #5","link":"howard_the_duck_magazine_5","credits":["Ralph Macchio","Bill Mantlo","Dave Simons","Bob McLeod","Gene Colan","Lynn Graeme","Mark Gruenwald","Michael Golden"],"i":2101},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #47","link":"ghost_rider_47","credits":["Denny O'Neil","Mike Fleisher","Mark Gruenwald","Don Perlin"],"i":2102},{"year":1980,"characters":["Burner (Crucible)","Jack Norriss","Lifter (Meteorite)","Mad Dog (Buzz Baxter)","Peeper (Occult)","Shocker (Paralyzer)","Slither"],"name":"Defenders #87","link":"defenders_87","credits":["Pablo Marcos","Don Perlin","Ed Hannigan"],"i":2103},{"year":1980,"characters":["Captain Alexander Walsh","Hulk","Scotty McDowell","Spider-Woman (Jessica Drew)"],"name":"Marvel Team-Up #97","link":"marvel_team-up_97","credits":["Alan Gordon","Steven Grant","Carmine Infantino"],"i":2104},{"year":1980,"characters":["Eddie Harris","Hulk","Iron Fist","Jennie Royce","Joy Meachum","Luke Cage","Machine Man","Maggie Jones","Nightshade","Pamela Quinn","Spider-Man","Torpedo"],"name":"Marvel Team-Up annual #3","link":"marvel_team-up_annual_3","credits":["Herb Trimpe","Dave Humphrys","Al Milgrom","Bruce D. Patterson","Frank Springer","Roger Stern","Mike Esposito"],"i":2105},{"year":1984,"characters":["Black Lotus","Black Widow","Damon Dran","Fandral","Hogun","Iduna","Iron Maiden","Ivan Petrovitch","Jimmy Woo","Nick Fury","Sam 'Happy Sam' Sawyer","Snapdragon","Volstagg","Wrangler"],"name":"Marvel Fanfare #10-13","link":"marvel_fanfare_10-13","credits":["Ralph Macchio","George Perez","Al Milgrom","Joe Sinnott","Jack Abel","Brett Breeding","Bob Layton","Luke McDonnell","John Beatty"],"i":2106},{"year":1991,"characters":["Mystique","Pyro","Rogue"],"name":"Marvel Fanfare #60 (Rogue)","link":"marvel_fanfare_60_rogue","credits":["Ann Nocenti","Al Milgrom","Josef Rubinstein","David Ross"],"i":2107},{"year":1980,"characters":["Captain Mar-vell"],"name":"Marvel Spotlight #8","link":"marvel_spotlight_8","credits":["Dick Riley","Frank Miller","Bruce D. Patterson","Mike Barr"],"i":2108},{"year":1980,"characters":["Bethany Cabe","Iron Man","Madame Masque Bio-Duplicate","Spymaster","War Machine"],"name":"Iron Man #138-139","link":"iron_man_138-139","credits":["Bob Layton","Tom Palmer","David Michelinie"],"i":2109},{"year":1980,"characters":["3-D Man","Betty Ross","Centauria","Centaurio","Centauron","Chuck Chandler","Doc Samson","Fred Sloan","General 'Thunderbolt' Ross","Hal Chandler Jr.","Hulk","Neptunus","Peggy Chandler","Rick Jones","Siren","Viperus","Woodgod"],"name":"Hulk #251","link":"hulk_251","credits":["Bill Mantlo","Sal Buscema"],"i":2110},{"year":1990,"characters":["Apalla","Captain Mar-vell"],"name":"Marvel Super Heroes #3 (Captain Marvel)","link":"marvel_super_heroes_3_captain_","credits":["Diverse Hands","Jerry Bingham","Bruce D. Patterson","Peter Gillis"],"i":2111},{"year":1980,"characters":["Ace O'Connor","Doctor Deadalus (Dire Wraith)","Firefall (Archie Stryker)","Jack of Hearts","Major Martins","Most High One","ROM","Silas Lane","Sister Sweet (Dire Wraith)","Starshine II","Steve Jackson"],"name":"ROM #10-12","link":"rom_12","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Mary Jo Duffy"],"i":2112},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #48","link":"ghost_rider_48","credits":["Denny O'Neil","Mike Fleisher","Mark Gruenwald","Don Perlin"],"i":2113},{"year":1980,"characters":["3-D Man","Betty Ross","Centauria","Centaurio","Centauron","Chuck Chandler","Doc Samson","Elephantine","Fred Sloan","General 'Thunderbolt' Ross","Hal Chandler Jr.","Hulk","Leoninus","Minotaurus","Neptunus","Peggy Chandler","Rick Jones","Siren","Viperus","Woodgod"],"name":"Hulk #252-253","link":"hulk_252-253","credits":["Bill Mantlo","Sal Buscema"],"i":2114},{"year":1980,"characters":["Aunt May","Belladonna","Cat","Debra Whitman","Hobgoblin (Roderick Kingsley)","J. Jonah Jameson","Lou Snider","Melba Tolliver","Nate Lubenski","Prowler","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #47-48","link":"peter_parker_the_spectacular_s_4","credits":["Roger Stern","Bruce D. Patterson","Marie Severin"],"i":2115},{"year":1980,"characters":["Black Widow","Owl","Simon Stroud","Spider-Man"],"name":"Marvel Team-Up #98","link":"marvel_team-up_98","credits":["Marv Wolfman","Bruce D. Patterson","Roger McKenzie","Will Meugniot","Mark Gruenwald","Denny O'Neil"],"i":2116},{"year":1980,"characters":["Barney Bushkin","Calypso","Debra Whitman","Kraven the Hunter","Rupert Dockery","Sandy Jones","Spider-Man","Spider-Woman (Jessica Drew)"],"name":"Amazing Spider-Man #209","link":"amazing_spider-man_209","credits":["Al Milgrom","Bob McLeod","Josef Rubinstein","Klaus Janson","Alan Weiss","Denny O'Neil","Bob Wiacek"],"i":2117},{"year":1987,"characters":["Hulk","Thing","Uatu the Watcher"],"name":"The Incredible Hulk and the Thing: The Big Change (Marvel Graphic Novel #29)","link":"marvel_graphic_novel_29_the_in","credits":["Berni Wrightson","Al Milgrom","Jim Starlin"],"i":2118},{"year":1980,"characters":["Commissioner Feingold","Karl Malus","Scotty McDowell","Spider-Woman (Jessica Drew)","Werewolf By Night"],"name":"Spider-Woman #31-32","link":"spider-woman_31-32","credits":["Stephen Leialoha","Michael Fleisher","Jim Mooney"],"i":2119},{"year":1980,"characters":["Agatha Harkness","Brutacus","Franklin Richards","Gabriel the Devil Hunter","Gazelle","Human Torch","Hydron (Salem Seven)","Invisible Woman","Lorrie Melton","Mr. Fantastic","Nicholas Scratch","Reptilla","Thing","Thornn","Vakume","Vertigo (Salem Seven)","Wong"],"name":"Fantastic Four #222-223","link":"fantastic_four_222-223","credits":["Doug Moench","Bill Sienkiewicz","Jim Salicrup","Bob Budiansky","Joe Sinnott"],"i":2120},{"year":1980,"characters":["Hulk"],"name":"Hulk Magazine #23","link":"hulk_magazine_23","credits":["Ralph Macchio","Brent Anderson","John Buscema","John Tartaglione","Roger Stern","Lynn Graeme","Jim Shooter","Alfredo P. Alcala"],"i":2121},{"year":1980,"characters":["Alicia Masters","Boris (Doom's servant)","Captain Mar-vell","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Zorba"],"name":"Fantastic Four annual #15","link":"fantastic_four_annual_15","credits":["George Perez","Tom Sutton","Doug Moench","Jon D'Agostino","Chic Stone","Mike Esposito"],"i":2122},{"year":1980,"characters":["Debra Whitman","Dormammu","Dr. Doom","Dr. Strange","Spider-Man","Wong"],"name":"Amazing Spider-Man annual #14","link":"amazing_spider-man_annual_14","credits":["Frank Miller","Denny O'Neil","Tom Palmer"],"i":2123},{"year":1981,"characters":["Buck Bukowski","Daniel 'Zapper' Ridge","Gemini (Robot)","Morbius","Morris Walters","Ralphie Hutchins","She-Hulk","Ultima","Word"],"name":"She-Hulk #9-12","link":"she-hulk_9-12","credits":["Al Milgrom","Mary Jo Duffy","Dan Bulanadi and friends","Frank Springer","Mike Vosburg","David Anthony Kraft"],"i":2124},{"year":1980,"characters":["Baron Brimstone","Eddie Harris","Gears Garvin","Hammer Harrison","Machine Man","Madame Menace (Sunset Bain)","Maggie Jones","Pamela Quinn","Peter Spaulding","Snake Marston"],"name":"Machine Man #16-17","link":"machine_man_16-17","credits":["Steve Ditko","Tom DeFalco","Mark Gruenwald","Denny O'Neil"],"i":2125},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Manitou","Zarathos"],"name":"Ghost Rider #49-50","link":"ghost_rider_50","credits":["Denny O'Neil","Michael Fleisher","Don Perlin","Mark Gruenwald"],"i":2126},{"year":1983,"characters":["Hulk","Spider-Man"],"name":"Marvel Team-Up #126 (Spider-Man / Hulk)","link":"marvel_team-up_126_spider-man_","credits":["Tomoyuki Takenaka","Jim Shooter"],"i":2127},{"year":1980,"characters":["Hulk","Ironclad","Vapor","Vector","X-Ray"],"name":"Hulk #254","link":"hulk_254","credits":["Bill Mantlo","Sal Buscema"],"i":2128},{"year":1980,"characters":["Betrand Crawley","Frenchie","Gena Landers","Khonshu","Marlene Alraune","Moon Knight","Raoul Bushman","Samuels"],"name":"Moon Knight #1","link":"moon_knight_1-2","credits":["Frank Springer","Doug Moench","Bill Sienkiewicz"],"i":2129},{"year":1980,"characters":["Betty Ross","General 'Thunderbolt' Ross","Hulk","Human Torch","Invisible Woman","Mr. Fantastic","Pluto","Stranger","Thing"],"name":"Marvel Two-In-One annual #5","link":"marvel_two-in-one_annual_5","credits":["Pablo Marcos","Alan Kupperberg"],"i":2130},{"year":1980,"characters":["Amanda Sefton","Colossus","Dr. Strange","Margali Szardos","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men annual #4","link":"uncanny_x-men_annual_4","credits":["Bob McLeod","John Romita Jr.","Chris Claremont"],"i":2131},{"year":1980,"characters":["Beast","Captain America","Hawkeye","Henry Pym","Iron Man","Jarvis","Jocasta","Mrs. Arbogast","Mrs. Jarvis","Scarlet Witch","Thor","Vision","Wasp","Wonder Man"],"name":"Avengers #201","link":"avengers_201","credits":["George Perez","Gene Day","Roger Stern","David Michelinie","Jim Shooter","Dan Green"],"i":2132},{"year":1980,"characters":["Abe Brown","Bob Diamond","El Aguila","Hulk","Iron Fist","Jennie Royce","Jeryn Hogarth","Lin Sun","Lotus Shinchuko","Luke Cage"],"name":"Power Man & Iron Fist #65","link":"power_man_iron_fist_65","credits":["Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2133},{"year":1980,"characters":["Baron Brimstone","Eddie Harris","Gears Garvin","Machine Man","Pamela Quinn","Peter Spaulding","Sandman","Spider-Man"],"name":"Marvel Team-Up #99","link":"marvel_team-up_99","credits":["Jerry Bingham","Tom DeFalco","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2134},{"year":1980,"characters":["Acroyear","Biotron","Bug","Cilicia","Commander Arcturus Rann","Force Commander","Marionette","Microtron","Molecule Man","Oberon","Prince Pharoid","Shaitan","Slug (Micronaut)"],"name":"Micronauts #23","link":"micronauts_23-24","credits":["Bill Mantlo","Pat Broderick","Dan Bulanadi"],"i":2135},{"year":1980,"characters":["Black Panther","Colossus","Father Michael Bowen","General Nguyen Coy","Human Torch","Invisible Woman","Karma","Leong Manh","Mr. Fantastic","Nga Manh Coy","Professor X","Spider-Man","Storm","Thing","Wolverine"],"name":"Marvel Team-Up #100","link":"marvel_team-up_100","credits":["Bob McLeod","Chris Claremont","Frank Miller","John Byrne","Bob Wiacek"],"i":2136},{"year":1980,"characters":["Daredevil","Hellcat","Hulk","Nighthawk","Valkyrie"],"name":"Defenders #88","link":"defenders_88","credits":["Pablo Marcos","Don Perlin","Ed Hannigan"],"i":2137},{"year":1980,"characters":["Angel","Blob","Colossus","Guardian (James Mac Hudson)","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Shaman","Snowbird","Stevie Hunter","Storm","Vindicator (Heather Hudson)","Wendigo II","Wolverine"],"name":"Uncanny X-Men #139-140","link":"uncanny_x-men_139-140","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":2138},{"year":1980,"characters":["Aurora","Eddie Harris","Gears Garvin","Machine Man","Madame Menace (Sunset Bain)","Miles Brickman","Northstar","Pamela Quinn","Peter Spaulding","Sasquatch"],"name":"Machine Man #18","link":"machine_man_18","credits":["Steve Ditko","Tom DeFalco"],"i":2139},{"year":1981,"characters":["Clea","Dr. Strange","Sara Wolfe","Wong"],"name":"Doctor Strange #45","link":"doctor_strange_45","credits":["Al Milgrom","Walt Simonson","Frank Giacoia","Josef Rubinstein","Chris Claremont","Gene Colan","Tom Palmer","Wendy Pini","Bob Wiacek","Dan Green"],"i":2140},{"year":1980,"characters":["Captain America","Hawkeye","Iron Man","Jarvis","Jocasta","Scarlet Witch","Thor","Ultron","Vision","Wasp"],"name":"Avengers #202","link":"avengers_202","credits":["George Perez","Mike Esposito","David Michelinie","Jim Shooter"],"i":2141},{"year":1981,"characters":["Beast","Captain America","Hawkeye","Iron Man","Jarvis","Jocasta","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #203","link":"avengers_203","credits":["Dan Green","David Michelinie","Carmine Infantino"],"i":2142},{"year":1980,"characters":["Batroc","Bernie Rosenthal","Blake Tower","Captain America","Mr. Hyde"],"name":"Captain America #251-252","link":"captain_america_251-252","credits":["John Byrne","Josef Rubinstein","Roger Stern"],"i":2143},{"year":1981,"characters":["Acroyear","Baron Karza","Biotron","Bug","Captain America","Cilicia","Commander Arcturus Rann","Computrex","Dagon","Dum Dum Dugan LMD","Fixer","Force Commander","Gabriel Jones","Iron Man","Margrace","Marionette","Mentallo","Microtron","Nick Fury","Oberon","Prince Pharoid","Queen Esmera","Shaitan","Slug (Micronaut)","Time Traveler","Vision"],"name":"Micronauts #24-28","link":"micronauts_24-28","credits":["Bill Mantlo","Armando Gil","Pat Broderick","Dan Bulanadi"],"i":2144},{"year":1980,"characters":["Bethany Cabe","Force","Iron Man","John Ehrmann","Justin Hammer","Ling McPherson","Nick Fury","War Machine"],"name":"Iron Man #140-141","link":"iron_man_140-141","credits":["John Romita Jr.- Penciler","Bob Layton","David Michelinie"],"i":2145},{"year":1980,"characters":["Captain Universe (Uni-Power)","Muffin","Raymond Coffin","Steve Coffin"],"name":"Marvel Spotlight #9","link":"marvel_spotlight_9","credits":["Steve Ditko","Bill Mantlo","Al Milgrom"],"i":2146},{"year":1981,"characters":["Clea","Daredevil","Dolly Donahue","Dr. Strange","Hellcat","Hulk","Mandrill","Nighthawk","Valkyrie"],"name":"Defenders #89-91","link":"defenders_89-90","credits":["Pablo Marcos","Don Perlin","Ed Hannigan"],"i":2147},{"year":1981,"characters":["Mindy Williams","Nighthawk","Spider-Man"],"name":"Marvel Team-Up #101","link":"marvel_team-up_101","credits":["Jerry Bingham","Steve Ditko","Mike Esposito","J.M. DeMatteis","Mark Gruenwald","Denny O'Neil","Mike Barr"],"i":2148},{"year":1980,"characters":["April Maye","Barney Bushkin","Debra Whitman","J. Jonah Jameson","KJ Klayton","Madame Web","Rupert Dockery","Spider-Man"],"name":"Amazing Spider-Man #210","link":"amazing_spider-man_210","credits":["Denny O'Neil","John Romita Jr.","Joe Sinnott"],"i":2149},{"year":1980,"characters":["Colleen Wing","Constrictor","D.W. Griffith","Harmony Young","Iron Fist","Jennie Royce","Luke Cage","Misty Knight","Sabretooth"],"name":"Power Man & Iron Fist #66","link":"power_man_iron_fist_66","credits":["Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2150},{"year":1981,"characters":["Aunt May","Debra Whitman","Hydroman","J. Jonah Jameson","Joe 'Robbie' Robertson","Sadie Frickett","Spider-Man","Sub-Mariner"],"name":"Amazing Spider-Man #211-212","link":"amazing_spider-man_211-212","credits":["Denny O'Neil","John Romita Jr.","Jim Mooney"],"i":2151},{"year":1981,"characters":["Aunt May","Debra Whitman","Erik Josten","Holly Gillis","J. Jonah Jameson","Joe 'Robbie' Robertson","Mace","Mysterio","Nate Lubenski","Phillip Chang","Spider-Man","White Tiger"],"name":"Peter Parker, the Spectacular Spider-Man #49-52","link":"peter_parker_the_spectacular_s_6","credits":["Dave Humphrys","John Romita Jr.","Bruce D. Patterson","Jim Mooney","Josef Rubinstein","Rick Leonardi","Roger Stern","Denys Cowan","Marie Severin"],"i":2152},{"year":1980,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Moon Knight","Raoul Bushman","Ray Landers","Ricky Landers","Samuels"],"name":"Moon Knight #2","link":"moon_knight_2","credits":["Frank Springer","Doug Moench","Bill Sienkiewicz"],"i":2153},{"year":1983,"characters":["Aurora","Dan Smallwood","Gary Cody","Guardian (James Mac Hudson)","Marrina","Northstar","Puck","Richard Easton","Sasquatch","Shaman","Snowbird","Tundra","Vindicator (Heather Hudson)"],"name":"Alpha Flight #1","link":"alpha_flight_1","credits":["John Byrne"],"i":2154},{"year":1980,"characters":["Ace O'Connor","Parnival Plunder","ROM"],"name":"ROM #13","link":"rom_13","credits":["Bill Mantlo","Sal Buscema","Mary Jo Duffy"],"i":2155},{"year":1980,"characters":["Morgan MacNeil Hardy","Scotty McDowell","Spider-Woman (Jessica Drew)","Turner D. Century"],"name":"Spider-Woman #33","link":"spider-woman_33","credits":["Bruce D. Patterson","Stephen Leialoha","J.M. DeMatteis","Mark Gruenwald","Denny O'Neil"],"i":2156},{"year":1980,"characters":["Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Odin","Thing","Thor"],"name":"Fantastic Four #224-225","link":"fantastic_four_224-225","credits":["Doug Moench","Pablo Marcos","Jim Salicrup","Bill Sienkiewicz","Bob Budiansky"],"i":2157},{"year":1981,"characters":["Acroyear","Baron Karza","Biotron","Bug","Cilicia","Commander Arcturus Rann","Dagon","Doc Samson","Dreamstalker","Dum Dum Dugan LMD","Force Commander","Gabriel Jones","Marionette","Microtron","Nick Fury","Nightmare","Prince Pharoid","Queen Esmera","Slug (Micronaut)"],"name":"Micronauts #29","link":"micronauts_29","credits":["Bill Mantlo","Pat Broderick","Danny Fingeroth","Dan Bulanadi","Louise Simonson"],"i":2158},{"year":1980,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #51","link":"ghost_rider_51","credits":["Michael Fleisher","Don Perlin","Carmine Infantino","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2159},{"year":1980,"characters":["Aunt May","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Ned Leeds","Rapier","Silvermane","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man annual #2","link":"peter_parker_the_spectacular_s_93","credits":["Mike Esposito","Jim Salicrup","Jim Mooney","Ralph Macchio"],"i":2160},{"year":1981,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Midnight (Anton Mogart)","Moon Knight","Nedda","Samuels"],"name":"Moon Knight #3","link":"moon_knight_3","credits":["Doug Moench","Bill Sienkiewicz"],"i":2161},{"year":1981,"characters":["Andrew Jackson Kale","Captain Fate","Death","Jennifer Kale","John Kowalski","Joshua Kale","Man-Thing","Wong"],"name":"Man-Thing #5-10","link":"man-thing_5-10","credits":["Don Perlin","Ed Hannigan","Dan Bulanadi","Chris Claremont","Company","Roberta 'Dickie' McKenzie","J.M. DeMatteis","Larry Hama","Bob Wiacek"],"i":2162},{"year":1981,"characters":["Amanda Sefton","Andrew Jackson Kale","Clea","Dakimh The Enchanter","Dr. Strange","Jennifer Kale","John Kowalski","Joshua Kale","Man-Thing","Margali Szardos","Thog","Wong"],"name":"Man-Thing #11","link":"man-thing_11","credits":["Val Mayerik","Bob Wiacek","Chris Claremont"],"i":2163},{"year":1981,"characters":["Angel","Avalanche","Black King (Sebastian Shaw)","Blob","Colossus","Destiny","Henry Peter Gyrich","Moira MacTaggert","Mystique","Nightcrawler","Professor X","Pyro","Senator Kelly","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #141-142","link":"uncanny_x-men_141-142","credits":["John Byrne","Terry Austin","John Bynre","Chris Claremont"],"i":2164},{"year":1981,"characters":["Angar the Screamer","Anvil","Hammer","Lindsay McCabe","Scotty McDowell","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #34-35","link":"spider-woman_34-35","credits":["Al Milgrom","Bruce D. Patterson","Stephen Leialoha","Chris Claremont","Alan Gordon"],"i":2165},{"year":1981,"characters":["Ace O'Connor","Awesome Android","John Clark","Mack Killburn","Mad Thinker","ROM","Sarah Clark","Starshine II"],"name":"ROM #14","link":"rom_14","credits":["Bill Mantlo","Sal Buscema"],"i":2166},{"year":1981,"characters":["Balder","Dormammu","Fandral","Hildegarde","Hogun","Huginn","Jane Foster","Loki","Lord Chaos","Master Order","Mimir","Muninn","Odin","Sif","Sigyn","Thor","Umar","Volstagg"],"name":"Thor annual #9","link":"thor_annual_9","credits":["David Anthony Kraft","Vincent Colletta","Chris Claremont","Luke McDonnell"],"i":2167},{"year":1981,"characters":["Anna Kappelbaum","Baron Blood (John Falsworth)","Baron Blood (Kenneth Falsworth)","Bernie Rosenthal","Captain America","Jarvis","Spitfire","Union Jack (James Falsworth)","Union Jack (Joey Chapman)"],"name":"Captain America #253-254","link":"captain_america_253-254","credits":["John Byrne","Josef Rubinstein","Roger Stern"],"i":2168},{"year":1981,"characters":["Ant-Man (Scott Lang)","Artemus Pithins","Bethany Cabe","Chad Mountebank","Iron Man","Jonas Hale","Ling McPherson","Mrs. Arbogast","Nick Fury","Sunturion","Vic Martinelli"],"name":"Iron Man #142-144","link":"iron_man_142-144","credits":["J.J. Birch","Bob Layton","John Romita Jr.","David Michelinie"],"i":2169},{"year":1981,"characters":["Captain America","Cedric Rawlings","Druid"],"name":"Captain America #256","link":"captain_america_256","credits":["Bill Mantlo","Dave Simons","Al Milgrom","Bob Budiansky","Jim Salicrup","Frank Giacoia","Gene Colan"],"i":2170},{"year":1981,"characters":["Thor"],"name":"Thor #303","link":"thor_303","credits":["Doug Moench","Jim Salicrup","Bob Budiansky","Rick Leonardi","Chic Stone"],"i":2171},{"year":1981,"characters":["Alicia Masters","Franklin Richards","Genji Odashu","Human Torch","Ilongo Savage","Invisible Woman","Mr. Fantastic","Richard Carson","Thing"],"name":"Fantastic Four #226","link":"fantastic_four_226","credits":["Doug Moench","Pablo Marcos","Bob Budiansky","Bill Sienkiewicz","Bruce D. Patterson","Jim Salicrup"],"i":2172},{"year":1981,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #52","link":"ghost_rider_52","credits":["Denny O'Neil","Michael Fleisher","Don Perlin","Mark Gruenwald"],"i":2173},{"year":1981,"characters":["Captain Universe (Uni-Power)"],"name":"Marvel Spotlight #10","link":"marvel_spotlight_10","credits":["Steve Ditko","Bill Mantlo","Al Milgrom"],"i":2174},{"year":1981,"characters":["Clea","Dr. Strange","Eternity","Hellcat","Hellstorm","Hulk","Nighthawk","Silver Surfer","Sub-Mariner","Valkyrie"],"name":"Defenders #92","link":"defenders_92","credits":["Don Perlin","Pablo Marcos","J.M. DeMatteis"],"i":2175},{"year":1981,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Moon Knight","Ray Landers","Ricky Landers","Samuels"],"name":"Moon Knight #4","link":"moon_knight_4","credits":["Klaus Janson","Doug Moench","Bill Sienkiewicz"],"i":2176},{"year":1981,"characters":["Daniel 'Zapper' Ridge","Garth of Mournhelm","Gorjoon","Hellcat","Lambert","Man-Wolf (John Jameson)","Richard Rory","She-Hulk","Valkyrie"],"name":"She-Hulk #13-14","link":"she-hulk_13-14","credits":["Mary Jo Duffy","Al Milgrom","Frank Springer","Mike Vosburg","David Anthony Kraft"],"i":2177},{"year":1983,"characters":["Clea","Dark Crawler","Dr. Strange","James Mandarin","Wong"],"name":"Marvel Fanfare #8","link":"marvel_fanfare_8","credits":["P. Craig Russell","Peter Gillis","Carmine Infantino"],"i":2178},{"year":1981,"characters":["Clea","Dr. Strange","Hellcat","Hellstorm","Hulk","Nebulon","Nighthawk","Sub-Mariner","Valkyrie","Vashti","Wong"],"name":"Defenders #93","link":"defenders_93","credits":["Joe Sinnott","Don Perlin","Many Hands","J.M. DeMatteis"],"i":2179},{"year":1981,"characters":["Captain America","Hulk"],"name":"Captain America #257","link":"captain_america_257","credits":["Lee Elias","Bob Budiansky","Jim Salicrup","Jim Shooter","Many Hands","Mike Barr"],"i":2180},{"year":1981,"characters":["Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #227","link":"fantastic_four_227","credits":["Doug Moench","Bill Sienkiewicz","Bruce D. Patterson"],"i":2181},{"year":1982,"characters":["Captain America","Clea","Dr. Strange","Nicodemus","Wong"],"name":"Marvel Fanfare #5","link":"marvel_fanfare_5","credits":["P. Craig Russell","Marshall Rogers","Roger McKenzie","Chris Claremont","Luke McDonnell","John Beatty"],"i":2182},{"year":2011,"characters":["Hulk","Human Torch","Mr. Fantastic","Wizard"],"name":"Incredible Hulk & the Human Torch: From the Marvel Vault #1","link":"incredible_hulk_the_human_torc","credits":["Lauren Sankovitch","Tom DeFalco","Steve Ditko","Karl Kesel","Tom Brevoort","Jack C. Harris"],"i":2183},{"year":1981,"characters":["Beast","Captain America","Hawkeye","Iron Man","Jarvis","Jocasta","Scarlet Witch","Vision","Wasp","Wonder Man","Yellow Claw"],"name":"Avengers #204-205","link":"avengers_204-205","credits":["Bob Budiansky","Alan Kupperberg","David Michelinie","Jim Shooter","Dan Green","Don Newton"],"i":2184},{"year":1981,"characters":["Hulk","Thor"],"name":"Hulk #255","link":"hulk_255","credits":["Bill Mantlo","Sal Buscema"],"i":2185},{"year":1981,"characters":["Arthur Nagan","Bushmaster","Colleen Wing","D.W. Griffith","Emma Burstein","Gadget","Harmony Young","Iron Fist","Jennie Royce","Luke Cage","Misty Knight","Noah Burstein","Rafael Scarfe","William Hao"],"name":"Power Man & Iron Fist #67-68","link":"power_man_iron_fist_67-68","credits":["Mary Jo Duffy","Kerry Gammill","Bob Layton","Ricardo Villamonte"],"i":2186},{"year":1981,"characters":["Doc Samson","Rhino","Spider-Man"],"name":"Marvel Team-Up #102","link":"marvel_team-up_102","credits":["Frank Springer","Mark Gruenwald","Mike Barr","Denny O'Neil","Mike Esposito"],"i":2187},{"year":1981,"characters":["Betty Ross","Captain Bowman","Doc Samson","Fred Sloan","General 'Thunderbolt' Ross","Glenn Talbot","Hulk","Lt. Perriwinkle","Rick Jones","Sabra","Siren","Wilfred Maxwell","Woodgod"],"name":"Hulk #256","link":"hulk_256","credits":["Bill Mantlo","Sal Buscema"],"i":2188},{"year":1981,"characters":["Ace O'Connor","John Clark","ROM","Sarah Clark","Silas Lane","Starshine II","Steve Jackson"],"name":"ROM #15","link":"rom_15","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Mary Jo Duffy"],"i":2189},{"year":1981,"characters":["Balder","Barbaric","Bulldozer","Karnilla","Lionel Jeffries","Piledriver","Thor","Thunderball","Wrecker"],"name":"Thor #304","link":"thor_304","credits":["Ralph Macchio","Bob Budiansky","Jim Salicrup","Mark Gruenwald","Keith Pollard","Chic Stone"],"i":2190},{"year":1981,"characters":["Azmodeus","Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #53","link":"ghost_rider_53","credits":["Denny O'Neil","Michael Fleisher","Don Perlin","Mark Gruenwald"],"i":2191},{"year":1981,"characters":["Lindsay McCabe","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #36","link":"spider-woman_36","credits":["Stephen Leialoha","Bruce D. Patterson","Chris Claremont"],"i":2192},{"year":1981,"characters":["Beast","Captain America","Carter Blair","Colossus","Dazzler","Enchantress","Hawkeye","Iron Man","Jarvis","Nightcrawler","Shadowcat (Kitty Pryde)","Spider-Man","Storm","Wasp","Wolverine"],"name":"Dazzler #1","link":"dazzler_1","credits":["Tom DeFalco","John Romita Jr.","Alfredo P. Alcala"],"i":2193},{"year":1981,"characters":["Frenchie","Moon Knight"],"name":"Moon Knight #5","link":"moon_knight_5","credits":["Klaus Janson","Doug Moench","Bill Sienkiewicz"],"i":2194},{"year":1981,"characters":["Captain America"],"name":"Captain America #255","link":"captain_america_255","credits":["John Byrne","Josef Rubinstein","Roger Stern"],"i":2195},{"year":1981,"characters":["Angel","Beast","Captain America","Cassandra Ferlenghetti","Colossus","Dazzler","Enchantress","Harry Osgood","Hawkeye","Human Torch","Iron Man","Joseph Ercoli","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Spider-Man","Storm","Thing","Wasp","Wolverine"],"name":"Dazzler #2","link":"dazzler_2","credits":["Tom DeFalco","John Romita Jr.","Walt Simonson","Alfredo P. Alcala"],"i":2196},{"year":1981,"characters":["Angel","Carmen Pryde","Colossus","Cyclops","Lee Forrester","Mariko Yashida","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Terri Pryde","Wolverine"],"name":"Uncanny X-Men #143","link":"uncanny_x-men_143","credits":["John Byrne","Terry Austin","Chris Claremont"],"i":2197},{"year":1981,"characters":["Arabian Knight","Doc Samson","General 'Thunderbolt' Ross","Glenn Talbot","Gog (Demon)","Hulk","Jarvis","Lt. Perriwinkle","Magog (Demon)","Rick Jones","Wilfred Maxwell"],"name":"Hulk #257","link":"hulk_257","credits":["Bill Mantlo","Sal Buscema"],"i":2198},{"year":1981,"characters":["Angel","Colossus","Cyclops","D'Spayre","Lee Forrester","Man-Thing","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #144","link":"uncanny_x-men_144","credits":["Josef Rubinstein","Brent Anderson","Chris Claremont"],"i":2199},{"year":1981,"characters":["John Clark","Mack Killburn","ROM","Sarah Clark","Starshine II","Steve Jackson"],"name":"ROM #16","link":"rom_16","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Mary Jo Duffy"],"i":2200},{"year":1981,"characters":["Franklin Richards","Human Torch","Invisible Woman","Lorrie Melton","Mr. Fantastic","Thing"],"name":"Fantastic Four #228","link":"fantastic_four_228","credits":["Doug Moench","Bill Sienkiewicz","Jim Salicrup","Bob Budiansky","Joe Sinnott"],"i":2201},{"year":1981,"characters":["Banshee (Horse)","Flagg Fargo","Ghost Rider (Johnny Blaze)","Gina Langtree","Moondark","Night Rider (Carter Slade)","Night Rider (Hamilton Slade)","Orb","Tatterdemalion","Werewolf By Night","Zarathos"],"name":"Ghost Rider #54-56","link":"ghost_rider_54-56","credits":["Michael Fleisher","Crew","Don Perlin","Michael Esposito","Mark Gruenwald","Denny O'Neil"],"i":2202},{"year":1981,"characters":["Captain Universe (Uni-Power)","J. Jonah Jameson","Spider-Man"],"name":"Marvel Spotlight #11","link":"marvel_spotlight_11_1","credits":["Steve Ditko","Bill Mantlo","Al Milgrom"],"i":2203},{"year":1981,"characters":["Black Widow"],"name":"Bizarre Adventures #25 (Black Widow)","link":"bizarre_adventures_25_black_wi","credits":["Paul Gulacy","Lynn Graeme","Ralph Macchio"],"i":2204},{"year":1981,"characters":["Air-Walker","Balder","Firelord","Haag","Hermod","Human Torch","Karnilla","Lionel Jeffries","Mr. Fantastic","Nanna","Sleipnir","Thing","Thor"],"name":"Thor #305-306","link":"thor_305-306","credits":["Ralph Macchio","Dave Simons","Bob Budiansky","Jim Salicrup","Mark Gruenwald","Frank Giacoia","Keith Pollard","Chic Stone","Marie Severin"],"i":2205},{"year":1981,"characters":["Amon (Demon Steed)","Aragorn","Clea","Dolly Donahue","Dr. Strange","Gargoyle (Defender)","Hecate (Demon Steed)","Hellstorm","Set (Demon Steed)","Valkyrie"],"name":"Defenders #94","link":"defenders_94","credits":["Joe Sinnott","Don Perlin","J.M. DeMatteis"],"i":2206},{"year":1981,"characters":["Spider-Man","Tinkerer","Toy"],"name":"Peter Parker, the Spectacular Spider-Man #53","link":"peter_parker_the_spectacular_s_18","credits":["Bill Mantlo","Frank Springer","Jim Mooney"],"i":2207},{"year":1981,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Moon Knight","Ray Landers","Ricky Landers","Samuels"],"name":"Moon Knight #6","link":"moon_knight_6","credits":["Klaus Janson","Doug Moench","Bill Sienkiewicz"],"i":2208},{"year":1981,"characters":["Debra Whitman","Invisible Woman","J. Jonah Jameson","Llyra","Mr. Fantastic","Paste Pot Pete","Sandman","Spider-Man","Sub-Mariner","Thing","Vashti","Wizard"],"name":"Amazing Spider-Man #213-215","link":"amazing_spider-man_213-215","credits":["Denny O'Neil","John Romita Jr.","Jim Mooney"],"i":2209},{"year":1981,"characters":["Angel","Black Tom","Colossus","Contessa Valentina Allegro De La Fontaine","David Ishima","Juggernaut","Lindsay McCabe","Morgan Le Fey","Nick Fury","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Siryn","Spider-Woman (Jessica Drew)","Storm","Wolverine"],"name":"Spider-Woman #37-38","link":"spider-woman_37-38","credits":["Al Milgrom","Bruce D. Patterson","Walt Simonson","Stephen Leialoha","Frank Springer","Terry Austin","Chris Claremont","Dan Bulanadi","Alan Weiss","Bob Wiacek"],"i":2210},{"year":2006,"characters":["Clay Quartermain","Count Otto Vermis","Dum Dum Dugan LMD","Gabriel Jones","Jasper Sitwell","Jimmy Woo","Madame Hydra (Viper)","Nick Fury","Spider-Woman (Jessica Drew)","Whiplash (Blacklash)"],"name":"Spider-Woman Origin #1-5","link":"spiderwoman_origin_15","credits":["Joshua Luna","Brian Reed","Brian Michael Bendis","Jonathan Luna"],"i":2211},{"year":1981,"characters":["Captain America","Crimson Dynamo V","Darkstar","Glenn Talbot","Hulk","Jarvis","Lt. Perriwinkle","Presence","Professor Phobos","Red Guardian (Tania Belinksy)","Rick Jones","Ursa Major","Vanguard"],"name":"Hulk #258-259","link":"hulk_258-259","credits":["Bill Mantlo","Al Milgrom","Steven Grant","Sal Buscema"],"i":2212},{"year":1981,"characters":["Beast","Captain America","Human Torch","Iron Man","Jarvis","Jocasta","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #206","link":"avengers_206","credits":["Bill Mantlo","Dan Green","Gene Colan"],"i":2213},{"year":1981,"characters":["Ant-Man (Scott Lang)","Bethany Cabe","Edwin Cord","Iron Man","Jonas Hale","Raider-1","Raider-2","Raider-3","War Machine"],"name":"Iron Man #145","link":"iron_man_145","credits":["Bob Layton","John Romita Jr.","David Michelinie"],"i":2214},{"year":1981,"characters":["Colossus","Hybrid (Dire Wraith)","John Clark","Nightcrawler","Professor X","ROM","Sarah Clark","Shadowcat (Kitty Pryde)","Silas Lane","Starshine II","Steve Jackson","Storm","Wolverine"],"name":"ROM #17-18","link":"rom_17-18","credits":["Frank Giacoia","Bill Mantlo","Al Milgrom","Sal Buscema"],"i":2215},{"year":1981,"characters":["Glenn Talbot","Hulk","Rick Jones"],"name":"Hulk #260","link":"hulk_260","credits":["Bill Mantlo","Sal Buscema"],"i":2216},{"year":1981,"characters":["Alicia Masters","Annie Christopher","Audrey Landers","Bob Landers","Bova","Carol Landers","Diane Arliss","Franklin Richards","Gilbert Vaughn","Human Torch","Invisible Woman","Jeannine O'Connell","Lorrie Melton","Modred the Mystic","Mr. Fantastic","Namorita","Puppet Master","Quasar","Stingray","Thing","Willie Lumpkin","Wundarr (Aquarian)"],"name":"Marvel Two-In-One #74","link":"marvel_two-in-one_74","credits":["Jim Salicrup","Bob Budiansky","Frank Springer","Mark Gruenwald","Chic Stone"],"i":2217},{"year":1981,"characters":["Annihilus","Beast","Blastaar","Captain America","Franklin Richards","Hawkeye","Human Torch","Invisible Woman","Iron Man","Jarvis","Mr. Fantastic","Super-Adaptoid","Thing","Wasp"],"name":"Marvel Two-In-One #75","link":"marvel_two-in-one_75","credits":["Tom DeFalco","Chic Stone","Alan Kupperberg"],"i":2218},{"year":1981,"characters":["Alicia Masters","Bill Foster","Clown","Ernesto Gambonno","Fire Eater","Human Cannonball","Iceman","Livewire","Luigi Gambonno","Princess Python","Ringmaster","Terri Sue Bottoms","Thing"],"name":"Marvel Two-In-One #76","link":"marvel_two-in-one_76","credits":["Jerry Bingham","Jim Salicrup","Tom DeFalco","David Michelinie","Chic Stone"],"i":2219},{"year":1981,"characters":["Beverly Cross","Daniel 'Zapper' Ridge","Morris Walters","Richard Rory","She-Hulk"],"name":"She-Hulk #15-16","link":"she-hulk_15-16","credits":["David Anthony Kraft","Mary Jo Duffy","Frank Springer","Mike Vosburg"],"i":2220},{"year":1981,"characters":["Lissa Russell","Werewolf By Night"],"name":"Marvel Premiere #59","link":"marvel_premiere_59","credits":["Denny O'Neil","Bob Budiansky","Steven Grant","Winslow Mortimer"],"i":2221},{"year":1981,"characters":["Beast","Berserker","Captain America","Iron Man","Jarvis","Jocasta","Scarlet Witch","Vision","Wasp","Wonder Man"],"name":"Avengers #207-208","link":"avengers_207-208","credits":["Danny Fingeroth","Bob Budansky","Gene Colan","Danny Fingeroth- Script","Dan Green"],"i":2222},{"year":1981,"characters":["Frigga","Lionel Jeffries","Loki","Odin","Sigyn","Thor"],"name":"Thor #307","link":"thor_307","credits":["Ralph Macchio","Bob Budiansky","Alan Kupperberg","Mark Gruenwald","Jim Salicrup","Keith Pollard","Chic Stone"],"i":2223},{"year":1981,"characters":["Blake Tower","Iron Fist","Jennie Royce","Luke Cage"],"name":"Power Man & Iron Fist #69","link":"power_man_iron_fist_69","credits":["Mary Jo Duffy","Alan Weiss","Ricardo Villamonte","Steven Grant"],"i":2224},{"year":1981,"characters":["Alicia Masters","Beast","Captain America","Franklin Richards","Human Torch","Invisible Woman","Iron Man","Lorrie Melton","Mr. Fantastic","Scarlet Witch","Thing","Thor","Vision"],"name":"Fantastic Four #229-231","link":"fantastic_four_230","credits":["Doug Moench","Bill Sienkiewicz","Bob Budiansky","Joe Sinnott","Frank Giacoia","Jim Salicrup","Jerome Moore","Gurland"],"i":2225},{"year":1981,"characters":["Anna Kappelbaum","Bernie Rosenthal","Captain America","Heat-Ray","Josh Cooper","Mike Farrel"],"name":"Captain America #258","link":"captain_america_258","credits":["Michael Zeck","Chris Claremont","David Michelinie"],"i":2226},{"year":1981,"characters":["Amanda Sefton","Angel","Arcade","Banshee","Beast","Candy Southern","Colonel Hendershoot","Colossus","Cyclops","Doombot A76","Elaine Grey","General Fredericks","Havok","Iceman","John Grey","Lee Forrester","Magik","Miss Locke","Moira MacTaggert","Mr. Chambers","Nightcrawler","Polaris","Professor X","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Wolverine"],"name":"Uncanny X-Men #145-147","link":"uncanny_x-men_145-147","credits":["Dave Cockrum","Josef Rubinstein","Chris Claremont"],"i":2227},{"year":1981,"characters":["Byron Benjamin","Eddie Harris","Gears Garvin","Jason Macendale","Machine Man","Maggie Jones","Miles Brickman","Pamela Quinn","Peter Spaulding","Torpedo"],"name":"Machine Man #19","link":"machine_man_19","credits":["Steve Ditko","Tom DeFalco"],"i":2228},{"year":1981,"characters":["Beast","Captain America","Doctor Octopus","Jarvis"],"name":"Captain America #259","link":"captain_america_259","credits":["Jim Shooter","Bob Budiansky","Mike Zeck","Jim Salicrup","Quickdraw Studios","David Michelinie"],"i":2229},{"year":1981,"characters":["Aunt May","Biff Rifkin","Daredevil","Debra Whitman","Foggy Nelson","Hydroman","J. Jonah Jameson","Joe 'Robbie' Robertson","Madame Web","Nate Lubenski","Sadie Frickett","Sandman","Spider-Man"],"name":"Amazing Spider-Man #216-218","link":"amazing_spider-man_216-218","credits":["Denny O'Neil","John Romita Jr.","Al Milgrom","Jim Mooney"],"i":2230},{"year":1981,"characters":["Ant-Man (Scott Lang)","J. Jonah Jameson","Spider-Man","Stature","Taskmaster"],"name":"Marvel Team-Up #103","link":"marvel_team-up_103","credits":["David Bingham","David Michelinie","Mike Esposito"],"i":2231},{"year":1981,"characters":["Chris Keating","Erik Josten","Lou Snider","Marcy Kane","Morris Sloan","Phillip Chang","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #54","link":"peter_parker_the_spectacular_s_8","credits":["Roger Stern","Jim Mooney","Marie Severin"],"i":2232},{"year":1981,"characters":["Debra Whitman","Emerson Bale","Mamie Muggins","Marcy Kane","Nitro","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #55","link":"peter_parker_the_spectacular_s_9","credits":["Roger Stern","Jim Mooney","Luke McDonnell"],"i":2233},{"year":1981,"characters":["Captain America","Debra Whitman","J. Jonah Jameson","Joe 'Robbie' Robertson","Scorpion","Spider-Man"],"name":"Marvel Team-Up #106","link":"marvel_team-up_106","credits":["Herb Trimpe","Tom DeFalco","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2234},{"year":1981,"characters":["Aunt May","Chris Keating","Debra Whitman","J. Jonah Jameson","Jason Macendale","Marcy Kane","Nate Lubenski","Nitro","Philip Barnett","Spider-Man","Steve Hopkins","Vulture"],"name":"Peter Parker, the Spectacular Spider-Man #56","link":"peter_parker_the_spectacular_s_10","credits":["Roger Stern","Jim Mooney","Jim Shooter"],"i":2235},{"year":1981,"characters":["Buck Bukowski","Daredevil","Foggy Nelson","Glory Grant","J. Jonah Jameson","Lance Bannon","Man-Killer","She-Hulk","Spider-Man"],"name":"Marvel Team-Up #107","link":"marvel_team-up_107","credits":["Herb Trimpe","Tom DeFalco","Jim Shooter","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2236},{"year":1981,"characters":["Absorbing Man","Betty Ross","Hulk","Rick Jones"],"name":"Hulk #261","link":"hulk_261","credits":["Bill Mantlo","Sal Buscema"],"i":2237},{"year":1981,"characters":["Artemus Pithins","Bethany Cabe","Iron Man","Ling McPherson","Mrs. Arbogast","Vic Martinelli","War Machine","Whiplash (Blacklash)","Yvette Avril"],"name":"Iron Man #146-147","link":"iron_man_146-147","credits":["Bob Layton","John Romita Jr.","David Michelinie"],"i":2238},{"year":1981,"characters":["Ant-Man (Scott Lang)","Betty Ross","General 'Thunderbolt' Ross","Hulk","Rick Jones"],"name":"Hulk #262","link":"hulk_262","credits":["Bill Mantlo","Sal Buscema"],"i":2239},{"year":1981,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Moon Knight"],"name":"Moon Knight #7-8","link":"moon_knight_7-8","credits":["Frank Giacoia","Klaus Janson","Doug Moench","Bill Sienkiewicz"],"i":2240},{"year":1981,"characters":["Karnilla","Loki","Thor"],"name":"Thor #308","link":"thor_308","credits":["Al Milgrom","Doug Moench","Bob Budiansky","Jim Salicrup","Keith Pollard","Chic Stone","Marie Severin"],"i":2241},{"year":1981,"characters":["Nathaniel 'Blackbyrd' Byrd","Thor"],"name":"Thor #309","link":"thor_309","credits":["Bill Mantlo","Jim Salicrup","Bob Budiansky","Rick Leonardi","Chic Stone"],"i":2242},{"year":1981,"characters":["Hulk","Ka-Zar","MODOK","Zabu"],"name":"Marvel Team-Up #104","link":"marvel_team-up_104","credits":["Jerry Bingham","Roger McKenzie","Mike Esposito"],"i":2243},{"year":1981,"characters":["Beast","Blue Shield","Bo Barrigan","Carter Blair","Cassandra Ferlenghetti","Dazzler","Dr. Doom","Dreamstalker","Harry Osgood","Human Torch","Invisible Woman","Lance Steele","Mr. Fantastic","Nightmare","Nurse Collins","Paul Janson","Thing"],"name":"Dazzler #3-5","link":"dazzler_3-5","credits":["Armando Gil","John Romita Jr.","Alan Kupperberg","Tom DeFalco","Frank Springer","Dan Bulanadi","Ricardo Villamonte"],"i":2244},{"year":1981,"characters":["Angel","Banshee","Caliban","Colossus","Cyclops","Dazzler","Lee Forrester","Magik","Magneto","Moira MacTaggert","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Siryn","Spider-Woman (Jessica Drew)","Stevie Hunter","Storm","Wolverine"],"name":"Uncanny X-Men #148","link":"uncanny_x-men_148","credits":["Dave Cockrum","Josef Rubinstein","Chris Claremont"],"i":2245},{"year":1981,"characters":["Mephisto","Thor"],"name":"Thor #310","link":"thor_310","credits":["Doug Moench","Bob Budiansky","Jim Salicrup","Gene Day","Keith Pollard"],"i":2246},{"year":1981,"characters":["David Ishima","Deathstroke","Morgan Le Fey","Sabrina Morrel","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #39","link":"spider-woman_39","credits":["Stephen Leialoha","Bob Wiacek","Chris Claremont"],"i":2247},{"year":1981,"characters":["Beefer","Dazzler","Fancy Dan","Harry Osgood","Hulk","Hunch","Lance Steele","Marx","Montana","Ox III","Techmaster"],"name":"Dazzler #6-7","link":"dazzler_6-7","credits":["Armando Gil","Danny Fingeroth","Tom DeFalco","Frank Springer","Quickdraw Studios","Frank McLaughlin"],"i":2248},{"year":1981,"characters":["Firefall (Spaceknight)","John Clark","ROM","Sarah Clark","Silas Lane","Sister Sweet (Dire Wraith)","Space Phantom","Starshine II","Steve Jackson"],"name":"ROM #19","link":"rom_19","credits":["Bill Mantlo","Sal Buscema"],"i":2249},{"year":1981,"characters":["Colleen Wing","Hulk","Iron Fist","Luke Cage","Misty Knight"],"name":"Marvel Team-Up #105","link":"marvel_team-up_105","credits":["Carmine Infantino","Mark Gruenwald","Mike Barr","Denny O'Neil","Mike Esposito"],"i":2250},{"year":1981,"characters":["Captain Paul Morrel","Flying Tiger","General Nguyen Coy","Lindsay McCabe","Morgan Le Fey","Sabrina Morrel","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #40","link":"spider-woman_40","credits":["Stephen Leialoha","Bob Wiacek","Chris Claremont"],"i":2251},{"year":1981,"characters":["Beast","Jarvis","Mr. Fantastic","Scarlet Witch","Vera Cantor","Vision","Wonder Man"],"name":"Avengers #209","link":"avengers_209","credits":["Dan Green","Alan Kupperberg","J.M. DeMatteis"],"i":2252},{"year":1981,"characters":["Colleen Wing","Iron Fist","Lee Wing","Luke Cage"],"name":"Power Man & Iron Fist #70","link":"power_man_iron_fist_70","credits":["Mary Jo Duffy","Kerry Gammill","Many Hands"],"i":2253},{"year":1981,"characters":["Beverly Cross","Buck Bukowski","Daniel 'Zapper' Ridge","Man-Elephant","Morris Walters","Richard Rory","She-Hulk"],"name":"She-Hulk #17","link":"she-hulk_17","credits":["Al Milgrom","Frank Springer","Jack Abel","Mike Vosburg","David Anthony Kraft"],"i":2254},{"year":1981,"characters":["Captain America"],"name":"Captain America #260","link":"captain_america_260","credits":["Al Milgrom","Bob Budiansky","Jim Salicrup","Alan Kupperberg","Quickdraw Studios"],"i":2255},{"year":1981,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #57","link":"ghost_rider_57","credits":["Michael Fleisher","Don Perlin","Lance Tooks","Jim Shooter","David Anthony Kraft"],"i":2256},{"year":1981,"characters":["Avalanche","Beast","Blob","Captain America","Carol Danvers","Colossus","Destiny","Hawkeye","Iron Man","Jarvis","Jocasta","Madelyne Pryor","Mrs. Arbogast","Mystique","Nightcrawler","Professor X","Pyro","Rogue","Sabrina Morrel","Scarlet Witch","Shadowcat (Kitty Pryde)","Spider-Woman (Jessica Drew)","Storm","Thor","Vision","Wolverine","Wonder Man"],"name":"Avengers annual #10","link":"avengers_annual_10","credits":["Michael Golden","Armando Gil","Chris Claremont"],"i":2257},{"year":1981,"characters":["D.W. Griffith","Harmony Young","Iron Fist","Luke Cage","Montenegro","Rafael Scarfe","William Hao"],"name":"Power Man & Iron Fist #71","link":"power_man_iron_fist_71","credits":["Mary Jo Duffy","Kerry Gammill","D. Hands"],"i":2258},{"year":1981,"characters":["Artemus Pithins","Captain America","Iron Man","Jarvis","Mrs. Arbogast","Vic Martinelli","War Machine","Yvette Avril"],"name":"Iron Man #148","link":"iron_man_148","credits":["Bob Layton","John Romita Jr.","David Michelinie"],"i":2259},{"year":1981,"characters":["Clea","Dr. Strange","Dracula","Gargoyle (Defender)","Grimgerta","Hellcat","Hellstorm","Nighthawk","Valkyrie","Valtrauta","Wong"],"name":"Defenders #95","link":"defenders_95","credits":["Al Milgrom","Don Perlin","Joe Sinnott","Frank Giacoia","J.M. DeMatteis"],"i":2260},{"year":1981,"characters":["Avalanche","Betty Ross","Corruptor","Hulk","Landslide","Night Flyer","Rick Jones"],"name":"Hulk #263","link":"hulk_263","credits":["Bill Mantlo","Sal Buscema"],"i":2261},{"year":1981,"characters":["Ameridroid","Beast","Captain America","Falcon","Iron Man","Josh Cooper","Red Skull","Redwing","Vision"],"name":"Captain America #261-263","link":"captain_america_263","credits":["Bob Budiansky","Jim Salicrup","Mike Zeck","Quickdraw Studios","J.M. DeMatteis"],"i":2262},{"year":1981,"characters":["Captain America","Morgan MacNeil Hardy","Phillip Le Guin","Ursula Richards"],"name":"Captain America #264","link":"captain_america_264","credits":["Bob Budiansky","Jim Salicrup","Mike Zeck","Quickdraw Studios","J.M. DeMatteis"],"i":2263},{"year":1981,"characters":["Dolly Donahue","Dr. Strange","Gargoyle (Defender)","Ghost Rider (Johnny Blaze)","Hellcat","Hellstorm","Nighthawk","Valkyrie","Wong"],"name":"Defenders #96","link":"defenders_96","credits":["Joe Sinnott","Don Perlin","J.M. DeMatteis"],"i":2264},{"year":1981,"characters":["Cory Payne","Devil-Slayer","Dr. Strange","Gargoyle (Defender)","Hellcat","Hellstorm","Man-Thing","Nighthawk","Valkyrie"],"name":"Defenders #97","link":"defenders_97","credits":["Joe Sinnott","Don Perlin","J.M. DeMatteis"],"i":2265},{"year":1981,"characters":["Banshee (Horse)","Betty Ross","Constrictor","Corruptor","Firebird","General 'Thunderbolt' Ross","Hulk","Lobo (Will Talltree's Wolf)","Night Flyer","Night Rider (Hamilton Slade)","Red Wolf (Will Talltrees)","Rick Jones","Shooting Star","Texas Twister"],"name":"Hulk #264-265","link":"hulk_264-265","credits":["Bill Mantlo","Sal Buscema"],"i":2266},{"year":1981,"characters":["Dr. Doom","Iron Man","War Machine","Yvette Avril"],"name":"Iron Man #149-150","link":"iron_man_149-150","credits":["Bob Layton","John Romita Jr.","David Michelinie"],"i":2267},{"year":1981,"characters":["Beast","Captain America","Iron Man","Jocasta","Scarlet Witch","Thor","Vision","Wasp","Wonder Man"],"name":"Avengers #210","link":"avengers_210","credits":["Bill Mantlo","Dan Green","Gene Colan"],"i":2268},{"year":1982,"characters":["Beast","Captain America","Doc Samson","Dr. Strange","Franklin Richards","Henry Pym","Hulk","Human Torch","Invisible Woman","Iron Man","Jocasta","Leader","Mr. Fantastic","Spider-Man","Thing","Thor","Unus","Vision","Wasp","Wonder Man"],"name":"Hulk annual #11","link":"hulk_annual_11","credits":["Bill Mantlo","Mary Jo Duffy","Steven Mitchell","Joe Sinnott","Frank Miller","Rich Buckler"],"i":2269},{"year":1981,"characters":["Beast","Captain America","Clea","Devil-Slayer","Dr. Strange","Gargoyle (Defender)","Hellcat","Hellstorm","Hulk","Iron Man","Luann Bloom","Man-Thing","Mephisto","Nighthawk","Satan","Satannish","Silver Surfer","Sub-Mariner","Thog","Valkyrie","Wonder Man","Wong"],"name":"Defenders #98-100","link":"defenders_98","credits":["Joe Sinnott","Don Perlin","J.M. DeMatteis"],"i":2270},{"year":1981,"characters":["Alicia Masters","Human Torch","Invisible Woman","Man-Thing","Mr. Fantastic","Nick Fury","Thing"],"name":"Marvel Two-In-One #77","link":"marvel_two-in-one_77","credits":["Tom DeFalco","Ron Wilson","Chic Stone"],"i":2271},{"year":1981,"characters":["Alicia Masters","Beast","Becky Blake","Daredevil","Foggy Nelson","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing","Wonder Man","Xemnu the Titan"],"name":"Marvel Two-In-One #78","link":"marvel_two-in-one_78","credits":["Jim Salicrup","Tom DeFalco","Ron Wilson","David Michelinie","Chic Stone"],"i":2272},{"year":1981,"characters":["Angel","Beast","Black Panther","Black Widow","Captain America","Dazzler","Hawkeye","Henry Pym","Hercules","Iceman","Iron Man","Jarvis","Jocasta","Moon Knight","Moondragon","Scarlet Witch","Thor","Tigra","Vision","Wasp","Wonder Man"],"name":"Avengers #211","link":"avengers_211","credits":["Dan Green","Gene Colan","Jim Shooter"],"i":2273},{"year":1981,"characters":["Ant-Man (Scott Lang)","Iron Man","Ling McPherson","Mrs. Arbogast","Vic Martinelli"],"name":"Iron Man #151","link":"iron_man_151","credits":["Bob Layton","David Michelinie","Luke McDonnell"],"i":2274},{"year":1981,"characters":["Frenchie","Gena Landers","Marlene Alraune","Midnight (Anton Mogart)","Moon Knight","Nedda","Raoul Bushman","Ray Landers","Ricky Landers","Samuels"],"name":"Moon Knight #9-10","link":"moon_knight_9-10","credits":["Doug Moench","Bill Sienkiewicz"],"i":2275},{"year":1981,"characters":["Alexander Van Tilburg","Bethany Cabe","Iron Man","Living Laser","War Machine"],"name":"Iron Man #152-153","link":"iron_man_152-153","credits":["Bob Layton","John Romita Jr.","David Michelinie"],"i":2276},{"year":1981,"characters":["Captain America","Henry Pym","Iron Man","Jarvis","Thor","Tigra","Wasp"],"name":"Avengers #212","link":"avengers_212","credits":["Dan Green","Alan Kupperberg","Jim Shooter"],"i":2277},{"year":1981,"characters":["Balder","Frigga","Grimgerta","Hildegarde","Krista","Lionel Jeffries","Nanna","Odin","Thor","Valtrauta"],"name":"Thor #311","link":"thor_311","credits":["Ralph Macchio","Doug Moench","Gene Day","Bob Budiansky","Mark Gruenwald","Jim Salicrup","Keith Pollard"],"i":2278},{"year":1981,"characters":["Balder","Karnilla","Nanna"],"name":"Thor annual #14 (Balder)","link":"thor_annual_14_balder","credits":["Bo Hampton","Ralph Macchio"],"i":2279},{"year":1981,"characters":["Bernie Rosenthal","Captain America","Constrictor"],"name":"Captain America annual #5","link":"captain_america_annual_5","credits":["David Anthony Kraft","Gene Colan","Dave Simons","David Michelinie"],"i":2280},{"year":1981,"characters":["Mack Killburn","Mentus","Most High One","ROM","Starshine II","Steve Jackson"],"name":"ROM #20","link":"rom_20","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Joe Sinnott"],"i":2281},{"year":1987,"characters":["Beast of the Hand","Chastity McBryde","Elektra","Harold Beaker","John Garrett","Nick Fury"],"name":"Elektra: Assassin #1-8","link":"elektra_assassin_1-8","credits":["Frank Miller","Bill Sienkiewicz"],"i":2282},{"year":1981,"characters":["Beverly Cross","Buck Bukowski","Daniel 'Zapper' Ridge","Doc (She-Hulk villain)","Grappler","Lou Monkton","Morbius","Morris Walters","Ralphie Hutchins","She-Hulk"],"name":"She-Hulk #18","link":"she-hulk_18","credits":["David Anthony Kraft","Al Milgrom","Frank Springer","Mike Vosburg"],"i":2283},{"year":1981,"characters":["Aunt May","Hobgoblin (Roderick Kingsley)","J. Jonah Jameson","Killer Shrike","Marla Madison Jameson","Nate Lubenski","Spider-Man","Will O' The Wisp"],"name":"Peter Parker, the Spectacular Spider-Man #57","link":"peter_parker_the_spectacular_s_11","credits":["Roger Stern","Jim Mooney","Jim Shooter"],"i":2284},{"year":1981,"characters":["Enforcer","Flagg Fargo","Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #58","link":"ghost_rider_58","credits":["David Anthony Kraft","Mike Fleisher","Don Perlin","Mike Esposito"],"i":2285},{"year":1981,"characters":["Ben Urich","Doctor Octopus","Glory Grant","J. Jonah Jameson","Jeff Piper","Joe 'Robbie' Robertson","Punisher","Spider-Man"],"name":"Amazing Spider-Man annual #15","link":"amazing_spider-man_annual_15","credits":["Frank Miller","Denny O'Neil","Klaus Janson"],"i":2286},{"year":1982,"characters":["Becky Blake","Ben Urich","Betsy Beatty Potter","Bullseye","Daredevil","Debbie Harris","Doris Urich","Elektra","Eric Slaughter","Flint","Foggy Nelson","Gladiator","Grotto","Heather Glenn","Injun Joe","Iron Fist","J. Jonah Jameson","Jeryn Hogarth","Joe 'Robbie' Robertson","Josie (Bar owner)","King of the Sewer People","Kingpin","Kirigi","Lt. Nick Manolis","Luke Cage","Maxine Lavender","Punisher","Randolph Winston Cherryh","Stick","Turk","Vanessa Fisk"],"name":"Daredevil #168-182","link":"daredevil_168-182","credits":["Frank Miller","Klaus Janson"],"i":2287},{"year":1981,"characters":["Aunt May","Daredevil","Grey Gargoyle","Jonas Harrow","Spider-Man","Walter 'Lonesome' Pincus"],"name":"Amazing Spider-Man #219","link":"amazing_spider-man_219","credits":["Denny O'Neil","Jim Mooney","Luke McDonnell"],"i":2288},{"year":1981,"characters":["American Eagle","Ka-Zar","Klaw","Thing","Tongah","Wyatt Wingfoot","Zabu"],"name":"Marvel Two-In-One annual #6","link":"marvel_two-in-one_annual_6","credits":["Ron Wilson","Doug Moench","Gene Day"],"i":2289},{"year":1982,"characters":["Amphibius (Savage Land Mutate)","Angel","Annihilus","Barbarus","Brainchild (Savage Land Mutate)","Candy Southern","Daredevil","Debbie Harris","Foggy Nelson","Gaza","Glory Grant","Heather Glenn","Human Torch","Invisible Woman","J. Jonah Jameson","Joe 'Robbie' Robertson","Ka-Zar","Mr. Fantastic","Sauron","Spider-Man","Tanya Anderssen","Thing","Tongah","Vertigo (Savage Land Mutate)","Zabu"],"name":"Marvel Fanfare #1-2","link":"marvel_fanfare_1-2","credits":["Michael Golden","Chris Claremont"],"i":2290},{"year":1997,"characters":["Angel","Black King (Sebastian Shaw)","Black Widow","Daredevil","Elektra","Father Delgado","Hawkeye","Iron Man","Jake Vicuna","Janet Ruiz","Jeff Piper","Mastermind","Phoenix Force","Punisher","Scarlet Witch","Senator Kelly","Silver Surfer","Spider-Man","Storm","Thor","Vengeance","Vision"],"name":"Code of Honor #2","link":"code_of_honor_2","credits":["Terese Nielssen","Chuck Dixon","Jason White","Vince Evans","Kelly Corvese"],"i":2291},{"year":1981,"characters":["Ka-Zar","Leanne","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #1","link":"ka-zar_the_savage_1","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2292},{"year":1981,"characters":["Clea","Devil-Slayer","Dolly Donahue","Dr. Strange","Gargoyle (Defender)","Hellcat","Hellstorm","Hulk","Luann Bloom","Nighthawk","Satan","Silver Surfer","Sub-Mariner","Sunshine (Junkie)","Valkyrie"],"name":"Defenders #101","link":"defenders_101","credits":["Joe Sinnott","Don Perlin","J.M. DeMatteis"],"i":2293},{"year":1981,"characters":["Ka-Zar","Leanne","Sep","Shanna the She-Devil","Typ","Zabu"],"name":"Ka-Zar the Savage #2","link":"ka-zar_the_savage_2","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2294},{"year":1981,"characters":["Buth","Ka-Zar","Leanne","Sep","Shanna the She-Devil","Typ","Zabu"],"name":"Ka-Zar the Savage #3-4","link":"ka-zar_the_savage_3-4","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2295},{"year":1981,"characters":["Clea","Dr. Strange"],"name":"Doctor Strange #46","link":"dr_strange_46","credits":["Al Milgrom","P. Craig Russell","Bill Kunkel (plot)","Kerry Gammill","Roger Stern","Michael Golden","David Michelinie (script)"],"i":2296},{"year":1981,"characters":["Alicia Masters","Diablo","Dr. Strange","Human Torch","Invisible Woman","Mr. Fantastic","Nova (Frankie Raye)","Thing"],"name":"Fantastic Four #232","link":"fantastic_four_232","credits":["John Byrne"],"i":2297},{"year":1981,"characters":["Aunt May","Colleen Wing","Daredevil","Debra Whitman","Glory Grant","Iron Fist","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Lt. Nick Manolis","Luke Cage","Marlene Alraune","Misty Knight","Moon Knight","Purple Man","Spider-Man"],"name":"Marvel Team-Up annual #4","link":"marvel_team-up_annual_4","credits":["Frank Miller","Herb Trimpe","Mike Esposito"],"i":2298},{"year":1981,"characters":["Hammerhead","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four #233","link":"fantastic_four_233","credits":["John Byrne"],"i":2299},{"year":1981,"characters":["Bob Diamond","Chaka","Colleen Wing","Iron Fist","Jennie Royce","Luke Cage","Misty Knight","William Hao"],"name":"Power Man & Iron Fist #72","link":"power_man_iron_fist_72","credits":["Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2300},{"year":1981,"characters":["Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #5","link":"ka-zar_the_savage_5","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2301},{"year":1981,"characters":["Alicia Masters","Blue Diamond","Star-Dancer","Thing"],"name":"Marvel Two-In-One #79","link":"marvel_two-in-one_79","credits":["Tom DeFalco","Ron Wilson","Chic Stone","Jim Salicrup"],"i":2302},{"year":1981,"characters":["Alicia Masters","Franklin Richards","Ghost Rider (Johnny Blaze)","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #80","link":"marvel_two-in-one_80","credits":["Tom DeFalco","Ron Wilson","Chic Stone"],"i":2303},{"year":1981,"characters":["Byron Benjamin","Danny Jones","Eddie Harris","John Clark","Lorry Jones","Maggie Jones","Nell Jones","Pamela Quinn","ROM","Sarah Clark","Silas Lane","Starshine II","Steve Jackson","Tammy Anne Jones","Torpedo"],"name":"ROM #21-22","link":"rom_21-22","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Sal Buscema","Jack Abel"],"i":2304},{"year":1981,"characters":["Ghost Rider (Johnny Blaze)","Moondark","Water Wizard","Zarathos"],"name":"Ghost Rider #59","link":"ghost_rider_59","credits":["David Anthony Kraft","Michael Fleisher","Don Perlin","Jack Sparling"],"i":2305},{"year":1981,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Moon Knight","Samuels"],"name":"Moon Knight #11","link":"moon_knight_11","credits":["Doug Moench","Bill Sienkiewicz"],"i":2306},{"year":1981,"characters":["Dherk","Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #6","link":"ka-zar_the_savage_6","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2307},{"year":1981,"characters":["Bob Diamond","Colleen Wing","D.W. Griffith","Harmony Young","Jennie Royce","Luke Cage","Master Khan","Misty Knight","Rafael Scarfe","ROM"],"name":"Power Man & Iron Fist #73","link":"power_man_iron_fist_73","credits":["Mary Jo Duffy","Greg LaRocque"],"i":2308},{"year":1981,"characters":["Captain America","Danny Jones","Daredevil","Human Torch","Invisible Woman","Iron Fist","Iron Man","J. Jonah Jameson","Jarvis","Lorry Jones","Luke Cage","Moon Knight","Mr. Fantastic","Nell Jones","ROM","Spider-Man","Starshine II","Steve Jackson","Tammy Anne Jones","Thing","Torpedo"],"name":"ROM #23","link":"rom_23","credits":["Bill Mantlo","Sal Buscema","Joe Sinnott"],"i":2309},{"year":1981,"characters":["Colossus","Cyclops","Garokk","Lee Forrester","Magneto","Nanny","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #149","link":"uncanny_x-men_149","credits":["Dave Cockrum","Josef Rubinstein","Chris Claremont"],"i":2310},{"year":1981,"characters":["Ego the Living Planet","Human Torch","Invisible Woman","Mr. Fantastic","Nova (Frankie Raye)","Thing"],"name":"Fantastic Four #234-235","link":"fantastic_four_234-235","credits":["John Byrne"],"i":2311},{"year":1981,"characters":["Beetle","Debra Whitman","Foolkiller (Greg Salinger)","Marcy Kane","Morris Sloan","Phillip Chang","Ringer","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #58","link":"peter_parker_the_spectacular_s_12","credits":["John Byrne","Roger Stern","Vincent Colletta"],"i":2312},{"year":1981,"characters":["Balder","Drax the Destroyer","Enchantress","Fandral","Grimgerta","Harokin","Heimdall","Hela","Hildegarde","Hogun","Iron Man","Jarvis","Krista","Lionel Jeffries","Loki","Moondragon","Odin","Shawna Lynde","Sif","Sigyn","Thor","Tyr","Valtrauta","Vizier","Volstagg"],"name":"Thor #312-314","link":"thor_312-314","credits":["Ralph Macchio","Doug Moench","Pablo Marcos","Gene Day","Bob Budiansky","Mark Gruenwald","Jim Salicrup","Keith Pollard","Dan Green"],"i":2313},{"year":1981,"characters":["J. Jonah Jameson","Kristine Saunders","Lance Bannon","Lizard","Man-Wolf (John Jameson)","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man annual #3","link":"peter_parker_the_spectacular_s_94","credits":["Jim Sherman","Steven Mitchell","Tom DeFalco","Alan Weiss","David Anthony Kraft"],"i":2314},{"year":1981,"characters":["Aunt May","Aunt Watson","Frenchie","J. Jonah Jameson","Marlene Alraune","Moon Knight","Spider-Man"],"name":"Amazing Spider-Man #220","link":"amazing_spider-man_220","credits":["Michael Fleisher","Bob McLeod","Winslow Mortimer","Denny O'Neil","Mike Barr"],"i":2315},{"year":1981,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #60","link":"ghost_rider_60","credits":["Herb Trimpe","Michael Fleisher","Don Perlin","David Anthony Kraft"],"i":2316},{"year":1981,"characters":["Dazzler","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Paladin","Phillip Chang","Spider-Man","Steve Hopkins","Thermo"],"name":"Marvel Team-Up #108-109","link":"marvel_team-up_108-109","credits":["Herb Trimpe","Tom DeFalco","David Michelinie","David Anthony Kraft","Mike Esposito"],"i":2317},{"year":1981,"characters":["Abe Brown","August Personage In Jade","Bob Diamond","Colleen Wing","Iron Fist","Lei Kung the Thunderer","Lin Sun","Lotus Shinchuko","Luke Cage","Master Khan","Misty Knight","Ninja"],"name":"Power Man & Iron Fist #74-75","link":"power_man_iron_fist_74-75","credits":["Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2318},{"year":1981,"characters":["Black Jack Tarr","Carlton Velcro","Cat (Shen Kuei)","Clive Reston","Fah Lo Suee","Juliette (British Spy)","Leiko Wu","Pavane","Razorfist II","Razorfist III","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #105-106","link":"master_of_kung_fu_105-106","credits":["Doug Moench","Gene Day"],"i":2319},{"year":1981,"characters":["Lt. Flint","Marlene Alraune","Moon Knight","Morpheus"],"name":"Moon Knight #12","link":"moon_knight_12","credits":["Doug Moench","Bill Sienkiewicz"],"i":2320},{"year":1981,"characters":["Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #7","link":"ka-zar_the_savage_7","credits":["Carlos Garzon","Jerry Bingham","Brent Anderson","Bruce Jones"],"i":2321},{"year":1981,"characters":["Biff Rifkin","Debra Whitman","Ramrod (Daredevil villain)","Spider-Man","Walter 'Lonesome' Pincus"],"name":"Amazing Spider-Man #221","link":"amazing_spider-man_221","credits":["Denny O'Neil","Tom DeFalco","Jim Mooney","Alan Kupperberg"],"i":2322},{"year":1981,"characters":["Carol Danvers","Colossus","Cyclops","Lee Forrester","Magneto","Moira MacTaggert","Nightcrawler","Peter Corbeau","Professor X","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #150","link":"uncanny_x-men_150","credits":["Dave Cockrum","Bob Wiacek","Josef Rubinstein","Chris Claremont"],"i":2323},{"year":1981,"characters":["Iron Man","J. Jonah Jameson","Joe 'Robbie' Robertson","Magma (Jonathan Darque)","Spider-Man"],"name":"Marvel Team-Up #110","link":"marvel_team-up_110","credits":["Herb Trimpe","Tom DeFalco","David Michelinie","Mike Esposito"],"i":2324},{"year":1982,"characters":["Angel","Ant-Man (Scott Lang)","Bartak","Beast","Black Bolt","Black Panther","Black Widow","Captain America","Captain Mar-vell","Clea","Colossus","Cyclops","Daredevil","Death","Devil-Slayer","Dr. Strange","Drax the Destroyer","Elysius","Franklin Richards","Gargoyle (Defender)","General Zedrao","Ghost Rider (Johnny Blaze)","Gorgon","Hellcat","Henry Pym","Hercules","Hulk","Human Torch","Invisible Woman","Iron Fist","Iron Man","Karnak","Luke Cage","Medusa","Mentor","Moondragon","Mr. Fantastic","Nightcrawler","Nighthawk","Professor X","Quicksilver","Rick Jones","Scarlet Witch","Shadowcat (Kitty Pryde)","Spider-Man","Spider-Woman (Jessica Drew)","Starfox","Storm","Sub-Mariner","Supreme Intelligence","Surfer-Skrull","Thanos","Thing","Thor","Tigra","Triton","Uatu the Watcher","Valkyrie","Vision","Wasp","Wolverine","Wonder Man"],"name":"Death of Captain Marvel (Marvel Graphic Novel #1)","link":"death_of_captain_marvel","credits":["Jim Starlin"],"i":2325},{"year":1981,"characters":["Arkon","Brother Royal","Colossus","Cyclops","Franklin Richards","Grand Vizier (Polemachus)","Human Torch","Invisible Woman","Moira MacTaggert","Mr. Fantastic","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Thing","Wolverine"],"name":"Uncanny X-Men annual #5","link":"uncanny_x-men_annual_5","credits":["Bob McLeod","Brent Anderson","Chris Claremont"],"i":2326},{"year":1981,"characters":["Sara Grey"],"name":"Bizarre Adventures #27 (Jean Grey)","link":"bizarre_adventures_27_jean_gre","credits":["Ralph Macchio","John Buscema","Chris Claremont","Klaus Janson- Inker","Denny O'Neil"],"i":2327},{"year":1981,"characters":["Iceman","James D'Angelo"],"name":"Bizarre Adventures #27 (Iceman)","link":"bizarre_adventures_27","credits":["Mary Jo Duffy","George Perez","Alfredo P. Alcala"],"i":2328},{"year":1981,"characters":["Beetle","Biff Rifkin","Debra Whitman","Foolkiller (Greg Salinger)","Gibbon","Phillip Chang","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #59-60","link":"peter_parker_the_spectacular_s_13","credits":["Greg LaRocque","Ed Hannigan","Jim Mooney","Roger Stern","Jim Shooter","Bob Wiacek"],"i":2329},{"year":1982,"characters":["Alicia Masters","Atom-Smasher II","Aurora","Bill Foster","Captain America","Celia Jackson","Dale West","Guardian (James Mac Hudson)","Herbert Bell","Human Torch","Invisible Woman","MODOK","Mr. Fantastic","Northstar","Quasar","Sasquatch","Shaman","Spider-Woman (Jessica Drew)","Sub-Mariner","Talia Kruma","Thing"],"name":"Marvel Two-In-One #81-85","link":"marvel_two-in-one_81-82","credits":["Tom DeFalco","Ron Wilson","Chic Stone"],"i":2330},{"year":1981,"characters":["Arabian Knight","Flagg Fargo","Ghost Rider (Johnny Blaze)","Water Wizard","Zarathos"],"name":"Ghost Rider #61-62","link":"ghost_rider_61-62","credits":["Michael Fleisher","Alan Kupperberg","Jack Sparling","Sal Trapini","David Anthony Kraft","Mike Esposito"],"i":2331},{"year":1981,"characters":["Triton"],"name":"Bizarre Adventures #28 (Triton)","link":"bizarre_adventures_28_triton","credits":["Denny O'Neil","Mary Jo Duffy","Wendy Pini","Ralph Macchio"],"i":2332},{"year":1981,"characters":["Betrand Crawley","Daredevil","Frenchie","Gena Landers","Jester (Jonathan Powers)","Lt. Nick Manolis","Marlene Alraune","Moon Knight","Nedda"],"name":"Moon Knight #13","link":"moon_knight_13","credits":["Doug Moench","Bill Sienkiewicz"],"i":2333},{"year":1981,"characters":["Dherk","Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #8","link":"ka-zar_the_savage_8","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2334},{"year":1981,"characters":["Adora","Comet","Danny Jones","Diamondhead","John Clark","Lorry Jones","Nell Jones","Nova (Rich Rider)","Nova-Prime","Powerhouse","Protector","ROM","Sarah Clark","Starshine II","Tammy Anne Jones","Torpedo"],"name":"ROM #24","link":"rom_24","credits":["Bill Mantlo","Mark Gruenwald","Sal Buscema","Joe Sinnott"],"i":2335},{"year":1982,"characters":["Franklin Richards","Hydroman","Impossible Man","Impossible Woman","Invisible Woman","Mr. Fantastic","Sandman","Thing"],"name":"Marvel Two-In-One #86","link":"marvel_two-in-one_86","credits":["Tom DeFalco","Ron Wilson","Chic Stone"],"i":2336},{"year":1982,"characters":["Belasco","Buth","Dherk","Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #9-12","link":"ka-zar_the_savage_9-12","credits":["Carlos Garzon","Brent Anderson","Bruce Jones"],"i":2337},{"year":1981,"characters":["Dragon Man","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four annual #16","link":"fantastic_four_annual_16","credits":["Steve Ditko","Ed Hannigan","David Anthony Kraft"],"i":2338},{"year":1981,"characters":["Alicia Masters","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Puppet Master","Thing"],"name":"Fantastic Four #236","link":"fantastic_four_236","credits":["John Byrne","John Byrne- Writer"],"i":2339},{"year":1982,"characters":["Ka-Zar","Leila","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #13-15","link":"ka-zar_the_savage_13-15","credits":["Armando Gil","Brent Anderson","Bruce Jones"],"i":2340},{"year":1981,"characters":["Amanda Sefton","Angelo Macon","Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Colossus","Cyclops","Murray Reese","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Tessa","Wade Cole","White Queen (Emma Frost)","Wolverine"],"name":"Uncanny X-Men #151-152","link":"uncanny_x-men_151-152","credits":["Bob McLeod","Josef Rubinstein","Chris Claremont","Jim Sherman"],"i":2341},{"year":1982,"characters":["Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #16","link":"ka-zar_the_savage_16","credits":["Armando Gil","Ron Frenz","Bruce Jones"],"i":2342},{"year":1982,"characters":["Beefer","Carter Blair","Cassandra Ferlenghetti","Dazzler","Fancy Dan","Galactus","Harry Osgood","Human Torch","Hunch","Klaw","Lance Steele","Marx","Montana","Nuklo","Ox III","Paul Janson","Quasar","Solarr","Techmaster","Terrax"],"name":"Dazzler #8-11","link":"dazzler_8-11","credits":["Tom DeFalco","Frank Springer","Vincent Colletta","Danny Fingeroth"],"i":2343},{"year":1982,"characters":["Ambrose Connors","Amphibius (Savage Land Mutate)","Angel","Barbarus","Brainchild (Savage Land Mutate)","Colossus","Cyclops","Deathlok (alt. Luther Manning)","El Aguila","Gaza","Hawkeye","Ka-Zar","Lorelei (Savage Land Mutate)","Lupo","Nightcrawler","Professor X","Sauron","Shadowcat (Kitty Pryde)","Storm","Tanya Anderssen","Vertigo (Savage Land Mutate)","Wolverine","Zabu","Zaladane"],"name":"Marvel Fanfare #3-4","link":"marvel_fanfare_3-4","credits":["Dave Cockrum","Bob McLeod","Terry Austin","Chris Claremont","Paul Smith"],"i":2344},{"year":1981,"characters":["J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Speed Demon","Spider-Man"],"name":"Amazing Spider-Man #222","link":"amazing_spider-man_222","credits":["Bill Mantlo","Bob Hall","Jim Mooney","Tom DeFalco","Mark Gruenwald"],"i":2345},{"year":1981,"characters":["Captain America","Henry Pym","Iron Man","Jarvis","Thor","Tigra","Wasp"],"name":"Avengers #213","link":"avengers_213","credits":["Bob Hall","Dan Green","Jim Shooter"],"i":2346},{"year":1981,"characters":["Clea","Devil-Slayer","Dr. Strange","Gargoyle (Defender)","Hulk","Spider-Man","Sub-Mariner","Valkyrie","Wong"],"name":"Marvel Team-Up #111-112","link":"marvel_team-up_111-112","credits":["Herb Trimpe","Tom DeFalco","J.M. DeMatteis","Mark Gruenwald","Mike Esposito"],"i":2347},{"year":1981,"characters":["Colleen Wing","D.W. Griffith","Iron Fist","Jeryn Hogarth","Luke Cage","Misty Knight","Rafael Scarfe","Warhawk"],"name":"Power Man & Iron Fist #76","link":"power_man_iron_fist_76","credits":["Mary Jo Duffy","M.D. Bright","Rudy D. Nebres","Chris Claremont","Ricardo Villamonte","Frank Miller","Mike Barr"],"i":2348},{"year":1981,"characters":["August Masters","Clea","Gargoyle (Defender)","Luann Bloom","Mindy Williams","Nighthawk","Wong"],"name":"Defenders #102","link":"defenders_102","credits":["Don Perlin","Joe Sinnott","Sal Trapani","Jack Abel","J.M. DeMatteis"],"i":2349},{"year":1981,"characters":["Acroyear","Ampzilla","Aquon (Micronaut)","Baron Karza","Battleaxe (Micronaut)","Bug","Captain Universe (Uni-Power)","Centauria (Micronaut)","Commander Arcturus Rann","Coral (Micronaut)","Devil (Micronaut)","Dr. Strange","Fireflyte","Force Commander","Lobros","Margrace","Marionette","Microtron","Nanotron","Oberon","Prince Pharoid","Slug (Micronaut)"],"name":"Micronauts #30-35","link":"micronauts_30-35","credits":["Bill Mantlo","Louise Simonson","Pat Broderick","Danny Fingeroth","Tom DeFalco","Dan Bulanadi","Mark Gruenwald","Val Mayerik"],"i":2350},{"year":1981,"characters":["David Ishima","Lindsay McCabe","Morgan Le Fey","Sabrina Morrel","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #41","link":"spider-woman_41","credits":["Stephen Leialoha","Bob Wiacek","Chris Claremont"],"i":2351},{"year":1982,"characters":["Captain America","J. Jonah Jameson","Nick Fury","Spider-Man"],"name":"Captain America #265-266","link":"captain_america_265-266","credits":["Bob Budiansky","Mike Zeck","Jim Salicrup","Lance Tooks","David Anthony Kraft","John Beatty"],"i":2352},{"year":1984,"characters":["Hulk"],"name":"Marvel Fanfare #17 (Hulk)","link":"marvel_fanfare_17_hulk","credits":["David Anthony Kraft","Al Milgrom","Tony Salmons","Jim Massara"],"i":2353},{"year":1981,"characters":["Acroyear","Ampzilla","Battleaxe (Micronaut)","Bug","Centauria (Micronaut)","Commander Arcturus Rann","Devil (Micronaut)","Lobros","Marionette","Microtron","Nanotron"],"name":"Micronauts #36","link":"micronauts_36","credits":["Keith Giffen","Bill Mantlo","Dan Bulanadi","Tom DeFalco"],"i":2354},{"year":1981,"characters":["Igor (Super Ape)","J. Jonah Jameson","Joe 'Robbie' Robertson","Mia Carrera","Mikhlo (Super Ape)","Peator (Super Ape)","Red Ghost","Roger Hochberg","Spider-Man"],"name":"Amazing Spider-Man #223","link":"amazing_spider-man_223","credits":["Al Milgrom","John Romita Jr.","Tom DeFalco","J.M. DeMatteis","Mark Gruenwald","Denny O'Neil"],"i":2355},{"year":1982,"characters":["Acroyear","Baron Karza","Bug","Colossus","Commander Arcturus Rann","Devil (Micronaut)","Force Commander","Huntarr","Marionette","Nanotron","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Micronauts #37","link":"micronauts_37","credits":["Bill Mantlo","Greg LaRoque","Tom DeFalco","Dan Bulanadi","Keith Giffen","Mark Gruenwald"],"i":2356},{"year":1982,"characters":["Bernie Rosenthal","Captain America","Every-Man","Iron Man","Jarvis","Tigra"],"name":"Captain America #267","link":"captain_america_267","credits":["Jim Salicrup","Mike Zeck","Lance Tooks","J.M. DeMatteis","John Beatty"],"i":2357},{"year":1982,"characters":["Carol Danvers","Colossus","Cyclops","Magik","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #153","link":"uncanny_x-men_153","credits":["Dave Cockrum","Chris Claremont","Josef Rubenstein"],"i":2358},{"year":1981,"characters":["Angel","Candy Southern","Captain America","Ghost Rider (Johnny Blaze)","Henry Pym","Iron Man","Jarvis","Thor","Tigra","Wasp"],"name":"Avengers #214","link":"avengers_214","credits":["Bob Hall","Dan Green","Don Perlin","Jim Shooter"],"i":2359},{"year":1982,"characters":["Araki","Blackthorn","Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Deathbird","Fang","Gladiator (Shiar)","Hepzibah","Hussar","Jarvis","K'rk","Kam'n'ehar","Lilandra","Magik","N'rill'iree","Neutron","Nightcrawler","Oracle","Peter Corbeau","Professor X","Raza Longknife","Shadowcat (Kitty Pryde)","Sikorsky","Skur'kll","Starbolt","Storm","Tigra","Waldo","Warstar","Webwing","Wolverine"],"name":"Uncanny X-Men #154-157","link":"uncanny_x-men_154-156","credits":["Dave Cockrum","Josef Rubinstein","Chris Claremont","Bob Wiacek- Inker","Bob Wiacek"],"i":2360},{"year":1981,"characters":["Captain Universe (Uni-Power)","Hulk"],"name":"Hulk annual #10","link":"hulk_annual_10","credits":["Bill Mantlo","Al Milgrom","Frank Giacoia","Rick Leonardi","Chic Stone","Bob Wiacek","Dan Green"],"i":2361},{"year":1982,"characters":["Captain America","Human Torch","Invisible Woman","Iron Man","Jarvis","Molecule Man","Mr. Fantastic","Silver Surfer","Thing","Thor","Tigra"],"name":"Avengers #215-216","link":"avengers_215-216","credits":["Alan Weiss","Dan Green","Jim Shooter"],"i":2362},{"year":1981,"characters":["Clea","Dr. Strange","Ikonn","Sara Wolfe","Wong"],"name":"Doctor Strange #47","link":"dr_strange_47","credits":["Dan Green","Roger Stern","Gene Colan"],"i":2363},{"year":1982,"characters":["Alicia Masters","Aunt Petunia","Dr. Doom","Franklin Richards","HUBERT","Human Torch","Invisible Woman","Julie Angel","Mr. Fantastic","Nova (Frankie Raye)","Thing"],"name":"Fantastic Four #237-238","link":"fantastic_four_237","credits":["John Byrne","Terry Austin"],"i":2364},{"year":1981,"characters":["Biff Rifkin","Debra Whitman","Lizard","Marcy Kane","Moonstone (Karla Sofen)","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #61","link":"peter_parker_the_spectacular_s_14","credits":["Bill Mantlo","Roger Stern","Ed Hannigan","Jim Mooney"],"i":2365},{"year":1981,"characters":["Betty Ross","High Evolutionary","Hulk","Rick Jones"],"name":"Hulk #266","link":"hulk_266","credits":["Bill Mantlo","Sal Buscema"],"i":2366},{"year":1981,"characters":["Bambu","Brother Voodoo","Clea","Damballah","Dr. Strange","Morgana Blessing","Sara Wolfe","Wong"],"name":"Doctor Strange #48","link":"dr_strange_48","credits":["Terry Austin","Marshall Rogers","Roger Stern"],"i":2367},{"year":1981,"characters":["Danny Jones","Hammerhand","Javelin","Lorry Jones","Mentus","Nell Jones","Rainbow (Spaceknight)","ROM","Starshine","Starshine II","Steve Jackson","Tammy Anne Jones","Terminator","Torpedo"],"name":"ROM #25","link":"rom_25","credits":["Bill Mantlo","Greg LaRocque","Steven Mitchell","Al Milgrom","Joe Sinnott","Sal Buscema","Steven Grant"],"i":2368},{"year":1981,"characters":["Corky the Clown","Cynthia Randolph","Ghost Rider (Johnny Blaze)","Madame Menace (Sunset Bain)","Orb","Ralph Quentin","Red Fowler","Zarathos"],"name":"Ghost Rider #63","link":"ghost_rider_63","credits":["Tom DeFalco","Michael Fleisher","Sal Trapani","Luke McDonnell"],"i":2369},{"year":1982,"characters":["Debra Whitman","Goldbug","Marcy Kane","Morris Sloan","Phillip Chang","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #62","link":"peter_parker_the_spectacular_s_61","credits":["Bill Mantlo","Ed Hannigan","Jim Mooney","Tom DeFalco","Mark Gruenwald"],"i":2370},{"year":1982,"characters":["Cassandra Ferlenghetti","Dazzler","Harry Osgood","Lance Steele","Paul Janson","Sid Sterling","Techmaster"],"name":"Dazzler #12","link":"dazzler_12","credits":["Vincent Colletta","Frank Springer","Jim Shooter","Danny Fingeroth"],"i":2371},{"year":1982,"characters":["August Masters","Beast","Clea","Daredevil","Devil-Slayer","Gargoyle (Defender)","Hellcat","Luann Bloom","Nighthawk","Null the Living Darkness","Valkyrie","Wong"],"name":"Defenders #103","link":"defenders_103","credits":["Joe Sinnott","Al Milgrom","Don Perlin","J.M. DeMatteis"],"i":2372},{"year":1982,"characters":["Aunt May","J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Nate Lubenski","Spider-Man","Vulture"],"name":"Amazing Spider-Man #224","link":"amazing_spider-man_224","credits":["Tom DeFalco","John Romita Jr.","Roger Stern","Pablo Marcos"],"i":2373},{"year":1982,"characters":["Carter Blair","Cassandra Ferlenghetti","Dazzler","Harry Osgood","Kenneth Barnett","Lance Steele","Letha","Paul Janson","Poundcakes","Quasar","Sid Sterling","Songbird (Screaming Mimi)","Titania (Grappler)"],"name":"Dazzler #13","link":"dazzler_13","credits":["Vincent Colletta","Frank Springer","Jim Shooter","Danny Fingeroth"],"i":2374},{"year":1982,"characters":["Danny Jones","Galactus","Hammerhand","Javelin","John Clark","Lorry Jones","Rainbow (Spaceknight)","ROM","Sarah Clark","Starshine","Starshine II","Steve Jackson","Tammy Anne Jones","Terminator","Terrax","Torpedo"],"name":"ROM #26-27","link":"rom_26-27","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Joe Sinnott"],"i":2375},{"year":1982,"characters":["Lightmaster","Nitro","Quasar","Spider-Man"],"name":"Marvel Team-Up #113","link":"marvel_team-up_113","credits":["Herb Trimpe","Mark Gruenwald","Tom Defalco","Mike Esposito"],"i":2376},{"year":1982,"characters":["Apollo","Balder","Demogorge","Ereshkigal","Fandral","Frigga","Heimdall","Hela","Hogun","Horus","Huginn","Indra","Loki","Mephisto","Muninn","Nanna","Odin","Osiris","Pluto","Seth","Sif","Volstagg","Zeus"],"name":"Thor annual #10","link":"thor_annual_10","credits":["Bob Hall","Andy Mushynsky","Alan Zelenetz","Kevin Dzuban","Mark Gruenwald","Rick Bryant","Alan Gordon","Joe Rubenstein"],"i":2377},{"year":1982,"characters":["Debra Whitman","Foolkiller (Greg Salinger)","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man #225","link":"amazing_spider-man_225","credits":["Bob Wiacek","John Romita Jr.","Roger Stern","Tom DeFalco"],"i":2378},{"year":1982,"characters":["Iron Man","Mrs. Arbogast","Unicorn","Vic Martinelli"],"name":"Iron Man #154","link":"iron_man_154","credits":["John Romita Jr.","Bob Layton","David Michelinie","Chic Stone","Dan Green"],"i":2379},{"year":1982,"characters":["Captain America","Egghead","Fabian Stankowicz","Henry Pym","Iron Man","Jarvis","Mrs. Arbogast","Thor","Trish Starr","Wasp"],"name":"Avengers #217","link":"avengers_217","credits":["Bob Hall","Dan Green","Jim Salicrup","Jim Shooter"],"i":2380},{"year":1982,"characters":["Boulder (Outcasts)","Digger (Outcasts)","Hammerhand","Javelin","John Clark","Kala","Landslide","Mole Man","ROM","Sarah Clark","Starshine","Starshine II","Steve Jackson","Torpedo","Water Witch (Outcasts)"],"name":"ROM #28","link":"rom_28","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2381},{"year":1982,"characters":["Chris Keating","Flash Thompson","Harry Osborn","Liz Allan","Molten Man","Sha Shan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #63","link":"peter_parker_the_spectacular_s_62","credits":["Bill Mantlo","Greg LaRocque","Jim Mooney","Tom DeFalco","Mark Gruenwald"],"i":2382},{"year":1982,"characters":["Boris (Spy)","Daredevil","Foggy Nelson","Heather Glenn","Iron Fist","Jennie Royce","Luke Cage","Ninotchka","Sheldon Shipman"],"name":"Power Man & Iron Fist #77","link":"power_man_iron_fist_77","credits":["Denny O'Neil","Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2383},{"year":1982,"characters":["Aunt May","Falcon","J. Jonah Jameson","Jim Wilson","Nate Lubenski","Redwing","Spider-Man","Stone-Face"],"name":"Marvel Team-Up #114","link":"marvel_team-up_114","credits":["Herb Trimpe","Tom DeFalco","J.M. DeMatteis","Mark Gruenwald","Mike Esposito"],"i":2384},{"year":1982,"characters":["Clay Brickford","Danny Jones","Digger (Outcasts)","John Clark","Lorry Jones","Missing Link","Mole Man","Nell Jones","ROM","Sarah Clark","Silas Lane","Starshine II","Steve Jackson","Tammy Anne Jones","Torpedo"],"name":"ROM #29","link":"rom_29","credits":["Bill Mantlo","Al Milgrom","Rick Magyar","Frank Giacoia","Ann Nocenti","Sal Buscema","Chic Stone","Mike Esposito"],"i":2385},{"year":1982,"characters":["Cloak","Dagger","Simon Marshall","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #64","link":"peter_parker_the_spectacular_s_5","credits":["Bill Mantlo","Al Milgrom","Ed Hannigan","Tom DeFalco","Mark Gruenwald"],"i":2386},{"year":1982,"characters":["Betty Ross","Glorian","Hulk","Rick Jones","Shaper of Worlds"],"name":"Hulk #267","link":"hulk_267","credits":["Bill Mantlo","Al Milgrom","Sal Buscema"],"i":2387},{"year":1982,"characters":["Honcho","Marauder","R.U. Reddy","Wolf"],"name":"Team America #1","link":"team_america_1","credits":["Vincent Colletta","Mike Vosburg","Jim Shooter"],"i":2388},{"year":1982,"characters":["Cowboy","Georgiana Hebb","Honcho","Marauder","R.U. Reddy","Wolf","Wrench"],"name":"Team America #2","link":"team_america_2","credits":["Bill Mantlo","Vincent Colletta","Mike Vosburg","Jim Shooter","Denny O'Neil"],"i":2389},{"year":1982,"characters":["Azmodeus","Corky the Clown","Cynthia Randolph","Ghost Rider (Johnny Blaze)","Ralph Quentin","Red Fowler","Zarathos"],"name":"Ghost Rider #64","link":"ghost_rider_64","credits":["Michael Fleisher","Tom Sutton","Jack Sparling","Tom DeFalco","Mark Gruenwald"],"i":2390},{"year":1982,"characters":["Black Cat","Debra Whitman","Foolkiller (Greg Salinger)","Jean DeWolff","Marcy Kane","Morris Sloan","Phillip Chang","Spider-Man"],"name":"Amazing Spider-Man #226-227","link":"amazing_spider-man_226-227","credits":["Tom DeFalco","John Romita Jr.","Roger Stern","Jim Mooney"],"i":2391},{"year":1982,"characters":["J. Jonah Jameson","Joe 'Robbie' Robertson","Meru the Mindbender","Spider-Man","Thor","Valkyrie","Wong"],"name":"Marvel Team-Up #115-116","link":"marvel_team-up_115-116","credits":["Herb Trimpe","Tom DeFalco","J.M. DeMatteis","Mark Gruenwald","Mike Esposito"],"i":2392},{"year":1982,"characters":["Beast","Daredevil","Devil-Slayer","Dr. Strange","Gargoyle (Defender)","Hellcat","Hellstorm","Ian Fate","Luann Bloom","Nighthawk","Satan","Sunshine (Junkie)","Valkyrie","Wonder Man","Wong"],"name":"Defenders #104","link":"defenders_104","credits":["Joe Sinnott","Al Milgrom","Don Perlin","J.M. DeMatteis"],"i":2393},{"year":1982,"characters":["Beast","Dr. Strange","Hellstorm","Mr. Fantastic","Satan","Vera Cantor"],"name":"Defenders #105","link":"defenders_105","credits":["Joe Sinnott","Al Milgrom","Don Perlin","J.M. DeMatteis"],"i":2394},{"year":1982,"characters":["Corky the Clown","Cynthia Randolph","Ghost Rider (Johnny Blaze)","Red Fowler","Zarathos"],"name":"Ghost Rider #65","link":"ghost_rider_65","credits":["Michael Fleisher","Tom Sutton","Jack Sparling","Tom DeFalco","Mark Gruenwald"],"i":2395},{"year":1982,"characters":["Alicia Masters","Aunt Petunia","Crystal","Human Torch","Invisible Woman","Jake Grimm","Lockjaw","Mr. Fantastic","Nova (Frankie Raye)","Quicksilver","Roberta","Sergius O'Hoolihan","Thing"],"name":"Fantastic Four #239","link":"fantastic_four_239","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2396},{"year":1982,"characters":["Bi-Beast II","Iron Man","Man-Beast","Man-Thing","Thor"],"name":"Thor #315-317","link":"thor_317","credits":["Dave Simons","Doug Moench","Pablo Marcos","Gene Day","Jim Salicrup","Josef Rubinstein","Brett Breeding","Lance Tooks","Keith Pollard","Chic Stone"],"i":2397},{"year":1982,"characters":["Beverly Cross","Buck Bukowski","Daniel 'Zapper' Ridge","Doc (She-Hulk villain)","Lou Monkton","Morris Walters","Ralphie Hutchins","Richard Rory","She-Hulk"],"name":"She-Hulk #19-25","link":"she-hulk_25","credits":["Al Milgrom","Dave Simons","Armando Gil","Steven Mitchell","Rick Magyar","Frank Springer","Sal Trapani","Josef Rubinstein","Jack Abel","Michael Gustovich","Mike Vosburg","David Anthony Kraft","Bob Wiacek"],"i":2398},{"year":1982,"characters":["Calypso","Debra Whitman","Kraven the Hunter","Marcy Kane","Morris Sloan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #65","link":"peter_parker_the_spectacular_s_63","credits":["Bill Mantlo","Bob Hall","Jim Mooney","Tom DeFalco","Mark Gruenwald"],"i":2399},{"year":1982,"characters":["Corky the Clown","Cynthia Randolph","Ghost Rider (Johnny Blaze)","Madame Olga","Red Fowler","Zarathos"],"name":"Ghost Rider #66","link":"ghost_rider_66","credits":["Tom Sutton","Michael Fleisher","Tom DeFalco","Mark Gruenwald"],"i":2400},{"year":1982,"characters":["Captain America","Iron Man","Jarvis","Morgan Hardy","Morgan MacNeil Hardy","Thor","Wasp"],"name":"Avengers #218","link":"avengers_218","credits":["Al Milgrom","Don Perlin","Jim Shooter","Jim Salicrup","Frank Giacoia","Josef Rubinstein","Jack Abel","Brett Breeding","Lance Tooks","J.M. DeMatteis","Chic Stone","Marie Severin"],"i":2401},{"year":1982,"characters":["Black Bolt","Crystal","Dum Dum Dugan LMD","Gorgon","HUBERT","Human Torch","Invisible Woman","Karnak","Lockjaw","Luna","Medusa","Mr. Fantastic","Nick Fury","Nova (Frankie Raye)","Quicksilver","Thing","Triton","Uatu the Watcher"],"name":"Fantastic Four #240","link":"fantastic_four_240","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2402},{"year":1982,"characters":["Ghost Rider (Johnny Blaze)","Zarathos"],"name":"Ghost Rider #67","link":"ghost_rider_67","credits":["Tom Sutton","Dave Simons","Don Perlin","Tom DeFalco","J.M. DeMatteis","Mark Gruenwald"],"i":2403},{"year":1982,"characters":["Beefer","Blue Shield","Dazzler","Harry Osgood","Hunch","Lance Steele","Marx","She-Hulk"],"name":"Dazzler #14","link":"dazzler_14","credits":["Vincent Colletta","Frank Springer","Jim Shooter","Danny Fingeroth"],"i":2404},{"year":1981,"characters":["Baron Mordo","Clea","Dr. Strange","Morgana Blessing","Sara Wolfe","Wong"],"name":"Doctor Strange #49","link":"dr_strange_49","credits":["Terry Austin","Marshall Rogers","Roger Stern","Al Milgrom"],"i":2405},{"year":1982,"characters":["Artemus Pithins","Iron Man","Mrs. Arbogast","Stature"],"name":"Iron Man #155","link":"iron_man_155","credits":["Dan Green","Jim Salicrup","John Romita Jr.","David Michelinie"],"i":2406},{"year":1982,"characters":["Beefer","Dazzler","Hunch","Kenneth Barnett","Lance Steele","Marx","Spider-Woman (Jessica Drew)"],"name":"Dazzler #15","link":"dazzler_15","credits":["Vincent Colletta","Frank Springer","Jim Shooter","Danny Fingeroth"],"i":2407},{"year":1982,"characters":["Fafnir","Karnilla","Loki","Odin","Thor"],"name":"Thor #318","link":"thor_318","credits":["Gil Kane","Doug Moench","Jim Salicrup"],"i":2408},{"year":1982,"characters":["Avalanche","Blob","Danny Jones","Destiny","Hybrid (Dire Wraith)","John Clark","Lorry Jones","Mack Killburn","Metal Master","Mystique","Nell Jones","Pyro","Rogue","ROM","Sarah Clark","Starshine II","Steve Jackson","Tammy Anne Jones","Torpedo"],"name":"ROM #30-32","link":"rom_31-32","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2409},{"year":1982,"characters":["Baron Mordo","Clea","Dormammu","Dr. Strange","Dreamstalker","Morgana Blessing","Nightmare","Sara Wolfe","Wong"],"name":"Doctor Strange #50-53","link":"dr_strange_50-51","credits":["Terry Austin","Marshall Rogers","Roger Stern","Al Milgrom"],"i":2410},{"year":1982,"characters":["Beefer","Dazzler","Enchantress","Fandral","Heimdall","Hogun","Hunch","Kenneth Barnett","Lance Steele","Marx","Odin","Vizier","Volstagg"],"name":"Dazzler #16","link":"dazzler_16","credits":["Vincent Colletta","Frank Springer","Jim Shooter","Danny Fingeroth"],"i":2411},{"year":1982,"characters":["Aunt May","Biff Rifkin","Debra Whitman","Electro","J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Marcy Kane","Marla Madison Jameson","Nate Lubenski","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #66","link":"peter_parker_the_spectacular_s_64","credits":["Bill Mantlo","Ed Hannigan","Jim Mooney","Tom DeFalco","Mark Gruenwald"],"i":2412},{"year":1982,"characters":["Aunt May","Boomerang","Debra Whitman","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Lance Bannon","Marcy Kane","Morris Sloan","Nate Lubenski","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #67","link":"peter_parker_the_spectacular_s_65","credits":["Bill Mantlo","Ed Hannigan","Al Milgrom","Tom DeFalco"],"i":2413},{"year":1982,"characters":["Dr. Strange"],"name":"Doctor Strange #54","link":"doctor_strange_54","credits":["Al Milgrom","Brent Anderson","Josef Rubinstein","Terry Austin","Paul Smith","Roger Stern","J.M. DeMatteis"],"i":2414},{"year":1982,"characters":["Betty Ross","Hulk","Pariah","Rick Jones"],"name":"Hulk #268","link":"hulk_268","credits":["Bill Mantlo","Al Milgrom","Sal Buscema","Jack Abel"],"i":2415},{"year":1982,"characters":["Corky the Clown","Cynthia Randolph","Ghost Rider (Johnny Blaze)","Ralph Quentin","Red Fowler","Zarathos"],"name":"Ghost Rider #68-69","link":"ghost_rider_68-69","credits":["Bob Budiansky","David Simons","Tom DeFalco","Josef Rubinstein","Roger Stern"],"i":2416},{"year":1982,"characters":["Arnie Roth","August Masters","Bernie Rosenthal","Captain America","Dum Dum Dugan LMD","Gail Runciter","Gargoyle (Defender)","Hellcat","Josh Cooper","Mindy Williams","Nighthawk","Phillip Le Guin","Ursula Richards","Valkyrie"],"name":"Captain America #268","link":"captain_america_268","credits":["Jim Salicrup","Mike Zeck","Lance Tooks","J.M. DeMatteis","John Beatty"],"i":2417},{"year":1982,"characters":["Amon (Demon Steed)","August Masters","Beast","Captain America","Daredevil","Dolly Donahue","Dr. Strange","Enchantress","Gargoyle (Defender)","Hawkeye","Hecate (Demon Steed)","Hellcat","Hellstorm","Hulk","Karnilla","Luke Cage","Mindy Williams","Nighthawk","Nighthawk (Squadron Supreme)","Odin","Phillip Le Guin","Set (Demon Steed)","Silver Surfer","Spider-Man","Sub-Mariner","Thor","Ursula Richards","Valkyrie","Vera Cantor","Wong"],"name":"Defenders #106-109","link":"defenders_106-109","credits":["Al Milgrom","Don Perlin","Rick Magyar","Joe Sinnott","Hilary Barta","Sal Trapani","Jack Abel","J.M. DeMatteis","Mark Gruenwald","Chic Stone","Mike Esposito"],"i":2418},{"year":1982,"characters":["Aunt May","Gargoyle (Defender)","Nate Lubenski","Spider-Man"],"name":"Marvel Team-Up #119","link":"marvel_team-up_119","credits":["Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Mark Gruenwald","Mike Esposito"],"i":2419},{"year":1982,"characters":["Anna Kappelbaum","Bernie Rosenthal","Captain America","Honcho","Josh Cooper","Mad Thinker","Marauder","Mike Farrel","Nick Fury","R.U. Reddy","Wolf"],"name":"Captain America #269","link":"captain_america_269","credits":["Jim Salicrup","Mike Zeck","Josef Rubinstein","Lance Tooks","J.M. DeMatteis","John Beatty"],"i":2420},{"year":1982,"characters":["Debra Whitman","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Amazing Spider-Man #228","link":"amazing_spider-man_228","credits":["Jan Strnad","Dave Simons","Tom DeFalco","Rick Leonardi","Mark Gruenwald"],"i":2421},{"year":1982,"characters":["Atropos (Verdandi)","Clotho (Urd)","Fandral","Heimdall","Hogun","Lachesis (Skuld)","Odin","Thor","Volstagg"],"name":"Bizarre Adventures #32 (Thor)","link":"bizarre_adventures_32_thor","credits":["Denny O'Neil","Alan Zelenetz","John Bolton","Ralph Macchio"],"i":2422},{"year":1982,"characters":["Arnie Roth","Bernie Rosenthal","Captain America","Jim Wilson"],"name":"Captain America #270","link":"captain_america_270","credits":["Jim Salicrup","Mike Zeck","Co.","Lance Tooks","J.M. DeMatteis","John Beatty"],"i":2423},{"year":1982,"characters":["Captain America","Falcon","Jim Wilson","Jody Casper","Leila Taylor","Redwing","Sarah Casper","Vermin"],"name":"Captain America #272","link":"captain_america_272","credits":["Mike Zeck","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","John Beatty"],"i":2424},{"year":1982,"characters":["Clown","Corky the Clown","Cynthia Randolph","Freakmaster","Ghost Rider (Johnny Blaze)","Madame Olga","Null the Living Darkness","Ralph Quentin","Red Fowler","Renaldo","Zarathos"],"name":"Ghost Rider #70-71","link":"ghost_rider_70-71","credits":["Dave Simons","Don Perlin","Bob Budiansky","Tom DeFalco","Dan Bulanadi","Roger Stern","J.M. DeMatteis","Linda Grant"],"i":2425},{"year":1982,"characters":["Black Panther","Dum Dum Dugan LMD","Human Torch","Invisible Woman","Mr. Fantastic","Nick Fury","Nova (Frankie Raye)","Thing"],"name":"Fantastic Four #241","link":"fantastic_four_241","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2426},{"year":1982,"characters":["Captain America","Drax the Destroyer","Iron Man","Jarvis","Moondragon","Odin","Thor","Wasp"],"name":"Avengers #219-220","link":"avengers_219-220","credits":["Bob Hall","Al Milgrom","Jim Salicrup","Lance Tooks","Jim Shooter","Vincent Colletta","Dan Green"],"i":2427},{"year":1982,"characters":["Amy Powell","Betty Brant","Black Tom","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Juggernaut","Lance Bannon","Madame Web","Spider-Man","Wong"],"name":"Amazing Spider-Man #229-230","link":"amazing_spider-man_229-230","credits":["Tom DeFalco","John Romita Jr.","Roger Stern","Jim Mooney"],"i":2428},{"year":1982,"characters":["Shawna Lynde","Thor","Zaniac"],"name":"Thor #319","link":"thor_319","credits":["Keith Pollard","Doug Moench","Brett Breeding","Jim Salicrup"],"i":2429},{"year":1982,"characters":["Aragorn","Beast","Captain America","Gargoyle (Defender)","Iron Man","Nebulon","Silver Surfer","Thor","Valkyrie","Wasp","Wong"],"name":"Avengers annual #11","link":"avengers_annual_11","credits":["Al Milgrom","Jack Abel","Brett Breeding","J.M. DeMatteis","Mark Gruenwald"],"i":2430},{"year":1982,"characters":["Cory Payne","Devil-Slayer","Luann Bloom","Sunshine (Junkie)"],"name":"Defenders #110","link":"defenders_110","credits":["Mike Esposito","Don Perlin","Al Milgrom","J.M. DeMatteis"],"i":2431},{"year":1982,"characters":["Dr. Strange","Hellcat","Hulk","Hyperion","Nighthawk (Squadron Supreme)","Overmind","Satan","Sub-Mariner"],"name":"Defenders #111","link":"defenders_111","credits":["Andy Mushynsky","Don Perlin","Al Milgrom","J.M. DeMatteis"],"i":2432},{"year":1982,"characters":["Biff Rifkin","Debra Whitman","Marcy Kane","Mendel Stromm","Morris Sloan","Nate Lubenski","Phillip Chang","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #68","link":"peter_parker_the_spectacular_s_66","credits":["Bill Mantlo","Jim Mooney","Tom DeFalco","Luke McDonnell","Mark Gruenwald"],"i":2433},{"year":1983,"characters":["Amphibian (Squadron Supreme)","Arcanna","August Masters","Beast","Captain Hawk","Doctor Spectrum","Dr. Strange","Elf with a Gun","Gargoyle (Defender)","Golden Archer","Hellstorm","Hulk","Hyperion","Lady Lark","Luann Bloom","Mindy Williams","Nighthawk (Squadron Supreme)","Nuke (Squadron Supreme)","Null the Living Darkness","Overmind","Power Princess","Scarlet Witch","Silver Surfer","Sub-Mariner","Tom Thumb","Valkyrie","Vera Cantor","Vision","Whizzer (Squadron Supreme)"],"name":"Defenders #112-115","link":"defenders_112-114","credits":["J.M. DeMatteis","Al Milgrom","Don Perlin","Michael Gustovich","Hilary Barta"],"i":2434},{"year":1984,"characters":["Chief Examiner","Hulk"],"name":"Questprobe #1","link":"questprobe_1","credits":["Bill Mantlo","Mark Gruenwald","Bob Budiansky","John Romita Sr."],"i":2435},{"year":1982,"characters":["Alicia Masters","Aunt May","Captain America","Daredevil","Dr. Strange","Franklin Richards","Galactus","HUBERT","Human Torch","Invisible Woman","Iron Man","J. Jonah Jameson","Jarvis","Joe 'Robbie' Robertson","Julie Angel","Mr. Fantastic","Nova (Frankie Raye)","Spider-Man","Terrax","Thing","Thor","Walter Collins","Wasp"],"name":"Fantastic Four #242-244","link":"fantastic_four_242-244","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2436},{"year":1983,"characters":["Blob","Daredevil","Hulk","Unus"],"name":"Marvel Fanfare #7","link":"marvel_fanfare_7","credits":["Bill Mantlo","Al Milgrom","George Freeman","Joe Barney","Steven Grant"],"i":2437},{"year":1982,"characters":["Bob Diamond","Claire Temple","Colleen Wing","Constrictor","El Aguila","Harmony Young","Iron Fist","Luke Cage","Misty Knight","Sabretooth"],"name":"Power Man & Iron Fist #78","link":"power_man_iron_fist_78","credits":["Denny O'Neil","Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2438},{"year":1982,"characters":["Lindsay McCabe","Madame Hydra (Viper)","Sabrina Morrel","Silver Samurai","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #42-43","link":"spider-woman_42-43","credits":["Stephen Leialoha","Bob Wiacek","Denny O'Neil","Chris Claremont"],"i":2439},{"year":1982,"characters":["Acroyear","Bug","Commander Arcturus Rann","Devil (Micronaut)","Marionette","Microtron","Nanotron"],"name":"Micronauts #38","link":"micronauts_38","credits":["Bill Mantlo","Al Milgrom","John Garcia","Dan Bulanadi","Jack Abel"],"i":2440},{"year":1982,"characters":["Cowboy","Honcho","Marauder","R.U. Reddy","Wolf","Wrench"],"name":"Team America #3","link":"team_america_3","credits":["Bill Mantlo","Tom DeFalco","Luke McDonnell","Vincent Colletta","Linda Grant"],"i":2441},{"year":1982,"characters":["Bob Diamond","Colleen Wing","D.W. Griffith","Harmony Young","Iron Fist","Jennie Royce","Luke Cage","Misty Knight","Professor Gamble"],"name":"Power Man & Iron Fist #79","link":"power_man_iron_fist_79","credits":["Denny O'Neil","Mary Jo Duffy","Kerry Gammill","Ricardo Villamonte"],"i":2442},{"year":1982,"characters":["Ant-Man (Scott Lang)","Edwin Cord","Iron Man","Mauler","War Machine","Yvette Avril"],"name":"Iron Man #156","link":"iron_man_156","credits":["John Romita Jr.","Pablo Marcos","Jim Salicrup","Lance Tooks","David Michelinie"],"i":2443},{"year":1982,"characters":["Acroyear","Baron Karza","Bug","Cilicia","Commander Arcturus Rann","Devil (Micronaut)","Duchess Belladonna","Force Commander","Huntarr","Marionette","Microtron","Nanotron","Prince Pharoid","Slug (Micronaut)"],"name":"Micronauts #39","link":"micronauts_39","credits":["Bill Mantlo","Al Milgrom","Ann Nocenti","Dan Bulanadi","Steve Ditko"],"i":2444},{"year":1982,"characters":["Honcho","Marauder","R.U. Reddy","Wolf"],"name":"Team America #4","link":"team_america_4","credits":["Bill Mantlo","Tom DeFalco","Luke McDonnell","Vincent Colletta","Linda Grant"],"i":2445},{"year":1982,"characters":["D.W. Griffith","Iron Fist","Luke Cage","Montenegro","Sally Fontaine"],"name":"Power Man & Iron Fist #80","link":"power_man_iron_fist_80","credits":["Denny O'Neil","Mary Jo Duffy","Ricardo Villamonte","Denys Cowan"],"i":2446},{"year":1982,"characters":["Iron Man"],"name":"Iron Man #157","link":"iron_man_157","credits":["Jim Salicrup","Alan Kupperberg","Lance Tooks","David Michelinie","Dan Green"],"i":2447},{"year":1982,"characters":["Bernie Rosenthal","Captain America"],"name":"Captain America #271","link":"captain_america_271","credits":["Jim Salicrup","Co.","Lance Tooks","David Anthony Kraft","John Beatty","Alan Kupperburg"],"i":2448},{"year":1982,"characters":["Honcho","Marauder","R.U. Reddy","Wolf"],"name":"Team America #5","link":"team_america_5","credits":["Bill Mantlo","Alan Kupperberg","Tom DeFalco","Vincent Colletta","Linda Grant"],"i":2449},{"year":1982,"characters":["Abe Brown","Azir","Boris (Spy)","Brillale","Iron Fist","Jennie Royce","Jeryn Hogarth","Luke Cage","Ninotchka"],"name":"Power Man & Iron Fist #81-82","link":"power_man_iron_fist_81-82","credits":["Mary Jo Duffy","Ricardo Villamonte","Carl Potts","Denny O'Neil","Denys Cowan"],"i":2450},{"year":1982,"characters":["Iron Man","Mrs. Arbogast"],"name":"Iron Man #158","link":"iron_man_158","credits":["Al Milgrom","Jim Salicrup","Carmine Infantino","Lance Tooks","Denny O'Neil","Dan Green"],"i":2451},{"year":1982,"characters":["Alicia Masters","Franklin Richards","HUBERT","Human Torch","Invisible Woman","Mr. Fantastic","Sharon Selleck","Thing"],"name":"Fantastic Four #245","link":"fantastic_four_245","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2452},{"year":1982,"characters":["Acroyear","Baron Karza","Battleaxe (Micronaut)","Bug","Commander Arcturus Rann","Devil (Micronaut)","Duchess Belladonna","Force Commander","Franklin Richards","Human Torch","Invisible Woman","Marionette","Microtron","Mr. Fantastic","Nanotron","Thing"],"name":"Micronauts #40","link":"micronauts_40","credits":["Bill Mantlo","Al Milgrom","Ann Nocenti","Dan Bulanadi","Gil Kane"],"i":2453},{"year":1982,"characters":["Ant-Man (Scott Lang)","Human Torch","Mr. Fantastic","Pearla","Stature","Thing"],"name":"Marvel Two-In-One #87","link":"marvel_two-in-one_87","credits":["Jim Salicrup","Tom DeFalco","Ron Wilson","Lance Tooks","Chic Stone"],"i":2454},{"year":1982,"characters":["ROM","Stardust"],"name":"ROM annual #1","link":"rom_annual_1","credits":["Bill Mantlo","Al Milgrom","Pat Broderick","Michael Gustovich","Mark Gruenwald"],"i":2455},{"year":1982,"characters":["Cowboy","Honcho","Marauder","R.U. Reddy","Wolf"],"name":"Team America #6","link":"team_america_6","credits":["Bill Mantlo","Alan Kupperberg","Tom DeFalco","Vincent Colletta","Linda Grant"],"i":2456},{"year":1982,"characters":["Ch'thon","David Ishima","Lindsay McCabe","Madame Hydra (Viper)","Morgan Le Fey","Sabrina Morrel","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #44","link":"spider-woman_44","credits":["Stephen Leialoha","Denny O'Neil","Chris Claremont"],"i":2457},{"year":1982,"characters":["Alicia Masters","She-Hulk","Thing"],"name":"Marvel Two-In-One #88","link":"marvel_two-in-one_88","credits":["Jim Salicrup","Alan Kupperberg","Lance Tooks","David Anthony Kraft","Chic Stone"],"i":2458},{"year":1982,"characters":["Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Havok","Hepzibah","John Cheever","Lilandra","Magik","Moira MacTaggert","Mystique","Nightcrawler","Oracle","Peter Corbeau","Polaris","Professor X","Raza Longknife","Rogue","Senator Kelly","Shadowcat (Kitty Pryde)","Sikorsky","Storm","Wolverine"],"name":"Uncanny X-Men #158","link":"uncanny_x-men_158","credits":["Danny Fingeroth","Dave Cockrum","Chris Claremont","Louise Simonson","Bob Wiacek"],"i":2459},{"year":1982,"characters":["Diablo","Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Mrs. Arbogast","Thing","Vic Martinelli"],"name":"Iron Man #159","link":"iron_man_159","credits":["Jim Salicrup","D. Hands","Roger McKenzie","Paul Smith","Lance Tooks"],"i":2460},{"year":1982,"characters":["Black Widow","Captain America","Dazzler","Fabian Stankowicz","Hawkeye","Henry Peter Gyrich","Invisible Woman","Iron Man","Jarvis","She-Hulk","Spider-Man","Spider-Woman (Jessica Drew)","Thor","Wasp"],"name":"Avengers #221","link":"avengers_221","credits":["Bob Hall","Jim Shooter","Jim Salicrup","Lance Tooks","Brett Breeding","David Michelinie"],"i":2461},{"year":1982,"characters":["Alicia Masters","Human Torch","Invisible Woman","Mephisto","Mr. Fantastic","Shalla Bal","Silver Surfer","Thing"],"name":"Silver Surfer #1","link":"silver_surfer_1_1","credits":["John Byrne","Tom Palmer","Stan Lee"],"i":2462},{"year":1982,"characters":["Cowboy","Honcho","Marauder","R.U. Reddy","Wolf","Wrench"],"name":"Team America #7","link":"team_america_7","credits":["Bill Mantlo","Tom DeFalco","Luke McDonnell","Vincent Colletta","Linda Grant"],"i":2463},{"year":1982,"characters":["Absorbing Man","Angel","Beefer","Carter Blair","Dazzler","Doctor Octopus","Kenneth Barnett"],"name":"Dazzler #17","link":"dazzler_17","credits":["Vincent Colletta","Frank Springer","Jim Shooter","Danny Fingeroth"],"i":2464},{"year":1982,"characters":["Anaconda","Black Mamba","Death Adder","Iron Man","Mrs. Arbogast","Vic Martinelli"],"name":"Iron Man #160","link":"iron_man_160","credits":["Steve Ditko","Mike Carlin","Mark Gruenwald","Denny O'Neil","Dan Green","Marie Severin"],"i":2465},{"year":1982,"characters":["Colossus","Corsair","Cyclops","Dracula","Harmony Young","Havok","Moira MacTaggert","Nightcrawler","Polaris","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #159","link":"uncanny_x-men_159","credits":["Louise Simonson","Bill Sienkiewicz","Chris Claremont","Rick Bryant","Bob Wiacek"],"i":2466},{"year":1982,"characters":["Claire Temple","Colleen Wing","D.W. Griffith","Emma Burstein","Harmony Young","Iron Fist","Luke Cage","Misty Knight","Noah Burstein","Rafael Scarfe","Warhawk","William Hao"],"name":"Power Man & Iron Fist #83","link":"power_man_iron_fist_83","credits":["Mary Jo Duffy","Joe Chidodo","Carl Potts","Denny O'Neil","Denys Cowan"],"i":2467},{"year":1984,"characters":["Aireo","Black Bolt","Gorgon","Karnak","Quicksilver","Stallior"],"name":"Marvel Fanfare #14 (Quicksilver)","link":"marvel_fanfare_14_2nd_story","credits":["Mary Jo Duffy","Alan Weiss","Al Milgrom"],"i":2468},{"year":1983,"characters":["Cowboy","Georgiana Hebb","Honcho","R.U. Reddy","Wolf","Wrench"],"name":"Team America #8","link":"team_america_8","credits":["Bill Mantlo","Don Perlin","Tom DeFalco","Jim Shooter","Vincent Colletta"],"i":2469},{"year":1982,"characters":["Belasco","Colossus","Illyana Rasputin (Alt-Limbo version)","Magik","Nightcrawler","S'ym","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #160","link":"uncanny_x-men_160","credits":["Bob Wiacek","Brent Anderson","Chris Claremont","Louise Simonson"],"i":2470},{"year":1982,"characters":["David Ishima","Impossible Man","Impossible Woman","Lindsay McCabe","Sabrina Morrel","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #45","link":"spider-woman_45","credits":["Stephen Leialoha","Denny O'Neil","Chris Claremont","Ralph Macchio"],"i":2471},{"year":1982,"characters":["Ant-Man (Scott Lang)","Captain America","Egghead","Hawkeye","Henry Pym","Iron Man","Jarvis","Moonstone (Karla Sofen)","Scorpion","She-Hulk","Thor","Tiger Shark","Wasp","Whirlwind"],"name":"Avengers #222","link":"avengers_222","credits":["Greg LaRocque","Mike Carlin","Brett Breeding","Jim Shooter","Mark Gruenwald","Steven Grant"],"i":2472},{"year":1982,"characters":["Betrand Crawley","Frenchie","Iron Man","Moon Knight"],"name":"Iron Man #161","link":"iron_man_161","credits":["Steven Mitchell","Mike Carlin","Luke McDonnell","Mark Gruenwald","Denny O'Neil","Mike Esposito"],"i":2473},{"year":1982,"characters":["Carol Danvers","Colossus","Corsair","Cyclops","Deathbird","Hepzibah","Kam'n'ehar","Lilandra","Moira MacTaggert","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Sikorsky","Storm","Wolverine"],"name":"Uncanny X-Men #161","link":"uncanny_x-men_161","credits":["Danny Fingeroth","Dave Cockrum","Chris Claremont","Louise Simonson","Bob Wiacek"],"i":2474},{"year":1982,"characters":["Blind Ali","Bob Diamond","Claire Temple","Colleen Wing","Constrictor","D.W. Griffith","Harmony Young","Iron Fist","Luke Cage","Misty Knight","Rafael Scarfe","Sabretooth","Solace"],"name":"Power Man & Iron Fist #84","link":"power_man_iron_fist_84","credits":["Denny O'Neil","Mary Jo Duffy","Steven Mitchell","Denys Cowan"],"i":2475},{"year":1982,"characters":["Ant-Man (Scott Lang)","Captain America","Hawkeye","Iron Man","She-Hulk","Stature","Taskmaster","Wasp"],"name":"Avengers #223","link":"avengers_223","credits":["Greg LaRocque","Mike Carlin","Brett Breeding","David Michelinie","Mark Gruenwald","Many Hands"],"i":2476},{"year":1983,"characters":["Cowboy","Georgiana Hebb","Honcho","Iron Man","Marauder","R.U. Reddy","Wolf","Wrench"],"name":"Team America #9","link":"team_america_9","credits":["Bill Mantlo","M.D. Bright","Tom DeFalco","Jim Shooter","Vincent Colletta"],"i":2477},{"year":1982,"characters":["Freya","Heimdall","Jolena","Loki","Nurse Stevens","Odin","Shawna Lynde","Sigyn","Sleipnir","Thor","Vizier"],"name":"Thor #320-322","link":"thor_320-322","credits":["Doug Moench","Friends","Jim Salicrup","Alan Kupperberg","Jim Mooney","Mark Gruenwald","John Tartaglione","Mike Carlin","Lance Tooks","Keith Pollard","Chic Stone"],"i":2478},{"year":1982,"characters":["Black Panther","Iron Man","Madame Slay","Mandarin","War Machine"],"name":"Iron Man annual #5","link":"iron_man_annual_5","credits":["Ralph Macchio","Jerry Bingham","Mark Gruenwald","Dan Green","Peter Gillis"],"i":2479},{"year":1983,"characters":["Carol Danvers","Colossus","Corsair","Cyclops","Deathbird","Dzilos","Fang","Havok","Hepzibah","Kam'n'ehar","Lilandra","Lockheed","Magik","Moira MacTaggert","Nightcrawler","Polaris","Professor X","Shadowcat (Kitty Pryde)","Sikorsky","Stevie Hunter","Storm","T'crilee","Wolverine"],"name":"Uncanny X-Men #162-166","link":"uncanny_x-men_162-165","credits":["Danny Fingeroth","Dave Cockrum","Chris Claremont","Paul Smith","Louise Simonson","Bob Wiacek"],"i":2480},{"year":1982,"characters":["Ant-Man (Scott Lang)","Captain America","Egghead","Hawkeye","Henry Pym","Iron Man","She-Hulk","Thor","War Machine","Wasp"],"name":"Avengers #224","link":"avengers_224","credits":["M.D. Bright","Sal Trapani","Mike Carlin","Alan Zelenetz","Jack Abel","Brett Breeding","Jim Shooter","Mark Gruenwald"],"i":2481},{"year":1982,"characters":["Angelo Macon","Cannonball","Emmanuel Da Costa","Juliana Sandoval","Karma","Mirage (Dani Moonstar)","Moira MacTaggert","Murray Reese","Professor X","Reverend Craig","Sunspot","Tessa","Wade Cole","White Bishop (Donald Pierce)","Wolfsbane"],"name":"New Mutants: Renewal (Marvel Graphic Novel #4)","link":"new_mutants_renewal_marvel_gra","credits":["Bob McLeod","Chris Claremont","Louise Simonson"],"i":2482},{"year":1982,"characters":["Acroyear","Baron Karza","Bug","Commander Arcturus Rann","Devil (Micronaut)","Dr. Doom","Duchess Belladonna","Force Commander","Marionette","Microtron","Nanotron","Prince Pharoid","Puppet Master","Slug (Micronaut)"],"name":"Micronauts #41","link":"micronauts_41","credits":["Bill Mantlo","Al Milgrom","Ann Nocenti","Dan Bulanadi","Gil Kane"],"i":2483},{"year":1982,"characters":["Acroyear","Alicia Masters","Boris (Doom's servant)","Bug","Commander Arcturus Rann","Devil (Micronaut)","Dr. Doom","Human Torch","Invisible Woman","Kristoff","Marionette","Microtron","Mr. Fantastic","Nanotron","Puppet Master","Thing","Zorba"],"name":"Fantastic Four #246-247","link":"fantastic_four_246-247","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2484},{"year":1982,"characters":["Cloak","Dagger","Debra Whitman","J. Jonah Jameson","Jean DeWolff","Joe 'Robbie' Robertson","Kingpin","Marcy Kane","Morris Sloan","Nate Lubenski","Phillip Chang","Silvermane","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #69-70","link":"peter_parker_the_spectacular_s_16","credits":["Bill Mantlo","Ed Hannigan","Al Milgrom","Tom DeFalco"],"i":2485},{"year":1982,"characters":["Captain America","Dino Manelli","Dum Dum Dugan LMD","Eric Koenig","Gabriel Jones","Izzy Cohen","Nick Fury","Percy Pinkerton","Reb Ralston","Sam 'Happy Sam' Sawyer"],"name":"Captain America #273-274","link":"captain_america_273-274","credits":["Mike Zeck","Mike Carlin","Mark Gruenwald","David Anthony Kraft","John Beatty"],"i":2486},{"year":1982,"characters":["Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #17","link":"ka-zar_the_savage_17","credits":["Steven Mitchell","Bruce Jones","Danny Fingeroth","Ron Frenz","Louise Simonson"],"i":2487},{"year":1982,"characters":["Dum Dum Dugan LMD","Human Torch","Nick Fury","Thing","Ultima","Word"],"name":"Marvel Two-In-One #89","link":"marvel_two-in-one_89","credits":["Jim Salicrup","Alan Kupperberg","Lance Tooks","David Anthony Kraft","Chic Stone"],"i":2488},{"year":1982,"characters":["Acroyear","Bug","Commander Arcturus Rann","Devil (Micronaut)","Dr. Nemesis (Pym foe)","Marionette","Microtron","Nanotron","Wasp"],"name":"Micronauts #42","link":"micronauts_42","credits":["Bill Mantlo","Al Milgrom","Ann Nocenti","Dan Bulanadi","Gil Kane"],"i":2489},{"year":1982,"characters":["Acroyear","Baron Karza","Battleaxe (Micronaut)","Bug","Captain America","Commander Arcturus Rann","Computrex","Devil (Micronaut)","Dr. Nemesis (Pym foe)","Duchess Belladonna","Force Commander","Iron Man","Margrace","Marionette","Microtron","Nanotron","Oberon","Thor","Toymaster","Wasp"],"name":"Micronauts #43","link":"micronauts_43","credits":["Bill Mantlo","Al Milgrom","Ann Nocenti","Dan Bulanadi","Gil Kane"],"i":2490},{"year":1982,"characters":["Frigga","Graviton","Heimdall","Hela","Joe Parks","Jolena","Judith Parks","Karnilla","Loki","Odin","Thor","Tyr","Wasp"],"name":"Thor #324","link":"thor_324","credits":["Mark Gruenwald","Doug Moench","Jim Mooney","Alan Kupperberg"],"i":2491},{"year":1982,"characters":["Captain America","Captain America (Grand Director)","Contemplator","Patriot","Scarecrow","Spirit of '76"],"name":"Captain America annual #6","link":"captain_america_annual_6","credits":["Vincent Colletta","Ron Wilson","Mark Gruenwald","J.M. DeMatteis"],"i":2492},{"year":1982,"characters":["Alicia Masters","Debra Whitman","Spider-Man","Thing"],"name":"Marvel Two-In-One #90","link":"marvel_two-in-one_90","credits":["Jan Strnad","Jim Salicrup","Alan Kupperberg","Jim Mooney","Lance Tooks"],"i":2493},{"year":1983,"characters":["Banshee","Black King (Sebastian Shaw)","Cannonball","Captain Delany","Colonel Michael Rossi","Gabrielle Haller","Henry Peter Gyrich","Karma","Magik","Mirage (Dani Moonstar)","Moira MacTaggert","Professor X","Stevie Hunter","Sunspot","Wolfsbane"],"name":"New Mutants #1-3","link":"new_mutants_1-3","credits":["Louise Simonson","Bob McLeod","Chris Claremont","Michael Gustovich"],"i":2494},{"year":1982,"characters":["Absorbing Man","Angel","Barbara London","Beast","Beefer","Black Bolt","Captain America","Carter Blair","Daredevil","Dazzler","Doctor Sax","Harmony Young","Hawkeye","Human Torch","Hunch","Invisible Woman","Iron Fist","Iron Man","Jarvis","Johnny Guitar","Kenneth Barnett","Lockjaw","Luke Cage","Marx","Medusa","Misty Knight","Mr. Fantastic","Quasar","She-Hulk","Spider-Man","Thing","Thor","Vision","Wasp","Wonder Man"],"name":"Dazzler #18-21","link":"dazzler_18-19","credits":["Ralph Macchio","Denny O'Neil","Danny Fingeroth","Frank Springer","Jim Shooter","Vincent Colletta"],"i":2495},{"year":1982,"characters":["Black Bolt","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Luna","Medusa","Mr. Fantastic","Quicksilver","Thing","Triton"],"name":"Fantastic Four #248","link":"fantastic_four_248","credits":["John Byrne","Lance Tooks","Jim Salicrup"],"i":2496},{"year":1982,"characters":["Betty Brant","Cobra","Debra Whitman","J. Jonah Jameson","Marcy Kane","Marla Madison Jameson","Mr. Hyde","Ned Leeds","Nose Norton","Roger Hochberg","Spider-Man","Steve Hopkins"],"name":"Amazing Spider-Man #231-232","link":"amazing_spider-man_231-232","credits":["John Romita Jr.","Jim Mooney","Tom DeFalco","Roger Stern","Linda Grant"],"i":2497},{"year":1982,"characters":["Balor","Black Knight (Dane Whitman)","Black Knight Statue","Bres","Captain America","Cethlann","Dr. Druid","Dulb","Elathan","Hawkeye","Indech","Iron Man","She-Hulk","Tethra","Thor","Valinor","Wasp"],"name":"Avengers #225-226","link":"avengers_225-226","credits":["Greg LaRocque","Mike Carlin","Mark Gruenwald","Chic Stone","Steven Grant"],"i":2498},{"year":1982,"characters":["Dr. Strange","Mr. Fantastic","Sphinx","Thing"],"name":"Marvel Two-In-One #91","link":"marvel_two-in-one_91","credits":["Jim Salicrup","Tom DeFalco","Ron Wilson","Lance Tooks","Jon D'Agostino"],"i":2499},{"year":1982,"characters":["Iron Fist","Luke Cage","Mole Man"],"name":"Power Man & Iron Fist #85","link":"power_man_iron_fist_85","credits":["Keith Pollard","Denny O'Neil","Dave Simons","Ralph Macchio"],"i":2500},{"year":1983,"characters":["Angel","Beefer","Carter Blair","Dazzler","Destiny","Flame (Arsonist)","Hunch","Iron Fist","Kenneth Barnett","Lois London","Luke Cage","Marx","Mortis","Mystique","Rogue"],"name":"Dazzler #22-24","link":"dazzler_22-24","credits":["Ralph Macchio","Danny Fingeroth","Frank Springer","Vincent Colletta","Denny O'Neil"],"i":2501},{"year":1982,"characters":["Bruto the Strongman","Clown","Corky the Clown","Cynthia Randolph","Ernesto Gambonno","Fire Eater","Ghost Rider (Johnny Blaze)","Human Cannonball","Livewire","Luigi Gambonno","Madame Olga","Ralph Quentin","Red Fowler","Zarathos"],"name":"Ghost Rider #72-73","link":"ghost_rider_72-73","credits":["Bob Budiansky","David Simons","Tom DeFalco","Roger Stern","Linda Grant"],"i":2502},{"year":1982,"characters":["Danny Jones","Lorry Jones","Mack Killburn","Nell Jones","ROM","Starshine II","Steve Jackson","Sybil (Atlantean)","Tammy Anne Jones","Torpedo"],"name":"ROM #33","link":"rom_33","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2503},{"year":1983,"characters":["Anna Kappelbaum","Arnie Roth","Baron Zemo (Helmut)","Bernie Rosenthal","Captain America","Doughboy","Dum Dum Dugan LMD","Falcon","Gail Runciter","Josh Cooper","Leila Taylor","Mike Farrel","Nick Fury","Primus","Redwing","Scarecrow","Spider-Man","Vermin"],"name":"Captain America #275-279","link":"captain_america_275-278","credits":["Mike Zeck","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","John Beatty"],"i":2504},{"year":1983,"characters":["Alicia Masters","Bernie Rosenthal","Captain America","Franklin Richards","Gladiator (Shiar)","Human Torch","Invisible Woman","Julie Angel","Mr. Fantastic","Spider-Man","Thing"],"name":"Fantastic Four #249-250","link":"fantastic_four_249-250","credits":["John Byrne","Lance Tooks","Jim Salicrup","Tom DeFalco"],"i":2505},{"year":1982,"characters":["Indries Moomji","Iron Man","Mrs. Arbogast","Obadiah Stane","Vic Martinelli","War Machine"],"name":"Iron Man #162-163","link":"iron_man_162","credits":["Steven Mitchell","Mike Carlin","Mike Vosburg","Luke McDonnell","Mark Gruenwald","Denny O'Neil"],"i":2506},{"year":1982,"characters":["Black Jack Tarr","Clive Reston","Dark Angel (Mia Lessing)","Death-Dealer","Dr. Petrie","Fah Lo Suee","Fu Manchu","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #116-118","link":"master_of_kung_fu_116-118","credits":["Doug Moench","Gene Day","Ralph Macchio"],"i":2507},{"year":1983,"characters":["Cannonball","Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Gladiator (Shiar)","Hepzibah","Human Torch","Invisible Woman","Karma","Lilandra","Magik","Mirage (Dani Moonstar)","Moira MacTaggert","Mr. Fantastic","Nightcrawler","Professor X","Raza Longknife","Shadowcat (Kitty Pryde)","Sikorsky","Storm","Sunspot","Thing","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #167","link":"uncanny_x-men_167","credits":["Bob Wiacek","Louise Simonson","Chris Claremont","Paul Smith"],"i":2508},{"year":1982,"characters":["ROM","Seaweed Man","Sub-Mariner","Sybil (Atlantean)","Vashti"],"name":"ROM #34-35","link":"rom_34-35","credits":["Bill Mantlo","Ian Akin","Brian Garvey","Ann Nocenti","Dan Bulanadi","Sal Buscema"],"i":2509},{"year":1982,"characters":["Colossus","Fixer","Marcy Kane","Mentallo","Professor Power","Professor X","Roger Hochberg","Shadowcat (Kitty Pryde)","Spider-Man","Wolverine"],"name":"Marvel Team-Up #117-118","link":"marvel_team-up_117-118","credits":["Herb Trimpe","Mike Esposito","Tom DeFalco","J.M. DeMatteis"],"i":2510},{"year":1982,"characters":["Doctor Dredd","John Clark","ROM","Sarah Clark","Starshine II","Steve Jackson","Sub-Mariner","Sybil (Atlantean)","Torpedo","Vashti"],"name":"ROM #36-37","link":"rom_36-37","credits":["Bill Mantlo","Al Milgrom","Ian Akin","Brian Garvey","Ann Nocenti","Sal Buscema"],"i":2511},{"year":1980,"characters":["Arthur Pendragon","Black Knight (Dane Whitman)","Captain Britain","Jackdaw (Elf)","Lady of the Lake","Merlin","Mordred the Evil","Necromon","Roma","Valinor"],"name":"Incredible Hulk Weekly #1,3-30,42-55,57-63 (Black Knight)","link":"incredible_hulk_weekly_13-5557","credits":["Steve Parkhouse","Paul Neary","John Stokes","Dez Skinn"],"i":2512},{"year":1982,"characters":["3-D Man","Ajak","American Eagle","Angel","Ant-Man (Scott Lang)","Arabian Knight","Aurora","Beast","Black Bolt","Black Knight (Dane Whitman)","Black Panther","Black Widow","Blitzkrieg","Blue Shield","Brother Voodoo","Captain America","Captain Britain","Captain Universe (Uni-Power)","Collective Man","Collector","Colossus","Crimson Dynamo V","Crystal","Cyclops","Daredevil","Darkstar","Dazzler","Death","Defensor","Devil-Slayer","Doc Samson","Dr. Druid","Falcon","Gargoyle (Defender)","Gorgon","Grandmaster","Guardian (James Mac Hudson)","Guardsman II (Michael O'Brien)","Gypsy Moth","Havok","Hawkeye","Hellcat","Hellstorm","Hercules","Hulk","Human Torch","Iceman","Igor (Super Ape)","Ikaris","Invisible Woman","Iron Fist","Iron Man","Jack of Hearts","Jocasta","Ka-Zar","Karnak","Le Peregrine","Living Mummy","Lobo (Will Talltree's Wolf)","Lockjaw","Luke Cage","Machine Man","Madrox the Multiple Man","Medusa","Mikhlo (Super Ape)","Mockingbird","Moon Knight","Moondragon","Mr. Fantastic","Namorita","Nightcrawler","Nighthawk (Squadron Supreme)","Northstar","Paladin","Peator (Super Ape)","Polaris","Professor X","Quasar","Quicksilver","Red Ghost","Red Wolf (Will Talltrees)","Redwing","ROM","Sabra","Sasquatch","Scarlet Witch","Sersi","Shadowcat (Kitty Pryde)","Shaman","Shamrock","Shanna the She-Devil","She-Hulk","Shroud","Snowbird","Spider-Man","Spider-Woman (Jessica Drew)","Stingray","Storm","Sub-Mariner","Sunfire","Talisman (Australian)","Texas Twister","Thing","Thor","Tigra","Torpedo","Triton","Union Jack (Joey Chapman)","Ursa Major","Valinor","Valkyrie","Vanguard","Vision","Wasp","Werewolf By Night","Whizzer","Wolverine","Wonder Man"],"name":"Contest of Champions #1-3","link":"contest_of_champions_1-3","credits":["Bill Mantlo","John Romita Jr.","Pablo Marcos","Tom DeFalco","Bob Layton","Mark Gruenwald","Steven Grant"],"i":2513},{"year":1982,"characters":["Aunt May","Dominic Fortune","Nate Lubenski","Spider-Man","Turner D. Century"],"name":"Marvel Team-Up #120","link":"marvel_team-up_120","credits":["Mike Esposito","Kerry Gammill","Tom DeFalco","J.M. DeMatteis"],"i":2514},{"year":1982,"characters":["Iron Fist","Luke Cage"],"name":"Power Man & Iron Fist #86","link":"power_man_iron_fist_86","credits":["Denny O'Neil","Carl Potts","Denys Cowan"],"i":2515},{"year":1982,"characters":["Abomination","Amphibion (Hulk villain)","Bereet","Betty Ross","Dark Crawler","Daydra","Galaxy Master","Hulk","Qnax","Rick Jones","Torgo"],"name":"Hulk #269-270","link":"hulk_269-270","credits":["Ann Nocenti","Bill Mantlo","Al Milgrom","Sal Buscema"],"i":2516},{"year":1982,"characters":["Frog-Man II","Human Torch","Leap-Frog","Speed Demon","Spider-Man"],"name":"Marvel Team-Up #121","link":"marvel_team-up_121","credits":["Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Linda Grant","Mike Esposito"],"i":2517},{"year":1982,"characters":["Ian Fate","J. Jonah Jameson","Joe 'Robbie' Robertson","Man-Thing","Spider-Man"],"name":"Marvel Team-Up #122","link":"marvel_team-up_122","credits":["Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Linda Grant","Mike Esposito"],"i":2518},{"year":1982,"characters":["Alicia Masters","Captain America","Eddie Harris","Gears Garvin","Human Torch","Jarvis","Jocasta","Machine Man","Mr. Fantastic","Pamela Quinn","Peter Spaulding","Thing","Ultron"],"name":"Marvel Two-In-One #92-93","link":"marvel_two-in-one_92-93","credits":["Jim Salicrup","D. Hands","Tom DeFalco","Ron Wilson","A. Sorted"],"i":2519},{"year":1982,"characters":["Bereet","Betty Ross","Blackjack O'Hare","Hulk","Judson Jakes","Killer Clown","Lylla","Rocket Raccoon","Sturky","Uncle Pyko","Walruss"],"name":"Hulk #271","link":"hulk_271","credits":["Ann Nocenti","Bill Mantlo","Al Milgrom","Sal Buscema"],"i":2520},{"year":1982,"characters":["Claire Temple","Daredevil","Solarr","Spider-Man"],"name":"Marvel Team-Up #123","link":"marvel_team-up_123","credits":["Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Linda Grant","Mike Esposito"],"i":2521},{"year":1983,"characters":["Becky Blake","Ben Urich","Black Widow","Bullseye","Claw","Daredevil","Elektra","Flint","Foggy Nelson","Gladiator","Grotto","Heather Glenn","Ivan Petrovitch","Kingpin","Kirigi","Lt. Nick Manolis","Maxine Lavender","Nick Fury","Punisher","Shaft","Stick","Stilt-Man","Stone (Chaste)","Turk","Vanessa Fisk"],"name":"Daredevil #183-191, Bizarre Adventures #28","link":"daredevil_183-191bizarre_adven","credits":["Roger McKenzie","Terry Austin","Frank Miller","Klaus Janson","Denny O'Neil"],"i":2522},{"year":1982,"characters":["Bereet","Betty Ross","Hulk","Rick Jones","Sasquatch","Sturky","Wendigo III","X-Ray"],"name":"Hulk #272-273","link":"hulk_272-273","credits":["Ann Nocenti","Bill Mantlo","Al Milgrom","Sal Buscema"],"i":2523},{"year":1982,"characters":["Bereet","Betty Ross","Hulk","Ironclad","Rick Jones","Sturky"],"name":"Hulk #274","link":"hulk_274","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2524},{"year":1982,"characters":["Arthur Chekov","Aunt May","Beast","Edna McCoy","Harriet Rose Palermo","Martha (Aunt May's Boarder)","Mia Carrera","Nate Lubenski","Norton McCoy","Phillip Chang","Professor Power","Roger Hochberg","Sophie (Aunt May's Boarder)","Spider-Man","Steve Hopkins","Vera Cantor","Victor Palermo"],"name":"Marvel Team-Up #124","link":"marvel_team-up_124","credits":["Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Linda Grant","Mike Esposito"],"i":2525},{"year":1982,"characters":["Ben Urich","J. Jonah Jameson","Joe 'Robbie' Robertson","Marla Madison Jameson","Ned Leeds","Nose Norton","Spider-Man","Tarantula"],"name":"Amazing Spider-Man #233","link":"amazing_spider-man_233","credits":["John Romita Jr.","Jim Mooney","Tom DeFalco","Roger Stern","Linda Grant"],"i":2526},{"year":1983,"characters":["Amy Powell","Ben Urich","Betty Brant","J. Jonah Jameson","J.T. Gamelin","Joe 'Robbie' Robertson","Mamie Muggins","Ned Leeds","Roger Hochberg","Spider-Man","Tarantula","Walter 'Lonesome' Pincus","Will O' The Wisp"],"name":"Amazing Spider-Man #234-236","link":"amazing_spider-man_234-236","credits":["John Romita Jr.","Frank Giacoia","Tom DeFalco","Roger Stern","Dan Green","Linda Grant"],"i":2527},{"year":1982,"characters":["Bereet","Betty Ross","Hulk","Ironclad","Jackdaw (Bird lady)","Rick Jones","Vapor","Vector","X-Ray"],"name":"Hulk #275","link":"hulk_275","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2528},{"year":1982,"characters":["Betty Brant","J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #71","link":"peter_parker_the_spectacular_s_15","credits":["Bill Mantlo","Jim Mooney","Tom DeFalco","Rick Leonardi","Linda Grant"],"i":2529},{"year":1982,"characters":["David Ishima","General Nguyen Coy","Kingpin","Sabrina Morrel","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #46","link":"spider-woman_46","credits":["Brent Anderson","Trina Robbins","Stephen Leialoha","Chris Claremont","Mike Carlin","Mark Gruenwald"],"i":2530},{"year":1982,"characters":["Bereet","Betty Ross","Hulk","Ironclad","Rick Jones","Sturky","Vapor","Vector","X-Ray"],"name":"Hulk #276","link":"hulk_276","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2531},{"year":1982,"characters":["D'Spayre","Dr. Strange","Sara Wolfe","Wong"],"name":"Doctor Strange #55","link":"doctor_strange_55","credits":["Michael Golden","Roger Stern","Terry Austin","Al Milgrom"],"i":2532},{"year":1982,"characters":["Betrand Crawley","Donny Planet","Frenchie","Iron Fist","Luke Cage","Marlene Alraune","Moon Knight"],"name":"Power Man & Iron Fist #87","link":"power_man_iron_fist_87","credits":["Denny O'Neil","Carl Potts","Denys Cowan","Ralph Macchio"],"i":2533},{"year":1982,"characters":["Debra Whitman","Doctor Octopus","Moon Knight","Spider-Man","Steel Spider"],"name":"Peter Parker, the Spectacular Spider-Man #72","link":"peter_parker_the_spectacular_s_67","credits":["Bill Mantlo","Al Milgrom","Ed Hannigan","Rick Magyar","Tom DeFalco","Linda Grant"],"i":2534},{"year":1982,"characters":["Centurious the Soulless Man","Clown","Corky the Clown","Cynthia Randolph","Freakmaster","Ghost Rider (Johnny Blaze)","Madame Olga","Ralph Quentin","Red Fowler","Roxanne Simpson","Steel Wind","Vincenzo","Zarathos"],"name":"Ghost Rider #74-75","link":"ghost_rider_74-75","credits":["Dave Simons","Tom DeFalco","Bob Budianksy","Linda Grant","J.M DeMatteis"],"i":2535},{"year":1987,"characters":["Doctor Octopus","J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #124","link":"peter_parker_the_spectacular_s_85","credits":["Greg LaRocque","Jim Salicrup","Art Nichols","Roger McKenzie","Adam Blaustein"],"i":2536},{"year":1983,"characters":["Alicia Masters","American Eagle","Angel","Arabian Knight","Aurora","Balder","Beast","Bereet","Betty Ross","Black Bolt","Black Panther","Blitzkrieg","Captain America","Captain Britain","Collective Man","Colossus","Crystal","Cyclops","Daredevil","Darkstar","Defensor","Doc Samson","Dr. Strange","Dum Dum Dugan LMD","Falcon","Fandral","Firebird","Foggy Nelson","Franklin Richards","Gargoyle (Defender)","General 'Thunderbolt' Ross","Gorgon","Guardian (James Mac Hudson)","Hawkeye","Heimdall","Hela","Hellcat","Hellstorm","Hogun","Hulk","Human Torch","Iceman","Invisible Woman","Iron Fist","Iron Man","Ironclad","J. Jonah Jameson","Jack of Hearts","Jackdaw (Bird lady)","Jim Wilson","Karnak","Leader","Lockjaw","Luke Cage","Luna","Machine Man","Medusa","Mr. Fantastic","Nick Fury","Nightcrawler","Northstar","Odin","Professor X","Quasar","Quicksilver","Red Wolf (Will Talltrees)","Rick Jones","Sabra","Sasquatch","Scarlet Witch","Shadowcat (Kitty Pryde)","Shaman","Shamrock","She-Hulk","Shooting Star","Sif","Silver Surfer","Snowbird","Spider-Man","Stingray","Storm","Sturky","Sub-Mariner","Sunfire","Texas Twister","Thing","Thor","Tigra","Torpedo","Triton","Uatu the Watcher","Ursa Major","Valkyrie","Vanguard","Vapor","Vashti","Vector","Vision","Wasp","Willie Lumpkin","Wolverine","Wonder Man","X-Ray"],"name":"Hulk #277-279","link":"hulk_277","credits":["Bill Mantlo","Greg LaRocque","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema","Mark Gruenwald"],"i":2537},{"year":1982,"characters":["Alicia Masters","Iron Fist","Luke Cage","Thing"],"name":"Marvel Two-In-One #94","link":"marvel_two-in-one_94","credits":["David Anthony Kraft","Ron Wilson","Ricardo Villamonte","Jim Salicrup"],"i":2538},{"year":1982,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Felipe Picaro","Harry Osborn","Hawkeye","Iron Man","Jarvis","Liz Allan","Picaro","Professor Andre LeClaire","She-Hulk","Spider-Man","Thing","Thor","Wasp"],"name":"Amazing Spider-Man annual #16","link":"amazing_spider-man_annual_16","credits":["John Romita Sr.","John Romita Jr.","Roger Stern","Tom DeFalco"],"i":2539},{"year":1982,"characters":["Adria","Demonicus","Dr. Strange","Eternity","Kaecilius","Morgana Blessing","Sara Wolfe","Wong"],"name":"Doctor Strange #56","link":"doctor_strange_56","credits":["Terry Austin","Roger Stern","Al Milgrom","Paul Smith"],"i":2540},{"year":1983,"characters":["Alicia Masters","Living Mummy","Nephrus","Thing"],"name":"Marvel Two-In-One #95","link":"marvel_two-in-one_95","credits":["Alan Kupperberg","Tom DeFalco","Jon D'Agostino","David Anthony Kraft","Linda Grant"],"i":2541},{"year":1982,"characters":["Black Mariah","D.W. Griffith","Iron Fist","Luke Cage","Moon Knight","Scimitar II"],"name":"Power Man & Iron Fist #88","link":"power_man_iron_fist_88","credits":["Denny O'Neil","Denys Cowan","Many Hands","Ralph Macchio"],"i":2542},{"year":1982,"characters":["Brenda Barclay","Darkoth","Fandral","Hogun","Iduna","Jolena","Loki","Mephisto","Midgard Serpent","Odin","Thor","Tyr","Volstagg"],"name":"Thor #325","link":"thor_325","credits":["Doug Moench","Alan Kupperberg","Jim Mooney","Mike Carlin","Jack Abel","Mark Gruenwald"],"i":2543},{"year":1982,"characters":["Balder","Brenda Barclay","Fandral","Heimdall","Hogun","Iduna","Loki","Mimir","Odin","Scarlet Scarab II","Shawna Lynde","Sif","Thor","Tyr","Volstagg"],"name":"Thor #326","link":"thor_326","credits":["Doug Moench","Alan Kupperberg","John Tartaglione","Mike Carlin","Jon D'Agostino","Mark Gruenwald"],"i":2544},{"year":1982,"characters":["Ka-Zar","Kraven the Hunter","Shanna the She-Devil","Spider-Man","Zabu"],"name":"Ka-Zar the Savage #18-21","link":"ka-zar_the_savage_18-21","credits":["Louise Simonson","Armando Gil","Brent Anderson","Bruce Jones","Mel Candido","Danny Fingeroth","Ron Frenz"],"i":2545},{"year":1982,"characters":["Bill Foster","Daddy Longlegs","Digger (Night Shift)","Lindsay McCabe","Spider-Woman (Jessica Drew)"],"name":"Spider-Woman #47","link":"spider-woman_47","credits":["Ann Nocenti","Carl Potts","Mike Carlin","Mark Gruenwald","Brian Postman"],"i":2546},{"year":1982,"characters":["Alicia Masters","Captain America","Champion","Colossus","Cyclops","Doc Samson","Hawkeye","Hulk","Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Nightcrawler","Professor X","Sasquatch","Scarlet Witch","Shadowcat (Kitty Pryde)","She-Hulk","Spider-Man","Storm","Sub-Mariner","Thing","Thor","Vision","Wasp","Wolverine","Wonder Man"],"name":"Marvel Two-In-One annual #7","link":"marvel_two-in-one_annual_7","credits":["Bob Camp","Armando Gil","Jim Salicrup","Frank Giacoia","Tom DeFalco","Ron Wilson","Chic Stone","Dan Green","Mike Esposito"],"i":2547},{"year":1983,"characters":["Alicia Masters","Ant-Man (Scott Lang)","Beetle","Bill Foster","Captain America","Celia Jackson","Colossus","Constrictor","Cyclops","Daredevil","Dr. Doom","Fabian Stankowicz","Franklin Richards","Hawkeye","Hijacker","Hulk","Human Torch","Invisible Woman","Iron Man","Letha","Mad Thinker","Melters","Mirage (Desmond Charne)","MODOK","Mole Man","Mr. Fantastic","Nightcrawler","Poundcakes","Rhino","Sandman","Sasquatch","Scarlet Witch","Shadowcat (Kitty Pryde)","She-Hulk","Shellshock","Songbird (Screaming Mimi)","Spider-Man","Storm","Sub-Mariner","Thing","Thor","Titania (Grappler)","Vision","Wasp","Whiplash (Blacklash)","Wolverine","Wonder Man"],"name":"Marvel Two-In-One #96","link":"marvel_two-in-one_96","credits":["Tom DeFalco","Ron Wilson","Lance Tooks","Linda Grant","Mike Esposito"],"i":2548},{"year":1982,"characters":["Dr. Strange","Myron Wilburn","Quasar","Scarlet Witch","Set","Spider-Man","Thing","Vision","Wong"],"name":"Marvel Team-Up annual #5","link":"marvel_team-up_annual_5","credits":["Tom DeFalco","Mark Gruenwald","Jim Mooney"],"i":2549},{"year":1982,"characters":["Colossus","Cyclops","Dracula","Lilith (Dracula's Daughter)","Nightcrawler","Rachel Van Helsing","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men annual #6","link":"uncanny_x-men_annual_6","credits":["Bob Wiacek","Chris Claremont","Bill Sienkiewicz","Louise Simonson"],"i":2550},{"year":1983,"characters":["Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Iron Man","Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #97","link":"marvel_two-in-one_97","credits":["Tom DeFalco","Ron Wilson","David Michelinie","Jon D'Agostino"],"i":2551},{"year":1985,"characters":["She-Hulk","Storm","Tigra","Timekeeper","Wasp"],"name":"The Aladdin Effect (Marvel Graphic Novel #16)","link":"the_aladdin_effect_marvel_grap","credits":["Greg LaRocque","Lynne Cohen","David Michelinie","Jim Shooter","Vincent Colletta"],"i":2552},{"year":1983,"characters":["Black Bolt","Bova","Captain America","Crystal","Gorgon","Grim Reaper","Hawkeye","Holly Ladonna","Iron Man","ISBISA","Jarvis","Karnak","Lockjaw","Luna","Magneto","Maximus","Medusa","Modred the Mystic","Nuklo","Quicksilver","Samhain","Scarlet Witch","She-Hulk","Thor","Triton","Vision","Wasp","Whizzer","Wonder Man"],"name":"Vision and the Scarlet Witch #1-4","link":"vision_and_the_scarlet_witch_1","credits":["Bill Mantlo","Ian Akin","Brian Garvey","Rick Leonardi","Mark Gruenwald"],"i":2553},{"year":1983,"characters":["Franklin Richards","Invisible Woman","Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #98","link":"marvel_two-in-one_98","credits":["Frank Giacoia","Tom DeFalco","Ron Wilson","David Michelinie"],"i":2554},{"year":1982,"characters":["Brynocki","Clive Reston","Dark Angel (Mia Lessing)","Leiko Wu","Mordillo","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #119","link":"master_of_kung_fu_119","credits":["Marc Silvestri","Doug Moench","Kevin Dzuban","Ralph Macchio"],"i":2555},{"year":1983,"characters":["ROM","Thing"],"name":"Marvel Two-In-One #99","link":"marvel_two-in-one_99","credits":["Bill Mantlo","Kevin Dzuban","Bob Hall","Tom DeFalco"],"i":2556},{"year":1982,"characters":["Ben Urich","Blake Tower","Boomerang","Doctor Octopus","Joe 'Robbie' Robertson","Owl","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #73","link":"peter_parker_the_spectacular_s_68","credits":["Jim Mooney","Bill Mantlo","Linda Grant","Tom DeFalco","Al Milgrom"],"i":2557},{"year":1983,"characters":["Invisible Woman","Mr. Fantastic","Thing"],"name":"Marvel Two-In-One #100","link":"marvel_two-in-one_100","credits":["Al Milgrom","Frank Giacoia","Tom DeFalco","John Byrne","Ron Wilson","Kevin Dzuban"],"i":2558},{"year":1982,"characters":["Zombie (Simon Garth)"],"name":"Bizarre Adventures #33","link":"bizarre_adventures_33","credits":["Denny O'Neil","Dave Simons","Doug Moench","Ralph Macchio"],"i":2559},{"year":1983,"characters":["Cowboy","Georgiana Hebb","Honcho","Marauder","R.U. Reddy","Wolf","Wrench"],"name":"Team America #10","link":"team_america_10","credits":["Vincent Colletta","Steven Grant","Tom DeFalco","Alan Kupperberg"],"i":2560},{"year":1983,"characters":["D.W. Griffith","Harmony Young","Iron Fist","Luke Cage"],"name":"Power Man & Iron Fist #89","link":"power_man_iron_fist_89","credits":["Denny O'Neil","Carl Potts","Denys Cowan","Ralph Macchio"],"i":2561},{"year":1983,"characters":["Dr. Strange","Scarlet Witch","Spider-Man","Tigra","Wong","Zabo"],"name":"Marvel Team-Up #125","link":"marvel_team-up_125","credits":["Mary Jo Duffy","Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Dan Green","Linda Grant","Mike Esposito"],"i":2562},{"year":1983,"characters":["Arthur Chekov","Aunt May","Harriet Rose Palermo","Martha (Aunt May's Boarder)","Nate Lubenski","Sophie (Aunt May's Boarder)","Spider-Man","Stilt-Man","Vic Martinelli","Victor Palermo"],"name":"Amazing Spider-Man #237","link":"amazing_spider-man_237","credits":["Bill Mantlo","Bob Hall","Frank Giacoia","Tom DeFalco","Roger Stern","Linda Grant"],"i":2563},{"year":1983,"characters":["Cowboy","Georgiana Hebb","Ghost Rider (Johnny Blaze)","Honcho","Marauder","R.U. Reddy","Red Fowler","Wolf","Wrench","Zarathos"],"name":"Team America #11-12","link":"team_america_11-12","credits":["Dave Simons","Don Perlin","Tom DeFalco","Jim Shooter","Vincent Colletta"],"i":2564},{"year":1983,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Egghead","Hawkeye","Henry Pym","Invisible Woman","Iron Man","Jarvis","Mr. Fantastic","Plantman","She-Hulk","Thor","Wasp","Wizard"],"name":"Avengers #227","link":"avengers_227","credits":["Sal Buscema","Mike Carlin","Roger Stern","Brett Breeding","Mark Gruenwald"],"i":2565},{"year":1983,"characters":["Balder","Fandral","Heimdall","Hogun","Iron Man","Loki","Midgard Serpent","Nurse Stevens","Odin","Sif","Thor","Tyr","Volstagg"],"name":"Thor #327","link":"thor_327","credits":["Doug Moench","Alan Kupperberg","Jim Mooney","Mike Carlin","Mark Gruenwald"],"i":2566},{"year":1992,"characters":["Ghost Rider (Johnny Blaze)","Red Fowler","Zarathos"],"name":"Marvel Super Heroes #11 (Ghost Rider)","link":"marvel_super_heroes_11_ghost_r","credits":["Greg LaRocque","Dan Cuddy","Tina Chrioproces","Rob Tokar","Vincent Colletta","Anna Mazzarelli","Joe Andreani"],"i":2567},{"year":1983,"characters":["Azmodeus","Corky the Clown","Cynthia Randolph","Dreamstalker","Freakmaster","Ghost Rider (Johnny Blaze)","Mephisto","Nightmare","Ralph Quentin","Red Fowler","Roxanne Simpson","Vincenzo","Zarathos"],"name":"Ghost Rider #76-79","link":"ghost_rider_76-79","credits":["Dave Simons","Don Perlin","Bob Budiansky","Tom DeFalco","Kevin Dzuban","J.M. DeMatteis","Linda Grant"],"i":2568},{"year":1983,"characters":["Centurious the Soulless Man","Clown","Corky the Clown","Cynthia Randolph","Ghost Rider (Johnny Blaze)","Mephisto","Ralph Quentin","Red Fowler","Roxanne Simpson","Sin Eater (Ghost Rider villain)","Vincenzo","Zarathos"],"name":"Ghost Rider #80-81","link":"ghost_rider_81","credits":["Eliot Brown","Bob Budiansky","Tom DeFalco","Dan Bulanadi","Kevin Dzuban","J.M. DeMatteis"],"i":2569},{"year":1983,"characters":["Balder","Fandral","Heimdall","Hela","Hogun","Megatak","Midgard Serpent","Nurse Stevens","Odin","Shawna Lynde","Sif","Thor","Volstagg"],"name":"Thor #328","link":"thor_328","credits":["Doug Moench","Alan Kupperberg","Mike Carlin","Mark Gruenwald","Vincent Colletta"],"i":2570},{"year":1983,"characters":["Indries Moomji","Iron Man","Melter","Mrs. Arbogast","Obadiah Stane","Pepper Potts","Vic Martinelli","War Machine"],"name":"Iron Man #164-167","link":"iron_man_164-167","credits":["Steven Mitchell","Mike Carlin","Luke McDonnell","Mark Gruenwald","Denny O'Neil"],"i":2571},{"year":1983,"characters":["Nurse Stevens","Shawna Lynde","Sif","Thor"],"name":"Thor #329","link":"thor_329","credits":["Herb Trimpe","Alan Zelenetz","Mark Gruenwald","Vincent Colletta"],"i":2572},{"year":1983,"characters":["Rufus Carter","Shang-Chi"],"name":"Master of Kung Fu #120","link":"master_of_kung_fu_120","credits":["Doug Moench","Gene Day","Ralph Macchio"],"i":2573},{"year":1983,"characters":["Aragorn","Dolly Donahue","Dr. Strange","Gargoyle (Defender)","Hellcat","Overmind","Scarlet Witch","Valkyrie","Vera Cantor","Vision"],"name":"Defenders #116","link":"defenders_116","credits":["Al Milgrom","Don Perlin","Many Hands (inc. Michael Mignola)","J.M. DeMatteis"],"i":2574},{"year":1983,"characters":["Bereet","Hulk","Jackdaw (Bird lady)","Leader","Rick Jones"],"name":"Hulk #280","link":"hulk_280","credits":[],"i":2575},{"year":2012,"characters":["Captain Marvel (Monica Rambeau)","Hawkeye","Hulk","Iron Man","She-Hulk","Thor","Wasp"],"name":"Hulk Smash Avengers #3","link":"hulk_smash_avengers_3","credits":["Bill Roseman","Jake Thomas","Roger Stern","Jay Leisten","Axel Alonso","Karl Moline"],"i":2576},{"year":1983,"characters":["Arsenal","Bereet","Betty Ross","Captain America","Captain Marvel (Monica Rambeau)","General 'Thunderbolt' Ross","Hawkeye","Hulk","Iron Man","Jackdaw (Bird lady)","Leader","Omnivac","Rick Jones","She-Hulk","Sturky","Thor","Wasp"],"name":"Hulk #281-284","link":"hulk_280-284","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Ann Nocenti","Sal Buscema"],"i":2577},{"year":1983,"characters":["Captain America","Scarecrow"],"name":"Captain America #280","link":"captain_america_280","credits":["Mick Zeck","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","John Beatty"],"i":2578},{"year":1983,"characters":["Ant-Man (Scott Lang)","Beetle","Captain America","Captain Marvel (Monica Rambeau)","Egghead","Elysius","Fred Sloan","Hawkeye","Henry Pym","Iron Man","ISAAC","Jarvis","Mentor","Moonstone (Karla Sofen)","Plantman","Radioactive Man","Scarlet Witch","She-Hulk","Shocker","Starfox","Thor","Tiger Shark","Trish Starr","Vision","Wasp"],"name":"Avengers #228-230","link":"avengers_228-229","credits":["Al Milgrom","Joe Sinnott","Mike Carlin","Roger Stern","Brett Breeding","Mark Gruenwald"],"i":2579},{"year":1983,"characters":["Biff Rifkin","Black Cat","Debra Whitman","Doctor Octopus","Jean DeWolff","Kingpin","Marcy Kane","Morris Sloan","Owl","Phillip Chang","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #74-76","link":"peter_parker_the_spectacular_s_69","credits":["Bill Mantlo","Bob Hall","Al Milgrom","Jim Mooney","Tom DeFalco","Linda Grant"],"i":2580},{"year":1983,"characters":["Amy Powell","Aunt May","Aunt Watson","Betty Brant","Black Cat","Donald L. Menken","Harry Osborn","Hobgoblin (Roderick Kingsley)","Jean DeWolff","Joe 'Robbie' Robertson","Lance Bannon","Madame Web","Mary Jane Watson","Nate Lubenski","Spider-Man"],"name":"Amazing Spider-Man #238-239","link":"amazing_spider-man_238-239","credits":["John Romita Jr.","Frank Giacoia","Tom DeFalco","John Romita Sr.","Roger Stern","Lance Tooks"],"i":2581},{"year":1983,"characters":["Colleen Wing","D.W. Griffith","Harmony Young","Iron Fist","Jennie Royce","Jeryn Hogarth","Luke Cage","Misty Knight","Solace","Unus"],"name":"Power Man & Iron Fist #90","link":"power_man_iron_fist_90","credits":["Denny O'Neil","Kurt Busiek","Denys Cowan","Mel Candido"],"i":2582},{"year":1983,"characters":["Belasco","Buth","Dherk","Ka-Zar","Mamie Muggins","Shanna the She-Devil","Spider-Man","Zabu"],"name":"Ka-Zar the Savage #22-27","link":"ka-zar_the_savage_22-28","credits":["Mike Hernandez","Bob Hall","Armando Gil","Louise Simonson","Bruce Jones","Mel Candido","Danny Fingeroth","Ron Frenz","Val Mayerik"],"i":2583},{"year":1983,"characters":["David Ishima","Gypsy Moth","Lindsay McCabe","Poltergeist","Spider-Woman (Jessica Drew)","Tigra","Werewolf By Night"],"name":"Spider-Woman #48-49","link":"spider-woman_48","credits":["Ann Nocenti","Sam DeLaRosa","Mike Carlin","Mark Gruenwald","Brian Postman"],"i":2584},{"year":1983,"characters":["Howard The Duck"],"name":"Bizarre Adventures #34","link":"bizarre_adventures_34","credits":["Denny O'Neil","Ralph Macchio","Steven Grant","Paul Smith"],"i":2585},{"year":1983,"characters":["Arthur Chekov","Aunt May","Captain America","Harriet Rose Palermo","Martha (Aunt May's Boarder)","Nate Lubenski","Sophie (Aunt May's Boarder)","Spider-Man","Uatu the Watcher","Victor Palermo"],"name":"Marvel Team-Up #127","link":"marvel_team-up_127","credits":["Tom Defalco","Kerry Gammill","Lance Tooks","J.M. DeMatteis","Mike Esposito"],"i":2586},{"year":1983,"characters":["Crusader (Holy Zealot)","Fandral","Heimdall","Hela","Hogun","Nurse Stevens","Odin","Polowski","Sif","Thor"],"name":"Thor #330-331","link":"thor_330-331","credits":["Bob Hall","Mike Carlin","Alan Zelenetz","Mark Gruenwald","Vincent Colletta"],"i":2587},{"year":1983,"characters":["Bernie Rosenthal","Captain America","Gail Runciter","Mia Carrera","Roger Hochberg","Spider-Man","Vermin"],"name":"Marvel Team-Up #128","link":"marvel_team-up_128","credits":["Eliot Brown","Tom DeFalco","Kerry Gammill","J.M DeMatteis","Mike Esposito"],"i":2588},{"year":1983,"characters":["Shang-Chi","Sir Denis Nayland Smith","Vienna"],"name":"Master of Kung Fu #121","link":"master_of_kung_fu_121","credits":["Denny O'Neil","Vincent Colletta","Steven Grant","David Mazzucchelli"],"i":2589},{"year":1983,"characters":["Dr. Strange","Elf with a Gun","Gargoyle (Defender)","Hellcat","Luann Bloom","Overmind","Valkyrie","Wong"],"name":"Defenders #117","link":"defenders_117","credits":["Jack Abel","Don Perlin","Al Milgrom","J.M. DeMatteis"],"i":2590},{"year":1983,"characters":["Beefer","Carter Blair","Cassandra Ferlenghetti","Dazzler","Harry Osgood","Hunch","Lance Steele","Marx"],"name":"Dazzler #25","link":"dazzler_25","credits":["Ralph Macchio","M.D. Bright","Steven Grant","Dan Bulanadi"],"i":2591},{"year":1983,"characters":["Bernie Rosenthal","Captain America","Constrictor","Dum Dum Dugan LMD","Falcon","Gail Runciter","Madame Hydra (Viper)","Nick Fury","Nomad","Spider-Woman (Jessica Drew)"],"name":"Captain America #281-283","link":"captain_america_281-283","credits":["Mike Zeck","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","John Beatty"],"i":2592},{"year":1983,"characters":["Hellstorm","Luke Cage","Satannish"],"name":"Marvel Team-Up #126 (Son of Satan / Power Man)","link":"marvel_team-up_126_son_of_sata","credits":["Bob Hall","Mike Esposito","Tom DeFalco","J.M. DeMatteis"],"i":2593},{"year":1983,"characters":["Amy Powell","Aunt May","Black Cat","Boomerang","Doctor Octopus","Flash Thompson","Gladiator","Harry Osborn","J. Jonah Jameson","Jean DeWolff","Liz Allan","Lydia Hardy","Marcy Kane","Morris Sloan","Nate Lubenski","Phillip Chang","Punisher","Sha Shan","Spider-Man","Steve Hopkins"],"name":"Peter Parker, the Spectacular Spider-Man #77-79","link":"peter_parker_the_spectacular_s_70","credits":["Bill Mantlo","Al Milgrom","Eliot Brown","Jim Mooney","Tom DeFalco","Linda Grant"],"i":2594},{"year":1983,"characters":["Becky Blake","Ben Urich","Daredevil","Doris Urich","Foggy Nelson","Kingpin","Maxine Lavender"],"name":"Daredevil #192","link":"daredevil_192","credits":["Denny O'Neil","Alan Brennert","Klaus Janson"],"i":2595},{"year":1983,"characters":["Colossus","Cyclops","John Cheever","Magik","Magneto","Nightcrawler","Professor X","Rev. William Stryker","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Wolverine"],"name":"X-Men: God Loves Man Kills (Marvel Graphic Novel #5)","link":"x-men_god_loves_man_kills_marv","credits":["Brent Anderson","Danny Fingeroth","Chris Claremont","Louise Simonson","Rick Bryant"],"i":2596},{"year":1983,"characters":["Amanda Sefton","Colossus","Corsair","Cyclops","Havok","Lee Forrester","Lilandra","Lockheed","Madelyne Pryor","Magik","Moira MacTaggert","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Wolverine"],"name":"Uncanny X-Men #168","link":"uncanny_x-men_168","credits":["Bob Wiacek","Louise Simonson","Chris Claremont","Paul Smith"],"i":2597},{"year":1983,"characters":["Elf with a Gun","Gargoyle (Defender)","Hellcat","Hellstorm","Hellstorm Doppelganger","Luann Bloom","Seripha Thames"],"name":"Defenders #118","link":"defenders_118","credits":["Al Milgrom","Don Perlin","Andy Mushynsky","J.M. DeMatteis"],"i":2598},{"year":1983,"characters":["Thing"],"name":"Thing #1","link":"thing_1","credits":["John Byrne","Ron Wilson","Al Milgrom","Joe Sinnott"],"i":2599},{"year":1983,"characters":["Necrodamus","Scarlet Witch","Spider-Man","Vision"],"name":"Marvel Team-Up #129-130","link":"marvel_team-up_129-130","credits":["Eliot Brown","Tom DeFalco","Sal Buscema","Kerry Gammill","J.M. DeMatteis","Mike Esposito"],"i":2600},{"year":1983,"characters":["Black Jack Tarr","Clive Reston","Doctor Dredd","Leiko Wu","ROM","Shang-Chi","Sir Denis Nayland Smith","Starshine II"],"name":"ROM #38-39","link":"rom_38-39","credits":["Bill Mantlo","Ian Akin","Brian Garvey","Ann Nocenti","Sal Buscema"],"i":2601},{"year":1986,"characters":["Bart Jones","Cannonball","Firestar","Mirage (Dani Moonstar)","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Sunspot","White Queen (Emma Frost)","Wolfsbane"],"name":"Firestar #1","link":"firestar12","credits":["Stephen Leialoha","Tom DeFalco","Mary Wilshire","Ann Nocenti"],"i":2602},{"year":1983,"characters":["Angel","Beefer","Cassandra Ferlenghetti","Dazzler","Destiny","Harry Osgood","Henry Peter Gyrich","Hunch","Kenneth Barnett","Lance Steele","Marx","Mortis","Mystique","Nick Brown","Rogue"],"name":"Dazzler #26-28","link":"dazzler_28","credits":["Ralph Macchio","Danny Fingeroth","Bob Harras","Frank Springer","Vincent Colletta"],"i":2603},{"year":1983,"characters":["Amanda Sefton","Angel","Black King (Sebastian Shaw)","Caliban","Callisto","Candy Southern","Carol Danvers","Colossus","Cyclops","Destiny","Joe Danvers","Lilandra","Lockheed","Madelyne Pryor","Magik","Marie Danvers","Masque","Mastermind","Mystique","Nightcrawler","Pestilence (Horseman of Apocalypse)","Professor X","Rogue","Shadowcat (Kitty Pryde)","Storm","Sunder","Tessa","White Queen (Emma Frost)"],"name":"Uncanny X-Men #169-171","link":"uncanny_x-men_169-170","credits":["Walt Simonson","Danny Fingeroth","Chris Claremont","Paul Smith","Louise Simonson","Bob Wiacek"],"i":2604},{"year":1982,"characters":["Asano","Colossus","Cyclops","Mariko Yashida","Nightcrawler","Shadowcat (Kitty Pryde)","Storm","Wolverine","Yukio"],"name":"Wolverine #1-4","link":"wolverine_1-4","credits":["Frank Miller","Louise Simonson","Josef Rubinstein","Chris Claremont"],"i":2605},{"year":1983,"characters":["Anna Kappelbaum","Arnie Roth","Bernie Rosenthal","Captain America","Dum Dum Dugan LMD","Falcon","Josh Cooper","Leila Taylor","Mike Farrel","Nick Fury","Nomad","Patriot"],"name":"Captain America #284","link":"captain_america_284","credits":["Sal Buscema","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","Kim DeMulder"],"i":2606},{"year":1983,"characters":["Elf with a Gun","Luann Bloom"],"name":"Defenders #119","link":"defenders_119","credits":["Jack Abel","Sal Buscema","J.M. DeMatteis"],"i":2607},{"year":1983,"characters":["Bernie Rosenthal","Captain America","Jarvis","Josh Cooper","Mike Farrel","Nomad","Patriot","Porcupine"],"name":"Captain America #285","link":"captain_america_285","credits":["Sal Buscema","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","Kim DeMulder"],"i":2608},{"year":1991,"characters":["Scarlet Witch","Vision"],"name":"Marvel Fanfare #58 (Vision & Scarlet Witch)","link":"marvel_fanfare_58_vision_scarl","credits":["Bill Mantlo","Armando Gil","Al Milgrom","Sandy Plunkett","Rob Tokar"],"i":2609},{"year":1992,"characters":["Scarlet Witch","Vision"],"name":"Marvel Super Heroes #10 (Vision & Scarlet Witch)","link":"marvel_super_heroes_10_vision_","credits":["Bill Mantlo","Armando Gil","Dan Cuddy","Rob Tokar","Mike Mignola"],"i":2610},{"year":1983,"characters":["Amy Powell","Aunt May","Aunt Watson","Chris Keating","Gregory Bestman","Lance Bannon","Mary Jane Watson","Nate Lubenski","Spider-Man","Vulture"],"name":"Amazing Spider-Man #240-241","link":"amazing_spider-man_240-241","credits":["Eliot Brown","John Romita Jr.","Frank Giacoia","Tom DeFalco","Roger Stern","Bob Layton"],"i":2611},{"year":1983,"characters":["Clive Reston","Fah Lo Suee","Leiko Wu","Shang-Chi","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #122","link":"master_of_kung_fu_122","credits":["Ernie Chan","Ralph Macchio","Doug Moench","William Johnson","Denny O'Neil"],"i":2612},{"year":1983,"characters":["Bertha","Iron Fist","Luke Cage","Stone-Face","Vienna"],"name":"Power Man & Iron Fist #91","link":"power_man_iron_fist_91","credits":["Denny O'Neil","Greg LaRocque","Steven Grant"],"i":2613},{"year":1983,"characters":["Daredevil","Indries Moomji","Iron Man","Machine Man","Magma (Jonathan Darque)","Morley Erwin","Mrs. Arbogast","Obadiah Stane","Vic Martinelli","War Machine","Wasp"],"name":"Iron Man #168-170","link":"iron_man_168-169","credits":["Steven Mitchell","Mike Carlin","Luke McDonnell","Mark Gruenwald","Denny O'Neil"],"i":2614},{"year":1983,"characters":["Beast","Captain America","Captain Marvel (Monica Rambeau)","Hawkeye","Henry Peter Gyrich","Jarvis","Jasper Sitwell","Nick Fury","Plantman","Scarlet Witch","She-Hulk","Starfox","Thor","Vision","War Machine","Wasp","Wizard","Wonder Man"],"name":"Avengers #231-232","link":"avengers_230-232","credits":["Al Milgrom","Joe Sinnott","Mike Carlin","Roger Stern","Mark Gruenwald","Kim DeMulder"],"i":2615},{"year":1983,"characters":["Aged Genghis","Amanda Sefton","Clea","Dr. Doom","Dr. Strange","Dracula","Eye Killers","Hannibal King","James Mandarin","Margali Szardos","Morgana Blessing","Sara Wolfe","Umar","Wong"],"name":"Doctor Strange #57-59","link":"doctor_strange_57-59","credits":["Al Milgrom","Kevin Nowlan","Terry Austin","Roger Stern","Dan Green"],"i":2616},{"year":1983,"characters":["Captain Marvel (Monica Rambeau)","Dr. Strange","Dracula","Keith Kincaid","Polowski","Sif","Starfox","Thor"],"name":"Thor #332-333","link":"thor_333","credits":["Don Perlin","M.D. Bright","Mike Carlin","Alan Zelenetz","Mark Gruenwald","Vincent Colletta"],"i":2617},{"year":1983,"characters":["Angel","Aragorn","Beast","Burner (Crucible)","Cloud","Dr. Strange","Elf with a Gun","Gargoyle (Defender)","Harridan","Hellcat","Hellstorm","Hulk","Iceman","Lifter (Meteorite)","Luann Bloom","Mad Dog (Buzz Baxter)","Miracle Man","Moondragon","Odin","Overmind","Sassafras","Scarlet Witch","Seraph","Shocker (Paralyzer)","Silver Surfer","Slither","Sub-Mariner","Valkyrie","Vera Cantor","Vision","Wong"],"name":"Defenders #120-125","link":"defenders_120-122","credits":["Al Milgrom","Don Perlin","Alan Kupperberg","Andy Mushynsky","Carl Potts","Jack Abel","J.M. DeMatteis","Kim DeMulder"],"i":2618},{"year":1983,"characters":["Black Bolt","Captain America","Captain Marvel (Monica Rambeau)","Carlo Zota","Crystal","Gorgon","Human Torch","Invisible Woman","Iridia","Karnak","Lockjaw","Luna","Maris Morlak","Maximus","Mr. Fantastic","Quicksilver","Scarlet Witch","She-Hulk","Stallior","Starfox","Thing","Thor","Triton","Vision","Wasp","Wladyslav Shinski"],"name":"Avengers annual #12","link":"avengers_annual_12","credits":["Bill Mantlo","Mark Gruenwald","Rick Magyar","Butch Guice"],"i":2619},{"year":1983,"characters":["Alicia Masters","Annihilus","Captain America","Captain Marvel (Monica Rambeau)","Daredevil","Franklin Richards","Galactus","Human Torch","Invisible Woman","Julie Angel","Mr. Fantastic","Nova (Frankie Raye)","Scarlet Witch","Sharon Selleck","She-Hulk","Starfox","Thing","Thor","Vision","Wasp"],"name":"Fantastic Four #251-256","link":"fantastic_four_251-256","credits":["Al Milgrom","Ann Nocenti","Tom DeFalco","John Byrne","Lance Tooks","Linda Grant"],"i":2620},{"year":1983,"characters":["Alicia Masters","Annihilus","Bernie Rosenthal","Captain America","Captain Marvel (Monica Rambeau)","Dr. Strange","Franklin Richards","Hawkeye","Human Torch","Invisible Woman","Jarvis","Jorge Latham","Mr. Fantastic","Scarlet Witch","She-Hulk","Sheila Danning","Starfox","Thor","Vision","Wasp"],"name":"Avengers #233-234","link":"avengers_233-234","credits":["Al Milgrom","Joe Sinnott","Mike Carlin","John Byrne","Roger Stern","Mark Gruenwald"],"i":2621},{"year":1983,"characters":["Blade","Captain Marvel (Monica Rambeau)","Dr. Strange","Dracula","Frank Drake","Hannibal King","Harold H. Harold","Jarvis","Lilith (Dracula's Daughter)","Morgana Blessing","Sara Wolfe","Scarlet Witch","Wong"],"name":"Doctor Strange #60-62","link":"doctor_strange_60-62","credits":["Al Milgrom","Rick Magyar","Stephen Leialoha","Terry Austin","Carl Potts","Roger Stern","Dan Green"],"i":2622},{"year":1983,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Jane Foster","Jarvis","Keith Kincaid","Odin","Possessor","Shawna Lynde","She-Hulk","Sif","Starfox","Thor","Wasp"],"name":"Thor #334-335","link":"thor_334","credits":["M.D. Bright","Mike Carlin","Alan Zelenetz","Mark Gruenwald","Vincent Colletta"],"i":2623},{"year":1983,"characters":["Captain America","Kubik","Myron Wilburn","Shaper of Worlds","Supreme Intelligence","Wundarr (Aquarian)"],"name":"Captain America annual #7","link":"captain_america_annual_7","credits":["Kim DeMulder","Brian Postman","Mark Gruenwald","Peter Gillis"],"i":2624},{"year":1983,"characters":["Human Torch","Invisible Woman","Julie Angel","Mr. Fantastic","Roberta","Sharon Selleck","Thing"],"name":"Fantastic Four annual #17","link":"fantastic_four_annual_17","credits":["John Byrne","Carl Potts"],"i":2625},{"year":1983,"characters":["Alicia Masters","Franklin Richards","Invisible Woman","Mr. Fantastic","Thing","Willie Lumpkin"],"name":"Thing #2","link":"thing_2","credits":["Ann Nocenti","John Byrne","Ron Wilson","Al Milgrom"],"i":2626},{"year":1983,"characters":["Anelle","Death","Empress R'Klll","Franklin Richards","Galactus","HUBERT","Human Torch","Invisible Woman","Jake Grimm","Julie Angel","Mr. Fantastic","Nova (Frankie Raye)","Scarlet Witch","Sharon Selleck","Thing","Vision"],"name":"Fantastic Four #257","link":"fantastic_four_257","credits":["Ann Nocenti","John Byrne","Al Milgrom"],"i":2627},{"year":1983,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Raymond Sikorski","Scarlet Witch","She-Hulk","Spider-Man","Starfox","Vision","Wasp","Wizard"],"name":"Avengers #235","link":"avengers_235","credits":["Bob Budiansky","Joe Sinnott","Mike Carlin","Roger Stern","Mark Gruenwald"],"i":2628},{"year":1983,"characters":["Black Bolt","Crystal","Gorgon","Karnak","Lockjaw","Luna","Medusa","Puppet Master","Quicksilver","Roberta","Thing","Triton"],"name":"Thing #3-4","link":"thing_3-6","credits":["Ann Nocenti","John Byrne","Ron Wilson","Hilary Barta"],"i":2629},{"year":1983,"characters":["Aunt May","Doombot A76","Dr. Doom","Dr. Hauptmann","Human Torch","Invisible Woman","Kristoff","Norm McArthur","Sharon Selleck","Silver Surfer","Sub-Mariner","Terrax","Thing","Zarrko the Tomorrow Man"],"name":"Fantastic Four #258-260","link":"fantastic_four_258-260","credits":["Michael Higgins","Bob Budiansky","Ann Nocenti","Carl Potts","John Byrne"],"i":2630},{"year":1983,"characters":["Aurora","Dan Smallwood","Doug Thompson","Gary Cody","Guardian (James Mac Hudson)","Invisible Woman","Marrina","Master of the World","Northstar","Puck","Sasquatch","Shaman","Snowbird","Sub-Mariner"],"name":"Alpha Flight #2-4","link":"alpha_flight_2-5","credits":["Denny O'Neil","John Byrne"],"i":2631},{"year":1984,"characters":["Eternity","Galactus","Gladiator (Shiar)","Human Torch","Invisible Woman","Jarvis","Lilandra","Marrina","Mr. Fantastic","Nova (Frankie Raye)","Odin","Roberta","Scarlet Witch","Silver Surfer","Sub-Mariner","Thing","Uatu the Watcher","Vision"],"name":"Fantastic Four #261-262","link":"fantastic_four_261-262","credits":["John Byrne","Bob Budianksy","Michael Higgins"],"i":2632},{"year":1983,"characters":["Black Jack Tarr","Leiko Wu","Luke Cage","Shang-Chi","Shang-Chi's mother","Sir Denis Nayland Smith"],"name":"Master of Kung Fu #123-125","link":"master_of_kung_fu_123-125","credits":["Alan Kupperberg","Alan Zelenetz","William Johnson","Mike Mignola","Denny O'Neil"],"i":2633},{"year":1983,"characters":["Darkstar","Devastator II","Doctor Dredd","Dr. Strange","Gremlin","In-Betweener","John Clark","Living Tribunal","Quasimodo","ROM","Sarah Clark","Starshine II","Steve Jackson","Torpedo","Ursa Major","Vanguard"],"name":"ROM #40-46","link":"rom_41-42","credits":["Ralph Macchio","Bill Mantlo","Ian Akin","Brian Garvey","Ann Nocenti","Sal Buscema"],"i":2634},{"year":1983,"characters":["Bob Diamond","Colleen Wing","D.W. Griffith","Eel II","Hammerhead","Harmony Young","Iron Fist","Luke Cage","Man-Mountain Marko","Misty Knight"],"name":"Power Man & Iron Fist #92","link":"power_man_iron_fist_92","credits":["Denny O'Neil","Kurt Busiek","Denys Cowan","Mel Candido"],"i":2635},{"year":1983,"characters":["Daredevil"],"name":"Daredevil #193","link":"daredevil_193","credits":["Larry Hama","Klaus Janson","Denny O'Neil"],"i":2636},{"year":1983,"characters":["Dr. Strange","Ian McNee","Melinda Morrison","Scarlet Witch","Spider-Man","Wong","Xandu"],"name":"Marvel Fanfare #6","link":"marvel_fanfare_6","credits":["Al Milgrom","P. Craig Russell","Sandy Plunkett","Roger Stern","Charles Vess","Mike Barr"],"i":2637},{"year":1983,"characters":["Poppa Wheeler","U.S. Archer","Wide Load Annie"],"name":"US 1 #1","link":"us_1_1","credits":["Herb Trimpe","Al Milgrom","Ralph Macchio"],"i":2638},{"year":1983,"characters":["Ant-Man (Scott Lang)","Bereet","Hulk","Rick Jones","Zzzax"],"name":"Hulk #285","link":"hulk_285","credits":["Bill Mantlo","Al Milgrom","Ann Nocenti","Sal Buscema","Chic Stone"],"i":2639},{"year":1983,"characters":["Blind Ali","Bob Diamond","Chemistro","Chemistro III","Colleen Wing","D.W. Griffith","Iron Fist","Jennie Royce","Luke Cage","Misty Knight","Rafael Scarfe"],"name":"Power Man & Iron Fist #93-94","link":"power_man_iron_fist_93-94","credits":["Ernie Chan","Kurt Busiek","Ricardo Villamonte","Denny O'Neil","Denys Cowan"],"i":2640},{"year":1983,"characters":["Daredevil","Foggy Nelson","Kingpin"],"name":"Daredevil #194","link":"daredevil_194","credits":["Denny O'Neil","Linda Grant","Klaus Janson"],"i":2641},{"year":1983,"characters":["Angar the Screamer","Daddy Longlegs","Dansen Macabre","David Ishima","Enforcer","Flying Tiger","Gypsy Moth","Hangman","Killer Shrike","Lindsay McCabe","Magnus","Morgan Le Fey","Needle","Nekra","Poltergeist","Shroud","Spider-Woman (Jessica Drew)","Tatterdemalion","Ticktock","Tigra","Werewolf By Night"],"name":"Spider-Woman #50","link":"spider-woman_50","credits":["Ann Nocenti","Brian Postman","Mark Gruenwald","Sam DeLaRosa"],"i":2642},{"year":1983,"characters":["Ben Urich","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Lance Bannon","Marla Madison Jameson","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #80","link":"peter_parker_the_spectacular_s_71","credits":["Bill Mantlo","Eliot Brown","Tom DeFalco","Kevin Dzuban","Ron Frenz"],"i":2643},{"year":1983,"characters":["Becky Blake","Daredevil","Foggy Nelson","Heather Glenn","Iron Man","Tarkington Brown"],"name":"Daredevil #195","link":"daredevil_195","credits":["Denny O'Neil","Linda Grant","Klaus Janson"],"i":2644},{"year":1983,"characters":["Artemus Pithins","Captain America","Clytemnestra Erwin","Firebrand","Heather Glenn","Indries Moomji","Iron Man","Jasper Sitwell","Krang","Morley Erwin","Mrs. Arbogast","Mrs. Rhodes","Nick Fury","Obadiah Stane","Thunderball","Vic Martinelli","War Machine","Yvette Avril"],"name":"Iron Man #171-175","link":"iron_man_171-175","credits":["Steven Mitchell","Sam DeLaRosa","Mike Carlin","Luke McDonnell","Mark Gruenwald","Denny O'Neil"],"i":2645},{"year":1983,"characters":["Frog-Man II","Leap-Frog","Roger Hochberg","Spider-Man","White Rabbit"],"name":"Marvel Team-Up #131","link":"marvel_team-up_131","credits":["Eliot Brown","Tom DeFalco","Kerry Gammill","J.M. DeMatteis","Mike Esposito"],"i":2646},{"year":1983,"characters":["Cannonball","Karma","Lilandra","Mirage (Dani Moonstar)","Professor X","Stevie Hunter","Sunspot","Wolfsbane"],"name":"New Mutants #4","link":"new_mutants_4","credits":["Bob McLeod","Chris Claremont","Sal Buscema","Louise Simonson"],"i":2647},{"year":1983,"characters":["Mary McGrill","Poppa Wheeler","Taryn O'Connell","U.S. Archer","Wide Load Annie"],"name":"US 1 #2","link":"us_1_2","credits":["Herb Trimpe","Al Milgrom","Ralph Macchio","Mike Esposito"],"i":2648},{"year":1983,"characters":["Betrand Crawley","Frenchie","Gena Landers","Lt. Flint","Marlene Alraune","Moon Knight","Samuels","Werewolf By Night"],"name":"Moon Knight #29-30","link":"moon_knight_29-30","credits":["Doug Moench","Bill Sienkiewicz","Kevin Nowlan","Denny O'Neil","Linda Grant"],"i":2649},{"year":1983,"characters":["Amy Powell","Ben Urich","Black Cat","Lance Bannon","Lizard","Mad Thinker","Mamie Muggins","Mary Jane Watson","Morris Sloan","Roger Hochberg","Spider-Man"],"name":"Amazing Spider-Man #242-243","link":"amazing_spider-man_242-243","credits":["Eliot Brown","Dave Simons","John Romita Jr.","Tom DeFalco","Roger Stern","Kevin Dzuban"],"i":2650},{"year":1983,"characters":["Dr. Faustus","Every-Man","Mr. Fantastic","Spider-Man"],"name":"Marvel Team-Up #132-133","link":"marvel_team-up_132","credits":["Eliot Brown","Tom DeFalco","Sal Buscema","J.M. DeMatteis","Mike Esposito"],"i":2651},{"year":1983,"characters":["Man-Thing"],"name":"Marvel Fanfare #9","link":"marvel_fanfare_9","credits":["Al Milgrom","J.J. Birch","Gray Morrow","J.M. DeMatteis"],"i":2652},{"year":1983,"characters":["Black Cat","Boomerang","Cloak","Dagger","Jean DeWolff","Kingpin","Mamie Muggins","Punisher","Spider-Man","Vanessa Fisk"],"name":"Peter Parker, the Spectacular Spider-Man #81-82","link":"peter_parker_the_spectacular_s_19","credits":["Bill Mantlo","Al Milgrom","Eliot Brown","Jim Mooney","Tom DeFalco"],"i":2653},{"year":1984,"characters":["Cloak","Dagger","Father Delgado","Mayhem"],"name":"Cloak and Dagger #1-4","link":"cloak_dagger_1-4","credits":["Bill Mantlo","Terry Austin","Tom DeFalco","Rick Leonardi"],"i":2654},{"year":1983,"characters":["Betty Brant","Black Cat","Blake Tower","Harry Osborn","Hobgoblin (Roderick Kingsley)","J. Jonah Jameson","Lefty Donovan","Liz Allan","Lou Snider","Mary Jane Watson","Morris Sloan","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #244-245","link":"amazing_spider-man_244-245","credits":["Eliot Brown","Dave Simons","John Romita Jr.","Tom DeFalco","Klaus Janson","Roger Stern"],"i":2655},{"year":1983,"characters":["Cannonball","Cloak","Dagger","Father Delgado","Mirage (Dani Moonstar)","Spider-Man","Sunspot","Wolfsbane"],"name":"Marvel Team-Up annual #6","link":"marvel_team-up_annual_6","credits":["Bill Mantlo","Ron Frenz","Kevin Dzuban","Tom DeFalco"],"i":2656},{"year":1983,"characters":["Jack of Hearts","Major Martins","Marcy Kane","Phillip Chang","Spider-Man","Steve Hopkins"],"name":"Marvel Team-Up #134","link":"marvel_team-up_134","credits":["Bill Mantlo","Danny Fingeroth","Tom DeFalco","Ron Frenz","Bob DeNatale","Mike Esposito"],"i":2657},{"year":1983,"characters":["Colleen Wing","D.W. Griffith","Harmony Young","Iron Fist","Luke Cage","Misty Knight"],"name":"Power Man & Iron Fist #95","link":"power_man_iron_fist_95","credits":["Ernie Chan","Kurt Busiek","Denny O'Neil"],"i":2658},{"year":1983,"characters":["Colossus","Magik","Nightcrawler","Shadowcat (Kitty Pryde)","Spider-Man","Storm","Wolverine"],"name":"Marvel Team-Up #135","link":"marvel_team-up_135","credits":["Bill Mantlo","Danny Fingeroth","Tom DeFalco","Ron Frenz","Bob DeNatale","Mike Esposito"],"i":2659},{"year":1983,"characters":["Axe","Black King (Sebastian Shaw)","Cannonball","Colonel Michael Rossi","Colossus","Cowboy","Emmanuel Da Costa","General Nguyen Coy","Georgiana Hebb","Honcho","Karma","Lilandra","Madame Hydra (Viper)","Marauder","Mirage (Dani Moonstar)","Nightcrawler","Professor X","R.U. Reddy","Shadow King","Silver Samurai","Stevie Hunter","Storm","Sunspot","Wolf","Wolfsbane","Wrench"],"name":"New Mutants #5-7","link":"new_mutants_5-7","credits":["Armando Gil","Danny Fingeroth","Bob McLeod","Chris Claremont","Sal Buscema","John Tartaglione","Louise Simonson"],"i":2660},{"year":1983,"characters":["Baron von Blimp","Highwayman (US1)","Mary McGrill","Poppa Wheeler","Retread","Taryn O'Connell","U.S. Archer","Wide Load Annie"],"name":"US 1 #3","link":"us_1_3","credits":["Al Milgrom","Frank Springer","Michael Higgins","Ralph Macchio"],"i":2661},{"year":1983,"characters":["Hulk"],"name":"Hulk annual #12","link":"hulk_annual_12","credits":["Herb Trimpe","Bill Mantlo","Al Milgrom"],"i":2662},{"year":1983,"characters":["Colossus","Corsair","Cyclops","Havok","Lilandra","Lockheed","Madame Hydra (Viper)","Madelyne Pryor","Mariko Yashida","Mastermind","Nightcrawler","Polaris","Professor X","Rogue","Shadowcat (Kitty Pryde)","Silver Samurai","Storm","Wolverine","Yukio"],"name":"Uncanny X-Men #172-173","link":"uncanny_x-men_172-173","credits":["Danny Fingeroth","Chris Claremont","Paul Smith","Louise Simonson","Bob Wiacek"],"i":2663},{"year":1983,"characters":["Abomination","Bereet","Betty Ross","General 'Thunderbolt' Ross","Hulk","Kate Waynesboro","MODOK"],"name":"Hulk #286-290","link":"hulk_286","credits":["Bill Mantlo","Al Milgrom","Joe Sinnott","Jim Mooney","Ann Nocenti","Sal Buscema","Carl Potts","Kim DeMulder","Carlos Garzon","Chic Stone"],"i":2664},{"year":1983,"characters":["Chemistro","Chemistro III","Claire Temple","Colleen Wing","D.W. Griffith","Iron Fist","Luke Cage","Misty Knight","Rafael Scarfe","Solace"],"name":"Power Man & Iron Fist #96","link":"power_man_iron_fist_96","credits":["Ernie Chan","Kurt Busiek","Denny O'Neil","Mike Mignola"],"i":2665},{"year":1983,"characters":["Al the Alien","Baron von Blimp","Mary McGrill","Poppa Wheeler","Retread","Taryn O'Connell","U.S. Archer","Wide Load Annie"],"name":"US 1 #4-5","link":"us_1_4-5","credits":["Ralph Macchio","Al Milgrom","Bob Harras","Frank Springer","Mike Esposito"],"i":2666},{"year":1983,"characters":["Ben Urich","Black Cat","Glory Grant","J. Jonah Jameson","Jean DeWolff","Joe 'Robbie' Robertson","Punisher","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #83","link":"peter_parker_the_spectacular_s_21","credits":["Bill Mantlo","Al Milgrom","Danny Fingeroth","Jim Mooney","Bob DeNatale"],"i":2667},{"year":1983,"characters":["Bernie Rosenthal","Bombshell","Captain America","Crossfire","Hawkeye","Jorge Latham","Mockingbird","Oddball","Sheila Danning","Silencer"],"name":"Hawkeye #1-4","link":"hawkeye_1-4","credits":["Ian Akin","Brian Garvey","Eliot R. Brown","Dan Bulanadi","Brett Breeding","Mark Gruenwald","Denny O'Neil"],"i":2668},{"year":1983,"characters":["Claire Temple","Colleen Wing","D.W. Griffith","Fera","Harmony Young","Iron Fist","Luke Cage","Master Khan","Misty Knight"],"name":"Power Man & Iron Fist #97","link":"power_man_iron_fist_97-99","credits":["Ernie Chan","Kurt Busiek","Denny O'Neil","Mike Mignola"],"i":2669},{"year":1984,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Cannonball","Cowboy","Emmanuel Da Costa","Lilandra","Lucius Aquilla","Magma","Mirage (Dani Moonstar)","Nina da Costa","Professor X","R.U. Reddy","Sunspot","Wolf","Wolfsbane"],"name":"New Mutants #8-12","link":"new_mutants_8-12","credits":["Eliot Brown","Bob McLeod","Chris Claremont","Sal Buscema","Louis Simonson","Tom Mandrake"],"i":2670},{"year":1986,"characters":["Beast","Blake Tower","Captain Marvel (Monica Rambeau)","Carol Danvers","Jarvis","Mentor","Nick Fury","Thing","Wolverine","Wonder Man"],"name":"Marvel Fanfare #24","link":"marvel_fanfare_24","credits":["Al Milgrom","David Ross","Chris Claremont","Rosemary McCormick-Lowy","Bob Wiacek"],"i":2671},{"year":1983,"characters":["Colleen Wing","Comanche","D.W. Griffith","El Aguila","Fera","Harmony Young","Iron Fist","Jennie Royce","Jeryn Hogarth","Joy Meachum","Luke Cage","Master Khan","Misty Knight","Rafael Scarfe","Shades","Ward Meachum"],"name":"Power Man & Iron Fist #98-99","link":"power_man_iron_fist_98-99","credits":["Ernie Chan","Kurt Busiek","Denny O'Neil","Andy Mushynsky"],"i":2672},{"year":1983,"characters":["Betrand Crawley","Frenchie","Gena Landers","Joy Mercado","Lt. Flint","Moon Knight"],"name":"Moon Knight #33","link":"moon_knight_33","credits":["Joe Chiodo","Doug Moench","Brent Anderson","Bill Sienkiewicz","Kevin Nowlan","Carl Potts","Denny O'Neil","Linda Grant"],"i":2673},{"year":1983,"characters":["Brynocki","Mordillo","ROM","Starshine II"],"name":"ROM #47","link":"rom_47-49","credits":["Ralph Macchio","Bill Mantlo","Ian Akin","Brian Garvey","Sal Buscema"],"i":2674},{"year":1983,"characters":["Amanda Sefton","Banshee","Beast","Cannonball","Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Deborah Summers","Havok","Hepzibah","Lilandra","Lockheed","Madelyne Pryor","Mariko Yashida","Mastermind","Mirage (Dani Moonstar)","Moira MacTaggert","Nightcrawler","Philip Summers","Polaris","Professor X","Raza Longknife","Rogue","Shadowcat (Kitty Pryde)","Sikorsky","Silver Samurai","Storm","Sunspot","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #174-175","link":"uncanny_x-men_174-176","credits":["Eliot Brown","John Romita Jr.","Chris Claremont","Paul Smith","Louise Simonson","Bob Wiacek"],"i":2675},{"year":1983,"characters":["Captain Ultra","Fandral","Frigga","Heimdall","Jane Foster","Keith Kincaid","Sif","Thor"],"name":"Thor #336","link":"thor_336","credits":["Herb Trimpe","Ernie Chan","Alan Zelenetz","Mark Gruenwald","Vincent Colletta"],"i":2676},{"year":1987,"characters":["Heimdall","Odin","Sif","Thor","Vizier"],"name":"I, Whom the Gods Would Destroy (Marvel Graphic Novel #33)","link":"i_whom_the_gods_would_destroy_","credits":["Christopher Priest","Lynn E. Cohen","Ralph Macchio","Don Perlin","Tom DeFalco","Paul Ryan","John Romita Sr.","Jim Shooter","Vincent Colletta"],"i":2677},{"year":1983,"characters":["Black Cat","J. Jonah Jameson","Mary Jane Watson","Spider-Man","Uatu the Watcher"],"name":"Amazing Spider-Man #246","link":"amazing_spider-man_246","credits":["John Romita Jr.","Danny Fingeroth","Roger Stern","Bob DeNatale","Dan Green"],"i":2678},{"year":1983,"characters":["Blackout","Captain America","Captain Marvel (Monica Rambeau)","Electro","Guardsman II (Michael O'Brien)","Jarvis","Moonstone (Karla Sofen)","Raymond Sikorski","Rhino","Scarlet Witch","She-Hulk","Spider-Man","Starfox","Vision","Wasp"],"name":"Avengers #236-237","link":"avengers_236-238","credits":["Al Milgrom","Joe Sinnott","Mike Carlin","Roger Stern","Mark Gruenwald"],"i":2679},{"year":1983,"characters":["Belasco","Buth","Dherk","Ka-Zar","Leanne","Sep","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #28","link":"ka-zar_the_savage_28","credits":["Mike Mignola","Armando Gil","Mike Carlin","Danny Fingeroth"],"i":2680},{"year":1983,"characters":["Mary McGrill","Poppa Wheeler","Retread","U.S. Archer","Wide Load Annie"],"name":"US 1 #6","link":"us_1_6","credits":["Ralph Macchio","Al Milgrom","Bob Harras","Frank Springer","Mike Esposito"],"i":2681},{"year":1983,"characters":["Black King (Sebastian Shaw)","Colossus","Contessa Valentina Allegro De La Fontaine","Dr. Strange","Dum Dum Dugan LMD","Impossible Man","Jarvis","Ka-Zar","Lilandra","Lockheed","Magik","Nick Fury","Nightcrawler","Professor X","Rogue","Shadowcat (Kitty Pryde)","Shanna the She-Devil","She-Hulk","Storm","War Machine","White Queen (Emma Frost)","Wolverine","Zabu"],"name":"Uncanny X-Men annual #7","link":"uncanny_x-men_annual_7","credits":["Al Milgrom","Eliot Brown","Stephen Leialoha","Josef Rubinstein","Terry Austin","Chris Claremont","Sam DeLaRosa","Bill Anderson","Brett Breeding","Louise Simonson","Michael Golden","Bob Wiacek","Tom Mandrake","Bret Blevins"],"i":2682},{"year":1984,"characters":["Albert Devoor","Bernie Rosenthal","Captain America","Deathlok (alt. Luther Manning)","Nick Fury","Nomad","She-Hulk","Sister Pleasure","Starfox","Thor","Wasp"],"name":"Captain America #286-289","link":"captain_america_286","credits":["Mike Zeck","Mike Carlin","J.M. DeMatteis","Mark Gruenwald","John Beatty"],"i":2683},{"year":1983,"characters":["Atropos (Verdandi)","Clotho (Urd)","Lachesis (Skuld)"],"name":"Thor annual #11","link":"thor_annual_11","credits":["Alan Zelenetz","Mark Gruenwald","Bob Hall","Vincent Colletta"],"i":2684},{"year":1984,"characters":["Agnar","Balder","Beta Ray Bill","Eitri","Fafnir","Heimdall","Hogun","Huginn","Jasper Sitwell","Loki","Lorelei (Norse Goddess)","Muninn","Nick Fury","Odin","Sif","Skuttlebutt","Surtur","Thor","Toothgnasher","Toothgrinder","Volstagg"],"name":"Thor #337-340","link":"thor_337-340","credits":["Mark Gruenwald","Walt Simonson","Mike Carlin"],"i":2685},{"year":1984,"characters":["Arnie Roth","Baron Zemo (Helmut)","Bernie Rosenthal","Black Crow","Captain America","Falcon","Nomad","Red Skull","Redwing","Sin","Wasp"],"name":"Captain America #290","link":"captain_america_290","credits":["Mark Gruenwald","Stephen Leialoha","Mike Carlin","J.M. DeMatteis","Ron Frenz"],"i":2686},{"year":1984,"characters":["Captain America","Electro","Falcon","Redwing","Sgt. Tork"],"name":"Falcon #1-4","link":"falcon_1-4","credits":["Christopher Priest","M.D. Bright","Paul Smith","Michael Gustovich","Larry Hama","Vincent Colletta"],"i":2687},{"year":1983,"characters":["Iron Man","Morley Erwin","Obadiah Stane","War Machine"],"name":"Iron Man #176","link":"iron_man_176-177","credits":["Steven Mitchell","Mike Carlin","Luke McDonnell","Mark Gruenwald","Denny O'Neil"],"i":2688},{"year":1983,"characters":["Jarvis","Puppet Master","She-Hulk","Spider-Man","Thing","Wonder Man"],"name":"Thing #5-6","link":"thing_5-6","credits":["Ann Nocenti","John Byrne","Ron Wilson","Hilary Barta"],"i":2689},{"year":1983,"characters":["ROM","Starshine II"],"name":"ROM #48","link":"rom_48","credits":["Ralph Macchio","Bill Mantlo","Ian Akin","Brian Garvey","Sal Buscema"],"i":2690},{"year":1983,"characters":["Betrand Crawley","Frenchie","Gena Landers","Marlene Alraune","Moon Knight","Ray Landers","Ricky Landers"],"name":"Moon Knight #34","link":"moon_knight_34","credits":["Tony Isabella","Dan Bulanadi","Richard Howell","Bo Hampton","Denny O'Neil","Linda Grant"],"i":2691},{"year":1983,"characters":["Black Cat","J. Jonah Jameson","Lance Bannon","Lydia Hardy","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #84","link":"peter_parker_the_spectacular_s_72","credits":["Bill Mantlo","Dave Simons","Tom DeFalco","Danny Fingeroth"],"i":2692},{"year":1983,"characters":["Angel","Aragorn","Beast","Burner (Crucible)","Gargoyle (Defender)","Iceman","Leviathan (Gargantua)","Lifter (Meteorite)","Mad Dog (Buzz Baxter)","Moondragon","Nick Fury","Professor Power","Secret Empire Agent Number Seven","Shocker (Paralyzer)","Slither","Valkyrie"],"name":"Defenders #126","link":"defenders_126","credits":["Carl Potts","Alan Kupperberg","J.M. DeMatteis"],"i":2693},{"year":1984,"characters":["Aunt May","Aunt Watson","Frog-Man II","Mary Jane Watson","Nate Lubenski","Nose Norton","Spider-Man","Thunderball"],"name":"Amazing Spider-Man #247-248","link":"amazing_spider-man_247","credits":["John Romita Jr.","Danny Fingeroth","John Romita Sr.","Roger Stern","Brett Breeding","Ron Frenz","Bob DeNatale","Terry Austin- Inker"],"i":2694},{"year":1983,"characters":["Mary McGrill","Poppa Wheeler","Retread","Taryn O'Connell","U.S. Archer","Wide Load Annie"],"name":"US 1 #7","link":"us_1_7","credits":["Ralph Macchio","Al Milgrom","Bob Harras","Frank Springer","Mike Esposito"],"i":2695},{"year":1983,"characters":["Blind Ali","Bob Diamond","Claire Temple","Colleen Wing","Comanche","D.W. Griffith","El Aguila","Fera","Harmony Young","Iron Fist","Jennie Royce","Jeryn Hogarth","Joy Meachum","Luke Cage","Master Khan","Misty Knight","Rafael Scarfe","Shades","Ward Meachum"],"name":"Power Man & Iron Fist #100","link":"power_man_iron_fist_100","credits":["Ernie Chan","Kurt Busiek","Denny O'Neil","Mike Mignola"],"i":2696},{"year":1983,"characters":["Betty Brant","Black Cat","Flash Thompson","Harry Osborn","Hobgoblin (Roderick Kingsley)","Liz Allan","Lydia Hardy","Mary Jane Watson","Sha Shan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #85","link":"peter_parker_the_spectacular_s_20","credits":["Bill Mantlo","Al Milgrom","Danny Fingeroth","Jim Mooney","Tom DeFalco","Bob DeNatale"],"i":2697},{"year":1983,"characters":["Clytemnestra Erwin","Flying Tiger","Iron Fist","Iron Man","Luke Cage","Morley Erwin","Regis Fusskey","War Machine"],"name":"Iron Man #177","link":"iron_man_177","credits":["Steven Mitchell","Mike Carlin","Luke McDonnell","Mark Gruenwald","Denny O'Neil"],"i":2698},{"year":1983,"characters":["Puck","Shaman"],"name":"Alpha Flight #5","link":"alpha_flight_5","credits":["Denny O'Neil","John Byrne"],"i":2699},{"year":1983,"characters":["John Clark","ROM","Sarah Clark","Starshine II","Steve Jackson","Torpedo"],"name":"ROM #49","link":"rom_49","credits":["Ralph Macchio","Bill Mantlo","Ian Akin","Brian Garvey","Sal Buscema"],"i":2700},{"year":1983,"characters":["Caliban","Callisto","Cyclops","Henry Peter Gyrich","Madelyne Pryor","Mariko Yashida","Masque","Sunder","Valerie Cooper","Wolverine"],"name":"Uncanny X-Men #176","link":"uncanny_x-men_176","credits":["Bob Wiacek","John Romita Jr.","Chris Claremont","Louise Simonson"],"i":2701},{"year":1983,"characters":["Ben Urich","Black Widow","Bullseye","Daredevil","Dark Wind","Debbie Harris","Foggy Nelson","Grotto","Kingpin","Lady Deathstrike","Tarkington Brown","Turk","Wolverine"],"name":"Daredevil #196-200","link":"daredevil_200","credits":["Dan Bulanadi","Klaus Janson","William Johnson","Larry Hama","Mike Mignola","Denny O'Neil","Linda Grant"],"i":2702},{"year":1983,"characters":["Blackout","Captain Marvel (Monica Rambeau)","ISAAC","Jarvis","Moonstone (Karla Sofen)","Scarlet Witch","She-Hulk","Spider-Woman (Jessica Drew)","Tigra","Vision","Wasp"],"name":"Avengers #238","link":"avengers_238","credits":["Al Milgrom","Joe Sinnott","Mike Carlin","Roger Stern","Mark Gruenwald"],"i":2703},{"year":1983,"characters":["Ajak","Broop","Ikaris","Kro","Makkari","Morley Erwin","Ragar","Sersi","Thena","Tode","Valkin","Vira","War Machine","Zuras"],"name":"Iron Man annual #6","link":"iron_man_annual_6","credits":["Mark Gruenwald","Roy Richardson","Peter Gillis","Luke McDonnell"],"i":2704},{"year":1983,"characters":["Betty Brant","Flash Thompson","Harry Osborn","Kingpin","Liz Allan","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man annual #17","link":"amazing_spider-man_annual_17","credits":["Bill Mantlo","Ed Hannigan","Danny Fingeroth","Jim Mooney","Tom DeFalco","Roger Stern"],"i":2705},{"year":1983,"characters":["J. Jonah Jameson","Mauler","Spider-Man","Wonder Man"],"name":"Marvel Team-Up #136","link":"marvel_team-up_136","credits":["Danny Fingeroth","Tom DeFalco","David Michelinie","Ron Frenz","Mike Esposito"],"i":2706},{"year":1984,"characters":["Belasco","Buth","Dherk","Ka-Zar","Leanne","Leila","Parnival Plunder","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #29-31","link":"ka-zar_29","credits":["Armando Gil","Danny Fingeroth","Co.","Ricardo Villamonte","Mike Carlin","Paul Neary","Ron Frenz","Bob DeNatale","Carlos Garzon","Mary Wilshire","John Beatty"],"i":2707},{"year":1983,"characters":["Black Widow","Daredevil","Foggy Nelson"],"name":"Daredevil #201","link":"daredevil_201","credits":["Denny O'Neil","Dan Bulanadi","Bob Budiansky","William Johnson"],"i":2708},{"year":1990,"characters":["Philip Richards","Yuriko Ezaki"],"name":"Shadowmasters #1-4","link":"shadowmasters_1-4","credits":["Al Milgrom","Dan Lawlis","Marc McLaurin","Carl Potts","Tod Smith","Russ Heath"],"i":2709},{"year":1984,"characters":["Becky Blake","Daredevil","Foggy Nelson","Micah Synn","Turk"],"name":"Daredevil #202","link":"daredevil_202","credits":["Denny O'Neil","Dan Bulanadi","William Johnson"],"i":2710},{"year":1984,"characters":["Ceasar Cicero","Colleen Wing","Iron Fist","Luke Cage","Maxine Lavender","Misty Knight","Rafael Scarfe","Vienna"],"name":"Power Man & Iron Fist #101","link":"power_man_iron_fist_101","credits":["Geof Isherwood","Andy Mushynsky","Steven Grant"],"i":2711},{"year":1984,"characters":["Amanda Sefton","Arcade","Avalanche","Beyonder","Blob","Caliban","Callisto","Colossus","Corsair","Cyclops","Destiny","Havok","Healer","Leech","Lilandra","Masque","Miss Locke","Mystique","Nightcrawler","Professor X","Pyro","Roberta","Rogue","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Sunder","Wolverine"],"name":"Uncanny X-Men #177-179","link":"uncanny_x-men_177-179","credits":["John Romita Jr.","Chris Claremont","John Romita Sr.","Brett Breeding","Bob Wiacek","Dan Green"],"i":2712},{"year":1984,"characters":["Beyonder","Black King (Sebastian Shaw)","Cannonball","Cypher","Henry Peter Gyrich","Lilandra","Magma","Mirage (Dani Moonstar)","Professor X","Shadowcat (Kitty Pryde)","Stevie Hunter","Sunspot","Valerie Cooper","Wolfsbane"],"name":"New Mutants #13","link":"new_mutants_13","credits":["Tom Mandrake","Chris Claremont","Sal Buscema"],"i":2713},{"year":1984,"characters":["Cassandra Ferlenghetti","Dazzler","Harry Osgood","Lance Steele","Mortis","Nick Brown","Roman Nekoboh"],"name":"Dazzler #29-30","link":"dazzler_29-30","credits":["Ralph Macchio","Jim Shooter","Bob Harras","Frank Springer","Ken McDonald","Vincent Colletta"],"i":2714},{"year":1984,"characters":["Spider-Man"],"name":"Marvel Team-Up #137","link":"marvel_team-up_137","credits":["Greg LaRocque","Mike Carlin","Mike Esposito"],"i":2715},{"year":1984,"characters":["Becky Blake","Ben Urich","Daredevil","Foggy Nelson","Trump","Turk"],"name":"Daredevil #203","link":"daredevil_203","credits":["Geof Isherwood","Dan Bulanadi","Steven Grant"],"i":2716},{"year":1984,"characters":["Danny Jones","Lorry Jones","Nell Jones","ROM","Starshine II","Tammy Anne Jones","Torpedo"],"name":"ROM #50","link":"rom_50","credits":["Bill Mantlo","Brian Garvey","Ian Akin","Sal Buscema"],"i":2717},{"year":1986,"characters":["Becky Blake","Daredevil","Debbie Harris","Foggy Nelson"],"name":"Marvel Fanfare #27 (Daredevil)","link":"marvel_fanfare_27_daredevil","credits":["Bill Mantlo","Tony Salmons","Al Milgrom","Rosemary McCormick-Lowy"],"i":2718},{"year":1984,"characters":["Alicia Masters","Thing"],"name":"Thing #7","link":"thing_7","credits":["John Byrne","Ron Wilson","Hilary Barta"],"i":2719},{"year":1984,"characters":["Becky Blake","Crossbow","Daredevil","Debbie Harris","Foggy Nelson","Iron Man","Micah Synn"],"name":"Daredevil #204","link":"daredevil_204","credits":["Denny O'Neil","Dan Bulanadi","Luke McDonnell"],"i":2720},{"year":1984,"characters":["Gretl Anders","Iron Man","Morley Erwin","Mrs. Arbogast","Vic Martinelli"],"name":"Iron Man #178","link":"iron_man_178","credits":["Denny O'Neil","Bob Harras","Steven Mitchell","Luke McDonnell"],"i":2721},{"year":1984,"characters":["General 'Thunderbolt' Ross","Hulk"],"name":"Hulk #291","link":"hulk_291","credits":["Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2722},{"year":1984,"characters":["Doug Thompson","Guardian (James Mac Hudson)","Kolomaq","Snowbird"],"name":"Alpha Flight #6","link":"alpha_flight_6","credits":["John Byrne"],"i":2723},{"year":1989,"characters":["Contessa Valentina Allegro De La Fontaine","Hulk","J. Jonah Jameson","Nick Fury","Spider-Man"],"name":"Marvel Fanfare #47","link":"marvel_fanfare_47","credits":["Bill Mantlo","Michael Golden","Marc McLaurin","Al Milgrom"],"i":2724},{"year":1984,"characters":["Beast","Black Panther","Black Widow","Fabian Stankowicz","Hawkeye","Jarvis","Mockingbird","Vision","Wonder Man"],"name":"Avengers #239","link":"avengers_239","credits":["Al Milgrom","Roger Stern","Joe Sinnott"],"i":2725},{"year":1984,"characters":["Angel","Beast","Candy Southern","Cloud","Gargoyle (Defender)","Iceman","Madeline Drake","Moondragon","Professor Power","Sassafras","Valkyrie","William Drake"],"name":"Defenders #127","link":"defenders_127","credits":["Alan Kupperberg","Sal Buscema","J.M. DeMatteis"],"i":2726},{"year":1984,"characters":["Betrand Crawley","Bora","Colossus","Fly","Frenchie","Gena Landers","Human Torch","Invisible Woman","Marlene Alraune","Moon Knight","Mr. Fantastic","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Thing","Wolverine"],"name":"Moon Knight #35","link":"moon_knight_35","credits":["Joe Chiodo","Bob McLeod","Kevin Nowlan","Tony Isabella","Carl Potts","Linda Grant"],"i":2727},{"year":1984,"characters":["Acroyear","Archivist","Baron Karza","Battleaxe (Micronaut)","Bioship","Bug","Cannonball","Colossus","Commander Arcturus Rann","Entity","Fireflyte II","Huntarr","Lockheed","Magik","Magma","Marionette","Mirage (Dani Moonstar)","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","Sunspot","Wolfsbane","Wolverine"],"name":"X-Men and the Micronauts #1-4","link":"x-men_and_the_micronauts_1-4","credits":["Bill Mantlo","Butch Guice","Kelley Jones","Chris Claremont","Bob Wiacek"],"i":2728},{"year":1984,"characters":["Alicia Masters","She-Hulk","Thing"],"name":"Thing #8-9","link":"thing_8-9","credits":["Joe Sinnott","John Byrne","Ron Wilson","Hilary Barta"],"i":2729},{"year":1984,"characters":["Becky Blake","Daredevil","Debbie Harris","Foggy Nelson","Gael","Glorianna O'Breen"],"name":"Daredevil #205","link":"daredevil_205","credits":["Denny O'Neil","Dan Bulanadi","William Johnson"],"i":2730},{"year":1984,"characters":["Aurora","Deadly Ernest","Delphine Courtney","Nemesis","Northstar","Smart Alec"],"name":"Alpha Flight #7-8","link":"alpha_flight_7-8","credits":["John Byrne"],"i":2731},{"year":1984,"characters":["ROM","Starshine II"],"name":"ROM #51","link":"rom_51","credits":["Bill Mantlo","Sal Buscema","Mel Candido"],"i":2732},{"year":1984,"characters":["Dum Dum Dugan LMD","Jack of Hearts","Major Martins","Marcy Kane","Nick Fury"],"name":"Jack of Hearts #1-4","link":"jack_of_hearts_2","credits":["George Freeman","Bill Mantlo","Bob Budiansky"],"i":2733},{"year":1984,"characters":["Daredevil","Human Torch","Thing"],"name":"Marvel Fanfare #15","link":"marvel_fanfare_15","credits":["Barry Windsor-Smith","Ian Akin","Brian Garvey","Jack Sparling","Roger McKenzie"],"i":2734},{"year":1984,"characters":["Angel","Aragorn","Beast","Burner (Crucible)","Candy Southern","Cloud","Dolly Donahue","Gargoyle (Defender)","Harridan","Iceman","Leviathan (Gargantua)","Lifter (Meteorite)","Mad Dog (Buzz Baxter)","Moondragon","Nick Fury","Professor Power","Sassafras","Secret Empire Agent Number Six","Seraph","Shocker (Paralyzer)","Slither","Valkyrie"],"name":"Defenders #128-130","link":"defenders_128-130","credits":["Don Perlin","Alan Kupperberg","Mike Zeck","Kim DeMulder","J.M. DeMatteis","Mike Mignola"],"i":2735},{"year":1984,"characters":["Clytemnestra Erwin","Gretl Anders","Ikaris","Iron Man","Makkari","Mandarin","Morley Erwin","Obadiah Stane","Radioactive Man","Sersi","Thena","War Machine"],"name":"Iron Man #179-181","link":"iron_man_179-181","credits":["Denny O'Neil","Steven Mitchell","Luke McDonnell"],"i":2736},{"year":1984,"characters":["Bruto the Strongman","Clown","Dragon Man","Ernesto Gambonno","Fire Eater","Hulk","Human Cannonball","Kate Waynesboro","Livewire","Luigi Gambonno","Princess Python","Raja","Ringmaster","Teena"],"name":"Hulk #292","link":"hulk_292","credits":["Bill Mantlo","Sal Buscema","Joe Sinnott"],"i":2737},{"year":1984,"characters":["Dr. Strange","Sara Wolfe","Wong"],"name":"Doctor Strange #63","link":"doctor_strange_63","credits":["Ann Nocenti","Carl Potts","Al Milgrom"],"i":2738},{"year":1984,"characters":["Cassandra Ferlenghetti","Dazzler","Harry Osgood","Lance Steele"],"name":"Dazzler #31","link":"dazzler_31","credits":["Ralph Macchio","Frank Springer","Bob Harrass","Jim Shooter","Vincent Colletta"],"i":2739},{"year":1984,"characters":["General Merriwether Locklin","ROM","Starshine II"],"name":"ROM #52","link":"rom_52","credits":["Bill Mantlo","Sal Buscema","Mel Candido"],"i":2740},{"year":1984,"characters":["Black Bolt","Blackout","Crystal","Dazzler","Gorgon","Janet McEntee","Karnak","Lockjaw","Luna","Moonstone (Karla Sofen)","Mr. Fantastic","Quicksilver","Triton"],"name":"Dazzler #32","link":"dazzler_32","credits":["Vincent Colletta","M.D. Bright","Mike Carlin","Jim Shooter"],"i":2741},{"year":1984,"characters":["Belasco","Cannonball","Magik","Magma","Mirage (Dani Moonstar)","Stevie Hunter","Sunspot","Wolfsbane"],"name":"Magik #1-4","link":"magik_1-4","credits":["John Buscema","Chris Claremont","Tom Palmer","Sal Buscema","Ron Frenz"],"i":2742},{"year":1984,"characters":["Cannonball","Colossus","Cypher","Magik","Magma","Mirage (Dani Moonstar)","Nightcrawler","Professor X","Rogue","S'ym","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Sunspot","Wolfsbane","Wolverine"],"name":"New Mutants #14","link":"new_mutants_14","credits":["Tom Mandrak","Chris Claremont","Sal Buscema"],"i":2743},{"year":1984,"characters":["Daredevil","Hulk","Kate Waynesboro","Mr. Fantastic","Thing"],"name":"Hulk #293","link":"hulk_293","credits":["Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2744},{"year":1984,"characters":["Captain America"],"name":"Captain America #291","link":"captain_america_291","credits":["Herb Trimpe","Bill Mantlo","Jack Abel"],"i":2745},{"year":1984,"characters":["Colossus","Cypher","Nightcrawler","Professor X","Shadowcat (Kitty Pryde)","Storm","White Queen (Emma Frost)","Wolverine"],"name":"Uncanny X-Men #180","link":"uncanny_x-men_180","credits":["Dan Green","Bob Wiacek","John Romita Jr.","Chris Claremont"],"i":2746},{"year":1984,"characters":["Black Cat","Fly","J. Jonah Jameson","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #86","link":"peter_parker_the_spectacular_s_73","credits":["Bill Mantlo","Joe Albelo","Al Milgrom","Jim Mooney","Bob DeNatale","Fred Hembeck"],"i":2747},{"year":1984,"characters":["Franklin Richards","Giganto (Subterranean)","Human Torch","Invisible Woman","Julie Angel","Mole Man","Mr. Fantastic","Thing","Vision"],"name":"Fantastic Four #263-264","link":"fantastic_four_263-264","credits":["John Byrne"],"i":2748},{"year":1984,"characters":["Daniel Kingsley","George Vandergill","Harry Osborn","Hobgoblin (Roderick Kingsley)","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Liz Allan","Mamie Muggins","Marla Madison Jameson","Mary Jane Watson","Robert Martin","Spider-Man"],"name":"Amazing Spider-Man #249-251","link":"amazing_spider-man_249-251","credits":["John Romita Jr.","Tom DeFalco","Klaus Janson","Roger Stern","Ron Frenz","Dan Green"],"i":2749},{"year":1984,"characters":["Arranger","Carlos Cassada","Fancy Dan","Hammer Harrison","Joe 'Robbie' Robertson","Michael Cassada","Montana","Ned Leeds","Ox III","Roberto Cassada","Rosa Cassada","Sandman","Snake Marston","Spider-Man"],"name":"Marvel Team-Up #138","link":"marvel_team-up_138","credits":["Tom DeFalco","Greg LaRocque","Mike Esposito"],"i":2750},{"year":1984,"characters":["Black Cat","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #87","link":"peter_parker_the_spectacular_s_22","credits":["Bill Mantlo","Al Milgrom","Danny Fingeroth","Jim Mooney","Bob DeNatale"],"i":2751},{"year":1984,"characters":["Dino Manelli","Dum Dum Dugan LMD","J. Jonah Jameson","Nick Fury","Spider-Man"],"name":"Marvel Team-Up #139","link":"marvel_team-up_139","credits":["Brian Postman","Cary Burkett","Mike Esposito"],"i":2752},{"year":1984,"characters":["Ben Urich","Black Widow","Daredevil","Harry Osborn","Spider-Man"],"name":"Marvel Team-Up #140","link":"marvel_team-up_140","credits":["Bill Mantlo","Tom DeFalco","Ron Frenz","Mike Esposito"],"i":2753},{"year":1987,"characters":["J. Jonah Jameson","Joe 'Robbie' Robertson","Josie (Bar owner)","Spider-Man"],"name":"Web of Spider-Man #26","link":"web_of_spider-man_26","credits":["Jim Salicrup","Stefan Petrucha","Tom Morgan","Adam Blaustein","Len Kaminski","Mike Esposito"],"i":2754},{"year":1984,"characters":["Black Cat","Captain America","Cobra","Harry Osborn","Henry Pym","Human Torch","Invisible Woman","Joe 'Robbie' Robertson","Kingpin","Mr. Fantastic","Mr. Hyde","Roberta","Spider-Man","Thing","Wasp"],"name":"Peter Parker, the Spectacular Spider-Man #88-89","link":"peter_parker_the_spectacular_s_31","credits":["Bill Mantlo","Jim Mooney","Al Milgrom"],"i":2755},{"year":1984,"characters":["Dr. Strange","Frenchie","Marlene Alraune","Moon Knight"],"name":"Moon Knight #36","link":"moon_knight_36","credits":["Bo Hampton","Alan Zelenetz","Denny O'Neil","Linda Grant"],"i":2756},{"year":1984,"characters":["Dazzler","Janet McEntee","Robert Benson","Roman Nekoboh","Teddy Lingard"],"name":"Dazzler #33","link":"dazzler_33","credits":["Vincent Colletta","M.D. Bright","Mike Carlin","Ralph Macchio"],"i":2757},{"year":1984,"characters":["Dr. Strange","Wong"],"name":"Doctor Strange #64","link":"doctor_strange_64","credits":["Ann Nocenti","Carl Potts","Tony Salmons"],"i":2758},{"year":1988,"characters":["Frenchie","Gena Landers","Moon Knight"],"name":"Marvel Fanfare #39 (Moon Knight)","link":"marvel_fanfare_39_moon_knight","credits":["Bill Reinhold","Al Milgrom","Mike Carlin","Jim Fern"],"i":2759},{"year":1984,"characters":["Alicia Masters","Human Torch","Invisible Woman","Mr. Fantastic","Sergius O'Hoolihan","Thing"],"name":"Thing #10","link":"thing_10","credits":["John Byrne","Ron Wilson","Hilary Barta"],"i":2760},{"year":1984,"characters":["Boomerang","Hulk","Kate Waynesboro","Max Hammer"],"name":"Hulk #294","link":"hulk_294","credits":["Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2761},{"year":1984,"characters":["Arnie Roth","Bernie Rosenthal","Black Crow","Captain America","Captain Marvel (Monica Rambeau)","Hawkeye","Immortus","ISAAC","Mockingbird","Nomad","Scarlet Witch","She-Hulk","Starfox","Thor","Vision","Wasp"],"name":"Captain America #292","link":"captain_america_292","credits":["Paul Neary","Eduardo Barreto","J.M. DeMatteis"],"i":2762},{"year":1984,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Dr. Strange","Hawkeye","Henry Pym","Jarvis","Magnus","Mockingbird","Morgan Le Fey","Scarlet Witch","She-Hulk","Shroud","Spider-Woman (Jessica Drew)","Starfox","Thor","Tigra","Vision","Wasp"],"name":"Avengers #240-242","link":"avengers_240-242","credits":["Al Milgrom","Joe Sinnot","Joe Sinnott","Ann Nocenti","Josef Rubinstein","Andy Mushynsky","Roger Stern","Brett Breeding"],"i":2763},{"year":1984,"characters":["D.W. Griffith","Iron Fist","Luke Cage","Scarlet Witch","Vision"],"name":"Power Man & Iron Fist #102","link":"power_man_iron_fist_102","credits":["Richard Howell","Kurt Busiek"],"i":2764},{"year":1984,"characters":["Black King (Sebastian Shaw)","Cannonball","Catseye","Cypher","Empath","Jarvis","Jetstream","Magik","Magma","Mirage (Dani Moonstar)","Roulette","S'ym","Shadowcat (Kitty Pryde)","Sunspot","Tarot","Warpath","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #15-17","link":"new_mutants_15-17","credits":["Kim DeMulder","Tom Mandrake","Chris Claremont","Sal Buscema"],"i":2765},{"year":1985,"characters":["Absorbing Man","Beyonder","Bulldozer","Captain America","Captain Marvel (Monica Rambeau)","Colossus","Cyclops","Doctor Octopus","Dr. Doom","Enchantress","Franklin Richards","Galactus","Hawkeye","Hulk","Human Torch","Invisible Woman","Kang","Klaw","Lizard","Lockheed","Magneto","Molecule Man","Mr. Fantastic","Nightcrawler","Omnivore","Piledriver","Professor X","Puff","Rogue","She-Hulk","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Thing","Thor","Thunderball","Titania","Ultron","Venom Symbiote","Volcana","War Machine","Wasp","Wolverine","Wrecker","Zsaji"],"name":"Marvel Super Heroes Secret Wars #1-12","link":"marvel_super_heroes_secret_war","credits":["Mike Zeck","Jack Abel","Bob Layton","Jim Shooter","John Beatty","Mike Esposito"],"i":2766},{"year":1984,"characters":["Dum Dum Dugan LMD","Nick Fury","ROM","Starshine II"],"name":"ROM #53","link":"rom_53","credits":["Bill Mantlo","Bill Sienkiewicz","Sal Buscema","Mel Candido"],"i":2767},{"year":1984,"characters":["Franklin Richards","HUBERT","Human Torch","Invisible Woman","Jarvis","Lyja the Lazerfist","Malice (Sue Storm's psionic entity)","Mockingbird","Mr. Fantastic","Omnivore","Paste Pot Pete","Roberta","She-Hulk","War Machine"],"name":"Fantastic Four #265","link":"fantastic_four_265","credits":["John Byrne"],"i":2768},{"year":1984,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Crystal","Hawkeye","Henry Peter Gyrich","ISAAC","Jarvis","Luna","Mockingbird","Omnivore","Quicksilver","Raymond Sikorski","Scarlet Witch","She-Hulk","Starfox","Thor","Vision","War Machine","Wasp"],"name":"Avengers #243","link":"avengers_243","credits":["Al Milgrom","Roger Stern","Joe Sinnott"],"i":2769},{"year":1997,"characters":["Abomination","Angel","Ape Man III","Batroc","Beast","Black Widow","Brothers Grimm II","Captain America","Cat Man III","Cloak","Cobra","Cottonmouth","Dagger","Daredevil","Doc Samson","Electro","Falcon","Father Delgado","Guardsman II (Michael O'Brien)","Hawkeye","Hobgoblin (Roderick Kingsley)","Human Torch","Invisible Woman","Iron Fist","Jake Vicuna","Janet Ruiz","Jeff Piper","Juggernaut","Killer Shrike","Leap-Frog II","Living Laser","Luke Cage","Moon Knight","Moonstone (Karla Sofen)","Mr. Fantastic","Omnivore","Plantman","Porcupine","Punisher","Rhino","Ringer","Rogue","Scorpion","She-Hulk","Shocker","Slyde","Stilt-Man","Thing","Thor","Tiger Shark","Unicorn II","Vengeance","War Machine","Wasp","Whirlwind","Wonder Man"],"name":"Code of Honor #3","link":"code_of_honor_3","credits":["Paul Lee","Bob Wakelin","Chuck Dixon","Jason White","Kelly Corvese","Derick Gross"],"i":2770},{"year":1984,"characters":["Boomerang","Hulk","Kate Waynesboro","Max Hammer","ROM"],"name":"Hulk #295-296","link":"hulk_295","credits":["Bill Mantlo","Gerry Talaoc","Dan Bulanadi","Sal Buscema"],"i":2771},{"year":1984,"characters":["Aunt May","Billy Connors","Black Cat","Captain America","Captain Marvel (Monica Rambeau)","Hawkeye","J. Jonah Jameson","Joe 'Robbie' Robertson","Lizard","Martha Connors","Nate Lubenski","Omnivore","Spider-Man","Thor","Venom Symbiote","War Machine","Wasp"],"name":"Amazing Spider-Man #252","link":"amazing_spider-man_252","credits":["Tom DeFalco","Ron Frenz","Roger Stern","Brett Breeding"],"i":2772},{"year":1984,"characters":["Arranger","Becky Blake","Ben Urich","Black Widow","Daredevil","Foggy Nelson","Ivan Petrovitch","Kingpin","Spider-Man","Venom Symbiote"],"name":"Marvel Team-Up #141","link":"marvel_team-up_141","credits":["Tom DeFalco","Greg LaRocque","Mike Esposito","Christopher Priest"],"i":2773},{"year":2008,"characters":["Abomination","Absorbing Man","Baron Zemo (Helmut)","Batroc","Blob","Bulldozer","Bullseye","Captain America","Captain Marvel (Monica Rambeau)","Colossus","Cyclops","Doctor Octopus","Dr. Doom","Electro","Fin Fang Foom","Galactus","Hawkeye","Henry Pym","Hobgoblin (Roderick Kingsley)","Hulk","Human Torch","J. Jonah Jameson","Jane Foster","Jarvis","Jester (Jonathan Powers)","Joe 'Robbie' Robertson","Juggernaut","Klaw","Leap-Frog II","Lizard","Mandarin","Marquis of Death","Melter","MODOK","Mole Man","Morbius","Mr. Fantastic","Mr. Hyde","Nightcrawler","Omnivore","Paste Pot Pete","Piledriver","Red Skull","Rhino","Roberta","Sabretooth","Sandman","Sauron","Shocker","Silver Surfer","Songbird (Screaming Mimi)","Spider-Man","Spider-Woman (Julia Carpenter)","Stilt-Man","Storm","Thing","Thor","Thunderball","Toad","Ultron","Vulture","War Machine","Wasp","Wendigo IV","Werewolf By Night","Wolverine","Wrecker"],"name":"Marvel 1985 #1-6","link":"marvel_1985_1-6","credits":["Jody LeHeup","Michael Horwitz","Mark Millar","John Barber","Joe Quesada","Tommy Lee Edwards"],"i":2774},{"year":1984,"characters":["Aunt May","Betty Brant","Joe 'Robbie' Robertson","Johnston (Rose minion)","Nate Lubenski","Richard Fisk","Spider-Man","Varley (Rose minion)","Venom Symbiote"],"name":"Amazing Spider-Man #253","link":"amazing_spider-man_253","credits":["Tom DeFalco","Bill Anderson","Rick Leonardi"],"i":2775},{"year":1984,"characters":["Answer","Aunt May","Betty Brant","Black Cat","Blob","Flash Thompson","J. Jonah Jameson","Jarvis","Jean DeWolff","Joe 'Robbie' Robertson","Mamie Muggins","Martha (Aunt May's Boarder)","Nate Lubenski","Scarlet Witch","Spider-Man","Unus","Venom Symbiote","Vision"],"name":"Peter Parker, the Spectacular Spider-Man #90-91","link":"peter_parker_the_spectacular_s_24","credits":["Al Milgrom","Jim Mooney"],"i":2776},{"year":1984,"characters":["Charles Jefferson","Doctor Octopus","Hulk","Invisible Woman","Lyja the Lazerfist","Morbius","Mr. Fantastic","Sasquatch","She-Hulk"],"name":"Fantastic Four #266-268","link":"fantastic_four_266-268","credits":["John Byrne","Kerry Gammill"],"i":2777},{"year":1984,"characters":["Amiko","Colossus","Cyclops","Lockheed","Madelyne Pryor","Mariko Yashida","Nightcrawler","Professor X","Puff","Rogue","Senator Kelly","Storm","Sunfire","Wolverine"],"name":"Uncanny X-Men #181","link":"uncanny_x-men_181","credits":["Dan Green","John Romita Jr.","Chris Claremont"],"i":2778},{"year":1984,"characters":["Black King (Sebastian Shaw)","Colonel Michael Rossi","Contessa Valentina Allegro De La Fontaine","Nick Fury","Rogue","Tessa","White Queen (Emma Frost)"],"name":"Uncanny X-Men #182","link":"uncanny_x-men_182","credits":["Dan Green","John Romita Jr.","Chris Claremont"],"i":2779},{"year":1987,"characters":["Hulk","Thor"],"name":"Thor #385","link":"thor_385","credits":["Ralph Macchio","Erik Larsen","Stan Lee","Jim Shooter","Vincent Colletta","Marc Siry"],"i":2780},{"year":1984,"characters":["Balder","Dum Dum Dugan LMD","Eilif Dragonslayer","Fafnir","Heimdall","Huginn","Jerry Sapristi","Karnilla","Loki","Lorelei (Norse Goddess)","Muninn","Nick Fury","Odin","Surtur","Thor","Volstagg"],"name":"Thor #341-343","link":"thor_341","credits":["Terry Austin","Walt Simonson"],"i":2781},{"year":1984,"characters":["Captain America","Captain Marvel (Monica Rambeau)","Gretl Anders","Hawkeye","Iron Man","Morley Erwin","Omnivore","Thor","Timothy Anders","War Machine","Wasp"],"name":"Iron Man #182","link":"iron_man_182","credits":["Denny O'Neil","Steven Mitchell","Luke McDonnell"],"i":2782},{"year":1984,"characters":["Bob Diamond","Colleen Wing","Doombringer","Iron Fist","Jeryn Hogarth","Luke Cage","Misty Knight","Rafael Scarfe"],"name":"Power Man & Iron Fist #103-104","link":"power_man_iron_fist_103","credits":["Greg LaRocque","Andy Mushynsky","Archie Goodwin"],"i":2783},{"year":1984,"characters":["Dr. Strange","General Merriwether Locklin","Nick Fury","Rick Jones","ROM","Starshine II"],"name":"ROM #54-55","link":"rom_54-55","credits":["Bill Mantlo","Kelley Jones","Sal Buscema","Mel Candido"],"i":2784},{"year":1984,"characters":["Aurora","Bernie Rosenthal","Captain America","Guardian (James Mac Hudson)","Sasquatch","Super-Skrull"],"name":"Alpha Flight #9-10","link":"alpha_flight_9-10","credits":["John Byrne"],"i":2785},{"year":1984,"characters":["Llrrllllnnllyyrrl","Thing"],"name":"Thing #11","link":"thing_11","credits":["John Byrne","Ron Wilson","Joe Sinnott"],"i":2786},{"year":1984,"characters":["Angel","Beast","Candy Southern","Cloud","Frog-Man II","Gargoyle (Defender)","Iceman","Leap-Frog","Moondragon","Valkyrie","Walrus"],"name":"Defenders #131","link":"defenders_131","credits":["Alan Kupperberg","Peter Gillis","J.M. DeMatteis"],"i":2787},{"year":1984,"characters":["Chili Storm","Dazzler","Millie The Model","Roman Nekoboh"],"name":"Dazzler #34","link":"dazzler_34","credits":["Ralph Macchio","Geof Isherwood","Bob Harras","Mike Carlin","Vincent Colletta"],"i":2788},{"year":1984,"characters":["Azir","Bob Diamond","Colleen Wing","Crimebuster II","D.W. Griffith","Firefly","Harmony Young","Iron Fist","Jean DeWolff","Jeryn Hogarth","Joy Meachum","Khumbala Bey","Luke Cage","Misty Knight","Rafael Scarfe"],"name":"Power Man & Iron Fist #105","link":"power_man_iron_fist_105","credits":["Richard Howell","Kurt Busiek","Andy Mushynsky"],"i":2789},{"year":1984,"characters":["Black Queen (Selene)","Colossus","Juggernaut","Lockheed","Magik","Mystique","Nightcrawler","Rogue","Shadowcat (Kitty Pryde)","Storm","Valerie Cooper","Wolverine"],"name":"Uncanny X-Men #183","link":"uncanny_x-men_183","credits":["Dan Green","John Romita Jr.","Chris Claremont"],"i":2790},{"year":1984,"characters":["Colossus","Cyclops","Dazzler","Eric Beale","Freddie Stanachek","Nightcrawler","Roman Nekoboh","Storm","Wolverine"],"name":"Dazzler: The Movie (Marvel Graphic Novel #12)","link":"marvel_graphic_novel_12_dazzle","credits":["Vincent Colletta","Frank Springer","Jim Shooter"],"i":2791},{"year":1984,"characters":["Adversary","Cannonball","Carol Danvers","Ch'od","Corsair","Cr'reee","Demon Bear","Healer","Hepzibah","Lilandra","Lockheed","Magik","Magma","Magus (Technarchy)","Mirage (Dani Moonstar)","Peg Lonestar","Rachel Summers","Raza Longknife","Sharon Friedlander","Sikorsky","Sunspot","Tom Corsi","Waldo","Warlock","William Lonestar","Wolfsbane"],"name":"New Mutants #18-20","link":"new_mutants_18-20","credits":["Chris Claremont","Bill Sienkiewicz"],"i":2792},{"year":1984,"characters":["Black Queen (Selene)","Colossus","Forge","John Cheever","Mystique","Naze","Nick Damiano","Nightcrawler","Professor X","Rachel Summers","Rogue","Storm","Valerie Cooper"],"name":"Uncanny X-Men #184","link":"uncanny_x-men_184","credits":["Dan Green","John Romita Jr.","Chris Claremont"],"i":2793},{"year":1984,"characters":["Becky Blake","Daredevil","Debbie Harris","Foggy Nelson","Glorianna O'Breen","Kingpin"],"name":"Daredevil #206","link":"daredevil_206","credits":["Denny O'Neil","Dan Bulanadi","David Mazzucchelli"],"i":2794},{"year":1984,"characters":["General Merriwether Locklin","Marrina","Rick Jones","ROM","Sasquatch","Shaman","Snowbird","Starshine II"],"name":"ROM #56-57","link":"rom_56-57","credits":[],"i":2795},{"year":1985,"characters":["Angel","Beast","Iceman","Madeline Drake","Mirage (Oblivion's Daughter)","Oblivion","William Drake"],"name":"Iceman #1-4","link":"iceman_1-4","credits":["Michael Gustovich","Alan Kupperberg","Bob Budiansky","J.M. DeMatteis"],"i":2796},{"year":1984,"characters":["Bill Foster","Bova","Captain America","Captain Marvel (Monica Rambeau)","Hawkeye","Lockjaw","Mockingbird","Nick Fury","Quicksilver","Scarlet Witch","Starfox","Vision","Wasp"],"name":"Avengers #244-245","link":"avengers_244-245","credits":["Joe Sinnott","Al Milgrom","Roger Stern","Carmine Infantino"],"i":2797},{"year":1984,"characters":["Ant-Man (Scott Lang)","General Merriwether Locklin","Marrina","Rick Jones","ROM","Sasquatch","Shaman","Snowbird","Starshine II"],"name":"ROM #58-59","link":"rom_58-59","credits":["Bill Mantlo","Mel Candido","Sal Buscema","Steve Ditko","Bob Layton"],"i":2798},{"year":1984,"characters":["Angel","Beast","Cloud","Dolly Donahue","Ephraim Soles","Gargoyle (Defender)","Iceman","Moondragon","Sassafras","Valkyrie"],"name":"Defenders #132","link":"defenders_132","credits":["Kim DeMulder","Don Perlin","Peter Gillis"],"i":2799},{"year":1984,"characters":["Dr. Strange","Morgana Blessing","Sara Wolfe","Wong"],"name":"Doctor Strange #65","link":"doctor_strange_65","credits":["Roger Stern","Paul Smith"],"i":2800},{"year":1984,"characters":["Clytemnestra Erwin","Gears Garvin","Iron Man","Morley Erwin","Omnivore","Regis Fusskey","Taurus","Taurus (Robot)","War Machine"],"name":"Iron Man #183","link":"iron_man_183","credits":["Denny O'Neil","Steven Mitchell","Luke McDonnell"],"i":2801},{"year":1984,"characters":["Balder","Frigga","Heimdall","Jerry Sapristi","Karnilla","Loki","Lorelei (Norse Goddess)","Malekith","Odin","Surtur","Thor"],"name":"Thor #344","link":"thor_344","credits":["Walt Simonson"],"i":2802},{"year":1984,"characters":["Aurora","Box","Delphine Courtney","Diamond Lil","Flashback","Guardian (James Mac Hudson)","Jerry Jaxon","Marrina","Northstar","Puck","Sasquatch","Shaman","Smart Alec","Snowbird","Sub-Mariner","Vindicator (Heather Hudson)","Wild Child"],"name":"Alpha Flight #11-12","link":"alpha_flight_11-12","credits":["John Byrne"],"i":2803},{"year":1984,"characters":["Al the Alien","Baron von Blimp","Highwayman (US1)","Mary McGrill","Poppa Wheeler","Retread","Taryn O'Connell","U.S. Archer","Wide Load Annie"],"name":"US 1 #8-12","link":"us1_10","credits":["Ralph Macchio","Al Milgrom","Alan Kupperberg","Bob Harras","Frank Springer","Dan Bulanadi","Steve Ditko","Mike Esposito"],"i":2804},{"year":1984,"characters":["Harmony Young","Iron Fist","Jeryn Hogarth","Luke Cage","Misty Knight","Whirlwind"],"name":"Power Man & Iron Fist #106","link":"power_man_iron_fist_106","credits":["Alan Rowlands","Greg LaRocque","Andy Mushynsky"],"i":2805},{"year":1984,"characters":["Llrrllllnnllyyrrl","Tarianna","Thing"],"name":"Thing #12-13","link":"thing_12","credits":["John Byrne","Ron Wilson","Joe Sinnott"],"i":2806},{"year":1984,"characters":["Cannonball","Cypher","Lockheed","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Professor X","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #21","link":"new_mutants_21","credits":["Chris Claremont","Bill Sienkiewicz"],"i":2807},{"year":1984,"characters":["Ben Urich","Black Widow","Daredevil","Debbie Harris","Foggy Nelson","Glorianna O'Breen","Iron Fist","Josie (Bar owner)","Luke Cage","Micah Synn"],"name":"Daredevil #207","link":"daredevil_207","credits":["Mel Candido","Denny O'Neil","Dan Bulanadi","William Johnson"],"i":2808},{"year":1984,"characters":["Ka-Zar","Parnival Plunder","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #32","link":"ka-zar_the_savage_32","credits":["Danny Fingeroth","Mike Carlin","Paul Neary","Bob DeNatale","Carlos Garzon","Marie Severin"],"i":2809},{"year":1984,"characters":["Arthur Chekov","Aunt May","Betty Brant","Harriet Rose Palermo","Jason Macendale","Joe 'Robbie' Robertson","Martha (Aunt May's Boarder)","Nate Lubenski","Sophie (Aunt May's Boarder)","Spider-Man","Venom Symbiote","Victor Palermo"],"name":"Amazing Spider-Man #254","link":"amazing_spider-man_254","credits":["Tom DeFalco","Josef Rubinstein","Rick Leonardi"],"i":2810},{"year":1984,"characters":["Answer","Black Cat","Flash Thompson","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Mamie Muggins","Sha Shan","Spider-Man","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #92","link":"peter_parker_the_spectacular_s_25","credits":["Al Milgrom","Jim Mooney"],"i":2811},{"year":1984,"characters":["Angel","Beast","Candy Southern","Cloud","Cutlass (Detective)","Dolly Donahue","Gargoyle (Defender)","Iceman","Manslaughter","Moondragon","Typhoon (Detective)","Valkyrie"],"name":"Defenders #133","link":"defenders_133","credits":["Kim DeMulder","Peter Gillis","Alan Kupperberg"],"i":2812},{"year":1984,"characters":["Captain Marvel (Monica Rambeau)","Daredevil","Dr. Strange","Gabriel Jones","Hulk","Human Torch","Iron Fist","Kate Waynesboro","Luke Cage","Nightmare","Scarlet Witch","Spider-Man","Starfox","Thor","Vision","Wasp","Wong"],"name":"Hulk #297-300","link":"hulk_297-300","credits":["Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2813},{"year":1984,"characters":["Arnim Zola","Beast","Captain America","Captain Marvel (Monica Rambeau)","Fixer","Henry Pym","Mr. Fantastic","Raymond Sikorski","She-Hulk","Thor","Vision","Wasp"],"name":"Avengers annual #13","link":"avengers_annual_13","credits":["Steve Ditko","John Byrne","Roger Stern"],"i":2814},{"year":1984,"characters":["Aquarius II","Aries III","Cancer","Capricorn","Clytemnestra Erwin","Gemini","Iron Man","Leo","Libra","Morley Erwin","Pisces","Sagittarius","Scorpio II","Taurus","Virgo","War Machine"],"name":"Iron Man #184","link":"iron_man_184","credits":["Denny O'Neil","Steven Mitchell","Luke McDonnell"],"i":2815},{"year":1986,"characters":["Ant-Man (Scott Lang)","Cal Oakley","Captain America","Sandman","Vision","Wasp","Wonder Man"],"name":"Wonder Man #1","link":"wonder_man_1","credits":["Vincent Colletta","Kerry Gammill","David Michelinie","Lynn Cohen"],"i":2816},{"year":1984,"characters":["Aquarius II","Clytemnestra Erwin","Iron Man","Morley Erwin","Nick Fury","War Machine"],"name":"Iron Man #185","link":"iron_man_185","credits":["Denny O'Neil","Steven Mitchell","Luke McDonnell"],"i":2817},{"year":1984,"characters":["Captain Marvel (Monica Rambeau)","Jarvis","Spider-Man","Starfox","Venom Symbiote"],"name":"Marvel Team-Up #142-143","link":"marvel_team-up_142","credits":["Greg LaRocque","David Michelinie","Mike Esposito"],"i":2818},{"year":1984,"characters":["Bel-Dann","Black Bolt","Crystal","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Luna","Medusa","Mr. Fantastic","Quicksilver","Raksor","She-Hulk","Triton","Uatu the Watcher"],"name":"Fantastic Four annual #18","link":"fantastic_four_annual_18","credits":["John Byrne","Mark Gruenwald","M.D. Bright","Michael Gustovich"],"i":2819},{"year":1984,"characters":["Aginar","Ajak","Bill Foster","Captain Marvel (Monica Rambeau)","Deathurge","Domo","Frank Rambeau","Hawkeye","Ikaris","Lockjaw","Maelstrom","Makkari","Maria Rambeau","Mockingbird","Quicksilver","Scarlet Witch","Sersi","She-Hulk","Starfox","Thena","Valkin","Vision","Wasp","Zarin"],"name":"Avengers #246-248","link":"avengers_246-248","credits":["Al Milgrom","Joe Sinnott","John Byrne","Jack Abel","Roger Stern","Kim DeMulder"],"i":2820},{"year":1984,"characters":["Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Sharon Selleck","She-Hulk","Terminus","Wyatt Wingfoot"],"name":"Fantastic Four #269-270","link":"fantastic_four_269-270","credits":["John Byrne"],"i":2821},{"year":1984,"characters":["Harmony Young","Iron Fist","Luke Cage"],"name":"Power Man & Iron Fist #107","link":"power_man_iron_fist_107","credits":["Geof Isherwood","Alan Rowlands","Andy Mushynsky"],"i":2822},{"year":1984,"characters":["Hawkeye","Jarvis","Lindsay McCabe","Mockingbird","Shroud","Spider-Woman (Jessica Drew)","Tigra","Vision","War Machine","Wonder Man"],"name":"West Coast Avengers #1","link":"west_coast_avengers_1","credits":["Bob Hall","Roger Stern","Brett Breeding"],"i":2823},{"year":1984,"characters":["Black Widow","Daredevil"],"name":"Daredevil #208","link":"daredevil_208","credits":["Arthur Byron Cover","Harlan Ellison","Dan Bulanadi","David Mazzucchelli"],"i":2824},{"year":1988,"characters":["Atropos (Verdandi)","Clotho (Urd)","Fandral","Freya","Frigga","Gudrun","Heimdall","Hildy","Hogun","Huginn","Human Torch","Invisible Woman","Lachesis (Skuld)","Loki","Man-Thing","Mr. Fantastic","Muninn","Odin","She-Hulk","Thor","Volstagg","Wyatt Wingfoot"],"name":"Marvel Fanfare #34-37","link":"marvel_fanfare_34-37","credits":["Michael Fleisher","Al Milgrom","Tom Sutton","Norman Breyfogle","Mark Borax","Alan Zelenetz","Charles Vess"],"i":2825},{"year":1985,"characters":["Alexander Flynn","Beast","Dazzler","Ivich","Max Rocker","Poltergeist","Wonder Man"],"name":"Beauty and the Beast #1-4","link":"beauty_and_the_beast_1-4","credits":["Ann Nocenti","Don Perlin","Kim DeMulder"],"i":2826},{"year":1984,"characters":["Gary Cody","Puck","Shaman","Smart Alec","Vindicator (Heather Hudson)"],"name":"Alpha Flight #13","link":"alpha_flight_13","credits":["John Byrne"],"i":2827},{"year":1984,"characters":["Aunt May","Black Fox","Hobgoblin (Roderick Kingsley)","Igor (Super Ape)","Mamie Muggins","Mikhlo (Super Ape)","Nate Lubenski","Peator (Super Ape)","Red Ghost","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #255","link":"amazing_spider-man_255_1","credits":["Tom DeFalco","Ron Frenz","Josef Rubinstein"],"i":2828},{"year":1984,"characters":["Daredevil","Debbie Harris","Foggy Nelson"],"name":"Daredevil #209","link":"daredevil_209","credits":["Arthur Byron Cover","Harlan Ellison","Dan Bulanadi","David Mazzucchelli"],"i":2829},{"year":1984,"characters":["Angel","Beast","Cloud","Dolly Donahue","Gargoyle (Defender)","Iceman","Manslaughter","Moondragon","Sassafras","Valkyrie"],"name":"Defenders #134","link":"defenders_134","credits":["Kim DeMulder","Don Perlin","Peter Gillis"],"i":2830},{"year":1984,"characters":["Arnie Green","Dr. Strange","Sara Wolfe","Wong"],"name":"Doctor Strange #66","link":"doctor_strange_66","credits":["John Byrne","Roger Stern","Terry Austin","Paul Smith"],"i":2831},{"year":1984,"characters":["Bob Diamond","Colleen Wing","D.W. Griffith","Harmony Young","Iron Fist","Jeryn Hogarth","Luke Cage","Misty Knight"],"name":"Power Man & Iron Fist #108","link":"power_man_iron_fist_108","credits":["Greg LaRocque","Andy Mushynsky","Archie Goodwin","Christopher Priest"],"i":2832},{"year":1984,"characters":["Bogeyman","Byrel Whitemane","Energizer","Friday","Gee","Jim Power","Lightspeed","Maraud","Margaret Power","Mass Master"],"name":"Power Pack #1-4","link":"power_pack_1-4","credits":["Louise Simonson","June Brigman","Bob Wiacek"],"i":2833},{"year":1984,"characters":["Aurora","Black Cat","Black Panther","Cloud","Collector","Crimson Dynamo V","Human Torch","Joe 'Robbie' Robertson","Magus (Technarchy)","Marrina","Northstar","Puck","Sasquatch","Snake-Eyes","Spider-Man","Venom Symbiote","Vindicator (Heather Hudson)","Warlock"],"name":"Marvel Team-Up annual #7","link":"marvel_team-up_annual_7","credits":["David Mazzucchelli","Sam DeLaRosa","Paul Neary","Brett Breeding","Louise Simonson","Bob DeNatale"],"i":2834},{"year":1984,"characters":["Answer","Black Cat","Flash Thompson","Kingpin","Mamie Muggins","Sha Shan","Silvermane","Spider-Man","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #93","link":"peter_parker_the_spectacular_s_26","credits":["Al Milgrom","Jim Mooney"],"i":2835},{"year":1984,"characters":["Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Black Queen (Selene)","Black Rook (Friedrich von Roehm)","Cannonball","Colossus","Magma","Mirage (Dani Moonstar)","Moira MacTaggert","Nightcrawler","Professor X","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #22","link":"new_mutants_22","credits":["Chris Claremont","Bill Sienkiewicz"],"i":2836},{"year":1984,"characters":["Ben Locklin","Cannonball","Conal Duran","Cypher","Lila Cheney","Magik","Magma","Mirage (Dani Moonstar)","Professor X","Stevie Hunter","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants annual #1","link":"new_mutants_annual_1","credits":["Bob McLeod","Chris Claremont","Tom Palmer"],"i":2837},{"year":1984,"characters":["Tarianna","Thing"],"name":"Thing #14","link":"thing_14","credits":["Ron Wilson","Andy Mushynsky","Mike Carlin","Joe Sinnott"],"i":2838},{"year":1984,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Huntarr","Marionette","Microtron II"],"name":"Micronauts #59","link":"micronauts_59","credits":["Kelley Jones","Bruce D. Patterson","Peter Gillis"],"i":2839},{"year":1984,"characters":["Cyclops","Destiny","Forge","Henry Peter Gyrich","Madelyne Pryor","Mystique","Professor X","Rachel Summers","Rogue","Storm","Valerie Cooper"],"name":"Uncanny X-Men #185","link":"uncanny_x-men_185","credits":["Dan Green","John Romita Jr.","Chris Claremont"],"i":2840},{"year":1988,"characters":["Destiny","Mystique","Storm"],"name":"Marvel Fanfare #40 (Storm)","link":"marvel_fanfare_40_storm","credits":["Rick Bryant","Craig Hamilton","Chris Claremont","Al Milgrom"],"i":2841},{"year":1984,"characters":["Angel","Beast","Blowtorch Brand","Candy Southern","Cloud","Dolly Donahue","Gargoyle (Defender)","Iceman","Manslaughter","Moondragon","Valkyrie"],"name":"Defenders #135","link":"defenders_135","credits":["Kim DeMulder","Don Perlin","Peter Gillis"],"i":2842},{"year":1984,"characters":["Bob Diamond","Iron Fist","Jennie Royce","Luke Cage","Rafael Scarfe"],"name":"Power Man & Iron Fist #109","link":"power_man_iron_fist_109","credits":["Alan Rowlands","Greg LaRocque","Dan Bulanadi"],"i":2843},{"year":1984,"characters":["Neptune","Sub-Mariner"],"name":"Marvel Fanfare #16 (Sub-Mariner)","link":"marvel_fanfare_16_sub-mariner","credits":["Mike Mignola","Bill Mantlo","Al Milgrom","Jim Massara"],"i":2844},{"year":1984,"characters":["Asti the All-Seeing","Blade","Clea","Dr. Strange","Frank Drake","Hannibal King","Sara Wolfe","Shroud","Spider-Woman (Jessica Drew)","Wong"],"name":"Doctor Strange #67","link":"doctor_strange_67","credits":["Stephen Leialoha","Roger Stern"],"i":2845},{"year":1984,"characters":["Ka-Zar","Parnival Plunder","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #33","link":"ka-zar_the_savage_33","credits":["Danny Fingeroth","Mike Carlin","Paul Neary","Bob DeNatale","Carlos Garzon","Marie Severin"],"i":2846},{"year":1984,"characters":["Ka-Zar","Shanna the She-Devil","Zabu"],"name":"Ka-Zar the Savage #34","link":"ka-zar_the_savage_34","credits":["Carlos Garzon","Paul Neary","Mike Carlin"],"i":2847},{"year":1984,"characters":["Betrand Crawley","Betty Brant","Frenchie","Joe 'Robbie' Robertson","Moon Knight","Phillip Chang","Spider-Man","White Dragon"],"name":"Marvel Team-Up #144","link":"marvel_team-up_144","credits":["Greg LaRocque","Cary Burkett","Mike Esposito"],"i":2848},{"year":1984,"characters":["Bogeyman","Energizer","Friday","Gee","Henry Peter Gyrich","Jim Power","Lightspeed","Margaret Power","Mass Master"],"name":"Power Pack #5","link":"power_pack_5","credits":["Louise Simonson","Bob Wiacek","Mary Wilshire"],"i":2849},{"year":1984,"characters":["Black Knight (Dane Whitman)","Black Knight (Sir Percy of Scandia)","Dr. Strange","Umar","Valinor","Victoria Bentley"],"name":"Doctor Strange #68","link":"doctor_strange_68","credits":["Terry Austin","Roger Stern","Paul Smith"],"i":2850},{"year":1984,"characters":["Morley Erwin","Spider-Man","War Machine","Whiplash (Blacklash)"],"name":"Marvel Team-Up #145","link":"marvel_team-up_145","credits":["Greg LaRocque","Tony Isabella","Mike Esposito"],"i":2851},{"year":1984,"characters":["Brothers Grimm III","Clytemnestra Erwin","Iron Man","Morley Erwin","Vibro","War Machine"],"name":"Iron Man #186-187","link":"iron_man_186-187","credits":["Denny O'Neil","Steven Mitchell","Luke McDonnell"],"i":2852},{"year":1984,"characters":["Brothers Grimm III","Clytemnestra Erwin","Iron Man","Morley Erwin","War Machine"],"name":"Iron Man #188","link":"iron_man_188","credits":["Denny O'Neil","Don Perlin","Steven Mitchell"],"i":2853},{"year":1984,"characters":["Blank","Graviton","Hawkeye","Mockingbird","Tigra","War Machine","Wonder Man"],"name":"West Coast Avengers #2","link":"west_coast_avengers_2","credits":["Bob Hall","Roger Stern","Brett Breeding"],"i":2854},{"year":1984,"characters":["Daddy Longlegs","Erik Josten","Hawkeye","Iron Man","Karl Malus","Mockingbird","Morley Erwin","Tigra","Vision","War Machine","Wonder Man"],"name":"Iron Man annual #7","link":"iron_man_annual_7","credits":["Bob Harras","Ian Akin","Brian Garvey","Luke McDonnell"],"i":2855},{"year":2011,"characters":["Alex Wilder","Alice Hayes","Anaconda","Black Bolt","Catherine Wilder","Cobra","Dale Yorkes","Diamondback","Dr. Strange","Frank Dean","Gene Hayes","Geoffrey Wilder","Grottu","Hangman","Human Torch","Invisible Woman","Iron Man","Janet Stein","Leslie Dean","Lilandra","Professor X","Puff Adder","Rattler","Robert Minoru","She-Hulk","Sidewinder","Stacey Yorkes","Sub-Mariner","Tim Boo Ba","Tina Minoru","Victor Stein","War Machine","Wong"],"name":"Iron Man Legacy #6-11","link":"iron_man_legacy_6-11","credits":["Ralph Macchio","Steven Kurth","Philippe Briones","Charlie Beckerman","Fred Van Lente","Jeff Huet","Allen Martinez","Joe Quesada"],"i":2856},{"year":1984,"characters":["Answer","Ben Urich","Betty Brant","Black Cat","Cloak","Dagger","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Johnston (Rose minion)","Kingpin","Liz Allan","Mamie Muggins","Nate Lubenski","Richard Fisk","Sha Shan","Silvermane","Spider-Man","Spot","Vanessa Fisk","Varley (Rose minion)","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #94-95","link":"peter_parker_the_spectacular_s_27","credits":["Al Milgrom","Jim Mooney"],"i":2857},{"year":1984,"characters":["Arranger","Betty Brant","Black Cat","Hobgoblin (Roderick Kingsley)","HUBERT","Human Torch","Jenna Taylor","Joe 'Robbie' Robertson","Johnston (Rose minion)","Kingpin","Mary Jane Watson","Mr. Fantastic","Puma","Richard Fisk","Spider-Man","Varley (Rose minion)","Venom Symbiote"],"name":"Amazing Spider-Man #256-258","link":"amazing_spider-man_256-258","credits":["Tom DeFalco","Ron Frenz","Josef Rubinstein"],"i":2858},{"year":1984,"characters":["Black Abbot","Nomad","Spider-Man","Taskmaster","Venom Symbiote"],"name":"Marvel Team-Up #146","link":"marvel_team-up_146","credits":["Greg LaRocque","Cary Burkett","Mike Esposito"],"i":2859},{"year":1984,"characters":["Aunt May","Black Cat","Jean DeWolff","Nate Lubenski","Spider-Man","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man annual #4","link":"peter_parker_the_spectacular_s_30","credits":["Bill Mantlo","Ron Randall","Sal Buscema","Kerry Gammill","Bob DeNatale","Carlos Garzon"],"i":2860},{"year":1984,"characters":["Agnar","Atropos (Verdandi)","Balder","Beta Ray Bill","Captain Marvel (Monica Rambeau)","Clotho (Urd)","Enchantress","Executioner","Fandral","Frigga","Heimdall","Hermod","Hildy","Hogun","Jarvis","Jerry Sapristi","Karnilla","Kurse","Lachesis (Skuld)","Lorelei (Norse Goddess)","Malekith","Odin","Roger Willis","Scarlet Witch","Sif","Starfox","Surtur","Thor","Tyr","Volstagg","Wasp","Wormwood"],"name":"Thor #345-350","link":"thor_345-350","credits":["Bob Wiacek- Inker","Terry Austin","Walt Simonson"],"i":2861},{"year":1985,"characters":["Angel","Aragorn","Beast","Candy Southern","Cloud","Dolly Donahue","Dragon of the Moon","Gargoyle (Defender)","Iceman","Moondragon","Odin","Red Wolf (Will Talltrees)","Sassafras","Valkyrie"],"name":"Defenders #136-139","link":"defenders_136-137","credits":["Kim DeMulder","Don Perlin","Peter Gillis"],"i":2862},{"year":1984,"characters":["Beta Ray Bill","Captain Marvel (Monica Rambeau)","Deathurge","Fandral","Gary Cody","Hercules","Hogun","Human Torch","ISAAC","Maelstrom","Mr. Fantastic","Scarlet Witch","She-Hulk","Starfox","Thor","Vision","Volstagg","Wasp"],"name":"Avengers #249","link":"avengers_249","credits":["Al Milgrom","Roger Stern","Jack Abel","Joe Sinnott"],"i":2863},{"year":1984,"characters":["Adversary","Amanda Sefton","Colossus","Forge","Henry Peter Gyrich","Jamie Rodriguez","Lee Forrester","Magik","Magneto","Naze","Nightcrawler","Philip Rosen","Professor X","Rachel Summers","Rogue","Storm","Sunspot","Valerie Cooper"],"name":"Uncanny X-Men #186-188","link":"uncanny_x-men_186-188","credits":["John Romita Jr.","Barry Windsor-Smith","Terry Austin","Chris Claremont","Dan Green"],"i":2864},{"year":1985,"characters":["Amiko","Mariko Yashida","Ogun","Professor X","Shadowcat (Kitty Pryde)","Wolverine","Yukio"],"name":"Kitty Pryde and Wolverine #1-6","link":"kitty_pryde_and_wolverine_1-6","credits":["Al Milgrom","Chris Claremont"],"i":2865},{"year":1984,"characters":["Answer","Betty Brant","Black Cat","Cloak","Dagger","Flash Thompson","Kingpin","Mary Jane Watson","Silvermane","Spider-Man","Vanessa Fisk"],"name":"Peter Parker, the Spectacular Spider-Man #96","link":"peter_parker_the_spectacular_s_28","credits":["Al Milgrom","Jim Mooney"],"i":2866},{"year":1984,"characters":["Cindy Adams","General Merriwether Locklin","Rick Jones","ROM","Starshine II"],"name":"ROM #60","link":"rom_60","credits":["Steve Ditko","Bill Mantlo","Tom Palmer"],"i":2867},{"year":1985,"characters":["Balder","Beta Ray Bill","Captain Marvel (Monica Rambeau)","Eilif Dragonslayer","Enchantress","Executioner","Fandral","Frigga","Harokin","Heimdall","Hercules","Hermod","Hildy","Hogun","Human Torch","Karnilla","Loki","Mr. Fantastic","Odin","Roger Willis","Scarlet Witch","She-Hulk","Sif","Starfox","Storm","Surtur","Thor","Tyr","Vision","Volstagg","Wormwood"],"name":"Thor #351-353","link":"thor_351-353","credits":["Walt Simonson"],"i":2868},{"year":1984,"characters":["Blank","Cat (Shroud's agent)","Graviton","Hawkeye","Mockingbird","Mouse (Shroud's agent)","Shroud","Tigra","Vision","War Machine","Wonder Man"],"name":"West Coast Avengers #3-4","link":"west_coast_avengers_3-4","credits":["Bob Hall","Peter Berardi","Roger Stern","Brett Breeding"],"i":2869},{"year":1989,"characters":["Hercules","J. Jonah Jameson","Namorita","Zeus"],"name":"Marvel Comics Presents #12 (Hercules & Namorita)","link":"marvel_comics_presents_12_herc","credits":["<b>Title:","Don Heck","Michael Rockwitz","Frank Springer","Scott Lobdell","<b>Credits:","C.J. Henderson","em>","Randy Emberlin","Fred Fredericks","\"Spring break!\"","<em>Namorita<","Terry Kavanagh"],"i":2870},{"year":1990,"characters":["Dr. Strange","Dum Dum Dugan LMD","Nick Fury","Wong"],"name":"Marvel Fanfare #49","link":"marvel_fanfare_49","credits":["Al Milgrom","Alan Weiss"],"i":2871},{"year":1984,"characters":["Llrrllllnnllyyrrl","Tarianna","Thing"],"name":"Thing #15","link":"thing_15","credits":["Ron Wilson","Mike Carlin","Joe Sinnott"],"i":2872},{"year":1984,"characters":["Aurora","Box","Dara","Doug Thompson","Madison Jeffries","Marrina","Master of the World","Puck","Sasquatch","Shaman","Snowbird","Sub-Mariner","Talisman","Vindicator (Heather Hudson)","Wolverine"],"name":"Alpha Flight #14-17","link":"alpha_flight_14-15","credits":["John Byrne","Bob Wiacek","Terry Austin","Chris Claremont"],"i":2873},{"year":1984,"characters":["Angel","Beast","Dara","Dr. Strange","Gargoyle (Defender)","Human Torch","Iceman","Invisible Woman","Moondragon","Mr. Fantastic","She-Hulk","Spider-Man","Sub-Mariner","Thakos","Valkyrie","Vashti"],"name":"Prince Namor, The Sub-Mariner #1-4","link":"prince_namor_the_sub-mariner_1","credits":["Dan Bulanadi","Bob Budiansky","J.M. DeMatteis"],"i":2874},{"year":1984,"characters":["Becky Blake","Crossbow","Daredevil","Debbie Harris","Foggy Nelson","Glorianna O'Breen","Kingpin","Micah Synn","Vikah"],"name":"Daredevil #210","link":"daredevil_210","credits":["Denny O'Neil","Dan Bulanadi","David Mazzucchelli"],"i":2875},{"year":1982,"characters":["Hangman"],"name":"Bizarre Adventures #31","link":"bizarre_adventures_31","credits":["Steve Skeates","Herb Trimpe","Stephen Bissette","Joe Albelo","Bill Sienkiewicz","Ralph Macchio","Mark Armstrong","Mark Gruenwald","Tom DeFalco","Steven Perry","Steve Smallwood","Frank Miller","John Byrne","Ralph Reese","Larry Hama","Denny O'Neil"],"i":2876},{"year":1984,"characters":["Beast","Discus","Eel II","Iron Fist","Jeryn Hogarth","Lance Bannon","Luke Cage","Man-Mountain Marko","Nightshade","Stiletto","Wasp","Wonder Man"],"name":"Power Man & Iron Fist #110","link":"power_man_iron_fist_110","credits":["Jerry Acerno","Greg LaRocque","Tony Isabella","Brad Joyce"],"i":2877},{"year":1984,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Huntarr","Marionette","Microtron II"],"name":"Micronauts: The New Voyages #1-2","link":"micronauts_the_new_voyages_1-2","credits":["Kelley Jones","Bruce D. Patterson","Peter Gillis"],"i":2878},{"year":1984,"characters":["Llrrllllnnllyyrrl","Tarianna","Thing"],"name":"Thing #16-18","link":"thing_16","credits":["Joe Sinnott","Bob Harras","Dan Bulanadi","Mike Carlin","Ron Wilson"],"i":2879},{"year":1984,"characters":["Becky Blake","Daredevil","Debbie Harris","Foggy Nelson","Glorianna O'Breen","Kingpin","Micah Synn"],"name":"Daredevil #211","link":"daredevil_211","credits":["Denny O'Neil","Dan Bulanadi","David Mazzucchelli"],"i":2880},{"year":1984,"characters":["Black Abbot","Human Torch","Jarvis","Lyja the Lazerfist","Roberta","Spider-Man","Steve Hopkins","Thor","Venom Symbiote"],"name":"Marvel Team-Up #147-148","link":"marvel_team-up_147-148","credits":["Greg LaRocque","Cary Burkett","Mike Esposito"],"i":2881},{"year":1984,"characters":["Hobgoblin (Roderick Kingsley)","Human Torch","Mary Jane Watson","Mr. Fantastic","Richard Fisk","She-Hulk","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #259","link":"amazing_spider-man_259","credits":["Tom DeFalco","Ron Frenz","Josef Rubinstein"],"i":2882},{"year":1984,"characters":["Dr. Strange","Hulk","Puffball Collective"],"name":"Hulk #301","link":"hulk_301","credits":["Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2883},{"year":1984,"characters":["Iron Fist","Jennie Royce","Jeryn Hogarth","Luke Cage","Super-Skrull"],"name":"Power Man & Iron Fist #111","link":"power_man_iron_fist_111","credits":["Jerry Acerno","Greg LaRocque","Christopher Priest"],"i":2884},{"year":1984,"characters":["Becky Blake","Daredevil","Debbie Harris","Foggy Nelson","Glorianna O'Breen","Kingpin","Micah Synn","Vikah"],"name":"Daredevil #212","link":"daredevil_212","credits":["Denny O'Neil","Dan Bulanadi","Pat Redding","David Mazzucchelli"],"i":2885},{"year":1984,"characters":["Hulk","Puffball Collective"],"name":"Hulk annual #13","link":"hulk_annual_13","credits":["Bill Mantlo","Gerry Talaoc","Carl Potts","Alan Kupperberg"],"i":2886},{"year":1984,"characters":["Franklin Richards","Giles Peacock","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Nathaniel Richards","She-Hulk","Wyatt Wingfoot"],"name":"Fantastic Four #271-273","link":"fantastic_four_272-273","credits":["John Byrne"],"i":2887},{"year":1984,"characters":["Captain Marvel (Monica Rambeau)","Gronk","Hawkeye","Helio","Hercules","Maelstrom","Mockingbird","Phobius","Professor Andre LeClaire","Scarlet Witch","Starfox","Tigra","Vision","War Machine","Wasp","Wonder Man"],"name":"Avengers #250","link":"avengers_250","credits":["Al Milgrom","Ian Akin","Brian Garvey","Joe Sinnott","Roger Stern","Roy Richardson"],"i":2888},{"year":1985,"characters":["Arnie Roth","Baron Zemo (Helmut)","Bernie Rosenthal","Black Crow","Captain America","Captain Marvel (Monica Rambeau)","Dave Cox","Falcon","Hate Monger (Hitler)","Hawkeye","Henry Pym","Hercules","Horst Lederer","Jarvis","Nomad","Red Skull","Scarlet Witch","Sin","Sister Agony","Sister Death","Sister Dream","Sister Pleasure","Starfox","Vision","Wasp"],"name":"Captain America #293-301","link":"captain_america_293-300","credits":["Josef Rubinstein","Eduardo Barreto","Michael Ellis","Sam DeLaRosa","Mike Carlin","Dennis Janke","Paul Neary","Brett Breeding","J.M. DeMatteis","Mark Gruenwald","Roy Richardson","Howard Mackie"],"i":2889},{"year":1984,"characters":["Clytemnestra Erwin","Iron Man","Madame Masque Bio-Duplicate","Morley Erwin","Obadiah Stane","Scarlet Witch","Termite","Vision","War Machine"],"name":"Iron Man #189-190","link":"iron_man_189-190","credits":["Steven Mitchell","Ian Akin","Brian Garvey","Luke McDonnell","Denny O'Neil"],"i":2890},{"year":1984,"characters":["Betty Brant","Black Cat","Flash Thompson","Human Torch","Joe 'Robbie' Robertson","Kingpin","Mr. Fantastic","Spider-Man","Spot","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #97","link":"peter_parker_the_spectacular_s_29","credits":["Herb Trimpe","Al Milgrom","Jim Mooney"],"i":2891},{"year":1985,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Huntarr","Marionette","Microtron II"],"name":"Micronauts: The New Voyages #3-4","link":"micronauts_the_new_voyages_3","credits":["Ralph Macchio","Bruce D. Patterson","Ian Akin","Brian Garvey","Kelley Jones","Peter Gillis"],"i":2892},{"year":1984,"characters":["Hulk","Puffball Collective"],"name":"Hulk #302","link":"hulk_302","credits":["Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2893},{"year":1984,"characters":["Bad Ned Jackson","Falcon","Gordy (SMILE)","Iron Fist","Jennie Royce","Luke Cage","Redwing","Super-Skrull"],"name":"Power Man & Iron Fist #112","link":"power_man_iron_fist_112","credits":["Jerry Acerno","Greg LaRocque","Christopher Priest"],"i":2894},{"year":1984,"characters":["Becky Blake","Daredevil","Debbie Harris","Foggy Nelson","Kingpin","Micah Synn","Vikah"],"name":"Daredevil #213","link":"daredevil_213","credits":["Denny O'Neil","Dan Bulanadi","David Mazzucchelli"],"i":2895},{"year":1984,"characters":["Ann Macintosh","Ben Urich","Betty Brant","Glory Grant","J. Jonah Jameson","Jean DeWolff","Joe 'Robbie' Robertson","Man-Wolf (John Jameson)","Marla Madison Jameson","Martha Robertson","Scorpion","Spider-Man"],"name":"Amazing Spider-Man annual #18","link":"amazing_spider-man_annual_18","credits":["Butch Guice","Danny Fingeroth","Tom DeFalco","Stan Lee","Bob Layton","Ron Frenz"],"i":2896},{"year":1985,"characters":["Cloak","Dagger"],"name":"Marvel Fanfare #19","link":"marvel_fanfare_19","credits":["Bill Mantlo","Pat Blevins","Al Milgrom","Tony Salmons","Terry Austin","Rick Leonardi","Kerry Gammill","George Freeman"],"i":2897},{"year":1985,"characters":["Chief Examiner","Joe 'Robbie' Robertson","Mysterio","Spider-Man"],"name":"Questprobe #2","link":"questprobe_2","credits":["Martha Conway","Al Milgrom","Bob Budiansky","Jim Mooney"],"i":2898},{"year":1985,"characters":["Chief Examiner","Human Torch","Lyja the Lazerfist","She-Hulk","Thing"],"name":"Questprobe #3","link":"questprobe_3","credits":["Bob Budiansky","Ron Wilson","David Michelinie","Bobbie Chase","Joe Sinott"],"i":2899},{"year":1984,"characters":["Cannonball","General Merriwether Locklin","Hybrid (Dire Wraith)","Icarus","Jebediah Guthrie","Joelle Guthrie","Lewis Guthrie","Lucinda Guthrie","Magik","Magma","Professor X","ROM","Starshine II","Sunspot","Wolfsbane"],"name":"ROM annual #3","link":"rom_annual_3","credits":["Bill Mantlo","Ian Akin","Brian Garvey","Mike Carlin","William Johnson"],"i":2900},{"year":1985,"characters":["Daredevil","Debbie Harris","Foggy Nelson","Kingpin","Micah Synn"],"name":"Daredevil #214","link":"daredevil_214","credits":["Denny O'Neil","Bob Harras","Ralph Macchio","David Mazzucchelli"],"i":2901},{"year":1985,"characters":["Doug Thompson","Northstar","Puck","Ranaq","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #18-19","link":"alpha_flight_18-19","credits":["Denny O'Neil","Don Daley","Keith Williams","John Byrne","Bob Wiacek","Linda Grant"],"i":2902},{"year":1985,"characters":["Baron Brimstone","Captain America","Captain Marvel (Monica Rambeau)","Hercules","Paladin","Scarlet Witch","Starfox","Vision","Wasp"],"name":"Avengers #251","link":"avengers_251","credits":["Bob Hall","Joe Sinnott","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":2903},{"year":1990,"characters":["Mystique","Rogue"],"name":"Marvel Super Heroes #2 (Rogue)","link":"marvel_super_heroes_2_rogue","credits":["Sue Flaxman","Lou Manna","Brent Cardillo"],"i":2904},{"year":1985,"characters":["Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Black Queen (Selene)","Black Rook (Friedrich von Roehm)","Caliban","Callisto","Cannonball","Captain America","Colossus","Dr. Strange","Henry Peter Gyrich","Jamie Rodriguez","Kulan Gath","Lockheed","Magik","Magma","Mirage (Dani Moonstar)","Nightcrawler","Nimrod","Professor X","Rachel Summers","Rogue","Scarlet Witch","Spider-Man","Starfox","Storm","Sunder","Sunspot","Tessa","Valerie Cooper","Warlock","Wasp","Wolfsbane"],"name":"Uncanny X-Men #189-191","link":"uncanny_x-men_189-191","credits":["John Romita Jr.","Stephen Leialoha","Ann Nocenti","Chris Claremont","Peter Sanderson","Dan Green"],"i":2905},{"year":1985,"characters":["Hulk","Puffball Collective"],"name":"Hulk #303","link":"hulk_303","credits":["Bill Mantlo","Sal Buscema","Carl Potts","Gerry Talaoc","Jim Massara"],"i":2906},{"year":1985,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Black Rook (Friedrich von Roehm)","Cannonball","Cloak","Colossus","Dagger","Emmanuel Da Costa","Father Michael Bowen","Harry Morrel","Lee Forrester","Leong Manh","Magik","Magneto","Mirage (Dani Moonstar)","Moira MacTaggert","Nga Manh Coy","Professor X","Rogue","Sunspot","Tessa","Wolfsbane"],"name":"New Mutants #23-25","link":"new_mutants_23-25","credits":["Ann Nocenti","Chris Claremont","Bill Sienkiewicz","Peter Sanderson"],"i":2907},{"year":1985,"characters":["Bres","Electro","Falcon","Guardsman II (Michael O'Brien)","Iron Fist","Luke Cage","Nick Fury","Redwing","Solarr","Super-Skrull"],"name":"Power Man & Iron Fist #113","link":"power_man_iron_fist_113","credits":["Denny O'Neil","Jerry Acerno","Greg LaRocque","Christopher Priest"],"i":2908},{"year":1985,"characters":["Cannonball","Joe 'Robbie' Robertson","Spider-Man"],"name":"Marvel Team-Up #149","link":"marvel_team-up_149","credits":["Danny Fingeroth","Bret Blevins","Louise Simonson","Bob DeNatale","Mike Esposito"],"i":2909},{"year":1985,"characters":["Llrrllllnnllyyrrl","Tarianna","Thing"],"name":"Thing #19","link":"thing_19","credits":["John Byrne","Ron Wilson","Mike Carlin","Michael Gustovich"],"i":2910},{"year":1985,"characters":["Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","She-Hulk","Thing","Venom Symbiote"],"name":"Fantastic Four #274","link":"fantastic_four_274","credits":["John Byrne","Alan Gordon","Mike Carlin","Michael Higgins"],"i":2911},{"year":1985,"characters":["Ann Macintosh","Arthur Chekov","Aunt May","Betty Brant","Franklin Richards","Harry Osborn","Hobgoblin (Roderick Kingsley)","Invisible Woman","J. Jonah Jameson","Joe 'Robbie' Robertson","Johnston (Rose minion)","Liz Allan","Mary Jane Watson","Richard Fisk","Spider-Man","Varley (Rose minion)","Venom Symbiote"],"name":"Amazing Spider-Man #260-261","link":"amazing_spider-man_260-261","credits":["Danny Fingeroth","Tom DeFalco","Josef Rubinstein","Josef Rubinstein- Inker","Brett Breeding","Ron Frenz"],"i":2912},{"year":2010,"characters":["Franklin Richards","Human Torch","Invisible Woman","Kristoff (Time Travel)","Mr. Fantastic","She-Hulk","Spider-Man","Venom Symbiote"],"name":"Spider-Man/Fantastic Four #2","link":"spider-manfantastic_four_2","credits":["Tom Brennan","Christos Gage","Steve Wacker","Joe Quesada","Mario Alberti"],"i":2913},{"year":1985,"characters":["Betty Brant","Black Cat","Flash Thompson","Kingpin","Spider-Man","Spot","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #98","link":"peter_parker_the_spectacular_s_35","credits":["Herb Trimpe","Al Milgrom","Jim Mooney","Danny Fingeroth"],"i":2914},{"year":1985,"characters":["Allison McCourt","Cloak","Dagger","Dragon Man","Energizer","Gee","Jim Power","John Rival","Lightspeed","Margaret Power","Mass Master","Mr. Diangelo","Professor Gilbert","Spider-Man"],"name":"Power Pack #6-8","link":"power_pack_6-8","credits":["Pat Blevins","Mark Badger","Carl Potts","June Brigman","Louise Simonson","Jim Massara","Bob Wiacek"],"i":2915},{"year":1985,"characters":["Captain America","Injun Joe"],"name":"Marvel Fanfare #18","link":"marvel_fanfare_18","credits":["Al Milgrom","Josef Rubinstein","Frank Miller","Roger Stern","Jim Massara"],"i":2916},{"year":1985,"characters":["Ben Urich","Spider-Man"],"name":"Amazing Spider-Man #262","link":"amazing_spider-man_262","credits":["Bob DeNatale","Carlos Garzon","Bob Layton","Danny Fingeroth"],"i":2917},{"year":1985,"characters":["Dazzler"],"name":"Dazzler #35","link":"dazzler_35","credits":["Vincent Colletta","Frank Springer","Mike Carlin","Jim Shooter"],"i":2918},{"year":1985,"characters":["Hercules","Jarvis"],"name":"Thor #356","link":"thor_356","credits":["Butch Guice","Craig Anderson","Bob Harras","Bob Layton","Mark Gruenwald"],"i":2919},{"year":1985,"characters":["Angel","Beast","Candy Southern","Chris Larmouth","Cloud","Danny Shepard","Dolly Donahue","Ephraim Soles","Gargoyle (Defender)","Iceman","Moondragon","Sassafras","Valkyrie","Vera Cantor"],"name":"Defenders #140-141","link":"defenders_140-141","credits":["Pat Blevins","Don Perlin","Jim Massara","Carl Potts","Peter Gillis","Kim DeMulder"],"i":2920},{"year":1985,"characters":["Black Knight (Dane Whitman)","Clea","Dr. Strange","Orini","Sara Wolfe","Umar","Wong"],"name":"Doctor Strange #69","link":"doctor_strange_69","credits":["Jim Massara","Carl Potts","Roger Stern","Paul Smith"],"i":2921},{"year":1985,"characters":["Clytemnestra Erwin","Iron Man","Morley Erwin","Tigra","Vibro","War Machine"],"name":"Iron Man #191-192","link":"iron_man_191-192","credits":["Ian Akin","Brian Garvey","Luke McDonnell","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":2922},{"year":1985,"characters":["Human Torch","Lyja the Lazerfist","She-Hulk","Wyatt Wingfoot"],"name":"Fantastic Four #275","link":"fantastic_four_275","credits":["John Byrne","Alan Gordon","Mike Carlin","Michael Higgins"],"i":2923},{"year":1985,"characters":["Captain America","Hawkeye","Human Torch","Invisible Woman","J. Jonah Jameson","Living Monolith","Mr. Fantastic","She-Hulk","Spider-Man","Starfox","Thor","War Machine","Wonder Man"],"name":"Revenge of the Living Monolith (Marvel Graphic Novel #17)","link":"marvel_graphic_novel_17_reveng","credits":["Brad Joyce","Marc Silvestri","Geof Isherwood","Phil Lord","Keith Williams","Mike Witherby","Tom Morgan","David Michelinie","Jerry Acerno"],"i":2924},{"year":1985,"characters":["Black Knight (Dane Whitman)","Blood Brothers","Captain America","Captain Marvel (Monica Rambeau)","Doc Samson","Hawkeye","Hercules","ISAAC","Jarvis","Mockingbird","Omnivac","Quasimodo","Scarlet Witch","Starfox","Tigra","Vision","Wonder Man"],"name":"Avengers #252-254","link":"avengers_252","credits":["Bob Hall","Ian Akin","Brian Garvey","Joe Sinnott","Josef Rubinstein","Roger Stern","Joe DelBeato","Mark Gruenwald","Howard Mackie"],"i":2925},{"year":1985,"characters":["Bambi","Betty Brant","Black Cat","Candy","Flash Thompson","Joe 'Robbie' Robertson","Kingpin","Randi","Sha Shan","Spider-Man","Spot","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #99","link":"peter_parker_the_spectacular_s_45","credits":["Herb Trimpe","Al Milgrom","Danny Fingeroth","Jim Mooney","Bob DeNatale"],"i":2926},{"year":1985,"characters":["Black Cat","Harry Osborn","Liz Allan","Mary Jane Watson","Normie Osborn","Spider-Man","Steel Spider"],"name":"Amazing Spider-Man #263","link":"amazing_spider-man_263","credits":["Danny Fingeroth","Tom DeFalco","Brett Breeding","Ron Frenz","Bob DeNatale","John Beatty"],"i":2927},{"year":1985,"characters":["Dr. Strange","Hulk","Ironclad","Puffball Collective","Vapor","Vector","X-Ray"],"name":"Hulk #304-305","link":"hulk_304","credits":["Bill Mantlo","Pat Blevins","Sal Buscema","Carl Potts","Gerry Talaoc"],"i":2928},{"year":1985,"characters":["Gargoyle (Defender)"],"name":"Gargoyle #1-4","link":"gargoyle_1-4","credits":["Carl Potts","Mark Badger","J.M. DeMatteis"],"i":2929},{"year":1985,"characters":["Bambi","Black Tom","Candy","Colossus","Joe 'Robbie' Robertson","Juggernaut","Mamie Muggins","Nightcrawler","Rachel Summers","Rogue","Spider-Man"],"name":"Marvel Team-Up #150","link":"marvel_team-up_150","credits":["Greg LaRocque","Danny Fingeroth","Louise Simonson","Bob DeNatale","Mike Esposito"],"i":2930},{"year":1985,"characters":["Bambi","Betty Brant","Black Cat","Candy","Flash Thompson","Kingpin","Randi","Sha Shan","Spider-Man","Spot","Vanessa Fisk","Venom Symbiote"],"name":"Peter Parker, the Spectacular Spider-Man #100","link":"peter_parker_the_spectacular_s_36","credits":["Al Milgrom","Danny Fingeroth","Geof Isherwood","Bob DeNatale","Vincent Colletta"],"i":2931},{"year":1985,"characters":["Aunt May","Bambi","Candy","Mary Jane Watson","Randi","Spider-Man","Venom Symbiote"],"name":"Web of Spider-Man #1","link":"web_of_spider-man_1","credits":["Christopher Priest","Greg LaRocque","Jim Mooney","Keith Williams","Louise Simonson","Vince Colletta"],"i":2932},{"year":1985,"characters":["Callisto","Colossus","Lockheed","Magik","Magus (Technarchy)","Nightcrawler","Professor X","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #192","link":"uncanny_x-men_192","credits":["Ann Nocenti","Dan Green","John Romita Jr.","Chris Claremont"],"i":2933},{"year":1985,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Huntarr","Marionette","Microtron II","Solitaire"],"name":"Micronauts: The New Voyages #5","link":"micronauts_the_new_voyages_5","credits":["Ralph Macchio","Bob Harras","Kelley Jones","Peter Gillis","Pat Redding"],"i":2934},{"year":1985,"characters":["Beast","Cutlass (Detective)","Gargoyle (Defender)","Hannibal King","Hellcat","Hellstorm","Rufus T. Hackstabber","Typhoon (Detective)"],"name":"Defenders #148","link":"defenders_148","credits":["Art Nichols","Carl Potts","Sal Buscema","Peter Gillis"],"i":2935},{"year":1985,"characters":["Daredevil","Foggy Nelson"],"name":"Daredevil #215","link":"daredevil_215","credits":["Denny O'Neil","Bob Harras","Ralph Macchio","David Mazzucchelli"],"i":2936},{"year":1985,"characters":["Gordy (SMILE)","Iron Fist","Jeryn Hogarth","Luke Cage","Weasel (SMILE)"],"name":"Power Man & Iron Fist #114","link":"power_man_iron_fist_114","credits":["Christopher Priest","Keith Williams","Jerry Acerno","Billy Graham","Denny O'Neil","Steve Geiger"],"i":2937},{"year":1985,"characters":["Angel","Beast","Candy Southern","Chris Larmouth","Cloud","Dolly Donahue","Gargoyle (Defender)","Iceman","Moondragon","Senator Kelly"],"name":"Defenders #142","link":"defenders_142","credits":["Pat Blevins","Don Perlin","Carl Potts","Peter Gillis","Kim DeMulder"],"i":2938},{"year":1985,"characters":["Cindy Adams","Forge","General Merriwether Locklin","Henry Peter Gyrich","Rick Jones","ROM","Starshine II"],"name":"ROM #61-64","link":"rom_61","credits":["Bill Mantlo","Butch Guice","P. Craig Russell","Ian Akin","Brian Garvey","Michael Higgins","Steve Ditko","Mike Carlin","Brett Breeding"],"i":2939},{"year":1985,"characters":["Llrrllllnnllyyrrl","Tarianna","Thing","Ultron"],"name":"Thing #20-22","link":"thing_20","credits":["Michael Higgins","Joe Sinnott","Mike Carlin","John Byrne","Ron Wilson","Michael Gustovich"],"i":2940},{"year":1985,"characters":["Dr. Strange","Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mephisto","Mr. Fantastic","She-Hulk","Thing","Ultron","Wong","Wyatt Wingfoot"],"name":"Fantastic Four #276-277","link":"fantastic_four_276-277","credits":["John Byrne","Jerry Ordway","Mike Carlin","Michael Higgins"],"i":2941},{"year":1985,"characters":["American Eagle","Angel","Arabian Knight","Aragorn","Beast","Beta Ray Bill","Black Knight (Dane Whitman)","Blitzkrieg","Captain America","Captain Britain","Captain Marvel (Monica Rambeau)","Cindy Adams","Colossus","Darkstar","Forge","Gargoyle (Defender)","Gremlin","Hawkeye","Henry Peter Gyrich","Hercules","Iceman","Le Peregrine","Mockingbird","Moondragon","Nightcrawler","Professor X","Rick Jones","Rogue","ROM","Scarlet Witch","Shadowcat (Kitty Pryde)","Shamrock","Starfox","Starshine II","Sub-Mariner","Tigra","Ursa Major","Valkyrie","Vanguard","Vision","War Machine","Wolverine","Wonder Man"],"name":"ROM #65-66","link":"rom_65-66","credits":["Bill Mantlo","Michael Higgins","P. Craig Russell","Stephen Leialoha","Steve Ditko","Mike Carlin"],"i":2942},{"year":1985,"characters":["Balder","Beta Ray Bill","Brenda Barclay","Fandral","Frigga","Heimdall","Hela","Hildy","Hogun","Karnilla","Loki","Lorelei (Norse Goddess)","Nurse Stevens","Shawna Lynde","Sif","Thor","Volstagg"],"name":"Thor #354","link":"thor_354","credits":["Mark Gruenwald","Walt Simonson"],"i":2943},{"year":1985,"characters":["Mephisto","Thor","Ulik"],"name":"Thor annual #13","link":"thor_annual_13","credits":["Alan Zelenetz","Ralph Macchio","John Buscema"],"i":2944},{"year":1985,"characters":["Batroc","Bernie Rosenthal","Captain America","Josh Cooper","Machete","Myron Maclain","Nick Fury","Nomad","Obadiah Stane","Zaran"],"name":"Captain America #302-304","link":"captain_america_302-303","credits":["Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald","Howard Mackie"],"i":2945},{"year":1985,"characters":["Aurora","Gilded Lily","Puck","Sasquatch","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #20-21","link":"alpha_flight_20-21","credits":["Don Daley","Keith Williams","John Byrne","Denny O'Neil","Bob Wiacek"],"i":2946},{"year":1985,"characters":["Beta Ray Bill","Buri","Fandral","Frigga","Hildy","Hogun","Loki","Lorelei (Norse Goddess)","Sif","Thor","Volstagg"],"name":"Thor #355","link":"thor_355","credits":[],"i":2947},{"year":1985,"characters":["Dazzler","Janet McEntee","Tatterdemalion"],"name":"Dazzler #36","link":"dazzler_36","credits":["Michael Higgins","Geof Isherwood","Josef Rubinstein","Mike Carlin","Michael Gustovich","Linda Grant"],"i":2948},{"year":1985,"characters":["Bug","Solitaire"],"name":"Micronauts: The New Voyages #6","link":"micronauts_the_new_voyages_6","credits":["Ralph Macchio","Kelley Jones","Bob Harras","Bruce Patterson","Peter Gillis"],"i":2949},{"year":1985,"characters":["Iron Fist","Luke Cage","Maxine Walters","Stanley Lumus"],"name":"Power Man & Iron Fist #115-116","link":"power_man_iron_fist_115-116","credits":["Christopher Priest","M.D. Bright","Don Daley","Jerry Acerno","Denny O'Neil"],"i":2950},{"year":1985,"characters":["Becky Blake","Black Widow","Crossbow","Daredevil","Foggy Nelson","Gael","Glorianna O'Breen","Kingpin"],"name":"Daredevil #216-217","link":"daredevil_216","credits":["Denny O'Neil","Bob Harras","Ralph Macchio","David Mazzucchelli"],"i":2951},{"year":1989,"characters":["Cloak","Dagger","Energizer","Gee","Jim Power","Lightspeed","Margaret Power","Mass Master"],"name":"Cloak and Dagger and Power Pack: Shelter From the Storm","link":"cloak_and_dagger_and_power_pac","credits":["Bill Mantlo","Mark Farmer","Marc McLaurin","Carl Potts","Sal Velluto"],"i":2952},{"year":1985,"characters":["Dazzler"],"name":"Dazzler #37","link":"dazzler_37","credits":["Michael Higgins","Dan Bulanadi","Mike Carlin","Tom Morgan","Bob DeNatale"],"i":2953},{"year":1985,"characters":["Cybor","Hulk","Klaatu","Puffball Collective","Xeron"],"name":"Hulk #306-307","link":"hulk_306","credits":["Carl Potts","Bill Mantlo","Gerry Talaoc","Sal Buscema"],"i":2954},{"year":1985,"characters":["Acroyear","Commander Arcturus Rann","Huntarr","Marionette"],"name":"Micronauts: The New Voyages #7","link":"micronauts_the_new_voyages_7","credits":["Ralph Macchio","Ian Akin","Brian Garvey","Bob Harras","Peter Gillis","Rod Whigham"],"i":2955},{"year":1985,"characters":["Alice Nugent","Bethany Cabe","Clytemnestra Erwin","Doctor Demonicus","Enforcer","Godzilla","Hawkeye","Henry Pym","Iron Man","Madame Masque Bio-Duplicate","Mockingbird","Morley Erwin","Obadiah Stane","Scourge","Tigra","War Machine"],"name":"Iron Man #193-194","link":"iron_man_193","credits":["Ian Akin","Brian Garvey","Luke McDonnell","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":2956},{"year":1985,"characters":["Energizer","Friday","Gee","Lightspeed","Margaret Power","Marrina","Mass Master","Snake-Eyes"],"name":"Power Pack #9-10","link":"power_pack_9-10","credits":["Pat Blevins","Brent Anderson","Carl Potts","Louise Simonson","Bob Wiacek"],"i":2957},{"year":1986,"characters":["Black King (Sebastian Shaw)","Cannonball","Catseye","Colossus","Empath","Firestar","Jetstream","Magik","Magma","Mirage (Dani Moonstar)","Nightcrawler","Professor X","Roulette","Storm","Sunspot","Tarot","Warpath","White Queen (Emma Frost)","Wolfsbane","Wolverine"],"name":"Firestar #2","link":"firestar_2","credits":["Ann Nocenti","Tom DeFalco","Bob Wiacek","Mary Wilshire"],"i":2958},{"year":1985,"characters":["Aurora","Box","Delphine Courtney","Madison Jeffries","Northstar","Pink Pearl","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #22","link":"alpha_flight_22","credits":["Don Daley","John Byrne","Bob Wiacek","Denny O'Neil"],"i":2959},{"year":1984,"characters":["Amanda Sefton","Cannonball","Colossus","Lockheed","Magik","Magma","Mirage (Dani Moonstar)","Nightcrawler","Professor X","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Stevie Hunter","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men annual #8","link":"uncanny_x-men_annual_8","credits":["Stephen Leialoha","Ann Nocenti","Chris Claremont"],"i":2960},{"year":1985,"characters":["Betty Brant","Joe 'Robbie' Robertson","Spider-Man","Whiplash (Blacklash)"],"name":"Peter Parker, the Spectacular Spider-Man #101","link":"peter_parker_the_spectacular_s_37","credits":["Christopher Priest","Carry Burkett","Juan Alacantara","Keith Williams","Jack Abel"],"i":2961},{"year":1986,"characters":["Aurora","Colossus","Cyclops","Cypher","Lockheed","Loki","Madelyne Pryor","Magik","Nightcrawler","Northstar","Professor X","Puck","Rachel Summers","Rogue","Sasquatch","Shadowcat (Kitty Pryde)","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)","Wolverine"],"name":"X-Men/Alpha Flight #1-2","link":"x-menalpha_flight_1-2","credits":["Denny O'Neil","Friends","Ann Nocenti","Chris Claremont","Paul Smith","Bob Wiacek"],"i":2962},{"year":1985,"characters":["Dr. Strange","Sara Wolfe"],"name":"Doctor Strange #70","link":"doctor_strange_70","credits":["Pat Blevins","Terry Austin","Carl Potts","Roger Stern","Bret Blevins"],"i":2963},{"year":1985,"characters":["Glow (Triad)","Goblin (Triad)","Guardian (Triad)","Hulk","Puffball Collective"],"name":"Hulk #308","link":"hulk_308","credits":["Bill Mantlo","Pat Blevins","Sal Buscema","Carl Potts","Gerry Talaoc"],"i":2964},{"year":1985,"characters":["Andromeda","Angel","Beast","Candy Southern","Cloud","Dolly Donahue","Dragon of the Moon","Gargoyle (Defender)","General Argyle Fist","Iceman","Moondragon","Sassafras","Valkyrie"],"name":"Defenders #143-144","link":"defenders_143-144","credits":["Pat Blevins","Don Perlin","Carl Potts","Peter Gillis","Kim DeMulder"],"i":2965},{"year":1985,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Gunthar","Hercules","Kehl","Levan","Raymond Sikorski","Scarlet Witch","Skunge","Starfox","Vision","Wasp","Wonder Man"],"name":"Avengers #255","link":"avengers_255","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":2966},{"year":1982,"characters":["Arthur Pendragon","Captain Britain","Jackdaw (Elf)","Mad Jim Jaspers","Merlin","Opal Luna Saturnyne"],"name":"Marvel Super Heroes #377-386 (UK)","link":"marvel_super_heroes_377-386_uk","credits":["David Thorpe","Alan Davis","Paul Neary"],"i":2967},{"year":1984,"characters":["Arcade","Black King (Sebastian Shaw)","Black Knight (Dane Whitman)","Captain Airstrip One","Captain Albion","Captain Angleterre","Captain Britain","Captain Commonwealth","Captain Empire","Captain England","Captain UK","Cobweb (Special Executive)","Executioner (616 Crazy Gang)","Fascination","Fury (Cybiote)","Henry Peter Gyrich","Jackdaw (Elf)","Jester (616 Crazy Gang)","Knave (616 Crazy Gang)","Kommandant Englander","Legion (Special Executive)","Lord Mandragon","Mad Jim Jaspers","Meggan","Merlin","Miss Locke","Opal Luna Saturnyne","Psylocke","Red Queen (616 Crazy Gang)","Roma","Slaymaster","Tweedledope (616 Crazy Gang)","Victoria Bentley","Vixen","Wardog","Zeitgeist"],"name":"Marvel Super Heroes #387-388 (UK), Daredevils #1-11, Mighty World of Marvel #7-13","link":"marvel_super_heroes_uk_387-388","credits":["Alan Moore","Alan Davis"],"i":2968},{"year":1985,"characters":["Arnie Roth","Bernie Rosenthal","Captain America","Captain Britain","Merlin","Modred the Mystic","Nomad"],"name":"Captain America #305-306","link":"captain_america_306","credits":["Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald","Howard Mackie"],"i":2969},{"year":1985,"characters":["Red 9","Spider-Man"],"name":"Amazing Spider-Man #264","link":"amazing_spider-man_264","credits":["Keith Williams","Craig Anderson","Paty Cockrum","Christopher Priest"],"i":2970},{"year":1985,"characters":["Banshee","Callisto","Cannonball","Colossus","Cypher","Empath","Firestar","Jamie Rodriguez","Lockheed","Mirage (Dani Moonstar)","Nightcrawler","Nimrod","Professor X","Rachel Summers","Rogue","Roulette","Shadowcat (Kitty Pryde)","Sunder","Tomas Rodriguez","Warpath","Wolverine"],"name":"Uncanny X-Men #193","link":"uncanny_x-men_193","credits":["Ann Nocenti","Dan Green","John Romita Jr.","Chris Claremont"],"i":2971},{"year":1986,"characters":["Bart Jones","Black King (Sebastian Shaw)","Black Queen (Selene)","Catseye","Empath","Firestar","Jetstream","Roulette","Tarot","Warpath","White Queen (Emma Frost)"],"name":"Firestar #3","link":"firestar_3-4","credits":["Stephen Leialoha","Tom DeFalco","Mary Wilshire","Ann Nocenti"],"i":2972},{"year":1985,"characters":["Banshee","Cypher","Empath","Gabrielle Haller","Lee Forrester","Legion","Madrox the Multiple Man","Magneto","Mirage (Dani Moonstar)","Moira MacTaggert","Professor X","Reverend Craig","Sharon Friedlander","Tom Corsi","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #26-28","link":"new_mutants_26-28","credits":["Ann Nocenti","Chris Claremont","Bill Sienkiewicz"],"i":2973},{"year":1985,"characters":["Bambi","Candy","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Liz Allan","Mary Jane Watson","Nate Lubenski","Normie Osborn","Randi","Spider-Man","Vanessa Fisk"],"name":"Web of Spider-Man #2","link":"web_of_spider-man_2","credits":["Christopher Priest","Greg LaRocque","Jim Mooney","Keith Williams","Louise Simonson"],"i":2974},{"year":1985,"characters":["Andromeda","Angel","Beast","Candy Southern","Chris Larmouth","Cloud","Dolly Donahue","Dragon of the Moon","Gargoyle (Defender)","General Argyle Fist","Ghost Rider (Johnny Blaze)","Iceman","Moondragon","Roxanne Simpson","Sassafras","Seraph","Valkyrie"],"name":"Defenders #145","link":"defenders_145","credits":["Art Nichols","Carl Potts","Don Perlin","Peter Gillis"],"i":2975},{"year":1985,"characters":["Harry Osborn","Killer Shrike","Liz Allan","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #102","link":"peter_parker_the_spectacular_s_38","credits":["Larry Lieber","Jim Mooney","Cary Burkett","Danny Fingeroth"],"i":2976},{"year":1985,"characters":["Daredevil","Foggy Nelson","Glorianna O'Breen","Jester (Jonathan Powers)","Rafael Scarfe"],"name":"Daredevil #218","link":"daredevil_218","credits":["Ralph Macchio","Ian Akin","Brian Garvey","Sal Buscema","Denny O'Neil"],"i":2977},{"year":1985,"characters":["Acroyear","Bug","Commander Arcturus Rann","Huntarr","Marionette","Scion","Solitaire"],"name":"Micronauts: The New Voyages #8","link":"micronauts_the_new_voyages_8","credits":["Kelley Jones","Ralph Macchio","Peter Gillis","Bruce Patterson"],"i":2978},{"year":1985,"characters":["Colleen Wing","Iron Fist","Jonathan Lumus","Luke Cage","Master Khan","Maxine Walters","Misty Knight"],"name":"Power Man & Iron Fist #117","link":"power_man_iron_fist_117","credits":["Denny O'Neil","Jerry Acerno","M.D. Bright","Christopher Priest"],"i":2979},{"year":1986,"characters":["Daredevil","Foggy Nelson","Josie (Bar owner)","Kingpin","Paul Mondat","Turk","Vanessa Fisk"],"name":"Daredevil: Love and War (Marvel Graphic Novel #24)","link":"daredevil_love_and_war_marvel_","credits":["Frank Miller","Al Milgrom","Bill Sienkiewicz"],"i":2980},{"year":1992,"characters":["Arcade","Black Raazer","Puck"],"name":"Marvel Comics Presents #99 (Puck)","link":"marvel_comics_presents_99_puck","credits":["Josef Rubinstein","Joe Madureira","Mark Powers","Raz Mesinai","Terry Kavanagh","Paula Foye"],"i":2981},{"year":1985,"characters":["Blackjack O'Hare","Judson Jakes","Killer Clown","Lord Dyvyne","Lylla","Rocket Raccoon","Uncle Pyko","Walruss"],"name":"Rocket Raccoon #1-4","link":"rocket_raccoon_1-4","credits":["Bill Mantlo","Pat Blevins","Al Milgrom","Jim Massara","Carl Potts","Al Gordeon","Mike Mignola"],"i":2982},{"year":1985,"characters":["Bethany Cabe","Hawkeye","Iron Man","Madame Masque Bio-Duplicate","Mockingbird","Obadiah Stane","Shaman","War Machine"],"name":"Iron Man #195","link":"iron_man_195","credits":["Ian Akin","Brian Garvey","Luke McDonnell","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":2983},{"year":1985,"characters":["Andrea Strucker","Andreas Strucker","Colonel Alexei Vazhin","Colossus","Juggernaut","Lockheed","Magik","Nightcrawler","Nimrod","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #194","link":"uncanny_x-men_194","credits":["John Romita Jr.","Stephen Leialoha","Ann Nocenti","Chris Claremont","Dan Green"],"i":2984},{"year":1986,"characters":["Lockheed","Magik","Nightcrawler","Shadowcat (Kitty Pryde)"],"name":"Nightcrawler #1-4","link":"nightcrawler_1-4","credits":["Dave Cockrum","Josef Rubinstein","Ann Nocenti"],"i":2985},{"year":1986,"characters":["Bart Jones","Black King (Sebastian Shaw)","Black Queen (Selene)","Empath","Firestar","Roulette","White Queen (Emma Frost)"],"name":"Firestar #4","link":"firestar_4","credits":["Stephen Leialoha","Tom DeFalco","Mary Wilshire","Ann Nocenti"],"i":2986},{"year":1985,"characters":["Clytemnestra Erwin","Doctor Demonicus","Godzilla","Hawkeye","Iron Man","Morley Erwin","Obadiah Stane","Shaman","War Machine"],"name":"Iron Man #196","link":"iron_man_196","credits":["Ian Akin","Brian Garvey","Mark Gruenwald","Rich Buckler","Denny O'Neil","Howard Mackie"],"i":2987},{"year":1985,"characters":["Aurora","Box","Caliber","Doug Thompson","Hodiak","Kariooq","Nelvanna","Northstar","Puck","Sasquatch","Shaman","Snowbird","Somon","Talisman","Tolamaq","Tundra","Turoq","Vindicator (Heather Hudson)"],"name":"Alpha Flight #23-24","link":"alpha_flight_23-24","credits":["Denny O'Neil","Don Daley","Keith Williams","John Byrne","Bob Wiacek"],"i":2988},{"year":1985,"characters":["Aunt May","J. Jonah Jameson","Mary Jane Watson","Nate Lubenski","Spider-Man","Vulture"],"name":"Web of Spider-Man #3","link":"web_of_spider-man_3","credits":["Louise Simonson","Greg LaRocque","Jim Mooney","Christopher Priest"],"i":2989},{"year":1985,"characters":["Andre Boullion","Aunt May","Black Fox","Chris Keating","Harry Osborn","Liz Allan","Mary Jane Watson","Nate Lubenski","Normie Osborn","Silver Sable","Spider-Man","Uncle Morty"],"name":"Amazing Spider-Man #265","link":"amazing_spider-man_265","credits":["Christopher Priest","Tom DeFalco","Josef Rubinstein","Keith Williams","Ron Frenz"],"i":2990},{"year":1985,"characters":["Betty Brant","Human Torch","J. Jonah Jameson","Jean DeWolff","Joe 'Robbie' Robertson","Ned Leeds","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #103","link":"peter_parker_the_spectacular_s_39","credits":["Armando Gil","Peter David","Chrisopher Priest","Rich Buckler"],"i":2991},{"year":1985,"characters":["Annalee","Ape (Morlock)","Beautiful Dreamer","Caliban","Callisto","Energizer","Erg","Gee","Leech","Lightspeed","Lockheed","Masque","Mass Master","Nightcrawler","Piper (Morlock)","Sunder","Tarbaby"],"name":"Power Pack #11-12","link":"power_pack_11-12","credits":["Pat Blevins","Carl Potts","June Brigman","Louise Simonson","Bob Wiacek"],"i":2992},{"year":1985,"characters":["Annalee","Ape (Morlock)","Beautiful Dreamer","Callisto","Energizer","Erg","Gee","Jim Power","Leech","Lightspeed","Margaret Power","Masque","Mass Master","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Sunder","Tarbaby","Wolverine"],"name":"Uncanny X-Men #195","link":"uncanny_x-men_195","credits":["Ann Nocenti","Dan Green","John Romita Jr.","Chris Claremont"],"i":2993},{"year":1985,"characters":["Bambi","Black Cat","Frog-Man II","Spider-Man","Steel Spider","Toad"],"name":"Amazing Spider-Man #266","link":"amazing_spider-man_266","credits":["Christopher Priest","Peter David","Sal Buscema","Josef Rubinstein \"and co.\""],"i":2994},{"year":1985,"characters":["Anaconda","Bernie Rosenthal","Black Mamba","Captain America","Captain Britain","Death Adder","Madcap","Nomad"],"name":"Captain America #307","link":"captain_america_307","credits":["Dennis Janke","Mark Gruenwald","Paul Neary","Mike Carlin"],"i":2995},{"year":1985,"characters":["Alexander Flynn","Axe","Cannonball","Dazzler","Ivich","Karma","Lee Forrester","Lila Cheney","Magik","Magma","Magneto","Max Rocker","Professor X","S'ym","Shadow King","Strong Guy","Sunspot"],"name":"New Mutants #29","link":"new_mutants_29-30","credits":["Ann Nocenti","Chris Claremont","Bill Sienkiewicz"],"i":2996},{"year":1985,"characters":["Beyonder","Cannonball","Captain America","Colossus","Cypher","Dazzler","Iron Man","Legion","Lila Cheney","Magik","Magneto","Mirage (Dani Moonstar)","Moira MacTaggert","Molecule Man","Nightcrawler","Professor X","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Thundersword","Volcana","War Machine","Warlock","Wolfsbane","Wolverine"],"name":"Secret Wars II #1","link":"secret_wars_ii_1","credits":["Stephen Leialoha","Al Milgrom","Bob Budiansky","Jim Shooter"],"i":2997},{"year":1985,"characters":["Alexander Flynn","Beyonder","Cannonball","Dazzler","General Nguyen Coy","Ivich","Karma","Lila Cheney","Magik","Magma","Max Rocker","Rachel Summers","Shadow King","Shadowcat (Kitty Pryde)","Sunspot"],"name":"New Mutants #30-31","link":"new_mutants_30-31","credits":["Ann Nocenti","Chris Claremont","Bill Sienkiewicz","Peter Sanderson"],"i":2998},{"year":1985,"characters":["Bethany Cabe","Clytemnestra Erwin","Iron Man","Morley Erwin","Thundersword","War Machine"],"name":"Iron Man #197","link":"iron_man_197","credits":["Ian Akin","Brian Garvey","Mark Gruenwald","Rich Buckler","Denny O'Neil","Howard Mackie"],"i":2999},{"year":1985,"characters":["Anaconda","Armadillo","Bernie Rosenthal","Beyonder","Black Mamba","Captain America","Death Adder","Erik Josten","Hawkeye","Karl Malus","Mockingbird","Sidewinder"],"name":"Captain America #308","link":"captain_america_308","credits":["Michael Higgins","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald"],"i":3000},{"year":1985,"characters":["Cerberus (Dog)","Colossus","Cyclops","Dazzler","Dust (Dazzler villain)","Nightcrawler","O.Z. Chase","Rogue","Wolverine"],"name":"Dazzler #38","link":"dazzler_38","credits":["Archie Goodwin","Michael Higgins","Butch Guice","Paul Chadwick","Mike Carlin"],"i":3001},{"year":1989,"characters":["Arcade","Colossus","Contessa Valentina Allegro De La Fontaine","Dazzler","Dum Dum Dugan LMD","Miss Locke","Nick Fury","Rogue","Scorpio III (Mikel Fury)","Wolverine"],"name":"Wolverine/Nick Fury: The Scorpio Connection","link":"wolverinenick_fury_the_scorpio","credits":["Archie Goodwin","Tom DeFalco","Sara Tuchinsky","Gregory Wright","Howard Chaykin","Mark Gruenwald","Evan Skolnick"],"i":3002},{"year":1985,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Devil (Micronaut)","Huntarr","Marionette","Microtron II","Solitaire"],"name":"Micronauts: The New Voyages #9","link":"micronauts_the_new_voyages_9","credits":["Ralph Macchio","Kelley Jones","Bob Harras","Bruce Patterson","Peter Gillis"],"i":3003},{"year":1985,"characters":["Bethany Cabe","Clytemnestra Erwin","Happy Hogan","Hawkeye","Iron Man","Madame Masque Bio-Duplicate","Mockingbird","Morley Erwin","Mrs. Arbogast","Obadiah Stane","Pepper Potts","Theron Atlanta","Tigra","Timothy Anders","Valdemar Tykkio","Vic Martinelli","War Machine","Yorgon Tykkio"],"name":"Iron Man #198-201","link":"iron_man_198-201","credits":["Herb Trimpe","Ian Akin","Brian Garvey","M.D. Bright","Sal Buscema","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":3004},{"year":1985,"characters":["Betty Brant","Charles Jefferson","Doctor Octopus","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Web of Spider-Man #4","link":"web_of_spider-man_4","credits":["Christopher Priest","Greg LaRocque","Danny Fingeroth","Keith Williams","Vincent Colletta"],"i":3005},{"year":1985,"characters":["Energizer","Gee","Lightspeed","Mass Master"],"name":"Power Pack #13","link":"power_pack_13","credits":["Louise Simonson","Bob Wiacek","Brent Anderson","Carl Potts"],"i":3006},{"year":1985,"characters":["Anaconda","Bernie Rosenthal","Captain America","Cobra","Constrictor","Death Adder","Falcon","Jarvis","Madcap","Nick Fury","Nomad","Princess Python","Sidewinder"],"name":"Captain America #309","link":"captain_america_309","credits":["Dennis Janke","Mark Gruenwald","Paul Neary","Mike Carlin"],"i":3007},{"year":1985,"characters":["Daredevil"],"name":"Daredevil #219","link":"daredevil_219","credits":["Ralph Macchio","John Buscema","Bob Harras","Frank Miller","Gerry Talaoc"],"i":3008},{"year":1985,"characters":["Charlie Carcrash","Dr. Strange","Gargoyle (Defender)","Hellcat","Hellstorm","Hulk","Old Elsie","Sub-Mariner","Thing","Valkyrie","Wong","Xandu"],"name":"Marvel Fanfare #20-21","link":"marvel_fanfare_20-21","credits":["Al Milgrom","Pat Blevins","Jim Starlin"],"i":3009},{"year":1987,"characters":["Captain America","Dr. Doom","Gears Garvin","Hawkeye","Hulk","Iron Man","Jarvis","Luke Cage","Machine Man","Mockingbird","Purple Man","Scarlet Witch","Starfox","Sub-Mariner","Tigra","Ultron Mark Twelve","Vision","Wasp","Wonder Man"],"name":"Avengers: Emperor Doom (Marvel Graphic Novel #27)","link":"avengers_emperor_doom_marvel_g","credits":["Bob Hall","David Micheline","Jim Salicrup","Keith Williams","David Michelinie","Jim Shooter","Mark Gruenwald"],"i":3010},{"year":1985,"characters":["Andrea Strucker","Andreas Strucker","Beyonder","Colossus","Father Michael Bowen","Lee Forrester","Magneto","Nightcrawler","Professor X","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #196","link":"uncanny_x-men_196","credits":["John Romita Jr.","Ann Nocenti","Chris Claremont","Peter Sanderson","Dan Green"],"i":3011},{"year":1985,"characters":["Cindy Adams","Rick Jones","ROM","Starshine II"],"name":"ROM #67","link":"rom_67","credits":["Steve Ditko","Bill Mantlo","P. Craig Russell","Mike Carlin"],"i":3012},{"year":1985,"characters":["Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Thing #23","link":"thing_23","credits":["Mark Gruenwald","Ron Wilson","Mike Carlin","Bob Layton"],"i":3013},{"year":1985,"characters":["Anaconda","Asp","Bernie Rosenthal","Black Knight (Dane Whitman)","Black Mamba","Bushmaster II","Captain America","Cobra","Constrictor","Cottonmouth","Death Adder","Diamondback","Jarvis","Princess Python","Rattler","Sidewinder","Starfox"],"name":"Captain America #310","link":"captain_america_310","credits":["Michael Higgins","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald"],"i":3014},{"year":1985,"characters":["Allison McCourt","Bogeyman","Energizer","Gee","John Rival","Lightspeed","Mass Master"],"name":"Power Pack #14","link":"power_pack_14","credits":["Carl Potts","June Brigman","Rosemary McCormick-Lowy","Louise Simonson","Bob Wiacek"],"i":3015},{"year":1985,"characters":["Guardsman II (Michael O'Brien)","Miracle Man","Rhino","Scourge","Thing"],"name":"Thing #24","link":"thing_24","credits":["Joe Sinnott","Mike Carlin","Ron Wilson","Mark Gruenwald","Howard Mackie"],"i":3016},{"year":1985,"characters":["Daredevil","Human Torch","Spider-Man"],"name":"Amazing Spider-Man #267","link":"amazing_spider-man_267","credits":["Bob McLeod","Peter David","Keith Williams","Christopher Priest"],"i":3017},{"year":1985,"characters":["Ben Urich","Rocket Racer","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #104","link":"peter_parker_the_spectacular_s_40","credits":["Vincent Giarrano- Penciler","Bill Mantlo","Pat Redding","Christopher Priest"],"i":3018},{"year":1985,"characters":["Doctor Octopus","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Nate Lubenski","Spider-Man"],"name":"Web of Spider-Man #5","link":"web_of_spider-man_5","credits":["Christopher Priest","Greg LaRocque","Danny Fingeroth","Jim Mooney","Keith Williams"],"i":3019},{"year":1985,"characters":["Anaconda","Asp","Awesome Android","Bernie Rosenthal","Black Mamba","Bobby Hutchinson","Bushmaster II","Captain America","Cobra","Constrictor","Cottonmouth","Death Adder","Diamondback","Kingpin","Princess Python","Rattler","Scourge","Sidewinder"],"name":"Captain America #311","link":"captain_america_311","credits":["Michael Higgins","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald"],"i":3020},{"year":1985,"characters":["Franklin Richards","Hate-Monger (Construct)","Human Torch","Invisible Woman","Kristoff","Lyja the Lazerfist","Mr. Fantastic","Psycho-Man","She-Hulk","Wyatt Wingfoot"],"name":"Fantastic Four #278-279","link":"fantastic_four_278-279","credits":["John Byrne","Jerry Ordway","Mike Carlin","Michael Higgins"],"i":3021},{"year":1985,"characters":["Mr. Fantastic","She-Hulk","Thing","Wyatt Wingfoot"],"name":"Thing #25","link":"thing_25","credits":["Mike Carlin","Ron Wilson","Brett Breeding","Mark Gruenwald","Howard Mackie"],"i":3022},{"year":1985,"characters":["Apollo","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Gunthar","Hercules","Jarvis","Jorro","Ka-Zar","Kehl","Levan","Nebula","Sabu","Shanna the She-Devil","Skunge","Starfox","Terminus","Typ","Wasp"],"name":"Avengers #256-257","link":"avengers_256-257","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3023},{"year":1985,"characters":["Glow (Triad)","Goblin (Triad)","Guardian (Triad)","Hulk"],"name":"Hulk #309","link":"hulk_309","credits":["Bill Mantlo","Pat Blevins","Sal Buscema","Carl Potts","Gerry Talaoc"],"i":3024},{"year":1985,"characters":["Acroyear","Biotron II","Bug","Cilicia","Commander Arcturus Rann","Huntarr","Marionette","Microtron II","Scion","Solitaire"],"name":"Micronauts: The New Voyages #10-12","link":"micronauts_the_new_voyages_10","credits":["Ralph Macchio","Craig Anderson","Kelley Jones","Dan Bulanadi","Bruce Patterson","Peter Gillis"],"i":3025},{"year":1985,"characters":["Becky Blake","Daredevil","Foggy Nelson","Grotto","Heather Glenn","Turk"],"name":"Daredevil #220","link":"daredevil_220","credits":["Denny O'Neil","Ralph Macchio","David Mazzucchelli"],"i":3026},{"year":1985,"characters":["Cloak","Dagger","Father Delgado","Mayhem","Predator"],"name":"Cloak and Dagger #1","link":"cloak_and_dagger_1","credits":["Bill Mantlo","Carl Potts","Terry Austin","Rick Leonardi"],"i":3027},{"year":1985,"characters":["ROM"],"name":"ROM #68","link":"rom_68","credits":["Steve Ditko","Bill Mantlo","Brett Breeding","Mike Carlin"],"i":3028},{"year":1985,"characters":["Ben Urich","Daredevil","Foggy Nelson"],"name":"Daredevil #221","link":"daredevil_221","credits":["Denny O'Neil","Craig Anderson","Ralph Macchio","David Mazzucchelli"],"i":3029},{"year":1985,"characters":["Justice","Taskmaster","Thing"],"name":"Thing #26","link":"thing_26","credits":["Ron Wilson","Mike Carlin","Mark Gruenwald","Joe Sinnott"],"i":3030},{"year":1985,"characters":["Becky Blake","Black Widow","Daredevil","Debbie Harris","Foggy Nelson","Glorianna O'Breen"],"name":"Daredevil #222","link":"daredevil_222","credits":["Kim DeMulder","Denny O'Neil","Ralph Macchio","David Mazzucchelli"],"i":3031},{"year":1985,"characters":["Daredevil","Franklin Richards","Hate-Monger (Construct)","Human Torch","Invisible Woman","Jarvis","Lyja the Lazerfist","Malice (Sue Storm's psionic entity)","Mr. Fantastic","Psycho-Man","She-Hulk","Wyatt Wingfoot"],"name":"Fantastic Four #280-281","link":"fantastic_four_280-281","credits":["John Byrne","Jerry Ordway","Mike Carlin","Michael Higgins"],"i":3032},{"year":1985,"characters":["Beyonder","Charlie Carcrash","Hate-Monger (Construct)","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Old Elsie","Psycho-Man","Scourge","She-Hulk","Spider-Man","Wyatt Wingfoot"],"name":"Secret Wars II #2","link":"secret_wars_ii_2","credits":["Stephen Leialoha","Al Milgrom","Bob Budianksy","Jim Shooter"],"i":3033},{"year":1985,"characters":["Arthur Chekov","Aunt May","Charles Anderson","Kingpin","Mary Jane Watson","Nate Lubenski","Spider-Man"],"name":"Web of Spider-Man #6","link":"web_of_spider-man_6","credits":["Christopher Priest","Dave Simons","Danny Fingeroth","Jim Mooney","Mike Zeck","Keith Williams","Bob Layton","Mike Harris"],"i":3034},{"year":1985,"characters":["Arranger","Betty Brant","Charles Anderson","Firelord","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Ned Leeds","Spider-Man"],"name":"Amazing Spider-Man #268","link":"amazing_spider-man_268","credits":["Christopher Priest","Tom DeFalco","Josef Rubinstein","Keith Williams","Ron Frenz"],"i":3035},{"year":1985,"characters":["Bambi","Candy","Mamie Muggins","Nightmare","Randi","Spider-Man"],"name":"Web of Spider-Man #7","link":"web_of_spider-man_7","credits":["Armando Gil","Peter David","Sal Buscema","Christopher Priest"],"i":3036},{"year":1985,"characters":["Glow (Triad)","Goblin (Triad)","Guardian (Triad)","Hulk"],"name":"Hulk #310-311","link":"hulk_310","credits":["Bill Mantlo","Pat Blevins","Carl Potts","Gerry Talaoc","Al Williamson","Mike Mignola","Bret Blevins"],"i":3037},{"year":1985,"characters":["Arthur Chekov","Aunt May","Betty Brant","Black Knight (Dane Whitman)","Captain America","Firelord","Harriet Rose Palermo","Hercules","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Martha (Aunt May's Boarder)","Nate Lubenski","Raymond Sikorski","Sophie (Aunt May's Boarder)","Spider-Man","Starfox","Victor Palermo","Wasp"],"name":"Amazing Spider-Man #269-270","link":"amazing_spider-man_269-270","credits":["Christopher Priest","Tom DeFalco","Josef Rubinstein","Bob McLeod","Ron Frenz"],"i":3038},{"year":1985,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Firelord","Gunthar","Hercules","Jarvis","Jorro","Ka-Zar","Levan","Nebula","Raymond Sikorski","Spider-Man","Starfox","Wasp"],"name":"Avengers #258","link":"avengers_258","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3039},{"year":1985,"characters":["Cowboy","Georgiana Hebb","Honcho","Justice","Marauder","Ms. Marvel (Sharon Ventura)","R.U. Reddy","Thing","Wolf","Wrench"],"name":"Thing #27","link":"thing_27","credits":["Ron Wilson","Paul Ryan","Mike Carlin","Mark Gruenwald"],"i":3040},{"year":1985,"characters":["Aurora","Box","Caliber","Delphine Courtney","Northstar","Puck","Sasquatch","Shaman","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #25","link":"alpha_flight_25","credits":["Don Daley","John Byrne","Bob Wiacek","Denny O'Neil"],"i":3041},{"year":1991,"characters":["Thing"],"name":"Marvel Super Heroes #5 (Thing)","link":"marvel_super_heroes_5_thing","credits":["Al Milgrom","Mike Rockwitz","Ron Wilson","David Michelinie","Barry Dutter"],"i":3042},{"year":1985,"characters":["Ace","Jean DeWolff","Joy Mercado","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man annual #5","link":"peter_parker_the_spectacular_s_43","credits":["Christopher Priest","Peter David","Josef Rubinstein","Mark Beachum"],"i":3043},{"year":1985,"characters":["Cowboy","D-Man","Georgiana Hebb","Justice","R.U. Reddy","Thing","Wolf","Wrench"],"name":"Thing #28","link":"thing_28","credits":["Mike Carlin","Ron Wilson","Brett Breeding","Mark Gruenwald","Howard Mackie"],"i":3044},{"year":1985,"characters":["Jarvis","Joe 'Robbie' Robertson","Paladin","Spider-Man","Starfox","Wasp"],"name":"Peter Parker, the Spectacular Spider-Man #105-106","link":"peter_parker_the_spectacular_s_41","credits":["Christopher Priest","Peter David","Keith Williams","Brett Breeding","Luke McDonnell"],"i":3045},{"year":1985,"characters":["Ego the Living Planet","ROM","Scanner","Seeker"],"name":"ROM #69","link":"rom_69","credits":["Bill Mantlo","Michael Higgins","P. Craig Russell","Steve Ditko","Mike Carlin"],"i":3046},{"year":1985,"characters":["D-Man","Gator Grant","Justice","Thing"],"name":"Thing #29","link":"thing_29","credits":["Paul Ryan","Mike Carlin","Ron Wilson","Mark Gruenwald","Howard Mackie"],"i":3047},{"year":1987,"characters":["Marlene Alraune","Moon Knight"],"name":"Marvel Fanfare #30","link":"marvel_fanfare_30","credits":["Al Milgrom","Brent Anderson","Ann Nocenti","Joanne Spaldo","Al Williamson"],"i":3048},{"year":1985,"characters":["Cerberus (Dog)","Dazzler","O.Z. Chase"],"name":"Dazzler #39","link":"dazzler_39","credits":["Archie Goodwin","Michael Higgins","Butch Guice","Paul Chadwick","Mike Carlin"],"i":3049},{"year":1985,"characters":["Erik Josten","Hawkeye","Henry Pym","Iron Man","Man-Ape","Mockingbird","Tigra","Ultron Mark Twelve","Wasp","Wonder Man"],"name":"West Coast Avengers #1","link":"west_coast_avengers_1-2","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3050},{"year":1985,"characters":["Black Talon II","Grim Reaper","Guardsman II (Michael O'Brien)","Hawkeye","Henry Peter Gyrich","Iron Man","Mockingbird","Nekra","Norm Webster","Raymond Sikorski","Scarlet Witch","Starfox","Tigra","Vision","Wasp"],"name":"Vision and the Scarlet Witch #1","link":"vision_and_the_scarlet_witch_1_1","credits":["Richard Howell","Steve Englehart","Andy Mushynsky","Jim Salicrup"],"i":3051},{"year":1985,"characters":["Black Talon II","Erik Josten","Grim Reaper","Hawkeye","Henry Pym","Iron Man","Man-Ape","Martha Williams","Mockingbird","Nekra","Scarlet Witch","Tigra","Ultron Mark Twelve","Vision","Wonder Man"],"name":"West Coast Avengers #2","link":"west_coast_avengers_2_1","credits":["Kim DeMulder","Steve Englehart","Mark Gruenwald","Al Milgrom"],"i":3052},{"year":1985,"characters":["Black Talon II","Erik Josten","Grim Reaper","Hawkeye","Henry Pym","Iron Man","Man-Ape","Mockingbird","Nekra","Scarlet Witch","Tigra","Ultron Mark Twelve","Vision","Wonder Man"],"name":"Vision and the Scarlet Witch #2","link":"vision_and_the_scarlet_witch_2","credits":["Richard Howell","Steve Englehart","Andy Mushynsky","Jim Salicrup"],"i":3053},{"year":1985,"characters":["Beyonder","Franklin Richards","Human Torch","Invisible Woman","Jarvis","Mr. Fantastic","Pearla","Psycho-Man","She-Hulk"],"name":"Fantastic Four #282-284","link":"fantastic_four_282-284","credits":["Jerry Ordway","Michael Higgins","Mike Carlin","John Byrne","Alan Gordon"],"i":3054},{"year":1985,"characters":["Beta Ray Bill","Enchantress","Energizer","Executioner","Fandral","Frigga","Gee","Harokin","Heimdall","Hildy","Hogun","Jim Power","Lightspeed","Loki","Lorelei (Norse Goddess)","Margaret Power","Mass Master","Megatak","Scourge","Sif","Thor","Titanium Man","Volstagg"],"name":"Thor #357-359","link":"thor_357-358","credits":["Craig Anderson","Walt Simonson","Ralph Macchio"],"i":3055},{"year":1985,"characters":["Beta Ray Bill","Bogeyman","Energizer","Fandral","Franklin Richards","Gee","Hogun","Jarvis","Jim Power","Lightspeed","Mass Master","Sif","Volstagg"],"name":"Power Pack #15","link":"power_pack_15","credits":["Carl Potts","Louise Simonson","June Brigman","Bob Wiacek"],"i":3056},{"year":1985,"characters":["Dum Dum Dugan LMD","Gaffer (SHIELD Scientist)","Mr. Fantastic","Nick Fury","She-Hulk","Wyatt Wingfoot"],"name":"Sensational She-Hulk (Marvel Graphic Novel #18)","link":"sensational_she-hulk_marvel_gr","credits":["Kim DeMulder","John Byrne","Mike Carlin","Michael Higgins"],"i":3057},{"year":1985,"characters":["Erik Josten","Hawkeye","Henry Pym","Iron Man","Kraven the Hunter","Mockingbird","Scarlet Witch","Scourge","Thing","Tigra","Vision","Wonder Man"],"name":"West Coast Avengers #3","link":"west_coast_avengers_3","credits":["Mark Gruenwald","Steve Englehart","Howard Mackie","Al Milgrom","Joe Sinnott"],"i":3058},{"year":1985,"characters":["Agatha Harkness","Brutacus","Gazelle","Hydron (Salem Seven)","Reptilla","Scarlet Witch","Thornn","Vakume","Vertigo (Salem Seven)","Vision"],"name":"Vision and the Scarlet Witch #3","link":"vision_and_the_scarlet_witch_3","credits":["Richard Howell","Steve Englehart","Jim Salicrup","Jim Mooney"],"i":3059},{"year":1986,"characters":["Firebird","Hawkeye","Henry Pym","Iron Man","Master Pandemonium","Mockingbird","Thing","Tigra","Ultron Mark Twelve","Wonder Man"],"name":"West Coast Avengers #4","link":"west_coast_avengers_4","credits":["Steve Englehart","Mark Gruenwald","Al Milgrom","Joe Sinnott"],"i":3060},{"year":1986,"characters":["Fixer","Iron Man","Ka-Zar","Shanna the She-Devil","War Machine","Zabu"],"name":"Iron Man #202","link":"iron_man_202","credits":["Ian Akin","Brian Garvey","Danny Fingeroth","Paul Ryan","Mark Gruenwald"],"i":3061},{"year":1985,"characters":["Beyonder","Circuit Breaker","Jarvis","Kingpin","Molecule Man","Richard Fisk","Volcana"],"name":"Secret Wars II #3","link":"secret_wars_ii_3","credits":["Stephen Leialoha","Al Milgrom","Bob Budianksky","Jim Shooter"],"i":3062},{"year":1985,"characters":["Beyonder","Hercules","Human Torch","Invisible Woman","Jarvis","Lyja the Lazerfist","Mr. Fantastic","She-Hulk","Wasp"],"name":"Fantastic Four #285","link":"fantastic_four_285","credits":["John Byrne","Alan Gordon","Mike Carlin"],"i":3063},{"year":1985,"characters":["Adora","Beyonder","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Firelord","General Zedrao","Gunthar","Hercules","Invisible Woman","Jarvis","Levan","Mr. Fantastic","Nebula","She-Hulk","Skunge","Starfox","Wasp","Wyatt Wingfoot"],"name":"Avengers #259-260","link":"avengers_259-260","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3064},{"year":1985,"characters":["Becky Blake","Beyonder","Daredevil","Foggy Nelson","Glorianna O'Breen"],"name":"Daredevil #223","link":"daredevil_223","credits":["Ralph Macchio","Craig Anderson","David Mazzucchelli","Jim Shooter","Kim DeMulder","Denny O'Neil"],"i":3065},{"year":1985,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Firelord","General Zedrao","Hercules","Human Torch","Invisible Woman","Mr. Fantastic","Raksor","She-Hulk","Starfox","Wasp"],"name":"Avengers annual #14","link":"avengers_annual_14","credits":["John Byrne","Kyle Baker","Roger Stern","Mark Gruenwald"],"i":3066},{"year":1985,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Hercules","Human Torch","Invisible Woman","Jarvis","Lyja the Lazerfist","Mr. Fantastic","She-Hulk","Starfox","Wasp"],"name":"Fantastic Four annual #19","link":"fantastic_four_annual_19","credits":["John Byrne","Mike Carlin","Joe Sinnott"],"i":3067},{"year":1985,"characters":["Awf","Energizer","Franklin Richards","Friday","Gee","Geik","Jakal","Jarvis","Kofi","Lightspeed","Mass Master"],"name":"Power Pack #16-17","link":"power_pack_16-17","credits":["Carl Potts","June Brigman","Rosemary McCormick-Lowy","Louise Simonson","Bob Wiacek"],"i":3068},{"year":1985,"characters":["Beyonder","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Firelord","Frank Rambeau","General Zedrao","Hercules","Jarvis","Maria Rambeau","Starfox","Wasp"],"name":"Avengers #261","link":"avengers_261","credits":["Mark Gruenwald","Roger Stern","Tom Palmer","John Buscema"],"i":3069},{"year":2007,"characters":["Beyonder","Black Bolt","Dr. Strange","Mr. Fantastic","Professor X","Sub-Mariner"],"name":"New Avengers: Illuminati #3","link":"new_avengers_illuminati_3","credits":["Brian Bendis","Brian Reed","Tom Brevoort","Molly Lazer","Jim Cheung","Mark Morales"],"i":3070},{"year":1985,"characters":["Asti the All-Seeing","Clea","Dr. Strange","Morgana Blessing","Orini","Rahl","Sara Wolfe","Umar","Wong"],"name":"Doctor Strange #71-73","link":"doctor_strange_71-73","credits":["Pat Blevins","Terry Austin","Paul Smith","Carl Potts","Roger Stern"],"i":3071},{"year":1986,"characters":["Bethany Cabe","Clytemnestra Erwin","Henry Pym","Iron Man","Madame Masque Bio-Duplicate","Theron Atlanta","Valdemar Tykkio","Yorgon Tykkio"],"name":"Iron Man #203-204","link":"iron_man_203-204","credits":["Ian Akin","Brian Garvey","M.D. Bright","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":3072},{"year":1985,"characters":["Andromeda","Angel","Beast","Candy Southern","Cloud","Dolly Donahue","Gargoyle (Defender)","General Argyle Fist","Ghost Rider (Johnny Blaze)","Iceman","Interloper","Roxanne Simpson","Sara Wolfe","Seraph","Valkyrie","Wong"],"name":"Defenders #146-147","link":"defenders_146-147","credits":["Don Perlin","Art Nichols","Carl Potts","Luke McDonnell","Peter Gillis"],"i":3073},{"year":1985,"characters":["Chiantang","Colleen Wing","Dr. Druid","Gordy (SMILE)","Iron Fist","Iron Fist H'ylthri Imposter","Lei Kung the Thunderer","Luke Cage"],"name":"Power Man & Iron Fist #118-120","link":"power_man_iron_fist_118-120","credits":["Christopher Priest","M.D. Bright","Don Daley","Jerry Acerno","Denny O'Neil"],"i":3074},{"year":1985,"characters":["Andromeda","Angel","Beast","Candy Southern","Cloud","Gargoyle (Defender)","Iceman","Interloper","Kubik","Manslaughter","Sassafras","Seraph","Star Thief II","Valkyrie","Vera Cantor"],"name":"Defenders #149-150","link":"defenders_149-150","credits":["Don Perlin","Art Nichols","Alan Kupperberg","Carl Potts","Randy Emberlin","Dell Barras","Peter Gillis"],"i":3075},{"year":1986,"characters":["Firebird","Hawkeye","Henry Pym","Iron Man","Mockingbird","Morbius","Thing","Tigra","Ultron Mark Twelve","Werewolf By Night","Wonder Man"],"name":"West Coast Avengers #5","link":"west_coast_avengers_5","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3076},{"year":1985,"characters":["Arcade","Colossus","Cyclops","Madelyne Pryor","Miss Locke","Nimrod","Shadowcat (Kitty Pryde)","Storm"],"name":"Uncanny X-Men #197","link":"uncanny_x-men_197","credits":["Pat Blevins","John Romita Jr.","Ann Nocenti","Chris Claremont","Dan Green"],"i":3077},{"year":1985,"characters":["Breaker","Cindy Adams","Rick Jones","ROM","Scanner","Seeker","Starshine II","Trapper","Unam the Unseen"],"name":"ROM #70-71","link":"rom_70","credits":["Bill Mantlo","P. Craig Russell","Steve Ditko","Mike Carlin","Kim DeMulder"],"i":3078},{"year":1985,"characters":["Cloak","Dagger","Father Delgado","Mayhem","Melissa Bowen Carlisle","Phillip Carlisle"],"name":"Cloak and Dagger #2","link":"cloak_and_dagger_2","credits":["Bill Mantlo","Carl Potts","Terry Austin","Rick Leonardi"],"i":3079},{"year":1985,"characters":["Alistair Smythe","Aunt May","Aunt Watson","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man annual #19","link":"amazing_spider-man_annual_19","credits":["Louise Simonson","Mary Wilshire","Pat Redding","Christopher Priest"],"i":3080},{"year":1985,"characters":["Aurora","Box","Delphine Courtney","Diamond Lil","Doug Thompson","Flashback","Hulk","Northstar","Puck","Sasquatch","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)","Wild Child"],"name":"Alpha Flight #26-27","link":"alpha_flight_26-28","credits":["Denny O'Neil","Don Daley","Keith Williams","John Byrne","Bob Wiacek"],"i":3081},{"year":1985,"characters":["Aurora","Beyonder","Box","Captain America","Cerberus (Dog)","Dazzler","Kurse","Molecule Man","Northstar","O.Z. Chase","Puck","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)","Volcana"],"name":"Secret Wars II #4","link":"secret_wars_ii_4","credits":["Al Milgrom","Stephen Leialoha","Josef Rubinstein","Bob Budianksy","Jim Shooter"],"i":3082},{"year":1985,"characters":["Aurora","Beyonder","Box","Delphine Courtney","Diamond Lil","Flashback","Hulk","Madison Jeffries","Northstar","Puck","Sasquatch","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)","Wild Child"],"name":"Alpha Flight #28","link":"alpha_flight_28","credits":["Don Daley","John Byrne","Keith Williams","Denny O'Neil"],"i":3083},{"year":1985,"characters":["Beyonder","Glow (Triad)","Goblin (Triad)","Guardian (Triad)","Hulk","Mephisto"],"name":"Hulk #312","link":"hulk_312","credits":["Mike Mignola","Bill Mantlo","Gerry Talaoc","Carl Potts"],"i":3084},{"year":1985,"characters":["Aurora","Box","Hulk","Madison Jeffries","Northstar","Puck","Sasquatch","Shaman","Vindicator (Heather Hudson)"],"name":"Hulk #313","link":"hulk_313","credits":["Bill Mantlo","Carl Potts","Gerry Talaoc","Rosemary McCormick-Lowy","Mike Mignola"],"i":3085},{"year":1985,"characters":["Aurora","Box","Gary Cody","Hulk","Madison Jeffries","Northstar","Puck","Shaman","Snowbird","Vindicator (Heather Hudson)"],"name":"Alpha Flight #29","link":"alpha_flight_29","credits":["Bill Mantlo","Carl Potts","Gerry Talaoc","Rosemary McCormick-Lowy","Mike Mignola"],"i":3086},{"year":1985,"characters":["Beyonder","Cerberus (Dog)","Dazzler","Dust (Dazzler villain)","O.Z. Chase","Silence"],"name":"Dazzler #40","link":"dazzler_40","credits":["Archie Goodwin","Michael Higgins","Butch Guice","Paul Chadwick","Mike Carlin"],"i":3087},{"year":1985,"characters":["Storm"],"name":"Uncanny X-Men #198","link":"uncanny_x-men_198","credits":["Ann Nocenti","Barry Windsor-Smith","Chris Claremont"],"i":3088},{"year":1985,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Devil (Micronaut)","Huntarr","Marionette","Microtron II","Scion","Solitaire"],"name":"Micronauts: The New Voyages #13-14","link":"micronauts_the_new_voyages_13","credits":["Ralph Macchio","Craig Anderson","Kelley Jones","Dan Bulanadi","Peter Gillis"],"i":3089},{"year":1985,"characters":["Deathbird","Electron","Gladiator (Shiar)","Magic","Manta","Mentor (Shiar)","Oracle","Pulsar","ROM","Scanner","Seeker","Tempest","Trapper","Warstar"],"name":"ROM annual #4","link":"rom_annual_4","credits":["Steve Ditko","Bill Mantlo","Mike Carlin","Al Milgrom"],"i":3090},{"year":1985,"characters":["Cannonball","Cypher","Karma","Magik","Magma","Mirage (Dani Moonstar)","S'ym","Shadow King","Storm","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #32-34","link":"new_mutants_31-34","credits":["Stephen Leialoha","Pat Blevins","Ann Nocenti","Chris Claremont"],"i":3091},{"year":1985,"characters":["Cloak","Dagger","Father Delgado","Mayhem","Phillip Carlisle","Predator","Spider-Man"],"name":"Cloak and Dagger #3","link":"cloak_and_dagger_3","credits":["Bill Mantlo","Carl Potts","Terry Austin","Rick Leonardi"],"i":3092},{"year":1985,"characters":["Beyonder","Cindy Adams","Rick Jones","Starshine II"],"name":"ROM #72","link":"rom_72","credits":["Steve Ditko","Bill Mantlo","Mike Carlin","Bob Layton"],"i":3093},{"year":1985,"characters":["Daredevil","Sunturion II"],"name":"Daredevil #224","link":"daredevil_224","credits":["Christopher Priest","Ralph Macchio","Craig Anderson","Bruce D. Patterson","Mel Candido","Geof Isherwood","Dan Jurgens"],"i":3094},{"year":1985,"characters":["Joe 'Robbie' Robertson","Ludlow Grimes","Smithville Thunderbolt","Spider-Man"],"name":"Web of Spider-Man #8-9","link":"web_of_spider-man_8","credits":["Geof Isherwood","Vincent Colletta","David Michelinie","Christopher Priest"],"i":3095},{"year":1986,"characters":["ROM","Scanner","Seeker","Starshine II","Trapper"],"name":"ROM #73-75","link":"rom_73-75","credits":["Bill Mantlo","P. Craig Russell","Joe Sinnott","Steve Ditko","Mike Carlin","John Byrne"],"i":3096},{"year":1990,"characters":["Black Knight (Dane Whitman)"],"name":"Marvel Super Heroes #4 (Black Knight)","link":"marvel_super_heroes_4_black_kn","credits":["Dwayne McDuffie","Alan Davis","Gregory Wright","Paul Neary"],"i":3097},{"year":1985,"characters":["Beyonder","Black Knight (Dane Whitman)","Boom Boom","Cannonball","Captain America","Captain Marvel (Monica Rambeau)","Colossus","Dr. Strange","Gammenon","Hawkeye","Hercules","Human Torch","Invisible Woman","Iron Man","Kurse","Mockingbird","Mr. Fantastic","Nightcrawler","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","She-Hulk","Starfox","Sunspot","Thor","Tigra","Warlock","Wasp","Wolfsbane","Wolverine","Wonder Man"],"name":"Secret Wars II #5","link":"secret_wars_ii_5","credits":["Al Milgrom","Stephen Leialoha","Josef Rubinstein","Bob Budianksy","Jim Shooter"],"i":3098},{"year":1985,"characters":["Beyonder","Clea","Dr. Strange","Orini","Sara Wolfe","Umar","Wong"],"name":"Doctor Strange #74","link":"doctor_strange_74","credits":["Carl Potts","Mark Badger","Rosemary McCormick-Lowy","Peter Gillis"],"i":3099},{"year":1985,"characters":["Beyonder","Ethan Thurm","Justice","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Thing #30","link":"thing_30","credits":["Mike Carlin","Dennis Janke","Ron Wilson","Mark Gruenwald","Howard Mackie"],"i":3100},{"year":1985,"characters":["Avalanche","Blob","Colossus","Cyclops","David Shulman","Destiny","Elaine Grey","John Grey","Lee Forrester","Magneto","Moira MacTaggert","Mystique","Nightcrawler","Phoenix Force","Pyro","Rachel Summers","Rogue","Ruth Shulman","Shadowcat (Kitty Pryde)","Spiral","Valerie Cooper","Wolverine"],"name":"Uncanny X-Men #199","link":"uncanny_x-men_199","credits":["Pat Blevins","John Romita Jr.","Ann Nocenti","Chris Claremont","Dan Green"],"i":3101},{"year":1986,"characters":["Alfy (Fatboys)","Butch (Fatboys)","Darla (Fatboys)","Dr. Strange","Glory Grant","Gog (Mojoverse)","J. Jonah Jameson","Jinx","Joe 'Robbie' Robertson","Longshot","Magog (Mojoverse)","Major Domo","Mojo","Quark","Ricochet Rita (Spiral)","Sara Wolfe","She-Hulk","Spider-Man","Spiral","Wong"],"name":"Longshot #1-6","link":"longshot_1-6","credits":["Whilce Portacio","Ann Nocenti","Art Adams","Daryl Edelmen","Bill Anderson","Louise Simonson"],"i":3102},{"year":1985,"characters":["Agnar","Balder","Enchantress","Executioner","Fandral","Frigga","Harokin","Heimdall","Hogun","Modgud","Sif","Thor","Volstagg"],"name":"Thor #360","link":"thor_360","credits":["Craig Anderson","Walt Simonson","Ralph Macchio"],"i":3103},{"year":1985,"characters":["Agnar","Balder","Karnilla"],"name":"Balder the Brave #1","link":"balder_the_brave_1","credits":["Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3104},{"year":1985,"characters":["Atropos (Verdandi)","Brightwind","Cannonball","Clotho (Urd)","Cypher","Eitri","Enchantress","Fandral","Hela","Hogun","Hrimhari","Karma","Lachesis (Skuld)","Loki","Magik","Magma","Mirage (Dani Moonstar)","Mist","S'ym","Storm","Sunspot","Volstagg","Warlock","Wolfsbane"],"name":"New Mutants Special Edition #1","link":"new_mutants_special_edition_1","credits":["Ann Nocenti","Art Adams","Terry Austin","Chris Claremont"],"i":3105},{"year":1985,"characters":["Brightwind","Cannonball","Colossus","Cyclops","Cypher","Eitri","Hela","Hrimhari","Karma","Karnilla","Lockheed","Loki","Madelyne Pryor","Magik","Magma","Mirage (Dani Moonstar)","Mist","Nightcrawler","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men annual #9","link":"uncanny_x-men_annual_9","credits":["Ann Nocenti","Art Adams","Chris Claremont","Mike Mignola","Alan Gordon"],"i":3106},{"year":1985,"characters":["Agnar","Balder","Executioner","Fandral","Frigga","Garm","Harokin","Hela","Hildy","Hogun","Modgud","Nanna","Sif","Thor","Volstagg"],"name":"Thor #361","link":"thor_361","credits":["Craig Anderson","Walt Simonson","Ralph Macchio"],"i":3107},{"year":1985,"characters":["Balder","Executioner","Garm","Harokin","Hela","Magma","Modgud","Thor","Toothgnasher","Toothgrinder"],"name":"Thor #362","link":"thor_362","credits":["Craig Anderson","Walt Simonson","Ralph Macchio"],"i":3108},{"year":1985,"characters":["Spider-Man"],"name":"Web of Spider-Man annual #1","link":"web_of_spider-man_annual_1","credits":["Ann Nocenti","Tony Salmons","Christopher Priest"],"i":3109},{"year":1986,"characters":["Agatha Harkness","Dr. Strange","Glamor","Holly Ladonna","Illusion","Norm Webster","Scarlet Witch","Vision"],"name":"Vision and the Scarlet Witch #4","link":"vision_and_the_scarlet_witch_4","credits":["Richard Howell","Steve Englehart","Jim Salicrup","Jim Mooney"],"i":3110},{"year":1985,"characters":["Andrea Strucker","Andreas Strucker","Brightwind","Cannonball","Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Cypher","Gabrielle Haller","Hepzibah","Jim Jaspers","Karma","Lilandra","Madelyne Pryor","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Neal Conan","Nightcrawler","Professor X","Rachel Summers","Raza Longknife","Rogue","Shadowcat (Kitty Pryde)","Sikorsky","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #200","link":"uncanny_x-men_200","credits":["Ann Nocenti","Dan Green","John Romita Jr.","Chris Claremont"],"i":3111},{"year":1985,"characters":["Aunt May","Bambi","Betty Brant","Candy","Hobgoblin (Roderick Kingsley)","Joey 'Crusher' Hogan","Lance Bannon","Mamie Muggins","Manslaughter Marsdale","Mary Jane Watson","Nate Lubenski","Ned Leeds","Randi","Spider-Man"],"name":"Amazing Spider-Man #271","link":"amazing_spider-man_271","credits":["Christopher Priest","Tom DeFalco","Josef Rubinstein","Adam Blaustein","Ron Frenz"],"i":3112},{"year":1985,"characters":["Hulk"],"name":"Hulk annual #14","link":"hulk_annual_14","credits":["Denny O'Neil","John Byrne","Sal Buscema"],"i":3113},{"year":1985,"characters":["Betty Ross","Doc Samson","Hulk","Ramon (Betty Ross' boyfriend)"],"name":"Hulk #314","link":"hulk_314","credits":["Don Daley","John Byrne","Bob Wiacek","Denny O'Neil"],"i":3114},{"year":1985,"characters":["Black Crow","Daredevil","Foggy Nelson","Vulture"],"name":"Daredevil #225","link":"daredevil_225","credits":["Denny O'Neil","Craig Anderson","Ralph Macchio","David Mazzucchelli"],"i":3115},{"year":1985,"characters":["Bernie Rosenthal","Bushmaster II","Captain America","Diamondback","Flag-Smasher"],"name":"Captain America #312","link":"captain_america_312","credits":["Michael Higgins","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald"],"i":3116},{"year":1985,"characters":["Acroyear","Bug","Huntarr","Marionette","Solitaire"],"name":"Micronauts: The New Voyages #15","link":"micronauts_the_new_voyages_15","credits":["Kelley Jones","Dan Bulanadi","Peter Gillis","Ralph Macchio"],"i":3117},{"year":1986,"characters":["Agatha Harkness","Brutacus","Gazelle","Glamor","Holly Ladonna","Hydron (Salem Seven)","Illusion","Quicksilver","Reptilla","Samhain","Scarlet Witch","Thornn","Vakume","Vertigo (Salem Seven)","Vision"],"name":"Vision and the Scarlet Witch #5","link":"vision_and_the_scarlet_witch_5","credits":["Jim Salicrup","Steve Englehart","Jack Abel","Richard Howell","Mike Esposito"],"i":3118},{"year":1985,"characters":["Beta Ray Bill","Beyonder","Captain America","Death","Energizer","Eon","Eternity","Franklin Richards","Gardener","Gee","In-Betweener","Kofi","Kronos","Kurse","Lightspeed","Living Tribunal","Lord Chaos","Mass Master","Master Order","Mephisto","Molecule Man","Mr. Fantastic","One Above All","Uatu the Watcher","Volcana"],"name":"Secret Wars II #6","link":"secret_wars_ii_6","credits":["Stephen Leialoha","Al Milgrom","Bob Budiansky","Jim Shooter"],"i":3119},{"year":1986,"characters":["Allison McCourt","Beyonder","Energizer","Franklin Richards","Friday","Gee","Jarvis","Jim Power","Kofi","Kurse","Lightspeed","Margaret Power","Mass Master"],"name":"Power Pack #18","link":"power_pack_18","credits":["Brent Anderson","Scott Williams","Carl Potts","Rosemary McCormick-Lowy","Louise Simonson","Bob Wiacek"],"i":3120},{"year":1986,"characters":["Agnar","Beta Ray Bill","Beyonder","Energizer","Franklin Richards","Gee","Hildy","Kurse","Lightspeed","Loki","Lorelei (Norse Goddess)","Malekith","Mass Master","Thor","Toothgnasher","Toothgrinder"],"name":"Thor #363","link":"thor_363","credits":["Craig Anderson","Walt Simonson","Ralph Macchio"],"i":3121},{"year":1985,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Carlo Zota","Diane Arliss","Hercules","Jarvis","Maris Morlak","Stingray","Sub-Mariner","Wasp","Wladyslav Shinski"],"name":"Avengers #262","link":"avengers_262","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3122},{"year":1985,"characters":["Moon Knight"],"name":"Moon Knight #6","link":"moon_knight_fist_of_khonshu_6","credits":["Geof Isherwood","Denny O'Neil","Mark Beachum","Christopher Priest"],"i":3123},{"year":1986,"characters":["AC-DC","Alison Double","Captain Britain","Captain UK","Dai Thomas","Doctor Crocodile","Elmo","Emma Collins","Fascination","Fern","Ferro","Fury (Cybiote)","Gabriel (RCX)","Gatecrasher","Giggles","Jamie Braddock","Joyboy","Kura","Lump (Warpies)","Mastermind (Computer)","Meggan","Michael (RCX)","Opal Luna Sat-yr^9","Oxo","Paradok","Psylocke","Quill (Warpies)","Ringtoss","Roma","Scatterbrain","Slaymaster","Thug","Vixen","Yap"],"name":"Mighty World of Marvel #14-16, Captain Britain #1-14","link":"mighty_world_of_marvel_14-16ca","credits":["Mike Collins","Jamie Delano","Mark Farmer","Simon Furman","Steve Craddock","Alan Davis","Iam Rimmer","Chris Gill","Noel Davis"],"i":3124},{"year":1986,"characters":["Anaconda","Asp","Bernie Rosenthal","Black Mamba","Bushmaster II","Captain America","Cobra","Cottonmouth","Death Adder","Diamondback","Hiram Riddley","Holly Riddley","MODOK","Princess Python","Rattler","Sidewinder"],"name":"Captain America #313","link":"captain_america_313","credits":["Michael Higgins","Mike Carlin","Paul Neary","Al Williamson","Mark Gruenwald"],"i":3125},{"year":1986,"characters":["Brightwind","Cannonball","Cypher","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Sharon Friedlander","Sunspot","Tom Corsi","Warlock","Wolfsbane"],"name":"New Mutants #35","link":"new_mutants_35","credits":["Bill Sienkiewicz","Ann Nocenti","Chris Claremont","Terry Kavanagh","Mary Wilshire"],"i":3126},{"year":1986,"characters":["Cable (Baby Nathan Christopher Summers)","Cannonball","Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Cypher","Elaine Grey","Hepzibah","John Grey","Lilandra","Madelyne Pryor","Magik","Magneto","Mirage (Dani Moonstar)","Nightcrawler","Professor X","Rachel Summers","Raza Longknife","Rogue","Shadowcat (Kitty Pryde)","Sharon Friedlander","Sikorsky","Storm","Sunspot","Uatu the Watcher","Waldo","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #201","link":"uncanny_x-men_201","credits":["Ann Nocenti","Whilce Portacio","Chris Claremont","Rick Leonardi"],"i":3127},{"year":1986,"characters":["Annalee","Ape (Morlock)","Beta Ray Bill","Cloak","Dagger","Energizer","Erg","Franklin Richards","Friday","Gee","Jim Power","Kofi","Leech","Lightspeed","Maraud","Margaret Power","Mass Master","Professor Gilbert","Shadowcat (Kitty Pryde)","Wolverine"],"name":"Power Pack #19","link":"power_pack_19","credits":["Brent Anderson","Scott Williams","Terry Austin","Sam DeLaRosa","Carl Potts","Louise Simonson"],"i":3128},{"year":1986,"characters":["Captain America","Crystal","Dr. Strange","Glamor","Holly Ladonna","Illusion","Luna","Magneto","Martha Williams","Norm Webster","Quicksilver","Scarlet Witch","Sub-Mariner","Toad","Vision","Wasp"],"name":"Vision and the Scarlet Witch #6","link":"vision_and_the_scarlet_witch_6","credits":["Richard Howell","Steve Englehart","Frank Springer","Jim Salicrup"],"i":3129},{"year":1986,"characters":["Beta Ray Bill","Fandral","Franklin Richards","Frigga","Greensong","Gudrun","Harokin","Heimdall","Hela","Hildy","Hogun","Jarvis","Kurse","Loki","Malekith","Piper (Morlock)","Puddlegulp","Sif","Thor","Toothgnasher","Toothgrinder","Volstagg"],"name":"Thor #364-366","link":"thor_364-366","credits":["Craig Anderson","Walt Simonson","Ralph Macchio"],"i":3130},{"year":1986,"characters":["Agnar","Balder","Grundroth","Hogun","Karnilla","Utgard-Loki"],"name":"Balder the Brave #2-4","link":"balder_the_brave_2-4","credits":["Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3131},{"year":1986,"characters":["Acroyear","Beyonder","Biotron II","Bug","Huntarr","Marionette","Microtron II","Scion","Solitaire"],"name":"Micronauts: The New Voyages #16","link":"micronauts_the_new_voyages_16","credits":["Kelley Jones","Dan Bulanadi","Peter Gillis","Ralph Macchio"],"i":3132},{"year":1986,"characters":["Beyonder","Cloak","Dagger","Father Delgado","Mayhem"],"name":"Cloak and Dagger #4","link":"cloak_and_dagger_4","credits":["Bill Mantlo","Carl Potts","Terry Austin","Rick Leonardi"],"i":3133},{"year":1987,"characters":["Chief Examiner","Colossus","Lee Forrester","Magneto","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Marvel Fanfare #33","link":"marvel_fanfare_33","credits":["Al Milgrom","Terry Austin","Chris Claremont","Joanne Spaldo","Bob Budianksy","June Brigman"],"i":3134},{"year":1986,"characters":["Aurora","Box","Deadly Ernest","Doug Thompson","Gary Cody","Madison Jeffries","Northstar","Puck","Scramble","Shaman","Snowbird","Vindicator (Heather Hudson)"],"name":"Alpha Flight #30","link":"alpha_flight_30","credits":["Mike Mignola","Bill Mantlo","Gerry Talaoc","Carl Potts"],"i":3135},{"year":1986,"characters":["Aurora","Box","Deadly Ernest","Doug Thompson","Madison Jeffries","Nemesis","Northstar","Puck","Scramble","Shaman","Snowbird","Vindicator (Heather Hudson)"],"name":"Alpha Flight #31","link":"alpha_flight_31","credits":["Bill Mantlo","Carl Potts","Gerry Talaoc","Rosemary McCormick-Lowy","Mike Mignola"],"i":3136},{"year":1986,"characters":["Godzilla","Justice","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Thing #31","link":"thing_31","credits":["Kim DeMulder","Ron Wilson","Mike Carlin","Mark Gruenwald"],"i":3137},{"year":1986,"characters":["Carter Blair","Cerberus (Dog)","Dazzler","Dust (Dazzler villain)","O.Z. Chase","Rachel Summers","Silence"],"name":"Dazzler #41","link":"dazzler_41","credits":["Paul Chadwick","Mike Carlin","Archie Goodwin","Butch Guice"],"i":3138},{"year":1986,"characters":["Becky Blake","Betsy Beatty Potter","Daredevil","Foggy Nelson","Gladiator","Glorianna O'Breen"],"name":"Daredevil #226","link":"daredevil_226","credits":["Ralph Macchio","David Mazzucchelli","Frank Miller","Dennis Janke","Denny O'Neil"],"i":3139},{"year":1986,"characters":["Aunt May","Blake Tower","Jenna Taylor","Joseph Threetrees","Nate Lubenski","Puma","Shaman (Puma's uncle)","Slyde","Spider-Man"],"name":"Amazing Spider-Man #272","link":"amazing_spider-man_272","credits":["Christopher Priest","Tom DeFalco","Keith Williams","Sal Buscema","Kyle Baker","Ron Frenz"],"i":3140},{"year":1986,"characters":["Howard The Duck"],"name":"Howard the Duck #32","link":"howard_the_duck_32","credits":["Lynn Cohen","Vincent Colletta","Steven Grant","Paul Smith"],"i":3141},{"year":1986,"characters":["Aurora","Black Raazer","Box","Madison Jeffries","Northstar","Puck","Vindicator (Heather Hudson)"],"name":"Alpha Flight #32","link":"alpha_flight_32","credits":["Bill Mantlo","Gerry Talaoc","Jon Bogdanove","Carl Potts"],"i":3142},{"year":1986,"characters":["Beyonder","Chiantang","Falcon","Guardsman II (Michael O'Brien)","Iron Fist H'ylthri Imposter","Luke Cage","Master Khan","Maxine Walters","Misty Knight","Nick Fury","Super-Skrull"],"name":"Power Man & Iron Fist #121","link":"power_man_iron_fist_121","credits":["Denny O'Neil","Jerry Acerno","M.D. Bright","Christopher Priest"],"i":3143},{"year":1987,"characters":["Ben Urich","Spider-Man"],"name":"Web of Spider-Man #27","link":"web_of_spider-man_27","credits":["Dwight Jon Zimmerman","Dave Simons","Adam Blaustein","Jim Salicrup"],"i":3144},{"year":1986,"characters":["Chiantang","Colleen Wing","Iron Fist","Luke Cage","Master Khan","Maxine Walters","Misty Knight"],"name":"Power Man & Iron Fist #122","link":"power_man_iron_fist_122","credits":["Christopher Priest","M.D. Bright","Don Daley","Jerry Acerno","Denny O'Neil"],"i":3145},{"year":1986,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Carlo Zota","Derek Freeman","Hercules","Jean Grey","Melter","Raymond Sikorski","Scourge","Sub-Mariner","Wasp","Wladyslav Shinski"],"name":"Avengers #263","link":"avengers_263","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3146},{"year":1986,"characters":["Captain America","Hercules","Human Torch","Invisible Woman","Jarvis","Jean Grey","Mr. Fantastic","She-Hulk"],"name":"Fantastic Four #286","link":"fantastic_four_286","credits":["Butch Guice","Michael Higgins","Kurt Busiek","Terry Austin","Chris Claremont","Mike Carlin","John Byrne","Roger Stern"],"i":3147},{"year":1986,"characters":["Dominic Fortune","Elena Von Lundt","Shocker","Spider-Man","Wolfgang Von Lundt"],"name":"Web of Spider-Man #10","link":"web_of_spider-man_10","credits":["Christopher Priest","Adam Blaustein","Jim Mooney","Danny Fingeroth"],"i":3148},{"year":1986,"characters":["Alex Alaric","Angela (Trust)","Ben Urich","Bo Barrigan","Gregario","Injun Joe","Jigsaw","Joisey Joe","Killer Croesus","Morgan","Punisher"],"name":"Punisher #1-5","link":"punisher_1-5","credits":["Mary Jo Duffy","Steven Grant","Mike Zeck","Carl Potts","Mike Vosburg","John Beatty"],"i":3149},{"year":1986,"characters":["Flash Thompson","Joe 'Robbie' Robertson","Kate Cushing","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #11","link":"web_of_spider-man_11","credits":["Bill Mantlo","Bob McLeod","Christopher Priest","Danny Fingeroth"],"i":3150},{"year":1986,"characters":["Aunt May","Betty Brant","Blake Tower","Daredevil","Ernie Popchik","J. Jonah Jameson","James D'Angelo","Jason Macendale","Jean DeWolff","Joe 'Robbie' Robertson","Joy Mercado","Kingpin","Lance Bannon","Marla Madison Jameson","Ned Leeds","Rev. Jackson Tolliver","Sin-Eater","Sin-Eater II","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #107-110","link":"peter_parker_the_spectacular_s_42","credits":["Christopher Priest","Peter David","Kyle Baker","Brett Breeding","Adam Blaustein","Rich Buckler","Many Hands"],"i":3151},{"year":1986,"characters":["Attuma","Aurora","Box","Colossus","Lady Deathstrike","Madison Jeffries","Magneto","Marrina","Nightcrawler","Northstar","Puck","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Snowbird","Storm","Vindicator (Heather Hudson)","Wolverine"],"name":"Alpha Flight #33-34","link":"alpha_flight_33-34","credits":["Bill Mantlo","Sal Buscema","Carl Potts","Gerry Talaoc","Rosemary McCormick-Lowy"],"i":3152},{"year":1985,"characters":["Colossus","Magneto","Nightcrawler","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Heroes For Hope #1","link":"heroes_for_hope_1","credits":["Mary Jo Duffy","Bill Sienkiewicz","Jay Muth","Josef Rubinstein","Steve Rude","Stephen King","Jeff Jones","Al Williamson","Jim Shooter","Bob Layton","Butch Guice","P. Craig Russell","Walt Simonson","Bruce Jones","Joe Sinnott","Terry Austin","Chris Claremont","Jim Starlin","Stan Lee","John Bolton","Frank Miller","Steve Englehart","John Byrne","Tom Palmer","Carl Potts","Gray Morrow","Howard Chaykin","Louise Simonson","Alan Gordon","Harlan Ellison","Charles Vess","Paul Gulacy","Dan Green","Herb Trimpe","Bill Mantlo","John Romita Jr.","Brent Anderson","Steve Leialoha","Mike Kaluta","Ed Bryant","Richard Corben","Denny O'Neil","Brian Bolland","Terry Kavanagh","Archie Goodwin","Berni Wrightson","Al Milgrom","Pat Blevins","Alan Moore","John Buscema","Ann Nocenti","Bret Blevins","Sal Buscema","Klaus Janson","Mike Baron","Mike Grell","George R. R. Martin"],"i":3153},{"year":1986,"characters":["Betty Brant","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Mamie Muggins","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #12","link":"web_of_spider-man_12","credits":["Bob McLeod","Peter David","Sal Buscema","Christopher Priest"],"i":3154},{"year":1986,"characters":["Ben Urich","Daredevil","Foggy Nelson","Glorianna O'Breen","Grotto","J. Jonah Jameson","Joe 'Robbie' Robertson","Karen Page","Kingpin","Lt. Nick Manolis","Sister Maggie Murdock","Turk","Wesley (Kingpin henchman)"],"name":"Daredevil #227-229","link":"daredevil_227-229","credits":["Frank Miller","Ralph Macchio","Craig Anderson","David Mazzucchelli"],"i":3155},{"year":1986,"characters":["Ben Urich","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #13","link":"web_of_spider-man_13","credits":["Christopher Priest","Peter David","Kyle Baker","Adam Blaustein","Mike Harris"],"i":3156},{"year":1986,"characters":["Abomination","Absorbing Man","Anaconda","Baron Mordo","Baron Zemo (Helmut)","Beyonder","Blastaar","Cannonball","Colossus","Crimson Dynamo V","Cypher","Death","Diablo","Doctor Octopus","Dr. Doom","Electro","Eon","Eternity","Galactus","Gardener","Graviton","Hobgoblin (Roderick Kingsley)","Hopper Hertnecky","In-Betweener","Juggernaut","Kang","Karma","Kraven the Hunter","Living Laser","Living Tribunal","Lord Chaos","Magma","Magneto","Master Order","Mephisto","Mirage (Dani Moonstar)","Mole Man","Molecule Man","Ms. Marvel (Sharon Ventura)","Nightcrawler","Rachel Summers","Rhino","Rogue","Shadowcat (Kitty Pryde)","Silver Samurai","Spider-Man","Storm","Sunspot","Thing","Titania","Ultron Mark Twelve","Vanisher","Volcana","Vulture","Warlock","White Queen (Emma Frost)","Wizard","Wolfsbane","Wrecker"],"name":"Secret Wars II #7","link":"secret_wars_ii_7","credits":["Stephen Leialoha","Al Milgrom","Bob Budiansky","Jim Shooter"],"i":3157},{"year":1986,"characters":["Andromeda","Angel","Beast","Beyonder","Candy Southern","Chris Larmouth","Dragon of the Moon","Gargoyle (Defender)","Human Torch","Iceman","Interloper","Manslaughter","Moondragon","Mr. Fantastic","Sassafras","Seraph","Valkyrie"],"name":"Defenders #151-152","link":"defenders_151-152","credits":["Don Perlin","Carl Potts","Rosemary McCormick-Lowy","Dell Barras","Peter Gillis"],"i":3158},{"year":1986,"characters":["Beyonder","Cannonball","Cypher","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Shadowcat (Kitty Pryde)","Sharon Friedlander","Sunspot","Tom Corsi","Warlock","Wolfsbane"],"name":"New Mutants #36","link":"new_mutants_36","credits":["Ann Nocenti","Mary Wilshire","Chris Claremont","Bill Sienkiewicz"],"i":3159},{"year":1986,"characters":["Arthur Chekov","Aunt May","Ben Urich","Betty Brant","Beyonder","Flash Thompson","Harriet Rose Palermo","Jenna Taylor","Joseph Threetrees","Kate Cushing","Lance Bannon","Mamie Muggins","Mary Jane Watson","Nate Lubenski","Ned Leeds","Puma","Shaman (Puma's uncle)","Spider-Man","Victor Palermo"],"name":"Amazing Spider-Man #273","link":"amazing_spider-man_273","credits":["Tom DeFalco","Ron Frenz","Josef Rubinstein","Christopher Priest"],"i":3160},{"year":1986,"characters":["Beyonder","Death","Joy Mercado","Kate Cushing","Mary Jane Watson","Puma","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #111","link":"peter_parker_the_spectacular_s_74","credits":["Christopher Priest","Tom DeFalco","Jim Shooter","Rich Buckler","Many Hands"],"i":3161},{"year":1986,"characters":["Beyonder","Colossus","Magneto","Nightcrawler","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #202","link":"uncanny_x-men_202","credits":["Ann Nocenti","John Romita Jr.","Chris Claremont","Al Williamson"],"i":3162},{"year":1986,"characters":["Aida","Amphibian (Squadron Supreme)","Andy Jones","Ape-X","Arcanna","Benjamin Thomas Jones","Bernie Rosenthal","Black Knight (Dane Whitman)","Captain America","Captain Hawk","Captain Marvel (Monica Rambeau)","Cerebrax","Doctor Decibel","Doctor Spectrum","Drucilla Jones","Foxfire","Golden Archer","Haywire","Hercules","Hyperion","Inertia","Invisible Woman","Jarvis","Jules Gardner","Katie Jones","Lady Lark","Lamprey","Maddie Stewart","Master Menace","Mink","Moonglow","Mr. Fantastic","Nighthawk (Squadron Supreme)","Nuke (Squadron Supreme)","Phillip Jones","Pinball","Power Princess","Professor Imam","Quagmire","Redstone","Remnant","Scarlet Centurion (Squadron Supreme)","Shape","Sheldon","Sinister Hyperion","Thermite","Tina Stewart","Tom Thumb","Wasp","Whizzer (Squadron Supreme)"],"name":"Squadron Supreme #1-6, Captain America #314, Squadron Supreme #7-12","link":"squadron_supreme_1-6captain_am","credits":["Ralph Macchio","Bob Hall","Butch Guice","Michael Higgins","John Buscema","Keith Williams","Paul Ryan","Sam DeLaRosa","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald","John Beatty"],"i":3163},{"year":1986,"characters":["Brightwind","Cannonball","Death","Energizer","Franklin Richards","Gee","Jarvis","Jim Power","Lightspeed","Margaret Power","Mass Master","Mirage (Dani Moonstar)","Wolfsbane"],"name":"Power Pack #20","link":"power_pack_20","credits":["Louise Simonson","Carl Potts","Bob McLeod"],"i":3164},{"year":1986,"characters":["Amanda Robertson","Ashcan","Aunt May","Aunt Watson","Bambi","Black Cat","Candy","Harry Osborn","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Liz Allan","Mamie Muggins","Mary Jane Watson","Normie Osborn","Randi","Randy Robertson","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #112","link":"peter_parker_the_spectacular_s_75","credits":["Christopher Priest","Peter David","Mark Beachum","Adam Blaustein","J. Morris Jones","Pat Redding"],"i":3165},{"year":1986,"characters":["Captain America","Crystal","Guardsman II (Michael O'Brien)","Holly Ladonna","Jarvis","Norm Webster","Raymond Sikorski","Scarlet Witch","Sub-Mariner","Toad","Vision"],"name":"Vision and the Scarlet Witch #7","link":"vision_and_the_scarlet_witch_7","credits":["Richard Howell","Steve Englehart","Frank Springer","Jim Salicrup"],"i":3166},{"year":1986,"characters":["Anaconda","Asp","Bernie Rosenthal","Black Mamba","Bushmaster II","Captain America","Cobra","Cottonmouth","Death Adder","Diamondback","MODOK","Porcupine","Princess Python","Rattler","Sidewinder"],"name":"Captain America #315","link":"captain_america_315","credits":["Michael Higgins","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald"],"i":3167},{"year":1986,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Frank Rambeau","Franklin Richards","Hercules","Invisible Woman","Jarvis","Maria Rambeau","Mr. Fantastic","Sub-Mariner","Wasp","Yellowjacket (Rita Demara)"],"name":"Avengers #264","link":"avengers_264","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3168},{"year":1986,"characters":["Betty Ross","Clay Quartermain","Diane Bellamy","Doc Samson","Hulk"],"name":"Hulk #315","link":"hulk_315","credits":["Denny O'Neil","John Byrne","Keith Williams"],"i":3169},{"year":1986,"characters":["Justice","Ms. Marvel (Sharon Ventura)","Norma Astrovik","Thing"],"name":"Thing #32","link":"thing_32","credits":["Dave Simons","Mike Carlin","Ron Wilson","Mark Gruenwald","Howard Mackie"],"i":3170},{"year":1986,"characters":["Arnold Schwarzburger","Balkatar","Christina Carson","Firebird","Hawkeye","Henry Pym","King Gerark","Mockingbird","Morbius","Thing","Tigra","Ultron Mark Twelve","Wonder Man"],"name":"West Coast Avengers #6","link":"west_coast_avengers_6","credits":["Al Milgrom","Steve Englehart","Kyle Baker","Mark Gruenwald","Howard Mackie"],"i":3171},{"year":1986,"characters":["Betty Ross","Diane Bellamy","Doc Samson","Doctor Fisher","Hercules","Hulk","Iron Man","She-Hulk","Sub-Mariner","Wonder Man"],"name":"Hulk #316","link":"hulk_316","credits":["Denny O'Neil","John Byrne","Keith Williams"],"i":3172},{"year":1986,"characters":["Arnold Schwarzburger","Christina Carson","Firebird","Hawkeye","Henry Pym","Mockingbird","Thing","Tigra","Ultron","Ultron Mark Twelve","Wonder Man"],"name":"West Coast Avengers #7","link":"west_coast_avengers_7","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3173},{"year":1986,"characters":["Armand Martel","Betty Ross","Carolyn Parmenter","Diane Bellamy","Doc Samson","Hideko Takata","Hulk","Redeemer","Rock"],"name":"Hulk #317","link":"hulk_317","credits":["Don Daley","John Byrne","Keith Williams","Denny O'Neil"],"i":3174},{"year":1986,"characters":["Balkatar","Banshee (Horse)","Firebird","Hawkeye","Henry Pym","Iron Man","Lobo (Will Talltree's Wolf)","Master Pandemonium","Mockingbird","Night Rider (Hamilton Slade)","Red Wolf (Will Talltrees)","Shooting Star","Texas Twister","Thing","Tigra","Wonder Man"],"name":"West Coast Avengers #8-9","link":"west_coast_avengers_8-9","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3175},{"year":1986,"characters":["Acroyear","Biotron II","Bug","Commander Arcturus Rann","Devil (Micronaut)","Fireflyte III","Huntarr","Marionette","Microtron II","Solitaire"],"name":"Micronauts: The New Voyages #17","link":"micronauts_the_new_voyages_17","credits":["Howard Bender","Dan Bulanadi","Peter Gillis","Ralph Macchio"],"i":3176},{"year":1986,"characters":["Armand Martel","Betty Ross","Carolyn Parmenter","Doc Samson","Hideko Takata","Hulk","Redeemer","Rock"],"name":"Hulk #318","link":"hulk_318","credits":["Don Daley","John Byrne","Keith Williams","Denny O'Neil"],"i":3177},{"year":1986,"characters":["Armand Martel","Betty Ross","Doc Samson","General 'Thunderbolt' Ross","Hideko Takata","Hulk","Redeemer","Rick Jones","Rock"],"name":"Hulk #319","link":"hulk_319","credits":["Don Daley","John Byrne","Keith Williams","Denny O'Neil"],"i":3178},{"year":1986,"characters":["Dr. Strange","Sara Wolfe","Topaz","Wong"],"name":"Doctor Strange #75","link":"doctor_strange_75","credits":["Mark Badger","Sal Buscema","Carl Potts","Roger Stern","Rosemary McCormick-Lowy"],"i":3179},{"year":1986,"characters":["Beyonder","Black Knight (Dane Whitman)","Cannonball","Captain America","Captain Marvel (Monica Rambeau)","Colossus","Hercules","Hulk","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Molecule Man","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Spider-Man","Storm","Sub-Mariner","Volcana","Warlock","Wolfsbane","Wolverine"],"name":"Secret Wars II #8","link":"secret_wars_ii_8","credits":["Stephen Leialoha","Al Milgrom","Bob Budiansky","Jim Shooter"],"i":3180},{"year":1986,"characters":["Beyonder","Brightwind","Cannonball","Cypher","Hela","Karma","Magik","Magma","Mirage (Dani Moonstar)","She-Hulk","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #37","link":"new_mutants_37","credits":["Ann Nocenti","Mary Wilshire","Chris Claremont","Bill Sienkiewicz"],"i":3181},{"year":1986,"characters":["Arranger","Aunt May","Aunt Watson","Beyonder","Kingpin","Mary Jane Watson","Mephisto","Nate Lubenski","Puma","Shaman (Puma's uncle)","Spider-Man","Zarathos"],"name":"Amazing Spider-Man #274","link":"amazing_spider-man_274","credits":["Christopher Priest","Josef Rubenstein","James Fry","Tom DeFalco","Jack Fury","John Romita Sr.","Tom Morgan","Adam Blaustein","Russ Steffens","Ron Frenz"],"i":3182},{"year":1986,"characters":["Beyonder","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Hercules","Sub-Mariner"],"name":"Avengers #265","link":"avengers_265","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3183},{"year":1986,"characters":["Beyonder","Dr. Doom","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Norm McArthur","She-Hulk","Wasp"],"name":"Fantastic Four #287-288","link":"fantastic_four_287-288","credits":["John Byrne","Mike Carlin","Michael Higgins","Joe Sinnott"],"i":3184},{"year":1986,"characters":["Beyonder","Ch'od","Colossus","Corsair","Cr'reee","Hepzibah","Jahf","Lilandra","Lindsay McCabe","Magneto","Professor X","Rachel Summers","Raza Longknife","Rogue","Shadowcat (Kitty Pryde)","Sikorsky","Spider-Woman (Jessica Drew)","Storm","Uatu the Watcher","Wolverine"],"name":"Uncanny X-Men #203","link":"uncanny_x-men_203","credits":["Ann Nocenti","John Romita Jr.","Chris Claremont","Al Williamson"],"i":3185},{"year":1986,"characters":["Angel","Aurora","Beast","Beyonder","Black Knight (Dane Whitman)","Box","Cannonball","Captain America","Captain Marvel (Monica Rambeau)","Cloak","Colossus","Cyclops","Cypher","Dagger","Firebird","Hawkeye","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Fist H'ylthri Imposter","Iron Man","Karma","Luke Cage","Magik","Magma","Magneto","Mephisto","Mirage (Dani Moonstar)","Mockingbird","Molecule Man","Mr. Fantastic","Nightcrawler","Northstar","Puck","Rachel Summers","Rogue","Scarlet Witch","Shadowcat (Kitty Pryde)","Shaman","She-Hulk","Silver Surfer","Snowbird","Spider-Man","Starfox","Storm","Sub-Mariner","Talisman","Thing","Thor","Tigra","Valkyrie","Vision","Volcana","Warlock","Wasp","Wolfsbane","Wolverine","Wonder Man"],"name":"Secret Wars II #9","link":"secret_wars_ii_9","credits":["Stephen Leialoha","Al Milgrom","Bob Budiansky","Jim Shooter"],"i":3186},{"year":1986,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Hercules","Human Torch","Invisible Woman","Molecule Man","Mr. Fantastic","She-Hulk","Silver Surfer","Sub-Mariner","Volcana","Wasp"],"name":"Avengers #266","link":"avengers_266","credits":["John Buscema","Tom Palmer","Roger Stern","Jim Shooter","Mark Gruenwald","Howard Mackie"],"i":3187},{"year":2009,"characters":["Bennet Schwed","Beth Sheldon","Beyonder","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Doris Sheldon","Invisible Woman","Jenny Sheldon","Molecule Man","Mr. Fantastic","Phil Sheldon","Punisher","Rachel Summers","Silver Surfer","Sub-Mariner","Tracy Burke","Wasp"],"name":"Marvels: Eye of the Camera #4","link":"marvels_eye_of_the_camera_4","credits":["Kurt Busiek","Jay Anacleto","Tom Breevort","Jeanine Schaefer","Roger Stern","Joe Quesada"],"i":3188},{"year":1986,"characters":["Attuma","Aurora","Box","Dara","Doug Thompson","Madison Jeffries","Marrina","Northstar","Puck","Shaman","Snowbird","Talisman","Thakos","Vashti","Vindicator (Heather Hudson)"],"name":"Alpha Flight #35","link":"alpha_flight_35","credits":["Bill Mantlo","Carl Potts","Garry Talaoc","David Ross"],"i":3189},{"year":1986,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Cameron Hodge","Candy Southern","Cyclops","Emma LaPorte","Iceman","Jean Grey","Madelyne Pryor","Mr. Fantastic","Rusty Collins"],"name":"X-Factor #1","link":"x-factor_1","credits":["Butch Guice","Michael Higgins","Josef Rubinstein","Mike Carlin","Bob Layton"],"i":3190},{"year":1986,"characters":["Crystal","Holly Ladonna","Jarvis","Luke Cage","Luna","Norm Webster","Quicksilver","Scarlet Witch","Vision"],"name":"Vision and the Scarlet Witch #8","link":"vision_and_the_scarlet_witch_8","credits":["Richard Howell","Steve Englehart","Frank Springer","Jim Salicrup"],"i":3191},{"year":1986,"characters":["Brightwind","Cannonball","Cypher","Empath","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Roulette","Sharon Friedlander","Stevie Hunter","Thor","Tom Corsi","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #38","link":"new_mutants_38","credits":["Bill Sienkiewicz","Ann Nocenti","Chris Claremont","Rick Leonardi","Terry Kavanagh"],"i":3192},{"year":1986,"characters":["Cloak","Dagger","Father Delgado","Mayhem","Predator"],"name":"Cloak and Dagger #5","link":"cloak_and_dagger_5","credits":["Bill Mantlo","Terry Shoemaker","Terry Austin","Carl Potts"],"i":3193},{"year":1986,"characters":["Acroyear","Biotron II","Bug","Cilicia","Commander Arcturus Rann","Fireflyte III","Huntarr","Marionette","Microtron II","Scion","Solitaire"],"name":"Micronauts: The New Voyages #18","link":"micronauts_the_new_voyages_18","credits":["Ralph Macchio","Craig Anderson","Kelley Jones","Dan Bulanadi","Peter Gillis"],"i":3194},{"year":1986,"characters":["Anvil","Captain America","Hammer","Hulk","Scourge"],"name":"Marvel Fanfare #29","link":"marvel_fanfare_29","credits":["John Byrne","Al Milgrom","Rosemary McCormick-Lowy","Norm Breyfogle"],"i":3195},{"year":1986,"characters":["Acroyear","Baron Karza","Biotron II","Bug","Commander Arcturus Rann","Fireflyte III","Huntarr","Marionette","Microtron II","Scion","Solitaire","Time Traveler"],"name":"Micronauts: The New Voyages #19-20","link":"micronauts_the_new_voyages_19-","credits":["Ralph Macchio","Howard Bender","Kelley Jones","Dan Bulanadi","Peter Gillis"],"i":3196},{"year":1986,"characters":["Captain America"],"name":"Marvel Fanfare #26","link":"marvel_fanfare_26","credits":["Bob Wiacek","Al Milgrom","Will Jungkuntz"],"i":3197},{"year":1986,"characters":["Emperor Bhadsha","Energizer","Gee","Hadj","Jessie Wilcox Jones","Jim Power","Lightspeed","Maraud","Mass Master","Spider-Man"],"name":"Power Pack #21","link":"power_pack_21","credits":["Carl Potts","Terry Austin","Brent Anderson"],"i":3198},{"year":1986,"characters":["Cannonball","Catseye","Cypher","Empath","Jetstream","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Roulette","Sharon Friedlander","Stevie Hunter","Tarot","Tom Corsi","Warlock","Warpath","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #39","link":"new_mutants_39","credits":["Ann Nocenti","Keith Pollard","Chris Claremont","Dell Barras"],"i":3199},{"year":1986,"characters":["Black Knight (Dane Whitman)","Cannonball","Captain America","Captain Marvel (Monica Rambeau)","Cypher","Empath","Hercules","Jetstream","Karma","Magik","Magma","Magneto","Sub-Mariner","Warlock","Wasp","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #40","link":"new_mutants_40","credits":["Ann Nocenti","Butch Guice","Kyle Baker","Chris Claremont"],"i":3200},{"year":1986,"characters":["Barbara London","Beast","Cerberus (Dog)","Dazzler","O.Z. Chase","Silence"],"name":"Dazzler #42","link":"dazzler_42","credits":["Paul Chadwick","Romeo Tanghal","Mike Carlin","Archie Goodwin"],"i":3201},{"year":1986,"characters":["Aloysius R. Jamesley","Arranger","Arthur Chekov","Aunt May","Bambi","Betty Brant","Candy","Flash Thompson","Fly","Foreigner","Harriet Rose Palermo","Hobgoblin (Roderick Kingsley)","Joe 'Robbie' Robertson","Kingpin","Lance Bannon","Martha (Aunt May's Boarder)","Mary Jane Watson","Nate Lubenski","Ned Leeds","Randi","Richard Fisk","Scourge","Sha Shan","Sophie (Aunt May's Boarder)","Spider-Man","Victor Palermo"],"name":"Amazing Spider-Man #275-276","link":"amazing_spider-man_275-276","credits":["Christopher Priest","Tom DeFalco","Josef Rubinstein","Adam Blaustein","Brett Breeding","Ron Frenz"],"i":3202},{"year":1986,"characters":["Captain Universe (Uni-Power)"],"name":"Marvel Fanfare #25","link":"marvel_fanfare_25","credits":["Bill Mantlo","Al Milgrom","Terry Austin","June Brigman","Rosemary McCormick-Lowy"],"i":3203},{"year":1986,"characters":["Falcon","Luke Cage","Master Khan","Redwing"],"name":"Power Man & Iron Fist #123","link":"power_man_iron_fist_123","credits":["Christopher Priest","M.D. Bright","Don Daley","Bob Harras","Jerry Acerno"],"i":3204},{"year":1986,"characters":["Daredevil","Kingpin","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #277","link":"amazing_spider-man_277","credits":["Christopher Priest","Tom DeFalco","Adam Blaustein","Bob Layton","Ron Frenz","Charles Vess"],"i":3205},{"year":1986,"characters":["Arthur Chekov","Ashcan","Aunt May","Aunt Watson","Black Cat","Ernie Popchik","Foreigner","Harriet Rose Palermo","Joy Mercado","Kate Cushing","Martha (Aunt May's Boarder)","Mary Jane Watson","Nate Lubenski","Sophie (Aunt May's Boarder)","Spider-Man","Victor Palermo"],"name":"Peter Parker, the Spectacular Spider-Man #113","link":"peter_parker_the_spectacular_s_76","credits":["Bob McLeod","Peter David","Adam Blaustein","Christopher Priest"],"i":3206},{"year":1986,"characters":["Auntie Freeze","Battleaxe (Grappler)","D-Man","Gladiatrix","Letha","Ms. Marvel (Sharon Ventura)","Poundcakes","Scourge","Songbird (Screaming Mimi)","Thing","Titania (Grappler)"],"name":"Thing #33","link":"thing_33","credits":["Mike Carlin","Ron Wilson","Mark Gruenwald","Kim DeMulder","Howard Mackie"],"i":3207},{"year":1986,"characters":["Gordy (SMILE)","Iron Fist H'ylthri Imposter","Jonathan Lumus","Luke Cage","Maxine Walters","Weasel (SMILE)"],"name":"Power Man & Iron Fist #124","link":"power_man_iron_fist_124","credits":["Christopher Priest","M.D. Bright","Don Daley","Bob Harras","Jerry Acerno"],"i":3208},{"year":1986,"characters":["Aunt May","Black Fox","Chance (Nicholas Powell)","Foreigner","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Mamie Muggins","Mary Jane Watson","Nate Lubenski","Spider-Man"],"name":"Web of Spider-Man #14-15","link":"web_of_spider-man_14-15","credits":["Mike Harris","Kyle Baker","David Michelinie","Christopher Priest"],"i":3209},{"year":1986,"characters":["Bethany Cabe","Clytemnestra Erwin","Iron Man","MODOK","Valdemar Tykkio","War Machine","Yorgon Tykkio"],"name":"Iron Man #205","link":"iron_man_205","credits":["Ian Akin","Brian Garvey","M.D. Bright","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":3210},{"year":1989,"characters":["Andy Jones","Arcanna","Benjamin Thomas Jones","Captain Hawk","Cerebrax","Doctor Decibel","Doctor Spectrum","Drucilla Jones","Foxfire","Golden Archer","Haywire","Hyperion","Inertia","Katie Jones","Lady Lark","Maddie Stewart","Master Menace","Moonglow","Phillip Jones","Pinball","Power Princess","Professor Imam","Redstone","Scarlet Centurion (Squadron Supreme)","Shape","Sheldon","Thermite","Tina Stewart","Tom Lightner","Tom Thumb","Whizzer (Squadron Supreme)"],"name":"Squadron Supreme: Death of a Universe","link":"squadron_supreme_death_of_a_un","credits":["Mark Gruenwald","Paul Ryan","Al Williamson","Ralph Macchio"],"i":3211},{"year":1986,"characters":["Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #114","link":"peter_parker_the_spectacular_s_77","credits":["Christopher Priest","Keith Williams","J.J. Birch","Adam Blaustein","Dell Barras","Len Kaminski"],"i":3212},{"year":1986,"characters":["Clytemnestra Erwin","Erik Josten","Hawkeye","Iron Man","Mockingbird","Valdemar Tykkio","War Machine","Yorgon Tykkio"],"name":"Iron Man #206","link":"iron_man_206","credits":["Ian Akin","Brian Garvey","M.D. Bright","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":3213},{"year":1986,"characters":["Bad Ned Jackson","Black Knight (Dane Whitman)","Blake Tower","Captain America","Captain Marvel (Monica Rambeau)","Colleen Wing","Daredevil","Falcon","Foreigner","Gordy (SMILE)","Hawkeye","Henry Pym","Hercules","Human Torch","Invisible Woman","Iron Fist H'ylthri Imposter","Iron Man","Jeryn Hogarth","Jonathan Lumus","Luke Cage","Master Khan","Maxine Walters","Misty Knight","Mr. Fantastic","Spider-Man","Sub-Mariner","Super-Skrull","Wasp"],"name":"Power Man & Iron Fist #125","link":"power_man_iron_fist_125","credits":["Mike Esposito","Bob Harras","M.D. Bright","Christopher Priest"],"i":3214},{"year":1986,"characters":["Anna Kappelbaum","Armadillo","Bernie Rosenthal","Bombshell","Captain America","Crossfire","Falcon","Hawkeye","Josh Cooper","Knick Knack","Mike Farrel","Mockingbird","Oddball","Ringleader","Tenpin","Wasp"],"name":"Captain America #316-317","link":"captain_america_316-317","credits":["Michael Higgins","Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald"],"i":3215},{"year":1986,"characters":["Battleaxe (Grappler)","D-Man","Ms. Marvel (Sharon Ventura)","Poundcakes","Puppet Master","Sphinx","Thing"],"name":"Thing #34","link":"thing_34","credits":["Mike Carlin","Paul Neary","Mark Gruenwald","Kim DeMulder","Howard Mackie"],"i":3216},{"year":1986,"characters":["Spider-Man","Wong"],"name":"Amazing Spider-Man: Hooky (Marvel Graphic Novel #22)","link":"marvel_graphic_novel_22_amazin","credits":["Christopher Priest","Berni Wrightson","D.G. Chichester","Tom DeFalco","Archive Goodwin","Susan K. Putney","Margaret Clark"],"i":3217},{"year":1986,"characters":["Blue Streak","Captain America","Death Adder","Firebrand","Hercules","Jarvis","Princess Python","Scourge","Sub-Mariner","Wasp"],"name":"Captain America #318","link":"captain_america_318","credits":["Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald","Bobbie Chase"],"i":3218},{"year":1986,"characters":["Annihilus","Basilisk","Blastaar","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Nick Fury","Scourge","She-Hulk"],"name":"Fantastic Four #289-292","link":"fantastic_four_289-292","credits":["Michael Higgins","P. Craig Russell","Mike Carlin","John Byrne","Bobbie Chase","Alan Gordon"],"i":3219},{"year":1986,"characters":["Allison McCourt","Awf","Emperor Bhadsha","Energizer","Franklin Richards","Friday","Gee","Hadj","Jarvis","John Rival","Kofi","Lightspeed","Maraud","Mass Master"],"name":"Power Pack #22","link":"power_pack_22","credits":["Louise Simonson","Bob Wiacek","Jon Bogdanove","Carl Potts"],"i":3220},{"year":1986,"characters":["Alexander Van Tilburg","Bethany Cabe","Clytemnestra Erwin","Iron Man","Valdemar Tykkio","War Machine","Yorgon Tykkio"],"name":"Iron Man #207","link":"iron_man_207","credits":["Ian Akin","Brian Garvey","M.D. Bright","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":3221},{"year":1986,"characters":["Anaconda","Animus (Vamp)","Asp","Bird Man II","Black Mamba","Bushmaster II","Captain America","Cheetah","Clown","Cobra","Cottonmouth","Cyclone","Death Adder","Diamondback","El Jaguar","Firebrand","Foolkiller (Greg Salinger)","Grappler","Hellrazor","Hijacker","Kraken","Letha","Mindwave","Mirage (Desmond Charne)","Rapier","Rattler","Ringer","Scourge","Shellshock","Sidewinder","Steeplejack II","Turner D. Century","Whiplash (Blacklash)"],"name":"Captain America #319","link":"captain_america_319","credits":["Joe Sinnott","Mike Carlin","Paul Neary","Mark Gruenwald","Bobbie Chase"],"i":3222},{"year":1986,"characters":["Betty Brant","Flash Thompson","Hobgoblin (Roderick Kingsley)","Joe 'Robbie' Robertson","Kate Cushing","Lance Bannon","Ned Leeds","Richard Fisk","Scourge","Sharon Banks","Spider-Man","Wraith"],"name":"Amazing Spider-Man #278","link":"amazing_spider-man_278","credits":["Christopher Priest","Mary Jo Duffy","Peter David","Tom DeFalco","Adam Blaustein","Vincent Colletta","Mike Harris"],"i":3223},{"year":1986,"characters":["Bird Man II","Captain America","Cheetah","Cobra","Cyclone","Diamondback","Domino (Scourge Assistant)","El Jaguar","Firebrand","Grappler","Hellrazor","Hijacker","Kraken","Letha","Mindwave","Mirage (Desmond Charne)","Rapier","Ringer","Scourge","Scourge II","Steeplejack II","Turner D. Century","Water Wizard"],"name":"Captain America #320","link":"captain_america_320","credits":["Mike Carlin","Dennis Janke","Paul Neary","Mark Gruenwald","Bobbie Chase"],"i":3224},{"year":1986,"characters":["Alexander Van Tilburg","Bethany Cabe","Clytemnestra Erwin","Iron Man","Senator Boyton","War Machine"],"name":"Iron Man #208","link":"iron_man_208","credits":["Ian Akin","Brian Garvey","M.D. Bright","Mark Gruenwald","Denny O'Neil","Howard Mackie"],"i":3225},{"year":1986,"characters":["Captain America","Nuklo","Overrider","TESS-One","Wolverine"],"name":"Captain America annual #8","link":"captain_america_annual_8","credits":["Mike Zeck","Josef Rubinstein","Mike Carlin","Mark Gruenwald","John Beatty"],"i":3226},{"year":1986,"characters":["Amanda Sefton","Arcade","Judith Rassendyll","Miss Locke","Mr. Chambers","Nightcrawler"],"name":"Uncanny X-Men #204","link":"uncanny_x-men_204","credits":["Whilce Portacio","June Brigman","Ann Nocenti","Chris Claremont"],"i":3227},{"year":1986,"characters":["Agnar","Balder","Beta Ray Bill","Enchantress","Gudrun","Heimdall","Hildy","Hogun","Karnilla","Kevin Mortensen","Kurse","Loki","Lorelei (Norse Goddess)","Malekith","Mick Mortensen","Ruby Mortensen","Sif","Thor","Thug Thatcher","Volstagg"],"name":"Thor #367-369","link":"thor_367-369","credits":["Ralph Macchio","Al Milgrom","Craig Anderson","Walt Simonson","Geof Isherwood","Sal Buscema","Bob Wiacek"],"i":3228},{"year":1986,"characters":["Balder","Beta Ray Bill","Fandral","Freki","Frigga","Geri","Heimdall","Hela","Hogun","Jane Foster","Justice Peace","Keith Kincaid","Kevin Mortensen","Mick Mortensen","Muninn","Ruby Mortensen","Sif","Thor","Thug Thatcher","Volstagg","Zaniac"],"name":"Thor #371-372","link":"thor_371-372","credits":["Ralph Macchio","Craig Anderson","Walt Simonson","Sal Buscema","Al Williamson","Bret Blevins"],"i":3229},{"year":1986,"characters":["Angelo Macon","Energizer","Lady Deathstrike","Murray Reese","Spiral","Wade Cole","Wolverine"],"name":"Uncanny X-Men #205","link":"uncanny_x-men_205","credits":["Ann Nocenti","Terry Kavanagh","Barry Windsor-Smith","Chris Claremont"],"i":3230},{"year":1986,"characters":["Amos Culhane","Cleo Vanderlip","Dakota North","Luke Jacobson","Mad Dog (Dakota North employee)","Ricky North","S.J. North"],"name":"Dakota North #1","link":"dakota_north_1","credits":["Larry Hama","Tony Salmons","Martha Thomases"],"i":3231},{"year":1986,"characters":["Amanda Robertson","Ann Macintosh","Ashcan","Black Cat","Dr. Strange","Foreigner","Hobgoblin (Roderick Kingsley)","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Mary Jane Watson","Randy Robertson","Sabretooth","Spider-Man","Wong"],"name":"Peter Parker, the Spectacular Spider-Man #115-116","link":"peter_parker_the_spectacular_s_78","credits":["Christopher Priest","Peter David","Bob McLeod","Mark Beachum","Adam Blaustein","Rich Buckler"],"i":3232},{"year":1986,"characters":["Amanda Sefton","Avalanche","Blob","Colossus","David Ishima","Judith Rassendyll","Lindsay McCabe","Madelyne Pryor","Nightcrawler","Pyro","Rachel Summers","Rogue","Sabrina Morrel","Shadowcat (Kitty Pryde)","Spider-Woman (Jessica Drew)","Spider-Woman (Julia Carpenter)","Spiral","Storm"],"name":"Uncanny X-Men #206","link":"uncanny_x-men_206","credits":["John Romita Jr.","Ann Nocenti","Chris Claremont","Terry Kavanagh","Dan Green"],"i":3233},{"year":1986,"characters":["Angel","Artie Maddicks","Beast","Cameron Hodge","Carl Maddicks","Cyclops","Iceman","Jean Grey","Rusty Collins","Senator Thompson","Tower","Vera Cantor"],"name":"X-Factor #2-3","link":"x-factor_2-3","credits":["Bob Harras","Butch Guice","Josef Rubinstein","Bob Layton"],"i":3234},{"year":1986,"characters":["Angel","Arishem","Captain America","Cybele","Dreaming Celestial","Forgotten One","Ghaur","Hawkeye","Hercules","Ikaris","Iron Man","Jarvis","Karkas","Karygmax","Khoryphos","Kingo Sunen","Kro","Makkari","Margo Damian","Mockingbird","Phastos","Ran-Sak the Reject","Sam Holden","Sersi","Sprite","Sub-Mariner","Tefral","Thena","Thor","Tigra","Wonder Man","Yrdsis","Ziran"],"name":"Eternals #1-12","link":"eternals_1-12","credits":["Ralph Macchio","Walt Simonson","Geof Isherwood","Keith Williams","Paul Ryan","Dan Bulanadi","Sal Buscema","Sam DeLaRosa","Tom Morgan","Al Williamson","Keith Pollard","Alan Gordon","Peter Gillis"],"i":3235},{"year":1986,"characters":["Auntie Freeze","Curtiss Jackson (Power Broker)","D-Man","Jarvis","Karl Malus","Mangler (Power Broker Inc)","Michael Lynch","Ms. Marvel (Sharon Ventura)","Poundcakes","She-Hulk","Thing"],"name":"Thing #35-36","link":"thing_35-36","credits":["Sam DeLaRosa","Mike Carlin","Paul Neary","Mark Gruenwald","Howard Mackie"],"i":3236},{"year":1986,"characters":["Firebird","Griffin","Hawkeye","Headlok","Henry Pym","Iron Man","Mockingbird","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","She-Hulk","Thing","Tigra","Wasp","Wonder Man"],"name":"West Coast Avengers #10","link":"west_coast_avengers_10","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3237},{"year":1986,"characters":["Crystal","Enchantress","Glamor","Illusion","Norm Webster","Scarlet Witch","Vision"],"name":"Vision and the Scarlet Witch #9","link":"vision_and_the_scarlet_witch_9","credits":["Richard Howell","Steve Englehart","Frank Springer","Jim Salicrup"],"i":3238},{"year":1986,"characters":["J. Jonah Jameson","Spider-Man"],"name":"Marvel Fanfare #27 (Spider-Man)","link":"marvel_fanfare_27_spider-man","credits":["Marc Hempel","Al Milgrom","Rosemary McCormick-Lowy"],"i":3239},{"year":1986,"characters":["J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Magma (Jonathan Darque)","Spider-Man"],"name":"Web of Spider-Man #16-17","link":"web_of_spider-man_16-17","credits":["Christopher Priest","Marc Silvestri","Vincent Colleta","Kyle Baker","Adam Blaustein","David Michelinie"],"i":3240},{"year":1992,"characters":["Eddie Brock (Venom)","Venom Symbiote"],"name":"Amazing Spider-Man annual #26, Spectacular Spider-Man annual #12, Web of Spider-Man annual #8 (Venom)","link":"amazing_spider-man_annual_26sp","credits":["Bruce Jones","Danny Fingeroth","David Michelinie","Eric Fein","Aaron Lopresti"],"i":3241},{"year":1986,"characters":["Brightwind","Death","Mirage (Dani Moonstar)","Peg Lonestar","William Lonestar"],"name":"New Mutants #41","link":"new_mutants_41","credits":["Ann Nocenti","Butch Guice","Terry Austin","Chris Claremont"],"i":3242},{"year":1986,"characters":["Black Bolt","Crystal","Gorgon","Iridia","Karnak","Luna","Medusa","Norm Webster","Quicksilver","Scarlet Witch","Vision"],"name":"Vision and the Scarlet Witch #10","link":"vision_and_the_scarlet_witch_1_2","credits":["Jim Salicrup","Ann Nocenti","Frank Springer","Steve Englehart","Richard Howell"],"i":3243},{"year":1987,"characters":["Amos Culhane","Cleo Vanderlip","Dakota North","Luke Jacobson","Mad Dog (Dakota North employee)","Ricky North","S.J. North"],"name":"Dakota North #2-5","link":"dakota_north_2-5","credits":["Larry Hama","Tony Salmons","Martha Thomases"],"i":3244},{"year":1986,"characters":["Ben Urich","Captain America","Daredevil","Debbie Harris","Doris Urich","Foggy Nelson","General Lewis Haywerth","Gladiator","Glorianna O'Breen","Iron Man","J. Jonah Jameson","Joe 'Robbie' Robertson","Karen Page","Kingpin","Lt. Nick Manolis","Nuke","Sister Maggie Murdock","Thor","Wesley (Kingpin henchman)"],"name":"Daredevil #230-233","link":"daredevil_230-233","credits":["Frank Miller","Ralph Macchio","David Mazzucchelli"],"i":3245},{"year":1986,"characters":["Flash Thompson","Foreigner","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Joy Mercado","Mary Jane Watson","Silver Sable","Uncle Morty"],"name":"Amazing Spider-Man #279","link":"amazing_spider-man_279","credits":["Christopher Priest","Tom DeFalco","Rick Leonardi","Adam Blaustein","Vincent Colletta"],"i":3246},{"year":1986,"characters":["Amanda Robertson","Ashcan","Black Cat","Dr. Strange","Foreigner","Joe 'Robbie' Robertson","Joy Mercado","Martha Robertson","Randy Robertson"],"name":"Peter Parker, the Spectacular Spider-Man #117","link":"peter_parker_the_spectacular_s_79","credits":["Christopher Priest","Peter David","Bob McLeod","Keith Williams","Josef Rubinstein","Adam Blaustein","Dell Barras","Rich Buckler","Dwayne Turner"],"i":3247},{"year":1986,"characters":["Daredevil","Dollar Bill","Madcap","Richard Fisk"],"name":"Daredevil #234","link":"daredevil_234","credits":["Steve Ditko","Ralph Macchio","Mark Gruenwald","Dennis Jensen"],"i":3248},{"year":1986,"characters":["Aero","Ben Locklin","Cannonball","Conal Duran","Dazzler","Elisabeth Guthrie","Husk","Icarus","Jebediah Guthrie","Joelle Guthrie","Lewis Guthrie","Lila Cheney","Lucinda Guthrie"],"name":"New Mutants #42","link":"new_mutants_42","credits":["Butch Guice","Ann Nocenti","Chris Claremont","Kyle Baker","Terry Kavanagh"],"i":3249},{"year":1986,"characters":["Eddie Brock (Venom)","J. Jonah Jameson","Joy Mercado","Mary Jane Watson","Spider-Man","Venom Symbiote"],"name":"Web of Spider-Man #18","link":"web_of_spider-man_18","credits":["Christopher Priest","Marc Silvestri","Kyle Baker","Adam Blaustein","David Michelinie"],"i":3250},{"year":1986,"characters":["Daredevil","Karen Page","Mr. Hyde"],"name":"Daredevil #235","link":"daredevil_235","credits":["Steve Ditko","Ralph Macchio","Dan Bulanadi","Danny Fingeroth"],"i":3251},{"year":1986,"characters":["Dr. Strange","Glamor","Holly Ladonna","Illusion","Norm Webster","Quicksilver","Scarlet Witch","Spider-Man","Toad","Vision"],"name":"Vision and the Scarlet Witch #11","link":"vision_and_the_scarlet_witch_1_3","credits":["Adam Philips","Jim Salicrup","Frank Springer","Steve Englehart","Richard Howell"],"i":3252},{"year":1986,"characters":["Armand Martel","Betty Ross","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Clay Quartermain","Diane Bellamy","Doc Samson","Doctor Fisher","General 'Thunderbolt' Ross","Hawkeye","Henry Pym","Hercules","Hideko Takata","Hulk","Human Torch","Invisible Woman","Iron Man","Jarvis","Mockingbird","Mr. Fantastic","Redeemer","Rick Jones","Rock","Scarlet Witch","She-Hulk","Sub-Mariner","Tigra","Vision","Wasp","Wonder Man"],"name":"Hulk #320-323","link":"hulk_320-323","credits":["Don Daley","Al Milgrom","Bob Harras","Dell Barras"],"i":3253},{"year":1986,"characters":["Aunt May","Cannonball","Cypher","J. Jonah Jameson","Magik","Magma","Mary Jane Watson","Mirage (Dani Moonstar)","Spider-Man","Warlock","Wolfsbane"],"name":"Web of Spider-Man annual #2","link":"web_of_spider-man_annual_2","credits":["Christopher Priest","Ann Nocenti","Art Adams","Geof Isherwood","Mike Mignola"],"i":3254},{"year":1986,"characters":["Angel","Artie Maddicks","Beast","Cameron Hodge","Candy Southern","Chilly Dog","Cyclops","Frenzy","Iceman","Jean Grey","Rusty Collins","Timeshadow","Tower"],"name":"X-Factor #4","link":"x-factor_4","credits":["Bob Harras","Keith Pollard","Josef Rubinstein","Bob Layton"],"i":3255},{"year":1986,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Growing Man","Hercules","Immortus","Jarvis","Kang","Sub-Mariner","Wasp"],"name":"Avengers #267-269","link":"avengers_267-269","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3256},{"year":1986,"characters":["Absorbing Man","Black Knight (Dane Whitman)","Byrrah","Captain America","Captain Marvel (Monica Rambeau)","Derek Freeman","Hercules","Jarvis","Leslie Farrington","Michael Costello","Moonstone (Karla Sofen)","Sub-Mariner","Titania","Wasp"],"name":"Avengers #270","link":"avengers_270","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3257},{"year":1986,"characters":["Attuma","Aurora","Black Knight (Dane Whitman)","Box","Byrrah","Dara","Doug Thompson","Dr. Strange","Hercules","Hodiak","Kariooq","Kolomaq","Madison Jeffries","Marrina","Nelvanna","Northstar","Pestilence (Alpha Flight villain)","Puck","Ranaq","Shaman","Snowbird","Somon","Sub-Mariner","Talisman","Tolamaq","Tundra","Turoq","Vindicator (Heather Hudson)"],"name":"Alpha Flight #36-38","link":"alpha_flight_36-38","credits":["Bill Mantlo","David Ross","Carl Potts","Gerry Talaoc","Rosemary McCormick-Lowy"],"i":3258},{"year":1986,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Derek Freeman","Grey Gargoyle","Hercules","Paladin","Songbird (Screaming Mimi)","Sub-Mariner","Wasp","Yellowjacket (Rita Demara)"],"name":"Avengers #271","link":"avengers_271","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3259},{"year":1986,"characters":["Attuma","Aurora","Black Knight (Dane Whitman)","Box","Byrrah","Captain America","Captain Marvel (Monica Rambeau)","Doug Thompson","Gary Cody","Hercules","Madison Jeffries","Marrina","Northstar","Puck","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)","Wasp"],"name":"Alpha Flight #39","link":"alpha_flight_39","credits":["Bill Mantlo","Whilce Portacio","David Ross","Carl Potts","Rosemary McCormick-Lowy"],"i":3260},{"year":1986,"characters":["Attuma","Aurora","Black Knight (Dane Whitman)","Box","Byrrah","Captain America","Captain Marvel (Monica Rambeau)","Hercules","Madison Jeffries","Marrina","Northstar","Puck","Shaman","Snowbird","Sub-Mariner","Vindicator (Heather Hudson)","Wasp"],"name":"Avengers #272","link":"avengers_272","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3261},{"year":1986,"characters":["Aurora","Box","Byrrah","Madison Jeffries","Marrina","Northstar","Puck","Shaman","Snowbird","Sub-Mariner","Vashti","Vindicator (Heather Hudson)"],"name":"Alpha Flight #40","link":"alpha_flight_40","credits":["Carl Potts","Bill Mantlo","Whilce Portacio","David Ross"],"i":3262},{"year":1986,"characters":["Angel","Beast","Cameron Hodge","Cyclops","Franklin Richards","Guardsman II (Michael O'Brien)","Iceman","Iron Man","Jean Grey","Mr. Fantastic","Myron Wilburn","Nick Fury","Radion (Dr. Henri Sorel)","Willie Evans Jr.","Willie Evans Sr."],"name":"Iron Man annual #8","link":"iron_man_annual_8","credits":["Michael Higgins","Ian Akin","Brian Garvey","Bob Harras","Paul Neary","Mark Gruenwald"],"i":3263},{"year":1986,"characters":["Arnold Schwarzburger","Christina Carson","Hawkeye","Henry Pym","Iron Man","Mockingbird","Nick Fury","Razorfist III","Shockwave","Tigra","Wonder Man","Zaran"],"name":"West Coast Avengers #11","link":"west_coast_avengers_11","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3264},{"year":1986,"characters":["Angel","Beast","Blind Faith","Cameron Hodge","Concussion","Crimson Dynamo V","Cyclops","Iceman","Iron Curtain","Jean Grey","Mentac","Senator Thompson","Sibercat"],"name":"X-Factor annual #1","link":"x-factor_annual_1","credits":["Bob Harras","Brett Breeding","Bob Layton"],"i":3265},{"year":1988,"characters":["Dr. Strange","Wong"],"name":"Marvel Fanfare #41","link":"marvel_fanfare_41","credits":["Al Milgrom","Dave Gibbons","Walt Simonson"],"i":3266},{"year":1989,"characters":["Banshee","Mirage (Dani Moonstar)","Moira MacTaggert","Wolfsbane"],"name":"Marvel Comics Presents #22 (New Mutants)","link":"marvel_comics_presents_22_new_","credits":["Sue Flaxman","Jose Marzan","Michael Rockwitz","Rodney Ramos","Terry Kavanagh"],"i":3267},{"year":1990,"characters":["Balder","Enchantress","Fandral","Hogun","Karnilla","Volstagg"],"name":"Marvel Comics Presents #66 (Volstagg)","link":"marvel_comics_presents_66_vols","credits":["Sam Grainger","Kelly Corvese","Terry Kavanagh","Sholly Fisch"],"i":3268},{"year":1986,"characters":["Buck Cowan","Clytemnestra Erwin","Iron Man","Lissa Russell","Mockingbird","Morgan Le Fey","Werewolf By Night"],"name":"Iron Man #209","link":"iron_man_209","credits":["Michael Higgins","Ian Akin","Brian Garvey","Mark Gruenwald","Rick Hoberg","Dennis Mallonee","Steve Geige"],"i":3269},{"year":1986,"characters":["Amanda Robertson","Ashcan","Foreigner","Frederick Miluv","Joe 'Robbie' Robertson","Kate Cushing","Kingpin","Lance Bannon","Randy Robertson","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #118","link":"peter_parker_the_spectacular_s_80","credits":["Christopher Priest","Peter David","Mike Zeck","Bob McLeod","Adam Blaustein"],"i":3270},{"year":1986,"characters":["Human Torch","Invisible Woman","Iron Man","Kristoff","Lyja the Lazerfist","Mr. Fantastic","She-Hulk","Tigra","Wonder Man","Wyatt Wingfoot"],"name":"Fantastic Four #293-295","link":"fantastic_four_293-295","credits":["Jerry Ordway","Mike Carlin","John Byrne","Roger Stern","Bobbie Chase","Alan Gordon"],"i":3271},{"year":1986,"characters":["Allatou","Graviton","Halflife (Avengers villain)","Hawkeye","Henry Pym","Iron Man","Mockingbird","Quantum","Tigra","Wonder Man","Zzzax"],"name":"West Coast Avengers #12-13","link":"west_coast_avengers_12-13","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3272},{"year":1990,"characters":["Wonder Man"],"name":"Marvel Super Heroes #4 (Wonder Man)","link":"marvel_super_heroes_4_wonder_m","credits":["Bill Mumy","Brian Murray"],"i":3273},{"year":1986,"characters":["Happy Hogan","Iron Man","Pepper Potts","Spymaster","War Machine"],"name":"Iron Man #210","link":"iron_man_210","credits":["Danny Fingeroth","M.D. Bright","Sam DeLaRosa","Mark Gruenwald","Howard Mackie"],"i":3274},{"year":1986,"characters":["Brightwind","Cannonball","Catseye","Cypher","Empath","Jetstream","Karma","Magik","Magma","Mirage (Dani Moonstar)","Nina da Costa","Roulette","S'ym","Sharon Friedlander","Stevie Hunter","Sunspot","Tarot","Tom Corsi","Warlock","Warpath"],"name":"New Mutants #43","link":"new_mutants_43","credits":["Whilce Portacio","Ann Nocenti","Chris Claremont","Steve Purcell","Terry Kavanagh"],"i":3275},{"year":1986,"characters":["Angel","Apocalypse","Artie Maddicks","Beast","Cameron Hodge","Cyclops","Frenzy","Iceman","Jean Grey","Rusty Collins","Stinger (X-Factor villain)","Timeshadow","Tower","Vera Cantor"],"name":"X-Factor #5-6","link":"x-factor_5-6","credits":["Butch Guice","Don Daley","Bob McLeod","Josef Rubinstein","Bob Harras","Bob Layton","Louise Simonson"],"i":3276},{"year":1986,"characters":["Franklin Richards","Hopper Hertnecky","Human Torch","Invisible Woman","Lyja the Lazerfist","Mole Man","Mr. Fantastic","She-Hulk","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #296","link":"fantastic_four_296","credits":["Al Milgrom","Jerry Ordway","Barry Windsor-Smith","John Buscema","Marc Silvestri","Stephen Leialoha","Joe Sinnott","Josef Rubinstein","Stan Lee","Kerry Gammill","Mike Carlin","Klaus Janson","Jim Shooter","Ron Frenz","Vincent Colletta","Bob Wiacek"],"i":3277},{"year":1987,"characters":["Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","She-Hulk","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #297-298","link":"fantastic_four_297-298","credits":["John Buscema","Don Daley","Sal Buscema","David Wohl","Roger Stern"],"i":3278},{"year":1986,"characters":["Angel","Artie Maddicks","Beast","Bulk","Cameron Hodge","Cyclops","Glow Worm","Iceman","Jean Grey","Rusty Collins","Skids","Tower","Trish Tilby","Vera Cantor"],"name":"X-Factor #7","link":"x-factor_7","credits":["Butch Guice","Don Daley","Bob Harras","Bob McLeod","Louise Simonson"],"i":3279},{"year":1987,"characters":["Benny Beckley","Comet Man","Hulk","Invisible Woman","Max (Fortisquian)","Mr. Fantastic","Nick Fury","Rosemary Beckley","She-Hulk","Superior (Bridge)","Thing"],"name":"Comet Man #1-6","link":"comet_man_1-6","credits":["Bill Mumy","Ann Nocenti","Kelley Jones","Gerry Talaoc","Miguel Ferrer"],"i":3280},{"year":1986,"characters":["Crystal","Dr. Strange","Glamor","Grim Reaper","Holly Ladonna","Illusion","Magneto","Martha Williams","Nekra","Norm Webster","Scarlet Witch","Thomas (VSW Baby)","Vision","William (VSW Baby)","Wonder Man","Wong"],"name":"Vision and the Scarlet Witch #12","link":"vision_and_the_scarlet_witch_1_4","credits":["Adam Philips","Jim Salicrup","Frank Springer","Steve Englehart","Richard Howell"],"i":3281},{"year":1986,"characters":["Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hulk","Rick Jones"],"name":"Hulk #324","link":"hulk_324","credits":["Bobbie Chase","Al Milgrom","Dennis Janke","Bob Harras"],"i":3282},{"year":1986,"characters":["Dr. Strange","Hamir"],"name":"Doctor Strange: Into Shamballa (Marvel Graphic Novel #23)","link":"marvel_graphic_novel_23_doctor","credits":["Carl Potts","Rosemary McCormick-Lowy","J.M. DeMatteis","Dan Green","Margaret Clark"],"i":3283},{"year":1986,"characters":["Beverly Switzler","Howard The Duck"],"name":"Howard the Duck #33","link":"howard_the_duck_33","credits":["Adam Phillips","Christopher Stager","Jim Salicrup","Val Mayerik","Christopher Stager and Val Mayerik"],"i":3284},{"year":1987,"characters":["Abomination","Betty Ross","Clay Quartermain","Doc Samson","Hulk","Rick Jones","Tyrannus"],"name":"Hulk annual #15","link":"hulk_annual_15","credits":["Bob Harras","Sal Buscema","Danny Fingeroth"],"i":3285},{"year":1993,"characters":["Baron Mordo","Dr. Strange","Sara Wolfe","Wong"],"name":"Dr. Strange annual #3 (back-up)","link":"dr_strange_annual_3_back-up","credits":["Joe Andreani","Sandu Florea","Mike Rockwitz","Sholly Fisch"],"i":3286},{"year":1986,"characters":["Aunt May","Harriet Rose Palermo","Humbug","J. Jonah Jameson","Joy Mercado","Martha (Aunt May's Boarder)","Solo","Sophie (Aunt May's Boarder)","Spider-Man","Victor Palermo"],"name":"Web of Spider-Man #19","link":"web_of_spider-man_19","credits":["Christopher Priest","Marc Silvestri","David Michelinie","Bob McLeod"],"i":3287},{"year":1987,"characters":["Aunt May","Harriet Rose Palermo","Joy Mercado","Spider-Man","Victor Palermo"],"name":"Web of Spider-Man #20-22","link":"web_of_spider-man_20-22","credits":["Christopher Priest","Art Nichols","Jim Salicrup","Marc Silvestri","Larry Lieber","Adam Blaustein","David Michelinie","Jim Shooter","Len Kaminski","Vincent Colletta"],"i":3288},{"year":1986,"characters":["Cloak","Dagger","Father Delgado","Mayhem","Predator"],"name":"Cloak and Dagger #6","link":"cloak_and_dagger_6","credits":["Bill Mantlo","Rick Leonardi","Carl Potts","Rosemary McCormick-Lowy","Terri Austin"],"i":3289},{"year":1986,"characters":["Dr. Strange","Sara Wolfe","Topaz","Wong"],"name":"Doctor Strange #76","link":"doctor_strange_76","credits":["Chris Warner","Mark Badger","Carl Potts","Randy Emberlin","Peter Gillis"],"i":3290},{"year":1986,"characters":["Alexander Van Tilburg","Bethany Cabe","Clytemnestra Erwin","Iron Man","Living Laser","War Machine"],"name":"Iron Man #211","link":"iron_man_211","credits":["Michael Higgins","Sam DeLaRosa","Mark Gruenwald","Alex Saviuk","Howard Mackie"],"i":3291},{"year":1986,"characters":["Cannonball","Cypher","Karma","Legion","Magik","Magma","Mirage (Dani Moonstar)","Moira MacTaggert","Reverend Craig","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #44","link":"new_mutants_44","credits":["Ann Nocenti","Butch Guice","Kyle Baker","Chris Claremont"],"i":3292},{"year":1986,"characters":["Angel","Arranger","Beast","Beetle","Betty Brant","Boomerang","Cameron Hodge","Carlos Cassada","Cyclops","Daniel Kingsley","Flash Thompson","Foreigner","Gauntlet (Alfredo Morelli)","Hobgoblin (Roderick Kingsley)","Hydroman","Iceman","J. Jonah Jameson","Jason Macendale","Jean Grey","Joe 'Robbie' Robertson","Johnston (Rose minion)","Kingpin","Mary Jane Watson","Michael Cassada","Ned Leeds","Rhino","Richard Fisk","Roberto Cassada","Rosa Cassada","Sandman","Sha Shan","Sharon Banks","Silver Sable","Speed Demon","Spider-Man","Varley (Rose minion)"],"name":"Amazing Spider-Man #280-282","link":"amazing_spider-man_280-282","credits":["Christopher Priest","Tom DeFalco","Rick Leonardi","Brett Breeding","Bob Layton","Adam Blaustein","Ron Frenz"],"i":3293},{"year":1987,"characters":["Angel","Beast","Ben Urich","Captain America","Daredevil","Dr. Strange","Frog-Man II","Hop Sung","Human Torch","Iceman","Leap-Frog","Scarlet Witch","Spider-Man","Vision","Yellow Claw"],"name":"Marvel Fanfare #31-32","link":"marvel_fanfare_31-32","credits":["Al Milgrom","<em>Vision","<em>Daredevil<","Norman Breyfogle","<em>Captain America<","<em>Dr. Strange<","Roger McKenzie","Paul Smith","em>","Dennis Janke","Mark Wheatley","J.M. DeMatteis","Kerry Gammil","Scarlet Witch<"],"i":3294},{"year":1989,"characters":["Betty Brant","Kate Cushing","Spider-Man"],"name":"Marvel Fanfare #42 (Spider-Man)","link":"marvel_fanfare_42_spider-man","credits":["Carl Potts","Terry Shoemaker","Al Milgrom"],"i":3295},{"year":1986,"characters":["Clytemnestra Erwin","Dominic Fortune","Dominic Fortune II","Elena Von Lundt","Iron Man","War Machine","Wolfgang Von Lundt"],"name":"Iron Man #212-213","link":"iron_man_212-213","credits":["Michael Higgins","Danny Fingeroth","Scott Williams","Javier Saltares","Kyle Baker","Mark Gruenwald","Dwayne Turner","Howard Mackie"],"i":3296},{"year":1986,"characters":["Amanda Robertson","Bambi","Black Cat","Candy","Foreigner","Harry Osborn","Joe 'Robbie' Robertson","Mary Jane Watson","Normie Osborn","Randi","Randy Robertson","Sabretooth","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #119","link":"peter_parker_the_spectacular_s_81","credits":["Bob McLeod","Peter David","Christopher Priest","Rich Buckler"],"i":3297},{"year":1986,"characters":["Arnie Green","Dr. Strange","Khat","Sara Wolfe","Topaz","Wong"],"name":"Doctor Strange #77","link":"doctor_strange_77","credits":["Chris Warner","Carl Potts","Randy Emberlin","Peter Gillis"],"i":3298},{"year":1992,"characters":["Blackout","Iron Man","Nick Fury","Rhino","Spymaster","War Machine","Whiplash (Blacklash)"],"name":"Marvel Super Heroes #12 (Iron Man)","link":"marvel_super_heroes_12_iron_ma","credits":["Dave Simons","Dan Cuddy","Kurt Busiek","Rob Tokar","James Fry","Ralph Cabrera"],"i":3299},{"year":1986,"characters":["Black Queen (Selene)","Black Rook (Friedrich von Roehm)","Callisto","Colossus","Nightcrawler","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Uncanny X-Men #207","link":"fluid_canonocity","credits":["Ann Nocenti","Dan Green","John Romita Jr.","Chris Claremont"],"i":3300},{"year":1986,"characters":["Black Bishop (Harry Leland)","Black King (Sebastian Shaw)","Black Queen (Selene)","Black Rook (Friedrich von Roehm)","Caliban","Callisto","Colossus","Nightcrawler","Nimrod","Rachel Summers","Rogue","Shadowcat (Kitty Pryde)","Spiral","Storm","Sunder","Tessa","Tomas Rodriguez","Wolverine"],"name":"Uncanny X-Men #208-209","link":"uncanny_x-men_208-209","credits":["John Romita Jr.","P. Craig Russell","Ann Nocenti","Chris Claremont","Terry Kavanagh","Dan Green"],"i":3301},{"year":1986,"characters":["Angel","Artie Maddicks","Avalanche","Beast","Blob","Cameron Hodge","Cyclops","Destiny","Iceman","Jean Grey","Mystique","Pyro","Rusty Collins","Skids","Spider-Woman (Julia Carpenter)","Spiral","Trish Tilby","Vera Cantor"],"name":"X-Factor #8","link":"x-factor_8","credits":["Marc Silvestri","Don Daley","Bob Harras","Josef Rubinstein","Louis Simonson"],"i":3302},{"year":1986,"characters":["Angel","Arclight","Beast","Ben Locklin","Black King (Sebastian Shaw)","Black Queen (Selene)","Colossus","Conal Duran","Cyclops","Dazzler","Grey Havero","Harpoon","Iceman","Jean Grey","Lockheed","Magik","Magneto","Malice (Marauder)","Nightcrawler","Rogue","Scalphunter","Scrambler","Shadowcat (Kitty Pryde)","Storm","Tessa","Vertigo (Savage Land Mutate)","White Queen (Emma Frost)","Wolverine"],"name":"Uncanny X-Men #210","link":"uncanny_x-men_210","credits":["Ann Nocenti","Dan Green","John Romita Jr.","Chris Claremont"],"i":3303},{"year":1986,"characters":["Angel","Artie Maddicks","Avalanche","Beast","Blob","Caliban","Cameron Hodge","Cyclops","Destiny","Iceman","Jean Grey","Leech","Magneto","Mystique","Pyro","Rusty Collins","Skids","Spider-Woman (Julia Carpenter)","Trish Tilby","Valerie Cooper"],"name":"X-Factor #9","link":"x-factor_9","credits":["Don Daley","Bob Harras","Josef Rubinstein","Louis Simonson","Terry Shoemaker"],"i":3304},{"year":1986,"characters":["Avalanche","Black Knight (Dane Whitman)","Blob","Captain America","Captain Marvel (Monica Rambeau)","Destiny","Hawkeye","Henry Peter Gyrich","Henry Pym","Hercules","Iron Man","Jarvis","Mockingbird","Mystique","Pyro","Quicksilver","Raymond Sikorski","Spider-Woman (Julia Carpenter)","Spiral","Tigra","Valerie Cooper","Wasp","Wonder Man"],"name":"Avengers annual #15","link":"avengers_annual_15","credits":["Michael Higgins","Danny Fingeroth","Steve Ditko","Steve Englehart","Klaus Janson","Mark Gruenwald"],"i":3305},{"year":1986,"characters":["Aquarius (Robot)","Aries (Robot)","Avalanche","Beast","Black Knight (Dane Whitman)","Black Panther","Black Widow","Blob","Cancer (Robot)","Capricorn (Robot)","Captain America","Captain Marvel (Monica Rambeau)","Destiny","Falcon","Gemini (Robot)","Hawkeye","Henry Peter Gyrich","Henry Pym","Hercules","Iron Man","Leo (Robot)","Libra (Robot)","Mockingbird","Mr. Fantastic","Mystique","Pisces (Robot)","Pyro","Quicksilver","Sagittarius (Robot)","Scarlet Witch","Scorpio (Jake Fury LMD)","She-Hulk","Spiral","Taurus (Robot)","Thomas (VSW Baby)","Thor","Tigra","Virgo (Robot)","Vision","War Machine","Wasp","William (VSW Baby)","Wonder Man"],"name":"West Coast Avengers annual #1","link":"west_coast_avengers_annual_1","credits":["Michael Higgins","Danny Fingeroth","M.D. Bright","Geof Isherwood","Steve Englehart","Mark Gruenwald"],"i":3306},{"year":1986,"characters":["Allison McCourt","Awf","Cloak","Dagger","Emperor Bhadsha","Energizer","Franklin Richards","Friday","Gee","Geik","Hadj","Human Torch","Invisible Woman","Jakal","Jarvis","Jim Power","Kofi","Lightspeed","Maraud","Margaret Power","Mass Master","Mr. Fantastic","She-Hulk","Snake-Eyes","Yrik Whitemane"],"name":"Power Pack #23-26","link":"power_pack_23-26","credits":["Jon Bogdanove","Mark McKenna","Carl Potts","Rosemary McCormick-Lowy","Louise Simonson","Bob Wiacek"],"i":3307},{"year":1986,"characters":["Black Widow","Daredevil","Dr. Strike"],"name":"Daredevil #236","link":"daredevil_236","credits":["Ann Nocenti","Bob Wiacek","Barry Windsor-Smith","Ralph Macchio"],"i":3308},{"year":1986,"characters":["Bill Clayton","Cloak","Dagger","Father Delgado","Mayhem","Predator"],"name":"Cloak and Dagger #7","link":"cloak_and_dagger_7","credits":["Bill Mantlo","Marc Silvestri","Terry Austin","Carl Potts","Rosemary McCormick-Lowy"],"i":3309},{"year":1986,"characters":["Alfy (Fatboys)","Butch (Fatboys)","Cannonball","Captain Britain","Cypher","Darla (Fatboys)","Eightball (Fatboys)","Karma","Leong Manh","Magik","Magma","Meggan","Mirage (Dani Moonstar)","Mojo","Nga Manh Coy","Psylocke","Ralf (Fatboys)","Spiral","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants annual #2","link":"new_mutants_annual_2","credits":["Ann Nocenti","Alan Davis","Chris Claremont"],"i":3310},{"year":1986,"characters":["Alfy (Fatboys)","Butch (Fatboys)","Cannonball","Cypher","Darla (Fatboys)","Eightball (Fatboys)","Greensong","Karma","Lockheed","Longshot","Magik","Magma","Magneto","Major Domo","Mirage (Dani Moonstar)","Mojo","Nightcrawler","Psylocke","Puddlegulp","Ralf (Fatboys)","Rogue","Shadowcat (Kitty Pryde)","Spiral","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men annual #10","link":"uncanny_x-men_annual_10","credits":["Ann Nocenti","Art Adams","Terry Austin","Chris Claremont"],"i":3311},{"year":1986,"characters":["Brightwind","Cannonball","Cypher","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Shadowcat (Kitty Pryde)","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #45","link":"new_mutants_45","credits":["Ann Nocenti","Butch Guice","Kyle Baker","Chris Claremont"],"i":3312},{"year":1986,"characters":["Black Widow","Daredevil","Karen Page","Klaw"],"name":"Daredevil #237","link":"daredevil_237","credits":["Ralph Macchio","Louis Willaims","Craig Anderson","Dan Bulanadi","Steve Englehart","Al Williamson"],"i":3313},{"year":1986,"characters":["Angel","Annalee","Arclight","Beast","Brightwind","Callisto","Colossus","Cyclops","Harpoon","Iceman","Jean Grey","Lockheed","Magik","Magneto","Mirage (Dani Moonstar)","Nightcrawler","Piper (Morlock)","Psylocke","Riptide","Rogue","Scalphunter","Scrambler","Shadowcat (Kitty Pryde)","Sharon Friedlander","Storm","Sunder","Vertigo (Savage Land Mutate)","Wolverine"],"name":"Uncanny X-Men #211","link":"uncanny_x-men_211","credits":["John Romita Jr.","Ann Nocenti","Chris Claremont","Al Williamson","Bret Blevins"],"i":3314},{"year":1986,"characters":["Angel","Ape (Morlock)","Apocalypse","Arclight","Artie Maddicks","Avalanche","Beast","Beautiful Dreamer","Blob","Blockbuster","Caliban","Cameron Hodge","Candy Southern","Cyclops","Destiny","Erg","Harpoon","Iceman","Jean Grey","Leech","Mystique","Pestilence (Horseman of Apocalypse)","Prism","Pyro","Rusty Collins","Sabretooth","Scalphunter","Scrambler","Skids","Tarbaby","Trish Tilby","Vertigo (Savage Land Mutate)"],"name":"X-Factor #10","link":"x-factor_10","credits":["Bob Harras","Louise Simonson","Bob Wiacek","Walt Simonson"],"i":3315},{"year":1986,"characters":["Banshee","Callisto","Cannonball","Colossus","Cypher","Karma","Leong Manh","Lockheed","Magik","Magma","Magneto","Magus (Technarchy)","Mirage (Dani Moonstar)","Moira MacTaggert","Nga Manh Coy","Nightcrawler","Psylocke","Rogue","Shadowcat (Kitty Pryde)","Sharon Friedlander","Storm","Sunder","Sunspot","Tom Corsi","Warlock","Wolfsbane"],"name":"New Mutants #46","link":"new_mutants_46","credits":["Ann Nocenti","Butch Guice","Kyle Baker","Chris Claremont"],"i":3316},{"year":1986,"characters":["Angel","Arclight","Balder","Blockbuster","Harpoon","Heimdall","Hela","Jerry Sapristi","Kevin Mortensen","Mick Mortensen","Muninn","Puddlegulp","Thor","Vertigo (Savage Land Mutate)","Volstagg"],"name":"Thor #373","link":"thor_373","credits":["Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3317},{"year":1986,"characters":["Annalee","Ape (Morlock)","Arclight","Beast","Beautiful Dreamer","Caliban","Cyclops","Energizer","Erg","Franklin Richards","Gee","Harpoon","Iceman","Jean Grey","Jim Power","Leech","Lightspeed","Margaret Power","Mass Master","Sabretooth","Scalphunter","Scrambler","Skids","Tarbaby","Wolverine"],"name":"Power Pack #27","link":"power_pack_27","credits":["Louise Simonson","Alan Gordon","Jon Bogdanove","Carl Potts"],"i":3318},{"year":1986,"characters":["Callisto","Colossus","Healer","Magneto","Moira MacTaggert","Nightcrawler","Psylocke","Rogue","Sabretooth","Shadowcat (Kitty Pryde)","Sharon Friedlander","Storm","Tom Corsi","Wolverine"],"name":"Uncanny X-Men #212","link":"uncanny_x-men_212","credits":["Ann Nocenti","Chris Claremont","Rick Leonardi","Terry Kavanagh","Dan Green"],"i":3319},{"year":1986,"characters":["Angel","Artie Maddicks","Atropos (Verdandi)","Balder","Blockbuster","Clotho (Urd)","Cyclops","Gudrun","Harpoon","Hela","Hildy","Huginn","Jean Grey","Kevin Mortensen","Lachesis (Skuld)","Mick Mortensen","Muninn","Sabretooth","Thor","Vertigo (Savage Land Mutate)","Volstagg"],"name":"Thor #374","link":"thor_374","credits":["Craig Anderson","Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3320},{"year":1987,"characters":["Butch (Fatboys)","Daredevil","Darla (Fatboys)","Sabretooth"],"name":"Daredevil #238","link":"daredevil_238","credits":["Ann Nocenti","Stephen Leialoha","Sal Buscema","Ralph Macchio"],"i":3321},{"year":1986,"characters":["Angel","Ape (Morlock)","Apocalypse","Ariel (Fallen Angel)","Artie Maddicks","Beast","Boom Boom","Caliban","Cameron Hodge","Chance (Fallen Angel)","Cyclops","Erg","Iceman","Jean Grey","Leech","Masque","Scaleface","Skids","Tarbaby","Trish Tilby","Vanisher","War (Horseman of Apocalypse)"],"name":"X-Factor #11","link":"x-factor_11","credits":["Bob Harras","Louise Simonson","Bob Wiacek","Walt Simonson"],"i":3322},{"year":1987,"characters":["Callisto","Colossus","Dazzler","Lockheed","Magneto","Malice (Marauder)","Moira MacTaggert","Nightcrawler","Psylocke","Rogue","Sabretooth","Shadowcat (Kitty Pryde)","Sharon Friedlander","Storm","Wolverine"],"name":"Uncanny X-Men #213","link":"uncanny_x-men_213","credits":["Ann Nocenti","Chris Claremont","Alan Davis","Paul Neary","Terry Kavanagh"],"i":3323},{"year":1987,"characters":["Awf","Black Knight (Dane Whitman)","Energizer","Franklin Richards","Gee","Geik","Hercules","Human Torch","Invisible Woman","Jarvis","Jim Power","John Rival","Kofi","Lightspeed","Maraud","Margaret Power","Mass Master","Mr. Fantastic","She-Hulk","Yrik Whitemane"],"name":"Power Pack #28","link":"power_pack_28","credits":["Louise Simonson","Terry Shoemaker","Carl Potts","Hilary Barta"],"i":3324},{"year":1986,"characters":["Bill Clayton","Cloak","Dagger","Father Delgado","Hellstorm","Mayhem"],"name":"Cloak and Dagger #8","link":"cloak_and_dagger_8","credits":["Mike Mignola","Bill Mantlo","Carl Potts","Terry Austin"],"i":3325},{"year":1986,"characters":["Captain America","Flag-Smasher","Hiram Riddley","Holly Riddley","Jerry Hunt"],"name":"Captain America #321-322","link":"captain_america_321-322","credits":["Mike Carlin","Paul Neary","Mark Gruenwald","Bobbie Chase","John Beatty"],"i":3326},{"year":1986,"characters":["Cloak","Dr. Strange","Ecstasy","Enitharmon","Predator","Sara Wolfe","Topaz"],"name":"Doctor Strange #78","link":"doctor_strange_78","credits":["Chris Warner","Carl Potts","Randy Emberlin","Peter Gillis"],"i":3327},{"year":1987,"characters":["Chain","Grasp","Hawkeye","Larry Carpenter","Mike Clemson","Rachel Carpenter","Sonic","Spider-Woman (Julia Carpenter)","Valerie Cooper"],"name":"Iron Man #214","link":"iron_man_214","credits":["Ralph Macchio","Mark Gruenwald","Tom Morgan","Danny Fingeroth"],"i":3328},{"year":1986,"characters":["Bill Clayton","Cloak","Dagger","Dr. Doom","Father Delgado","Mayhem"],"name":"Cloak and Dagger #9","link":"cloak_and_dagger_9","credits":["Art Adams","Terry Austin","Carl Potts","Rosemary McCormick-Lowy","Bill Manto"],"i":3329},{"year":1986,"characters":["Battlestar","Bernie Rosenthal","Black Knight (Dane Whitman)","Captain America","Ethan Thurm","Hercules","Jarvis","Jasper Sitwell","Left-Winger","Right-Winger","USAgent"],"name":"Captain America #323","link":"captain_america_323","credits":["Don Daley","David Wohl","Paul Neary","Mark Gruenwald","John Beatty"],"i":3330},{"year":1987,"characters":["Armand Martel","Betty Ross","Clay Quartermain","Doc Samson","General 'Thunderbolt' Ross","Hideko Takata","Hulk","Nevermind","Redeemer","Rick Jones","Rock","Zzzax"],"name":"Hulk #325-327","link":"hulk_325-327","credits":["Al Milgrom","Bob McLeod","Josef Rubinstein","Bob Harras","Sam DeLaRosa","Bobbie Chase","Steve Geiger"],"i":3331},{"year":1986,"characters":["Allatou","Balkatar","Hawkeye","Hellcat","Hellstorm","Henry Pym","Iron Man","King Gerark","Master Pandemonium","Mockingbird","Tigra","Wonder Man"],"name":"West Coast Avengers #14-15","link":"west_coast_avengers_14-15","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3332},{"year":1986,"characters":["Ace","Aunt May","Kate Cushing","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man annual #6","link":"peter_parker_the_spectacular_s_84","credits":["Christopher Priest","Peter David","Mark Beachum"],"i":3333},{"year":1986,"characters":["Aunt May","Blizzard","Candy","Iron Man 2020","J. Jonah Jameson","Joe 'Robbie' Robertson","Mamie Muggins","Mary Jane Watson","Randi","Spider-Man"],"name":"Amazing Spider-Man annual #20","link":"amazing_spider-man_annual_20","credits":["Christopher Priest","Mark Beachum","Ken McDonald","Bob Wiacek","Fred Schiller"],"i":3334},{"year":1987,"characters":["Harry Osborn","Kingpin","Liz Allan","Lizard","Ned Leeds","Normie Osborn","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #130","link":"peter_parker_the_spectacular_s_86","credits":["Vincent Colletta","Jim Salicrup","Jim Ferm","Bob Layton"],"i":3335},{"year":1986,"characters":["J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #121","link":"peter_parker_the_spectacular_s_83","credits":["Christopher Priest","Peter David","Alan Kupperberg","John Buscema","Bob McLeod","Keith Williams","John Romita Sr.","Mark Texeira"],"i":3336},{"year":1986,"characters":["Aurora","Box","Northstar","Puck","Snowbird","Vindicator (Heather Hudson)"],"name":"Marvel Fanfare #28","link":"marvel_fanfare_28","credits":["Ken Steacy","Bill Mantlo","Al Milgrom","Rosemary McCormick-Lowy"],"i":3337},{"year":1986,"characters":["Aurora","Box","Diablo","Gilded Lily","Madison Jeffries","Northstar","Puck","Shaman","Snowbird","Vindicator (Heather Hudson)"],"name":"Alpha Flight annual #1","link":"alpha_flight_annual_1","credits":["Carl Potts","Bill Mantlo","Gerry Talaoc","Larry Stroman"],"i":3338},{"year":1987,"characters":["Aunt May","Eddie Brock (Venom)","Harriet Rose Palermo","J. Jonah Jameson","Johnston (Rose minion)","Joy Mercado","Nate Lubenski","Ned Leeds","Richard Fisk","Slyde","Spider-Man","Varley (Rose minion)","Venom Symbiote","Victor Palermo","Vulture"],"name":"Web of Spider-Man #23-24","link":"web_of_spider-man_23-24","credits":["Jim Salicrup","Jim Fern","Adam Blaustein","David Michelinie","Dell Barras","Len Kaminski","Vincent Colletta"],"i":3339},{"year":1987,"characters":["Aurora","Box","Madison Jeffries","Northstar","Persuasion","Puck","Shaman","Snowbird","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #41-42","link":"alpha_flight_41-42","credits":["Bill Mantlo","Whilce Portacio","David Ross","Joanne Spaldo","Carl Potts"],"i":3340},{"year":1987,"characters":["Dr. Strange","Morgana Blessing","Mr. Fantastic","Rintrah","Sara Wolfe","Topaz","Urthona","Valkyrie","Wong"],"name":"Doctor Strange #79-81","link":"doctor_strange_79-81","credits":["Chris Warner","Scott Williams","Joanne Spaldo","Carl Potts","Randy Emberlin","Peter Gillis"],"i":3341},{"year":1986,"characters":["Absorbing Man","Baron Zemo (Helmut)","Black Knight (Dane Whitman)","Blackout","Bulldozer","Captain America","Captain Marvel (Monica Rambeau)","Erik Josten","Fixer","Hercules","Jarvis","Moonstone (Karla Sofen)","Mr. Hyde","Paladin","Piledriver","Sub-Mariner","Thunderball","Tiger Shark","Titania","Wasp","Wrecker","Yellowjacket (Rita Demara)"],"name":"Avengers #273","link":"avengers_273","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3342},{"year":1986,"characters":["Captain America","Nomad","Paste Pot Pete","Slug (Crimelord)","Tinkerer","Whirlwind"],"name":"Captain America #324","link":"captain_america_324","credits":["Don Daley","David Wohl","Paul Neary","Mark Gruenwald","Vincent Colletta"],"i":3343},{"year":1986,"characters":["Baron Zemo (Helmut)","Black Knight (Dane Whitman)","Black Mamba","Blackout","Bulldozer","Captain America","Captain Marvel (Monica Rambeau)","Erik Josten","Fixer","Hercules","Jarvis","Moonstone (Karla Sofen)","Mr. Hyde","Piledriver","Thunderball","Tiger Shark","Wasp","Wrecker","Yellowjacket (Rita Demara)"],"name":"Avengers #274","link":"avengers_274","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3344},{"year":1986,"characters":["Absorbing Man","Betty Brant","Daniel Kingsley","Flash Thompson","Foreigner","Hobgoblin (Roderick Kingsley)","Joe 'Robbie' Robertson","Kate Cushing","Lance Bannon","Mary Jane Watson","Mongoose","Ned Leeds","Spider-Man","Titania","Wasp"],"name":"Amazing Spider-Man #283","link":"amazing_spider-man_283","credits":["Tom DeFalco","Ron Frenz","Bob Layton","Christopher Priest"],"i":3345},{"year":1987,"characters":["Absorbing Man","Ant-Man (Scott Lang)","Baron Zemo (Helmut)","Black Knight (Dane Whitman)","Blackout","Bulldozer","Captain America","Captain Marvel (Monica Rambeau)","Dr. Druid","Erik Josten","Falcon","Fixer","Hercules","Jarvis","Moonstone (Karla Sofen)","Mr. Hyde","Piledriver","Shroud","Thor","Thunderball","Tiger Shark","Titania","Wasp","Wrecker","Yellowjacket (Rita Demara)"],"name":"Avengers #275-277","link":"avengers_275-277","credits":["John Buscema","Tom Palmer","Roger Stern","Mark Gruenwald","Howard Mackie"],"i":3346},{"year":1987,"characters":["Hawkeye","Hellcat","Hellstorm","Henry Pym","Iron Man","Mockingbird","Tiger Shark","Tigra","Whirlwind","Wonder Man"],"name":"West Coast Avengers #16","link":"west_coast_avengers_16","credits":["Al Milgrom","Joe Sinnott","Steve Englehart","Mark Gruenwald","Howard Mackie"],"i":3347},{"year":1987,"characters":["Black Widow","Butch (Fatboys)","Daredevil","Karen Page"],"name":"Daredevil #239-240","link":"daredevil_239-240","credits":["Ralph Macchio","Ann Nocenti","Geof Isherwood","Louis Williams","Al Williamson"],"i":3348},{"year":1987,"characters":["Foreigner","J. Jonah Jameson","Joy Mercado","Mauler","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #122","link":"peter_parker_the_spectacular_s_87","credits":["Peter David","Art Nichols","Jim Salicrup","Bob McLeod","Malcom Davis","Adam Blaustein","Rich Buckler","Mike Esposito"],"i":3349},{"year":1987,"characters":["Angel","Ape (Morlock)","Apocalypse","Artie Maddicks","Beast","Beautiful Dreamer","Boom Boom","Caliban","Cameron Hodge","Cyclops","Erg","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","Leech","Masque","Rusty Collins","Sara Grey","Skids","Tarbaby","Vanisher"],"name":"X-Factor #12","link":"x-factor_12","credits":["Marc Silvestri","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3350},{"year":1987,"characters":["Butch (Fatboys)","Daredevil","Karen Page"],"name":"Daredevil #241","link":"daredevil_241","credits":["Ralph Macchio","Todd McFarlane","Craig Anderson","Al Milgrom","Ann Nocenti"],"i":3351},{"year":1987,"characters":["Allison McCourt","Energizer","Gee","John Rival","Lightspeed","Mass Master","Ned Leeds","Spider-Man"],"name":"Power Pack #29","link":"power_pack_29","credits":["Jon Bogdanove","Joanne Spaldo","Carl Potts","Louise Simonson","Dan Green"],"i":3352},{"year":1987,"characters":["Ann Macintosh","Arranger","Arthur Chekov","Aunt May","Ben Urich","Betty Brant","Daredevil","Dina (Richard Fisk's girlfriend)","Flash Thompson","Foreigner","Hammerhead","Hobgoblin (Roderick Kingsley)","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Johnston (Rose minion)","Kate Cushing","Lance Bannon","Mary Jane Watson","Ned Leeds","Punisher","Richard Fisk","Sgt. Tork","Silvermane","Spider-Man","Vanessa Fisk","Varley (Rose minion)"],"name":"Amazing Spider-Man #284-286","link":"amazing_spider-man_284-286","credits":["Christopher Priest","Art Nichols","Alan Kupperberg","Jim Salicrup","Jim Fern","Tom DeFalco","Josef Rubinstein","Brett Breeding","Adam Blaustein","Ron Frenz"],"i":3353},{"year":1987,"characters":["Airhead","Allison McCourt","Blasting Cap","Brute (Power Pack villain)","Crazylegs","Energizer","Garbage Man","Gee","Jim Power","John Rival","Lightspeed","Margaret Power","Mass Master","Razor Cut"],"name":"Power Pack #30-32","link":"power_pack_30-32","credits":["Jon Bogdanove","John Figueroa","Joanne Spaldo","Carl Potts","Hilary Barta","Louise Simonson","Val Mayerik"],"i":3354},{"year":1987,"characters":["Absorbing Man","Balder","Enchantress","Fandral","Frigga","Grundroth","Heimdall","Hela","Hildy","Hogun","Huginn","Iron Man","Kevin Mortensen","Loki","Mick Mortensen","Muninn","Sif","Thor","Volstagg"],"name":"Thor #375-376","link":"thor_375-376","credits":["Craig Anderson","Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3355},{"year":1987,"characters":["Ben Locklin","Callisto","Conal Duran","Dazzler","Lila Cheney","Malice (Marauder)","Psylocke","Rogue","Storm","Wolverine"],"name":"Uncanny X-Men #214","link":"uncanny_x-men_214","credits":["Barry Windsor-Smith","Ann Nocenti","Chris Claremont","Bob Wiacek","Terry Kavanagh"],"i":3356},{"year":1987,"characters":["Brightwind","Cannonball","Cypher","Karma","Magik","Magma","Magus (Technarchy)","Mirage (Dani Moonstar)","Moira MacTaggert","S'ym","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #47","link":"new_mutants_47","credits":["Butch Guice","Ann Nocenti","Chris Claremont","Kyle Baker","Terry Kavanagh"],"i":3357},{"year":1987,"characters":["Bill Clayton","Cloak","Dagger","Dr. Doom","Predator","Zarrko the Tomorrow Man"],"name":"Cloak and Dagger #10","link":"cloak_and_dagger_10","credits":["Bill Mantlo","Terry Austin","Joanne Spaldo","Carl Potts","Bret Blevins"],"i":3358},{"year":1986,"characters":["Captain America","Nomad","Slug (Crimelord)","Vagabond"],"name":"Captain America #325","link":"captain_america_325","credits":["Don Daley","David Wohl","Paul Neary","Mark Gruenwald","John Beatty"],"i":3359},{"year":1988,"characters":["Dazzler","Frenchie","Moon Knight","Rogue","Spence Kodiak"],"name":"Marvel Fanfare #38","link":"marvel_fanfare_38","credits":["Mary Jo Duffy","Al Milgrom","Bill Sienkiewicz","Terry Austin","Judith Hunt","Colleen Doran"],"i":3360},{"year":1987,"characters":["Bambi","Black Cat","Candy","Foreigner","Gauntlet (Alfredo Morelli)","Mary Jane Watson","Randi","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #123","link":"peter_parker_the_spectacular_s_88","credits":["Peter David","Jim Salicrup","Art Nichols","Adam Blaustein","Dwayne Turner"],"i":3361},{"year":1987,"characters":["Aurora","Black King (Sebastian Shaw)","Box","Doug Thompson","Madison Jeffries","Manikin","Mesmero","Northstar","Persuasion","Pestilence (Alpha Flight villain)","Puck","Sasquatch","Scramble","Shaman","Smart Alec","Snowbird","Vindicator (Heather Hudson)"],"name":"Alpha Flight #43-44","link":"alpha_flight_43-44","credits":["Carl Potts","Bill Mantlo","Whilce Portacio","David Ross"],"i":3362},{"year":1987,"characters":["Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mephisto","Mr. Fantastic","She-Hulk","Thing"],"name":"Mephisto vs.... #1","link":"mephisto_vs_1","credits":["Ralph Macchio","Al Milgrom","John Buscema","Roger Stern","Bob Wiacek"],"i":3363},{"year":1987,"characters":["Angel","Beast","Cyclops","Human Torch","Iceman","Invisible Woman","Jean Grey","Mephisto","Mr. Fantastic","Thing"],"name":"Mephisto vs.... #2","link":"mephisto_vs_2","credits":["Ralph Macchio","Al Milgrom","John Buscema","Louise Simonson","Bob Wiacek"],"i":3364},{"year":1988,"characters":["Angel"],"name":"Marvel Fanfare #40 (Angel)","link":"marvel_fanfare_40_angel","credits":["Ann Nocenti","Al Milgrom","David Mazzucchelli"],"i":3365},{"year":1987,"characters":["Cyclops","Dazzler","Human Torch","Invisible Woman","Jean Grey","Longshot","Mephisto","Mr. Fantastic","Psylocke","Rogue","Storm","Thing","Wolverine"],"name":"Mephisto vs.... #3","link":"mephisto_vs_3","credits":["Al Milgrom","Ralph Macchio","John Buscema"],"i":3366},{"year":1987,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","She-Hulk","Spider-Man","Thing","Wyatt Wingfoot"],"name":"Fantastic Four #299","link":"fantastic_four_299","credits":["John Buscema","Don Daley","Sal Buscema","David Wohl","Roger Stern"],"i":3367},{"year":1989,"characters":["Crystal","Invisible Woman","Lockjaw","Mr. Fantastic","Uatu the Watcher"],"name":"Fantastic Four annual #22 (Watcher)","link":"fantastic_four_annual_22_watch","credits":["Mike DeCarlo","Mark Gruenwald","Tom Morgan"],"i":3368},{"year":1987,"characters":["Aunt May","Spider-Man"],"name":"Web of Spider-Man #25","link":"web_of_spider-man_25","credits":["Larry Lieber","Vincent Colletta","Adam Blaustein","Jim Salicrup"],"i":3369},{"year":1987,"characters":["Dr. Doom","Dragon Man","Franklin Richards","Human Torch","Invisible Woman","Joe 'Robbie' Robertson","Lyja the Lazerfist","Mad Thinker","Mr. Fantastic","Puppet Master","She-Hulk","Thing","Wizard","Wyatt Wingfoot"],"name":"Fantastic Four #300","link":"fantastic_four_300","credits":["Daryl Edelman","John Buscema","Don Daley","Sal Buscema","Roger Stern"],"i":3370},{"year":1989,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Sub-Mariner","Thing"],"name":"Marvel Fanfare #43","link":"marvel_fanfare_43","credits":["Bill Mantlo","<em>Human Torch<","P. Craig Russell","<b>Title:","\"Death in a vacuum!\"","Al Milgrom","<b>Credits:","em>","Greg Brooks","Mike Mignola"],"i":3371},{"year":1989,"characters":["Human Torch","Invisible Woman","Mad Thinker","Mr. Fantastic","Thing"],"name":"Marvel Fanfare #46","link":"marvel_fanfare_46","credits":["Al Milgrom","Danny Fingeroth","Tod Smith","Louis Williams","Bob Wiacek","Mike Barr"],"i":3372},{"year":1987,"characters":["Hulk"],"name":"Hulk #328","link":"hulk_328","credits":["Peter David","Bob Harras","Bobbie Chase","Tony DeZuniga","Dwayne Turner"],"i":3373},{"year":1987,"characters":["Champion","Galactus","Invisible Woman","Mr. Fantastic","Nova (Frankie Raye)","She-Hulk","Silver Surfer","Thing"],"name":"Silver Surfer #1","link":"silver_surfer_1_2","credits":["Michael Higgins","Michael Rockwitz","Marshall Rogers","Josef Rubinstein","Steve Englehart"],"i":3374},{"year":1987,"characters":["Angel","Ape (Morlock)","Artie Maddicks","Beast","Boom Boom","Caliban","Cameron Hodge","Cyclops","Jean Grey","Leech","Masque","Master Mold","Rusty Collins","Skids"],"name":"X-Factor #13","link":"x-factor_13","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Dan Green"],"i":3375},{"year":1987,"characters":["Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mad Thinker","Mr. Fantastic","Thing","Wizard","Wyatt Wingfoot"],"name":"Fantastic Four #301","link":"fantastic_four_301","credits":["Daryl Edelman","John Buscema","Don Daley","Tom DeFalco","Sal Buscema","Roger Stern"],"i":3376},{"year":1987,"characters":["Armand Martel","Betty Ross","Clay Quartermain","Doc Samson","Hideko Takata","Hulk","Nevermind","Redeemer","Rick Jones","Rock"],"name":"Hulk #329","link":"hulk_329","credits":["Bobbi Chase","Al Milgrom","Bob Harras","Dan Bulanadi"],"i":3377},{"year":1987,"characters":["Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Thing"],"name":"Fantastic Four #302","link":"fantastic_four_302","credits":["Daryl Edelman","John Buscema","Don Daley","Tom DeFalco","Sal Buscema","Roger Stern"],"i":3378},{"year":1987,"characters":["Armand Martel","Betty Ross","Clay Quartermain","Doc Samson","Gaffer (SHIELD Scientist)","General 'Thunderbolt' Ross","Hideko Takata","Hulk","Nevermind","Redeemer","Rick Jones","Rock"],"name":"Hulk #330","link":"hulk_330","credits":["Todd McFarlane","Al Milgrom","Bob Harras"],"i":3379},{"year":1987,"characters":["Acroyear","Bug","Cannonball","Carol Danvers","Ch'od","Commander Arcturus Rann","Corsair","Cr'reee","Cypher","Fireflyte III","Hepzibah","Karma","Lilandra","Magma","Magneto","Magus (Technarchy)","Marionette","Mirage (Dani Moonstar)","Professor X","Raza Longknife","S'ym","Sikorsky","Stevie Hunter","Sunspot","Waldo","Warlock","Wolfsbane"],"name":"New Mutants #48-50","link":"new_mutants_48-50","credits":["Butch Guice","P. Craig Russell","Ann Nocenti","Chris Claremont","Val Mayerik","John Beatty","Bret Blevins"],"i":3380},{"year":1987,"characters":["Franklin Richards","Invisible Woman","Mr. Fantastic","Thing","Thundra"],"name":"Fantastic Four #303","link":"fantastic_four_303","credits":["Daryl Edelman","John Buscema","Don Daley","Roy Thomas","Romeo Tanghal"],"i":3381},{"year":1987,"characters":["Armand Martel","Betty Ross","Clay Quartermain","Doc Samson","Hideko Takata","Hulk","Leader","Ramon (Betty Ross' boyfriend)","Redeemer","Rick Jones","Rock"],"name":"Hulk #331-333","link":"hulk_331-333","credits":["Todd McFarlane","Peter David","Pablo Marcos","Bob Harras","Fred Fredericks","Kim DeMulder","Bobbie Chase"],"i":3382},{"year":1987,"characters":["Butte","Cactus","Dominus","Firebird","Franklin Richards","Frenchie","Gila","Hawkeye","Henry Pym","Invisible Woman","Iron Man","Mockingbird","Moon Knight","Mr. Fantastic","Rover (Pym's ship)","Sunstroke","Thing","Tigra","Wasp","Wonder Man"],"name":"West Coast Avengers #17-24","link":"west_coast_avengers_17-24","credits":["Al Milgrom","Joe Sinnott","Gregory Wright","Steve Englehart","Mike Machlan","Mark Gruenwald","Kim DeMulder","Romeo Tanghal"],"i":3383},{"year":1987,"characters":["Captain America","Dr. Faustus","Red Skull"],"name":"Captain America #326","link":"captain_america_326","credits":["Daryl Edelman","Don Daley","Keith Williams","Paul Neary","Mark Gruenwald","John Beatty"],"i":3384},{"year":1987,"characters":["Arranger","Arthur Chekov","Aunt May","Ben Urich","Black Cat","Daredevil","Dina (Richard Fisk's girlfriend)","Falcon","Flash Thompson","Gauntlet (Alfredo Morelli)","Gladiator","Hammerhead","Harriet Rose Palermo","Hobgoblin (Roderick Kingsley)","Jason Macendale","Johnston (Rose minion)","Karen Page","Kingpin","Lance Bannon","Mary Jane Watson","Ned Leeds","Punisher","Redwing","Richard Fisk","Sgt. Tork","Spider-Man","Vanessa Fisk","Varley (Rose minion)","Victor Palermo"],"name":"Amazing Spider-Man #287-288","link":"amazing_spider-man_287-288","credits":["Christopher Priest","Erik Larsen","Art Nichols","Alan Kupperberg","Jim Salicrup","Jim Fern","Adam Blaustein"],"i":3385},{"year":1987,"characters":["Atha Williams","Clytemnestra Erwin","Iron Man","Senator Boyton","Valdemar Tykkio","War Machine","Yorgon Tykkio"],"name":"Iron Man #215-216","link":"iron_man_215-216","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3386},{"year":1987,"characters":["Angel","Beast","Boom Boom","Cyclops","Iceman","Jean Grey","Master Mold","Rusty Collins","Skids","Trish Tilby"],"name":"X-Factor #14","link":"x-factor_14","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3387},{"year":1987,"characters":["Battlestar","Bernie Rosenthal","Captain America","Ethan Thurm","Left-Winger","Right-Winger","USAgent"],"name":"Captain America #327","link":"captain_america_327","credits":["Donald Daley","Daryl Edelman","Paul Neary","Mark Gruenwald","John Beatty"],"i":3388},{"year":1987,"characters":["Bill Clayton","Cloak","Dagger"],"name":"Cloak and Dagger #11","link":"cloak_and_dagger_11","credits":["Bill Mantlo","Terry Austin","Carl Potts","Randy Emberlin","June Brigman","Larry Stroman"],"i":3389},{"year":1987,"characters":["Aunt May","Bulldozer","Mike Clemson","Piledriver","Rachel Carpenter","Spider-Man","Spider-Woman (Julia Carpenter)","Thunderball","Wrecker"],"name":"Peter Parker, the Spectacular Spider-Man #125-126","link":"peter_parker_the_spectacular_s_89","credits":["Art Nichols","Alan Kupperberg","Jim Mooney","Danny Fingeroth","Co.","Jim Salicrup","Vincent Colletta"],"i":3390},{"year":1987,"characters":["Clea","Cloak","Dagger","Dr. Strange","Khat","Nightmare","Phillip Carlisle","Predator","Rintrah","Sara Wolfe","Topaz","Wong"],"name":"Strange Tales #1-3","link":"strange_tales_1-3","credits":["Bill Mantlo","<b>Title:","\"Goodbye to all that!\"","Chris Warner","<em>Doctor Strange<","\"The world well lost for love--!\"","Carl Potts","em>","Randy Emberlin","Al Williamson","Peter Gillis","\"And have not charity...\"","Bret Blevins"],"i":3391},{"year":1987,"characters":["Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #28","link":"web_of_spider-man_28","credits":["Vincent Colletta","Jim Salicrup","Bob Layton","Steve Geiger"],"i":3392},{"year":1991,"characters":["Thing","Thunderball","Wrecker"],"name":"Fantastic Four #355","link":"fantastic_four_355","credits":["Al Milgrom","Ralph Macchio","Danny Fingeroth"],"i":3393},{"year":1987,"characters":["Atha Williams","Iron Man","Justin Hammer","Marcy Pearson","War Machine"],"name":"Iron Man #217","link":"iron_man_217","credits":["David Micheline","M.D. Bright","Gregory Wright","Bob Layton","Mark Gruenwald"],"i":3394},{"year":1988,"characters":["Cloak","Dagger","Father Delgado","Predator"],"name":"Cloak and Dagger: Predator and Prey (Marvel Graphic Novel #34)","link":"marvel_graphic_novel_34_cloak_","credits":["Carl Potts","Bill Mantlo","Al Williamson","Larry Stroman"],"i":3395},{"year":1987,"characters":["Angel","Ape (Morlock)","Apocalypse","Artie Maddicks","Beast","Boom Boom","Caliban","Cyclops","Erg","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","Leech","Masque","Pestilence (Horseman of Apocalypse)","Rusty Collins","Ship (Prosh)","Skids","Tarbaby","War (Horseman of Apocalypse)"],"name":"X-Factor #15","link":"x-factor_15","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3396},{"year":1987,"characters":["Balder","Beast","Enchantress","Fandral","Grendel","Grundroth","Gudrun","Heimdall","Hildy","Hogun","Iceman","Kevin Mortensen","Loki","Mick Mortensen","Sif","Thor","Ularic","Volstagg","Wormwood"],"name":"Thor #377-378","link":"thor_377-378","credits":["Craig Anderson","Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3397},{"year":1987,"characters":["Artie Maddicks","Boom Boom","Cameron Hodge","Cyclops","Emma LaPorte","Jean Grey","Masque","Rusty Collins","Skids"],"name":"X-Factor #16","link":"x-factor_16","credits":["Bob Harras","Louise Simonson","Josef Rubinstein","David Mazzucchelli"],"i":3398},{"year":1993,"characters":["Black Widow","Daredevil","Nick Fury"],"name":"Daredevil/Black Widow: Abattoir","link":"daredevilblack_widow_abattoir","credits":["Rob Tokar","Joe Chiodo","Gregory Wright","Jim Starlin"],"i":3399},{"year":1987,"characters":["Angel","Apocalypse","Ariel (Fallen Angel)","Artie Maddicks","Beast","Boom Boom","Caliban","Cameron Hodge","Cyclops","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","Leech","Pestilence (Horseman of Apocalypse)","Rictor","Rusty Collins","Ship (Prosh)","Skids","Thor","Trish Tilby","War (Horseman of Apocalypse)"],"name":"X-Factor #17","link":"x-factor_17","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3400},{"year":1987,"characters":["Cloak","Dagger","Dr. Strange","Nightmare","Rintrah"],"name":"Strange Tales #4","link":"strange_tales_4","credits":["Bill Mantlo","<b>Title:","Chris Warner","<em>Doctor Strange<","\"Perchance to dream!\"","Carl Potts","em>","Randy Emberlin","Peter Gillis","Bret Blevins"],"i":3401},{"year":1987,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Dr. Druid","Hercules","Jarvis","Raymond Sikorski","She-Hulk","Thor","Tyrak","Wasp"],"name":"Avengers #278","link":"avengers_278","credits":["John Buscema","Gregory Wright","Tom Palmer","Roger Stern","Mark Gruenwald"],"i":3402},{"year":1987,"characters":["Franklin Richards","Human Torch","Invisible Woman","Kristoff","Lyja the Lazerfist","Mr. Fantastic","Quicksilver","Sergius O'Hoolihan","Thing"],"name":"Fantastic Four #304","link":"fantastic_four_304","credits":["Daryl Edelman","Joe Sinnott","John Buscema","Don Daley","Steve Englehart"],"i":3403},{"year":1987,"characters":["Andromeda","Cloak","Dagger","Dr. Strange","Interloper","Manslaughter","Nightmare","Predator","Rintrah","Valkyrie"],"name":"Strange Tales #5-7","link":"strange_tales_5-7","credits":["Bill Mantlo","<b>Title:","\"Returning!\"","Terry Shoemaker","<em>Doctor Strange<","Larry Alexander","Carl Potts","em>","Randy Emberlin","Gerry Talaoc","\"The snows of yesteryear\"","Peter Gillis","Bob Wiacek","\"More light!\"","Bret Blevins"],"i":3404},{"year":1987,"characters":["Aurora","Box","Doug Thompson","Hodiak","Madison Jeffries","Manikin","Nelvanna","Northstar","Persuasion","Pestilence (Alpha Flight villain)","Puck","Sasquatch","Scramble","Shaman","Smart Alec","Snowbird","Turoq","Vindicator (Heather Hudson)"],"name":"Alpha Flight #45","link":"alpha_flight_45","credits":["Whilce Portacio","Bill Mantlo","June Brigman","Carl Potts"],"i":3405},{"year":1987,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Dr. Druid","Frank Rambeau","Hercules","Hermes","Maria Rambeau","Moonstone (Karla Sofen)","She-Hulk","Thor"],"name":"Avengers #279","link":"avengers_279","credits":["John Buscema","Gregory Wright","Tom Palmer","Roger Stern","Mark Gruenwald"],"i":3406},{"year":1987,"characters":["Irina Tarasova","Iron Man"],"name":"Iron Man #218","link":"iron_man_218","credits":["Mark Gruenwald","Bob Layton","Gregory Wright","David Michelinie"],"i":3407},{"year":1987,"characters":["Ben Urich","Daredevil","Karen Page","Kate Cushing"],"name":"Daredevil #242","link":"daredevil_242","credits":["Ralph Macchio","Craig Anderson","Ann Nocenti","Dan Bulanadi","Keith Pollard"],"i":3408},{"year":1987,"characters":["Aurora","Box","Madison Jeffries","Manikin","Northstar","Persuasion","Puck","Sasquatch","Scramble","Vindicator (Heather Hudson)"],"name":"Alpha Flight #46","link":"alpha_flight_46","credits":["Bill Mantlo","Whilce Portacio","Joanne Spaldo","Carl Potts","June Brigman"],"i":3409},{"year":1987,"characters":["Iron Man","Jarvis"],"name":"Avengers #280","link":"avengers_280","credits":["Bob Hall","Bob Harras","Gregory Wright","Kyle Baker","Mark Gruenwald"],"i":3410},{"year":1989,"characters":["Captain Marvel (Monica Rambeau)","Human Torch","Invisible Woman","Mickey Souris","Scarlet Witch","She-Hulk","Thing","Tigra","Wasp","Wyatt Wingfoot"],"name":"She-Hulk: Ceremony #1-2","link":"she-hulk_ceremony_1-2","credits":["Stan Drake","Dwayne McDuffie","Gary Barnum","June Brigman","Robin Chaplik","Bobbie Chase"],"i":3411},{"year":1987,"characters":["Abe Zimmer","Atha Williams","Bertram Hindel","Ghost","Iron Man","War Machine"],"name":"Iron Man #219-221","link":"iron_man_219-221","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3412},{"year":1987,"characters":["Vindicator (Heather Hudson)"],"name":"Alpha Flight #47","link":"alpha_flight_47","credits":["E. Craig Brasfield","Bill Mantlo","Whilce Portacio","Terry Austin","Steve Purcell","Carl Potts","Mike Mignola"],"i":3413},{"year":1987,"characters":["Daredevil","Karen Page","Mambo","Nameless One (Voodoo Guy)"],"name":"Daredevil #243-244","link":"daredevil_243-244","credits":["Ralph Macchio","Ann Nocenti","Dan Bulanadi","Louis Williams","Al Williamson","Tony DeZuniga"],"i":3414},{"year":1987,"characters":["Apollo","Ares","Athena","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Cerberus (Greek myth)","Dionysius","Dr. Druid","Eros","Hephaestus","Hera","Hercules","Hermes","Marrina","Neptune","Pluto","Prometheus","She-Hulk","Sub-Mariner","Thor","Venus","Wasp","Zeus"],"name":"Avengers #281-285","link":"avengers_281-285","credits":["John Buscema","Gregory Wright","Tom Palmer","Roger Stern","Mark Gruenwald"],"i":3415},{"year":1987,"characters":["Balder","Beast","Destroyer (Asgardian armor)","Enchantress","Fandral","Grundroth","Heimdall","Hildy","Huginn","Iceman","Kevin Mortensen","Kurse","Loki","Mick Mortensen","Midgard Serpent","Muninn","Rusty Collins","Sif","Thor"],"name":"Thor #379-380","link":"thor_379-380","credits":["Craig Anderson","Walt Simonson","Sal Buscema","Ralph Macchio"],"i":3416},{"year":1987,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Dazzler","Dr. Druid","Hawkeye","Hela","Iron Man","Living Tribunal","Longshot","Mephisto","Mockingbird","Psylocke","Rogue","She-Hulk","Storm","Thor","Tigra","Wolverine","Wonder Man"],"name":"Mephisto vs.... #4","link":"mephisto_vs_4","credits":["Ralph Macchio","Al Milgrom","Walt Simonson","John Buscema","Steve Englehart","Bob Wiacek"],"i":3417},{"year":1987,"characters":["Balder","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Destroyer (Asgardian armor)","Dr. Druid","Executioner","Garm","Grundroth","Gudrun","Hawkeye","Hela","Hildy","Huginn","Iron Man","Kevin Mortensen","Kurse","Loki","Mephisto","Mick Mortensen","Mockingbird","Modgud","Muninn","She-Hulk","Thor","Tigra","Utgard-Loki","Volstagg","Wonder Man"],"name":"Thor #381-382","link":"thor_381-382","credits":["Ralph Macchio","Craig Anderson","Walt Simonson","Joe Sinnott","Sal Buscema"],"i":3418},{"year":1987,"characters":["Callisto","Colossus","Crimson Commando","Dazzler","Longshot","Madelyne Pryor","Moira MacTaggert","Nightcrawler","Psylocke","Rogue","Shadowcat (Kitty Pryde)","Stonewall","Storm","Super Sabre","Wolverine"],"name":"Uncanny X-Men #215-216","link":"uncanny_x-men_215-216","credits":["Butch Guice","Ann Nocenti","Chris Claremont","Alan Davis","Terry Kavanagh","Dan Green"],"i":3419},{"year":1987,"characters":["Banshee","Black Tom","Callisto","Dazzler","Havok","Juggernaut","Longshot","Moira MacTaggert","Polaris","Psylocke","Rogue","Sharon Friedlander"],"name":"Uncanny X-Men #217-218","link":"uncanny_x-men_217-218","credits":["Butch Guice","Marc Silvestri","Stephen Leialoha","Ann Nocenti","Chris Claremont","Dan Green"],"i":3420},{"year":1987,"characters":["Enchantress","Lorelei (Norse Goddess)"],"name":"Thor #383","link":"thor_383","credits":["Tom DeFalco","Ron Frenz","Brett Breeding","Ralph Macchio"],"i":3421},{"year":1987,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Cannonball","Carol Danvers","Ch'od","Corsair","Cypher","Hepzibah","Karma","Lilandra","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Professor X","Raza Longknife","Sikorsky","Storm","Sunspot","Tessa","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #51","link":"new_mutants_51","credits":["Ann Nocenti","Kevin Nowlan","Chris Claremont"],"i":3422},{"year":1987,"characters":["Arclight","Callisto","Dazzler","Havok","Longshot","Magneto","Malice (Marauder)","Polaris","Psylocke","Rogue","Sabretooth","Scalphunter","Storm","White Queen (Emma Frost)"],"name":"Uncanny X-Men #219","link":"uncanny_x-men_219","credits":["Ann Nocenti","Dan Green","Chris Claremont","Bret Blevins"],"i":3423},{"year":1987,"characters":["Colossus","Dazzler","Dr. Doom","Franklin Richards","Havok","Human Torch","Invisible Woman","Lockheed","Longshot","Lyja the Lazerfist","Magneto","Moira MacTaggert","Mr. Fantastic","Nightcrawler","Psylocke","Rogue","Shadowcat (Kitty Pryde)","Sharon Friedlander","She-Hulk","Storm","Thing","Wolverine"],"name":"Fantastic Four vs. X-Men #1-4","link":"fantastic_four_vs_x-men_1-4","credits":["Ann Nocenti","Terry Austin","Jon Bogdanove","Chris Claremont"],"i":3424},{"year":1987,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Crimson Dynamo V","Darkstar","Dazzler","Dr. Druid","Gabrielle Haller","Gremlin","Havok","Jim Jaspers","Longshot","Magneto","Psylocke","Rogue","She-Hulk","Storm","Thor","Ursa Major","Vanguard","Wolverine"],"name":"X-Men vs. the Avengers #1-4","link":"x-men_vs_the_avengers_1-4","credits":["Al Milgrom","Marc Silvestri","Mark Gruenwald","Tom DeFalco","Josef Rubinstein","Bob McLeod","Ann Nocenti","Roger Stern","Al Williamson","Jim Shooter","Keith Pollard"],"i":3425},{"year":1989,"characters":["Dr. Doom","Magneto"],"name":"X-Factor annual #4 (Magneto)","link":"x-factor_annual_4_magneto","credits":["John Byrne","Bob Harras","Ralph Macchio"],"i":3426},{"year":1987,"characters":["Cannonball","Cypher","Impossible Man","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants annual #3","link":"new_mutants_annual_3","credits":["Ann Nocenti","Alan Davis","Chris Claremont","Paul Neary"],"i":3427},{"year":1987,"characters":["Brightwind","Cannonball","Cypher","Karma","Magik","Magma","Magneto","Mirage (Dani Moonstar)","S'ym","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #52","link":"new_mutants_52","credits":["Ann Nocenti","Chris Claremont","Rick Leonardi","Terry Kavanagh","Dan Green"],"i":3428},{"year":1987,"characters":["Ariel (Fallen Angel)","Beast","Boom Boom","Cannonball","Chance (Fallen Angel)","Cypher","Devil Dinosaur","Gomi","Iceman","Karma","Madrox the Multiple Man","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Moira MacTaggert","Moonboy","Siryn","Sunspot","Vanisher","Warlock","Wolfsbane"],"name":"Fallen Angels #1-8","link":"fallen_angels_1-8","credits":["Mary Jo Duffy","Ann Nocenti","Tom Palmer","Joe Staton","Kerry Gammill","Val Mayerik","Tony DeZuniga","Marie Severin"],"i":3429},{"year":1987,"characters":["Crystal","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Kristoff","Lyja the Lazerfist","Mr. Fantastic","Quicksilver","Thing"],"name":"Fantastic Four #305","link":"fantastic_four_305","credits":["Ralph Macchio","Craig Anderson","Joe Sinnott","John Buscema","Steve Englehart"],"i":3430},{"year":1987,"characters":["Crystal","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Kristoff","Mephisto","Mr. Fantastic","Quicksilver","Thing","Zarrko the Tomorrow Man"],"name":"Fantastic Four annual #20","link":"fantastic_four_annual_20","credits":["Steve Englehart","Paul Neary","Tony DeZuniga","Ralph Macchio"],"i":3431},{"year":2000,"characters":["Cannonball","Magik","Magneto","S'ym"],"name":"Marvel Super Heroes #1 (Magik)","link":"marvel_super_heroes_1_magik","credits":["Rodney Ramos","Sue Flaxman","Pat Breeding"],"i":3432},{"year":1987,"characters":["Captain Britain","Dazzler","Havok","Longshot","Meggan","Psylocke","Rogue","Storm","Wolverine"],"name":"Uncanny X-Men annual #11","link":"uncanny_x-men_annual_11","credits":["Ann Nocenti","Alan Davis","Chris Claremont","Paul Neary"],"i":3433},{"year":1987,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Cannonball","Catseye","Cypher","Empath","Jetstream","Karma","Madame Hydra (Viper)","Magik","Magma","Magneto","Mirage (Dani Moonstar)","Roulette","Silver Samurai","Tarot","Tessa","Warpath","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #53-54","link":"new_mutants_53-54","credits":["Ann Nocenti","Terry Austin","Chris Claremont","Sal Buscema","Rick Leonardi"],"i":3434},{"year":1987,"characters":["Aunt May","Harriet Rose Palermo","Havok","J. Jonah Jameson","Kate Cushing","Mary Jane Watson","Nate Lubenski","Ned Leeds","Spider-Man","Storm","Victor Palermo","Wolverine"],"name":"Spider-Man vs. Wolverine #1","link":"spider-man_vs_wolverine_1","credits":["Ann Nocenti","M.D. Bright","Al Williamson","Christopher Priest"],"i":3435},{"year":1987,"characters":["Ben Urich","Betty Brant","Black Cat","Blake Tower","Flash Thompson","Foreigner","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Johnston (Rose minion)","Joy Mercado","Lance Bannon","Marla Madison Jameson","Ned Leeds","Richard Fisk","Sharon Banks","Spider-Man","Varley (Rose minion)"],"name":"Amazing Spider-Man #289","link":"amazing_spider-man_289","credits":["Peter David","Jim Salicrup","Alan Kupperberg","Jim Fern","Tom Morgan"],"i":3436},{"year":1987,"characters":["Arranger","Betty Brant","Daniel Kingsley","Dina (Richard Fisk's girlfriend)","Foreigner","Gauntlet (Alfredo Morelli)","Hobgoblin (Roderick Kingsley)","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Johnston (Rose minion)","Joy Mercado","Kingpin","Lance Bannon","Marla Madison Jameson","Mary Jane Watson","Ned Leeds","Richard Fisk","Spider-Man","Varley (Rose minion)","Wolverine"],"name":"Web of Spider-Man #29","link":"web_of_spider-man_29","credits":["Jim Salicrup","Steve Geiger","Art Nichols","Christopher Priest"],"i":3437},{"year":1987,"characters":["Dina (Richard Fisk's girlfriend)","Gauntlet (Alfredo Morelli)","Kingpin","Richard Fisk","Spider-Man"],"name":"Web of Spider-Man #30","link":"web_of_spider-man_30","credits":["Christopher Priest","Jim Salicrup","Jim Fern","and Keith Williams","Jack Abel","Kyle Baker","Steve Geiger"],"i":3438},{"year":1987,"characters":["Billy Connors","Lizard","Martha Connors","Owl","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #127","link":"peter_parker_the_spectacular_s_90","credits":["Jim Salicrup","Alan Kupperberg","Co.","Adam Blaustein","Len Kaminski"],"i":3439},{"year":1987,"characters":["Bambi","Betty Brant","Black Cat","Candy","Daredevil","Flash Thompson","Foreigner","J. Jonah Jameson","Mary Jane Watson","Randi","Sgt. Tork","Silver Sable","Sin-Eater","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man #128-129","link":"peter_parker_the_spectacular_s_91","credits":["Peter David","Jim Salicrup","Alan Kupperberg"],"i":3440},{"year":1988,"characters":["Fear Eater","Silver Surfer"],"name":"Marvel Comics Presents #1 (Silver Surfer)","link":"marvel_comics_presents_1_silve","credits":["Al Milgrom","Michael Rockwitz","Terry Kavanagh"],"i":3441},{"year":1987,"characters":["Punisher"],"name":"Punisher #1-2","link":"punisher_1-2","credits":["Mike Baron","Carl Potts","Klaus Janson"],"i":3442},{"year":1987,"characters":["Alistair Smythe","Aunt May","Gayle Watson Byrnes","J. Jonah Jameson","Kate Cushing","Kevin Byrnes","Mary Jane Watson","Philip Watson","Spider-Man","Tommy Byrnes"],"name":"Amazing Spider-Man #290-292","link":"amazing_spider-man_290-292","credits":["John Romita Jr.","Jim Salicrup","Alex Saviuk","David Michelinie","Vincent Colletta"],"i":3443},{"year":1987,"characters":["Black Panther","Daredevil","M'Koni (Mary) Wheeler","Wheeler"],"name":"Daredevil #245","link":"daredevil_245","credits":["Ann Nocenti","Chuck Patton","Tony DeZuniga","Ralph Macchio"],"i":3444},{"year":1987,"characters":["Armand Martel","Betty Ross","Clay Quartermain","Doc Samson","Half-Life (Hulk villain)","Hideko Takata","Hulk","Leader","Ramon (Betty Ross' boyfriend)","Redeemer","Rick Jones","Rock"],"name":"Hulk #334","link":"hulk_334","credits":["Todd McFarlane","Peter David","Jim Sanders III","Bob Harras","Bobbie Chase"],"i":3445},{"year":1987,"characters":["Aunt May","Aunt Watson","Ben Urich","Betty Brant","Doctor Octopus","Electro","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Marla Madison Jameson","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man annual #21","link":"amazing_spider-man_annual_21","credits":["Jim Salicrup","Paul Ryan","David Michelinie","Jim Shooter","Vincent Colletta"],"i":3446},{"year":1987,"characters":["Joseph Threetrees","Mary Jane Watson","Puma","Shaman (Puma's uncle)","Spider-Man"],"name":"Peter Parker, the Spectacular Spider-Man annual #7","link":"peter_parker_the_spectacular_s_92","credits":["Christopher Priest","Al Milgrom","Jim Salicrup","Alan Kupperberg","Jim Fern"],"i":3447},{"year":1987,"characters":["Aurora","Box","Breakdown","Freakout","Goblyn","Janus (Deranger)","Madison Jeffries","Manikin","Northstar","Pathway","Persuasion","Puck","Sasquatch","Scramble","Vindicator (Heather Hudson)"],"name":"Alpha Flight #48-49","link":"alpha_flight_48-49","credits":["Bill Mantlo","Whilce Portacio","Stephen Leialoha","Joanne Spaldo","Carl Potts","June Brigman","Hilary Barta","Terry Shoemaker"],"i":3448},{"year":1987,"characters":["Al'arkok","Ptakar","Shalla Bal","Silver Surfer"],"name":"Silver Surfer #2","link":"silver_surfer_2_1","credits":["Michael Higgins","Michael Rockwitz","Marshall Rogers","Josef Rubinstein","Steve Englehart"],"i":3449},{"year":1987,"characters":["Chance (Nicholas Powell)","Daredevil"],"name":"Daredevil #246","link":"daredevil_246","credits":["Ralph Macchio","Tom Morgan","Tony DeZuniga","Christopher Priest"],"i":3450},{"year":1987,"characters":["Hulk"],"name":"Hulk #335","link":"hulk_335","credits":["John Ridgway","Bobbie Chase","Peter David","Bob Harras"],"i":3451},{"year":1987,"characters":["Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Collector","Death","Dr. Druid","Firebird","Grandmaster","Hawkeye","Henry Pym","Iron Man","Mockingbird","Moon Knight","She-Hulk","Silver Surfer","Thor","Tigra","Wasp","Wonder Man"],"name":"West Coast Avengers annual #2","link":"west_coast_avengers_annual_2","credits":["Steve Englehart","Mark Gruenwald","Tom DeFalco","Al Milgrom"],"i":3452},{"year":1987,"characters":["Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Death","Dr. Druid","Grandmaster","Hawkeye","Henry Pym","Iron Man","Mockingbird","Moon Knight","She-Hulk","Silver Surfer","Thor","Tigra","Wasp"],"name":"Avengers annual #16","link":"avengers_annual_16","credits":["Bob Hall","Butch Guice","John Romita Jr.","Bill Sienkiewicz","Mark Gruenwald","Tom DeFalco","Marshall Rogers","Ron Frenz","Kevin Nowlan","Tom Palmer","Al Williamson","Bob Layton","Keith Pollard","Bob Wiacek"],"i":3453},{"year":1987,"characters":["Al'arkok","Champion","Collector","Firebird","Mantis","Matani","Ptakar","Runner","Silver Surfer"],"name":"Silver Surfer #3","link":"silver_surfer_3_1","credits":["Steve Englehart","Marshall Rogers","Josef Rubinstein","Michael Higgins"],"i":3454},{"year":1987,"characters":["Abomination","Christina Carson","Firebird","Frenchie","Hawkeye","Henry Pym","Iron Man","Mockingbird","Moon Knight","Tyrannus","Wonder Man"],"name":"West Coast Avengers #25","link":"west_coast_avengers_25","credits":["Al Milgrom","Gregory Wright","Steve Englehart","Mike Machlan","Mark Gruenwald"],"i":3455},{"year":1987,"characters":["Birdbrain","Cannonball","Cypher","Lila Cheney","Magik","Magneto","Mirage (Dani Moonstar)","Wolfsbane"],"name":"New Mutants #55","link":"new_mutants_55","credits":["Ann Nocenti","Louise Simonson","Tery Austin","Bret Blevins"],"i":3456},{"year":1987,"characters":["Brie Daniels","Force","Garrison Quint","Iron Man","Marcy Pearson","Mrs. Arbogast","War Machine"],"name":"Iron Man #222","link":"iron_man_222","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3457},{"year":1987,"characters":["Adrian Sammish","Bludgeon","Brothers Grimm III","Captain America","Captain Marvel (Monica Rambeau)","Curtiss Jackson (Power Broker)","D-Man","Dansen Macabre","Digger (Night Shift)","Douglas Rockwell","Elwood McNulty","General Lewis Haywerth","George Mathers","Gypsy Moth","Jake Farber","Karl Malus","Mangler (Power Broker Inc)","Michael Lynch","Ms. Marvel (Sharon Ventura)","Needle","Red Zeppelin","Shroud","Tatterdemalion","Ticktock","Werewolf By Night"],"name":"Captain America #328-331","link":"captain_america_328-331","credits":["Daryl Edelman","Don Daley","Sam DeLaRosa","Paul Neary","Tom Morgan","Mark Gruenwald","Vincent Colletta"],"i":3458},{"year":1987,"characters":["Black Bolt","Crystal","Diablo","Franklin Richards","Gorgon","Human Torch","Invisible Woman","Karnak","Lockjaw","Luna","Lyja the Lazerfist","Maya (Inhuman)","Medusa","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Quicksilver","Thing"],"name":"Fantastic Four #306","link":"fantastic_four_306","credits":["Ralph Macchio","Craig Anderson","Joe Sinnott","John Buscema","Steve Englehart"],"i":3459},{"year":1987,"characters":["Angel","Apocalypse","Artie Maddicks","Beast","Caliban","Cameron Hodge","Cyclops","Iceman","Jean Grey","Leech","Rictor","Rusty Collins","Ship (Prosh)","Skids"],"name":"X-Factor #18","link":"x-factor_18","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3460},{"year":1987,"characters":["Artie Maddicks","Beast","Black Bolt","Cyclops","Energizer","Franklin Richards","Gee","Gorgon","Iceman","Iridia","Jean Grey","Karnak","Leech","Lightspeed","Lockjaw","Luna","Mass Master","Maximus","Medusa","Quicksilver","Triton"],"name":"X-Factor annual #2","link":"x-factor_annual_2","credits":["Bob Harras","Mary Jo Duffy","Tom Grindberg","Josef Rubinstein"],"i":3461},{"year":1987,"characters":["Angel","Apocalypse","Artie Maddicks","Beast","Caliban","Cameron Hodge","Cyclops","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","Leech","Pestilence (Horseman of Apocalypse)","Rictor","Rusty Collins","Ship (Prosh)","Skids","Trish Tilby","War (Horseman of Apocalypse)"],"name":"X-Factor #19-20","link":"x-factor_19-20","credits":["Walt Simonson","Bob Harras","Bobbie Chase","Randy Emberlin","June Brigman","Louise Simonson","Bob Wiacek"],"i":3462},{"year":1987,"characters":["Armand Martel","Betty Ross","Clay Quartermain","Cyclops","Doc Samson","Hideko Takata","Hulk","Iceman","Jean Grey","Ramon (Betty Ross' boyfriend)","Redeemer","Rick Jones","Rock","Skids"],"name":"Hulk #336-337","link":"hulk_336-337","credits":["Todd McFarlane","Peter David","Jim Sanders III","Bob Harras","Bobbie Chase"],"i":3463},{"year":1987,"characters":["Aurora","Black Raazer","Loki","Madison Jeffries","Manikin","Northstar","Persuasion","Puck","Sasquatch","Vindicator (Heather Hudson)"],"name":"Alpha Flight #50","link":"alpha_flight_50","credits":["Whilce Portacio","Bill Mantlo","June Brigman","Carl Potts"],"i":3464},{"year":1987,"characters":["Clay Quartermain","Hulk","Leader","Mercy","Rick Jones","Rock"],"name":"Hulk #338","link":"hulk_338","credits":["Todd McFarlane","Peter David","Jim Sanders III","Bob Harras","Bobbie Chase"],"i":3465},{"year":1993,"characters":["Inoshiro Kondo","Iron Man","Mrs. Arbogast","War Machine"],"name":"Marvel Super Heroes #15 (Iron Man)","link":"marvel_super_heroes_15_iron_ma","credits":["Ian Akin","Brian Garvey","Rob Tokar","Len Kaminski","Keith Pollard","David Anthony Kraft","Paula Foye"],"i":3466},{"year":1992,"characters":["Mary Jane Watson","Spider-Man"],"name":"Marvel Comics Presents #99 (Spider-Man)","link":"marvel_comics_presents_99_spid","credits":["Don Hudson","Susan Kennedy","Malcom Davis","Mark Powers","Terry Kavanagh","Andrew Pepoy"],"i":3467},{"year":1987,"characters":["Punisher"],"name":"Punisher #3","link":"punisher_3","credits":["Mike Baron","Carl Potts","Joanne Spaldo","Klaus Janson"],"i":3468},{"year":1987,"characters":["Adrian Sammish","Avalanche","Battlestar","Blob","Captain America","Captain Marvel (Monica Rambeau)","D-Man","Douglas Rockwell","Elwood McNulty","Ethan Thurm","Falcon","General Lewis Haywerth","George Mathers","Henry Peter Gyrich","Hiram Riddley","Holly Riddley","Inger Sullivan","Jake Farber","Left-Winger","Pyro","Right-Winger","USAgent","Valerie Cooper"],"name":"Captain America #332-333","link":"captain_america_332-333","credits":["Daryl Edelman","Don Daley","Bob McLeod","Tom Morgan","Mark Gruenwald","David Hunt"],"i":3469},{"year":1987,"characters":["Ant-Man (Scott Lang)","Beetle","Blizzard II","Force","Garrison Quint","Iron Man","Justin Hammer","Mrs. Arbogast","Rae LaCoste","Stature","War Machine","Whiplash (Blacklash)"],"name":"Iron Man #223-224","link":"iron_man_223-224","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3470},{"year":1987,"characters":["Black Widow","Daredevil","Dr. Strike"],"name":"Daredevil #247","link":"daredevil_247","credits":["Ann Nocenti","David Hunt","Keith Giffen","Ralph Macchio"],"i":3471},{"year":1987,"characters":["Iron Man","Jonas Hale","Marcy Pearson","Mrs. Arbogast","Senator Boyton","Sunturion","War Machine"],"name":"Iron Man annual #9","link":"iron_man_annual_9","credits":["Mark Gruenwald","Bob Layton","M.D. Bright","David Michelinie"],"i":3472},{"year":1987,"characters":["Birdbrain","Cannonball","Catseye","Cypher","Empath","Jetstream","Magik","Magma","Mirage (Dani Moonstar)","Roulette","Tarot","Warpath","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #56","link":"new_mutants_56","credits":["Ann Nocenti","Louise Simonson","June Brigman","Terry Austin"],"i":3473},{"year":1987,"characters":["Astronomer","Champion","Collector","Contemplator Skrull","Ego the Living Planet","Gardener","Grandmaster","Jemiah","Kylor","Mantis","Obliterator","Possessor","Ripan","Runner","Silver Surfer","Supreme Intelligence","Tar-rell","Trader"],"name":"Silver Surfer #4","link":"silver_surfer_4_1","credits":["Steve Englehart","Marshall Rogers","Josef Rubinstein","Michael Higgins"],"i":3474},{"year":1987,"characters":["Gary Cody","Madison Jeffries","Manikin","Persuasion","Sasquatch","Vindicator (Heather Hudson)"],"name":"Alpha Flight #51","link":"alpha_flight_51","credits":["Bill Mantlo","Whilce Portacio","Joanne Spaldo","Carl Potts","Jim Lee"],"i":3475},{"year":1987,"characters":["Birdbrain","Cannonball","Cypher","Magik","Magma","Magneto","Mirage (Dani Moonstar)","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #57","link":"new_mutants_57","credits":["Ann Nocenti","Louise Simonson","Terry Austin","Bret Blevins"],"i":3476},{"year":1987,"characters":["Joe 'Robbie' Robertson","Kraven the Hunter","Mary Jane Watson","Spider-Man","Vermin"],"name":"Web of Spider-Man #31, Amazing Spider-Man #293, Peter Parker, the Spectacular Spider-Man #131, Web of Spider-Man #32, Amazing Spider-Man #294, Peter Parker, the Spectacular Spider-Man #132","link":"web_of_spider-man_31amazing_sp","credits":["Bob McLeod","Mike Zeck","Jim Salicrup","J.M. DeMatteis"],"i":3477},{"year":1987,"characters":["Crystal","Diablo","Franklin Richards","Human Torch","Invisible Woman","Luna","Lyja the Lazerfist","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #307","link":"fantastic_four_307","credits":["Ralph Macchio","Joe Sinnott","John Buscema","Steve Englehart","Marc Siry"],"i":3478},{"year":2009,"characters":["Arclight","Dazzler","Harpoon","Malice (Marauder)","Mr. Sinister","Polaris","Rogue","Sabretooth","Scalphunter","Scrambler","Spider-Man","Storm","Vertigo (Savage Land Mutate)","Wolverine"],"name":"X-Men/Spider-Man #2","link":"x-menspider-man_2","credits":["Stephen Wacker","Christos Gage","Joe Quesada","Mario Alberti","Thomas Brennan"],"i":3479},{"year":1987,"characters":["Avalanche","Battlestar","Blob","Destiny","Ethan Thurm","General Lewis Haywerth","Left-Winger","Mystique","Pyro","Right-Winger","Taskmaster","USAgent","Valerie Cooper"],"name":"Captain America #334","link":"captain_america_334","credits":["Daryl Edelman","Don Daley","Tom Morgan","Mark Gruenwald","David Hunt"],"i":3480},{"year":1987,"characters":["Adversary","Storm","Wolverine"],"name":"Uncanny X-Men #220","link":"uncanny_x-men_220","credits":["Marc Silvestri","Ann Nocenti","Chris Claremont","Terry Kavanagh","Dan Green"],"i":3481},{"year":1987,"characters":["Gary Cody","Madison Jeffries","Manikin","Persuasion","Sasquatch","Vindicator (Heather Hudson)"],"name":"Alpha Flight annual #2","link":"alpha_flight_annual_2","credits":["Bill Mantlo","June Brigman","Carl Potts","Bob McLeod"],"i":3482},{"year":1987,"characters":["Arranger","Bushwacker","Butch (Fatboys)","Daredevil","Darla (Fatboys)","Eightball (Fatboys)","Foggy Nelson","Glorianna O'Breen","Karen Page","Kingpin","Wolverine"],"name":"Daredevil #248-249","link":"daredevil_248-249","credits":["Ralph Macchio","Ann Nocenti","Rick Leonardi","Al Williamson","Marc Siry"],"i":3483},{"year":1988,"characters":["Black Cat","Cloak","Dagger","Day","Dazzler","Dr. Strange","Kaluu","Mr. Jip","Night","Predator","Rintrah","Topaz","Yipyap"],"name":"Strange Tales #8-11","link":"strange_tales_8-11","credits":["<b>Title:","<em>Doctor Strange<","Dan Lawlis","Terry Austin","<b>Credits:","Richard Case","Marc McLaurin","Carl Potts","em>","Randy Emberlin","\"This earth-- this realm..\"","\"African genesis!\"","\"Hierarchies!\"","\"If you meet the Buddha on the road","Bob Wiacek","Terry Shoemaker","kill him!\"","Peter Gillis","Bret Blevins"],"i":3484},{"year":1987,"characters":["Adrian Sammish","Battlestar","Henry Peter Gyrich","Lewis Guthrie","USAgent","Valerie Cooper"],"name":"Captain America #335","link":"captain_america_335","credits":["Daryl Edelman","Don Daley","Tom Morgan","Mark Gruenwald","David Hunt"],"i":3485},{"year":1987,"characters":["Adversary","Arclight","Dazzler","Eye Killers","Harpoon","Havok","Longshot","Madelyne Pryor","Malice (Marauder)","Mr. Sinister","Polaris","Psylocke","Rogue","Sabretooth","Sabrina Morrel","Scalphunter","Scrambler","Storm","Vertigo (Savage Land Mutate)","Wolverine"],"name":"Uncanny X-Men #221-222","link":"uncanny_x-men_221-222","credits":["Marc Silvestri","Ann Nocenti","Chris Claremont","Terry Kavanagh","Dan Green"],"i":3486},{"year":1987,"characters":["Breakdown","Freakout","Gary Cody","Goblyn","Janus (Deranger)","Madison Jeffries","Manikin","Pathway","Persuasion","Sasquatch","Vindicator (Heather Hudson)","Wolverine"],"name":"Alpha Flight #52-53","link":"alpha_flight_52-53","credits":["Bill Mantlo","Whilce Portacio","Joanne Spaldo","Carl Potts","Jim Lee"],"i":3487},{"year":1988,"characters":["Microchip","Microchip Jr.","Punisher","Reverend Sammy Smith"],"name":"Punisher #4-5","link":"punisher_4-5","credits":["Mike Baron","Carl Potts","Marc McLaurin","Klaus Janson"],"i":3488},{"year":1988,"characters":["Goblyn","Madison Jeffries","Manikin","Pathway","Persuasion","Sasquatch","Vindicator (Heather Hudson)"],"name":"Alpha Flight #54","link":"alpha_flight_54","credits":["Bill Mantlo","Whilce Portacio","Marc McLaurin","Carl Potts","Hugh Haynes"],"i":3489},{"year":1987,"characters":["Adversary","Avalanche","Blob","Crimson Commando","Dazzler","Destiny","Havok","Longshot","Madelyne Pryor","Mystique","Psylocke","Pyro","Rogue","Spiral","Stonewall","Storm","Super Sabre","Valerie Cooper","Wolverine"],"name":"Uncanny X-Men #223","link":"uncanny_x-men_223","credits":["Ann Nocenti","Dan Green","Kerry Gammill","Chris Claremont"],"i":3490},{"year":1987,"characters":["Aptak","Jemiah","Kylor","Mantis","Nenora","Obliterator","Phae-Dor","Shalla Bal","Silver Surfer","Supreme Intelligence","Tar-rell","Tus-Katt"],"name":"Silver Surfer #5-6","link":"silver_surfer_5-6","credits":["Michael Higgins","Michael Rockwitz","Marshall Rogers","Josef Rubinstein","Steve Englehart"],"i":3491},{"year":1988,"characters":["Black Racer","Brother Nature","Captain America","Copperhead III","D-Man","Falcon","Fer-De-Lance","Nomad","Puff Adder","Redwing","Vagabond"],"name":"Captain America #336-337","link":"captain_america_336-337","credits":["Ralph Macchio","Tom Morgan","Mark Gruenwald","David Hunt","Marc Siry"],"i":3492},{"year":1987,"characters":["Abe Zimmer","Ant-Man (Scott Lang)","Bertram Hindel","Brie Daniels","Controller","Force","Iron Man","Marcy Pearson","Mauler","Mrs. Arbogast","Stature","Stilt-Man","War Machine"],"name":"Iron Man #225","link":"iron_man_225","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3493},{"year":1987,"characters":["Balder","Fandral","Hogun","Leir","Seth","Thor","Vizier","Volstagg"],"name":"Thor #386","link":"thor_386","credits":["Ralph Macchio","Tom DeFalco","Brett Breeding","Ron Frenz","Marc Siry"],"i":3494},{"year":1988,"characters":["Aquarius (Robot)","Aquarius II","Aries (Robot)","Cancer","Cancer (Robot)","Capricorn","Capricorn (Robot)","Gemini","Gemini (Robot)","Hawkeye","Henry Pym","Iron Man","Leo","Leo (Robot)","Libra","Libra (Robot)","Mockingbird","Moon Knight","Nick Fury","Pisces","Pisces (Robot)","Rover (Pym's ship)","Sagittarius","Sagittarius (Robot II)","Sagittarius (Robot)","Scorpio (Jake Fury LMD)","Taurus","Taurus (Robot)","Tigra","Virgo","Virgo (Robot)","Wonder Man"],"name":"West Coast Avengers #26-28","link":"west_coast_avengers_26-28","credits":["Al Milgrom","Gregory Wright","Steve Englehart","Mike Machlan","Mark Gruenwald","David Hunt"],"i":3495},{"year":1987,"characters":["Energizer","Franklin Richards","Gee","Jim Power","Lightspeed","Margaret Power","Mass Master","Spider-Man","Sunspot","Vulture","Warlock"],"name":"Power Pack #33","link":"power_pack_33","credits":["Jon Bogdanove","Marc McLaurin","Carl Potts","Hilary Barta","Louise Simonson"],"i":3496},{"year":1987,"characters":["Arranger","Aunt May","Ben Urich","Brainstorm","Captain Zero","Doctor Hope","J. Jonah Jameson","Kingpin","Spider-Man"],"name":"Web of Spider-Man #33, Amazing Spider-Man #295, Peter Parker, the Spectacular Spider-Man #133","link":"web_of_spider-man_33amazing_sp","credits":["Jim Salicrup","Ann Nocenti","Stephen Leialoha","Josef Rubinstein","Cynthia Martin","Kyle Baker"],"i":3497},{"year":1988,"characters":["Arishem","Balder","Exitar","Heimdall","Thor","Thor Replicoid"],"name":"Thor #387-389","link":"thor_387-389","credits":["Ralph Macchio","Tom DeFalco","Brett Breeding","Ron Frenz","Marc Siry"],"i":3498},{"year":1988,"characters":["Awesome Android","Black Knight (Dane Whitman)","Bobby Hutchinson","Captain Marvel (Monica Rambeau)","Dan Smallwood","Derek Freeman","Dr. Druid","Fixer","Machine Man","Marrina","Mentallo","She-Hulk","Sub-Mariner","Super-Adaptoid"],"name":"Avengers #286-287","link":"avengers_286-287","credits":["Ralph Macchio","John Buscema","Gregory Wright","Tom Palmer","Roger Stern","Mark Gruenwald"],"i":3499},{"year":1989,"characters":["Thing"],"name":"Marvel Comics Presents #21 (Thing)","link":"marvel_comics_presents_21_thin","credits":["David Day","Dan Day","Michael Rockwitz","Marc McLaurin","Terry Kavanagh","Kevin VanHook"],"i":3500},{"year":1992,"characters":["Killpower","Oonagh Mullarkey","Ormond Wychwood"],"name":"Motormouth #4 (Killpower)","link":"motormouth_4_killpower","credits":["Jacqui Papp","Graham Marks","Sean Hardy","Doug Braithwaite"],"i":3501},{"year":1988,"characters":["Spider-Man","Uatu the Watcher"],"name":"Web of Spider-Man #34","link":"web_of_spider-man_34","credits":["Vincent Colletta","Jim Salicrup","Sal Buscema","Jim Shooter"],"i":3502},{"year":1988,"characters":["Ashcan","Betty Ross","Clay Quartermain","Hulk","Leader","Ramon (Betty Ross' boyfriend)","Rick Jones"],"name":"Hulk #339","link":"hulk_339","credits":["Todd McFarlane","Peter David","Jim Sanders III","Bob Harras","Bobbie Chase"],"i":3503},{"year":1988,"characters":["Battlestar","Black Racer","Captain America","Copperhead III","D-Man","Falcon","Fer-De-Lance","Leviathan (Gargantua)","Nomad","Professor Power","Puff Adder","Sidewinder","USAgent"],"name":"Captain America #338","link":"captain_america_338","credits":["Kieron Dwyer","Ralph Macchio","Tom Morgan","Mark Gruenwald","Marc Siry"],"i":3504},{"year":1988,"characters":["Energizer","Franklin Richards","Gee","Human Torch","Invisible Woman","Lightspeed","Madcap","Margaret Power","Mass Master","Mr. Fantastic","Thing"],"name":"Power Pack #34","link":"power_pack_34","credits":["Larry Alexander","Carl Potts","Louis Williams","Tony DeZuniga","Howard Mackie"],"i":3505},{"year":1993,"characters":["Algernon Crowe","Base","Brendan Rathcoole","Bronwen Gryfnn","Gudrun Tyburn","Killpower","Oonagh Mullarkey","Ormond Wychwood","Ridge","Shift","Stinger (Genetix)","Time Guardian","Vesper"],"name":"Killpower: The Early Years #1-4","link":"killpower_the_early_years_1-4","credits":["John Ross","Jacqui Papp","Martin Griffith","Mike Barr"],"i":3506},{"year":1988,"characters":["Charles Jefferson","Doctor Octopus","Kate Cushing","Spider-Man"],"name":"Amazing Spider-Man #296","link":"amazing_spider-man_296","credits":["Vincent Colletta","Alex Saviuk","Jim Salicrup","David Michelinie"],"i":3507},{"year":1988,"characters":["Energizer","Franklin Richards","Gee","Human Torch","Invisible Woman","Jim Power","Lightspeed","Margaret Power","Mass Master","Master Mold","Mr. Fantastic","Thing"],"name":"Power Pack #36","link":"power_pack_36","credits":["Carl Potts","Jon Bogdanove","Marc McLauren","Hilary Barta"],"i":3508},{"year":1987,"characters":["Crystal","Fasaud","Human Torch","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #308","link":"fantastic_four_308","credits":["Ralph Macchio","Joe Sinnott","John Buscema","Steve Englehart","Marc Siry"],"i":3509},{"year":1988,"characters":["Aunt May","Aunt Watson","Doctor Octopus","Joe 'Robbie' Robertson","Joy Mercado","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #297","link":"amazing_spider-man_297","credits":["Vincent Colletta","Alex Saviuk","Jim Salicrup","David Michelinie"],"i":3510},{"year":1987,"characters":["Adversary","Crimson Commando","Dazzler","Destiny","Forge","Havok","Longshot","Madelyne Pryor","Mystique","Psylocke","Rogue","Sabrina Morrel","Storm","Valerie Cooper","Wolverine"],"name":"Uncanny X-Men #224","link":"uncanny_x-men_224","credits":["Marc Silvestri","Ann Nocenti","Chris Claremont","Bob Wiacek","Terry Kavanagh"],"i":3511},{"year":2009,"characters":["Angel","Beast","Beth Sheldon","Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Cyclops","Dazzler","Diane Bellamy","Doris Sheldon","Dr. Druid","Havok","Iceman","Jean Grey","Jenny Sheldon","Joe 'Robbie' Robertson","Maggie (mutant)","Marcia Hardesty","Phil Sheldon","Rogue","Storm","Thor","Tracy Burke","Valerie Cooper","Wolverine"],"name":"Marvels: Eye of the Camera #5","link":"marvels_eye_of_the_camera_5","credits":["Kurt Busiek","Jay Anacleto","Tom Breevort","Jeanine Schaefer","Roger Stern","Joe Quesada"],"i":3512},{"year":1988,"characters":["Joe 'Robbie' Robertson","Living Brain","Mary Jane Watson","Persuader","Spider-Man","Tarantula II","Tombstone"],"name":"Web of Spider-Man #35-36","link":"web_of_spider-man_35-36","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3513},{"year":1988,"characters":["Abe Zimmer","Bertram Hindel","Edwin Cord","Hawkeye","Iron Man","Marcy Pearson","Mockingbird","Mrs. Arbogast","Rae LaCoste","Raider-1","Raider-2","Raider-3","Stingray","Tigra","War Machine","Wonder Man"],"name":"Iron Man #226","link":"iron_man_226","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3514},{"year":1988,"characters":["Bullet","Butch (Fatboys)","Daredevil","Foggy Nelson","Glorianna O'Breen","Karen Page","Lance Cashman"],"name":"Daredevil #250","link":"daredevil_250","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3515},{"year":1988,"characters":["Electro","Mary Jane Watson","Sgt. Tork","Sin-Eater","Spider-Man"],"name":"Spectacular Spider-Man #134-136","link":"spectacular_spider-man_134-136","credits":["Peter David","Jim Salicrup","Glenn Herdling","Sal Buscema","Vincent Colletta"],"i":3516},{"year":1988,"characters":["Captain Marvel (Monica Rambeau)","Felipe Picaro","Professor Andre LeClaire"],"name":"Solo Avengers #2 (Captain Marvel)","link":"solo_avengers_2_captain_marvel","credits":["Kieron Dwyer","Bob McLeod","Mark Gruenwald","Roger Stern"],"i":3517},{"year":1990,"characters":["Captain Marvel (Monica Rambeau)"],"name":"Marvel Fanfare #56-57 (Captain Marvel)","link":"marvel_fanfare_56-57_captain_m","credits":["<em>Captain Marvel<","Bill Mantlo","<b>Title:","Don Heck","\"Power and duty\"","Al Milgrom","Rob Tokar","<b>Credits:","em>","George Freeman","Roger Stern","Sarra Mossoff"],"i":3518},{"year":1988,"characters":["Black Panther","Crystal","Dr. Doom","Fasaud","Human Torch","Lyja the Lazerfist","Ms. Marvel (Sharon Ventura)","Norm Webster","Roberta","Thing"],"name":"Fantastic Four #309-311","link":"fantastic_four_309-311","credits":["Ralph Macchio","Joe Sinnott","John Buscema","Steve Englehart","Keith Pollard","Marc Siry"],"i":3519},{"year":1988,"characters":["Brothers Grimm III","Dansen Macabre","Digger (Night Shift)","Gypsy Moth","Moon Knight","Needle","Shroud","Tatterdemalion","Ticktock","Werewolf By Night"],"name":"Solo Avengers #3 (Moon Knight)","link":"solo_avengers_3_shroud","credits":["Bob Hall","Stan Drake","Gregory Wright","Roger Stern","Mark Gruenwald"],"i":3520},{"year":1988,"characters":["Dakota North","Mary Jane Watson","Ricky North","Spider-Man"],"name":"Web of Spider-Man #37","link":"web_of_spider-man_37","credits":["Keith Williams","Steve Geiger","Jim Salicrup","Christopher Priest"],"i":3521},{"year":1988,"characters":["Hawkeye","Henry Pym","Iron Man","Khonshu","Mockingbird","Moon Knight","Night Rider (Hamilton Slade)","Night Rider (Lincoln Slade)","Shroud","Taurus","Tigra","Wonder Man"],"name":"West Coast Avengers #29","link":"west_coast_avengers_29","credits":["Al Milgrom","Gregory Wright","Steve Englehart","Mike Machlan","Mark Gruenwald"],"i":3522},{"year":1988,"characters":["Amanda Robertson","Arranger","Aunt May","Aunt Watson","Bambi","Betty Brant","Candy","Flash Thompson","Glory Grant","Harry Osborn","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Joy Mercado","Lance Bannon","Liz Allan","Mamie Muggins","Martha Robertson","Mary Jane Watson","Randi","Randy Robertson","Spider-Man","Tombstone"],"name":"Web of Spider-Man #38","link":"web_of_spider-man_38","credits":["Fabian Nicieza","Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Mike Esposito"],"i":3523},{"year":1988,"characters":["Bullet","Daredevil","Foggy Nelson","Glorianna O'Breen","Karen Page","Kingpin","Lance Cashman"],"name":"Daredevil #251","link":"daredevil_251","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3524},{"year":1988,"characters":["Astronomer","Champion","Collector","Contemplator Skrull","Gardener","Mantis","Nenora","Possessor","Runner","Shalla Bal","Silver Surfer","Soul Gem","Supreme Intelligence","Trader"],"name":"Silver Surfer #7","link":"silver_surfer_7_1","credits":["Steve Englehart","Marshall Rogers","Josef Rubinstein","Michael Higgins"],"i":3525},{"year":1988,"characters":["Betty Ross","Clay Quartermain","Dazzler","Half-Life (Hulk villain)","Havok","Hulk","Leader","Longshot","Madelyne Pryor","Psylocke","Rick Jones","Rogue","Wolverine"],"name":"Hulk #340","link":"hulk_340","credits":["Bobbie Chase","Todd McFarlane","Peter David","Bob Harras"],"i":3526},{"year":1987,"characters":["Angel","Apocalypse","Artie Maddicks","Beast","Boom Boom","Caliban","Cameron Hodge","Cyclops","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","Leech","Pestilence (Horseman of Apocalypse)","Rictor","Rusty Collins","Ship (Prosh)","Skids","Trish Tilby","War (Horseman of Apocalypse)"],"name":"X-Factor #21-23","link":"x-factor_21-23","credits":["Walt Simonson","Bob Harras","Sal Buscema","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3527},{"year":1988,"characters":["Adversary","Avalanche","Blob","Colossus","Crimson Commando","Dazzler","Destiny","Forge","Havok","Lockheed","Longshot","Madelyne Pryor","Magik","Manoli Wetherell","Moira MacTaggert","Mystique","Neal Conan","Nightcrawler","Psylocke","Pyro","Rogue","Roma","Shadowcat (Kitty Pryde)","Spiral","Stonewall","Storm","Super Sabre","Wolverine"],"name":"Uncanny X-Men #225-227","link":"uncanny_x-men_225-227","credits":["Marc Silvestri","Ann Nocenti","Chris Claremont","Bob Wiacek","Dan Green"],"i":3528},{"year":1988,"characters":["Ani-mator","Birdbrain","Black King (Sebastian Shaw)","Black Queen (Selene)","Brightwind","Cameron Hodge","Cannonball","Cypher","Magik","Magneto","Mirage (Dani Moonstar)","S'ym","Sunspot","Tessa","Warlock","Wolfsbane"],"name":"New Mutants #58-61","link":"new_mutants_58-61","credits":["Ann Nocenti","Terry Austin","Off The Wall Studios","Louise Simonson","Bret Blevins"],"i":3529},{"year":1988,"characters":["Angel","Apocalypse","Beast","Caliban","Cyclops","Energizer","Famine (Horseman of Apocalypse)","Gee","Iceman","Jean Grey","Lightspeed","Mass Master","Pestilence (Horseman of Apocalypse)","Ship (Prosh)","War (Horseman of Apocalypse)"],"name":"X-Factor #24-25","link":"x-factor_24-25","credits":["Bob Harras","Louise Simonson","Bob Wiacek","Walt Simonson"],"i":3530},{"year":1988,"characters":["Angel","Beast","Cyclops","Energizer","Gee","Iceman","Jean Grey","Jim Power","Lightspeed","Margaret Power","Mass Master","Pestilence (Horseman of Apocalypse)","Ship (Prosh)"],"name":"Power Pack #35","link":"power_pack_35","credits":["Jon Bogdanove","Marc McLaurin","Carl Potts","Hilary Barta","Louise Simonson"],"i":3531},{"year":1988,"characters":["Ammo","Angel","Black Widow","Bullet","Daredevil","Karen Page","Lance Cashman","Pestilence (Horseman of Apocalypse)","Ship (Prosh)","War (Horseman of Apocalypse)"],"name":"Daredevil #252","link":"daredevil_252","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3532},{"year":1988,"characters":["Avalanche","Battlestar","Blob","Captain America","D-Man","Falcon","Famine (Horseman of Apocalypse)","Iron Man","Nomad","Pyro","Redwing","USAgent","Vagabond"],"name":"Captain America #339","link":"captain_america_339","credits":["Kieron Dwyer","Marc Siry","Ralph Macchio","Mark Gruenwald","Tony DeZuniga"],"i":3533},{"year":1988,"characters":["Angel","Apocalypse","Beast","Caliban","Cyclops","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","Ship (Prosh)","Trish Tilby","War (Horseman of Apocalypse)"],"name":"X-Factor #26","link":"x-factor_26","credits":["Bob Harras","Louise Simonson","Bob Wiacek","Walt Simonson"],"i":3534},{"year":1988,"characters":["Beast","Black Panther","Crystal","Cyclops","Dr. Doom","Human Torch","Iceman","Jean Grey","Kristoff","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #312","link":"fantastic_four_312","credits":["Ralph Macchio","Joe Sinnott","Steve Englehart","Keith Pollard","Marc Siry"],"i":3535},{"year":2010,"characters":["Ben Urich","Bennet Schwed","Beth Sheldon","Betty Brant","Colossus","Cyclops","Doris Sheldon","J. Jonah Jameson","Jean Grey","Jenny Sheldon","Joe 'Robbie' Robertson","Maggie (mutant)","Marcia Hardesty","Phil Sheldon","Psylocke","Rogue","Ship (Prosh)","Spider-Man","Wolverine"],"name":"Marvels: Eye of the Camera #6","link":"marvels_eye_of_the_camera_6","credits":["Lauren Sankovitch","Kurt Busiek","Jay Anacleto","Tom Brevoort","Roger Stern"],"i":3536},{"year":1988,"characters":["Arthur Chekov","Aunt May","Bambi","Candy","Carlton Drake","Chance (Nicholas Powell)","Eddie Brock (Venom)","Flash Thompson","Glory Grant","Harry Osborn","Joe 'Robbie' Robertson","Joy Mercado","Mary Jane Watson","Mr. Fantastic","Nate Lubenski","Randi","Sandy Kintzler","Spider-Man","Thing","Venom Symbiote"],"name":"Amazing Spider-Man #298-300","link":"amazing_spider-man_298-300","credits":["Todd McFarlane","Bob McLeod","Glenn Herdling","David Michelinie","James Salicrup"],"i":3537},{"year":1988,"characters":["Cerberus (Dog)","O.Z. Chase"],"name":"Uncanny X-Men #228","link":"uncanny_x-men_228","credits":["Ann Nocenti","Tom DeFalco","Terry Austin","Chris Claremont","Rick Leonardi"],"i":3538},{"year":1988,"characters":["Bonebreaker","Colossus","Dazzler","Gateway","Havok","Longshot","Madelyne Pryor","Pretty Boy","Psylocke","Rogue","Roma","Skullbuster","Storm","Tyger Tiger","Wolverine"],"name":"Uncanny X-Men #229","link":"uncanny_x-men_229","credits":["Marc Silvestri","Ann Nocenti","Chris Claremont","Terry Kavanagh","Dan Green"],"i":3539},{"year":1988,"characters":["Cannonball","Catseye","Empath","Jetstream","Lucius Aquilla","Magik","Magma","Mirage (Dani Moonstar)","Roulette","Sunspot","Tarot","Warlock","Warpath","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #62","link":"new_mutants_62","credits":["Ann Nocenti","Louise Simonson","Terry Kavanagh","Jon J Muth"],"i":3540},{"year":1988,"characters":["Cannonball","Lila Cheney","Magik","Roy Fortune","Sally Fortune","Snaarl","Snugg","Spellbinder","Strong Guy","Warlock","Zxaxz"],"name":"Spellbound #1-6","link":"spellbound_1-6","credits":["Bob Harras","Carl Potts","Louise Simonson","Bobbie Chase","Terry Shoemaker"],"i":3541},{"year":1988,"characters":["Lockheed","Magik"],"name":"New Mutants #63","link":"new_mutants_63","credits":["Ann Nocenti","Josef Rubinstein","Chris Claremont","Louise Simonson","Bo Hampton"],"i":3542},{"year":1988,"characters":["Cannonball","Cypher","Magik","Magneto","Mirage (Dani Moonstar)","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #64","link":"new_mutants_64","credits":["Ann Nocenti","Terry Austin","Louise Simonson","Terry Kavanagh","Bret Blevins"],"i":3543},{"year":1988,"characters":["Ani-mator","Avalanche","Blob","Cannonball","Crimson Commando","Destiny","Forge","Gosamyr","Lockheed","Magik","Magneto","Mirage (Dani Moonstar)","Mystique","Pyro","S'ym","Shadowcat (Kitty Pryde)","Spiral","Spyder","Stonewall","Sunspot","Super Sabre","Warlock","Wolfsbane"],"name":"New Mutants #65-66","link":"new_mutants_65-66","credits":["Terry Kavanaugh","Ann Nocenti","Terry Austin","Louise Simonson","Bret Blevins"],"i":3544},{"year":1987,"characters":["Bodybag","Captain Britain","China Doll","Ferro","Gatecrasher","Joyboy","Lockheed","Meggan","Nightcrawler","Rachel Summers","Ringtoss","Scatterbrain","Shadowcat (Kitty Pryde)","Thug","Waxworks","Yap"],"name":"Excalibur Special Edition","link":"excalibur_special_edition","credits":["Mark Farmer","Ann Nocenti","Chris Claremont","Alan Davis","Paul Neary","Terry Kavanagh"],"i":3545},{"year":1988,"characters":["Arranger","Daredevil","Darla (Fatboys)","Eightball (Fatboys)","Jet (Wildboy)","Karen Page","Kingpin","Ralf (Fatboys)","Spit (Wildboy)"],"name":"Daredevil #253","link":"daredevil_253","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3546},{"year":1988,"characters":["Angel","Apocalypse","Artie Maddicks","Beast","Boom Boom","Caliban","Cyclops","Elaine Grey","Famine (Horseman of Apocalypse)","Iceman","Jean Grey","John Grey","Leech","Rictor","Rusty Collins","Ship (Prosh)","Skids","Trish Tilby","War (Horseman of Apocalypse)"],"name":"X-Factor #27","link":"x-factor_27","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3547},{"year":1988,"characters":["Cannonball","Colossus","Dazzler","Gateway","Havok","Longshot","Madelyne Pryor","Magik","Magneto","Mirage (Dani Moonstar)","Moira MacTaggert","Psylocke","Rogue","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #230","link":"uncanny_x-men_230","credits":["Marc Silvestri","Ann Nocenti","Josef Rubinstein","Chris Claremont","Terry Kavanagh"],"i":3548},{"year":1988,"characters":["Angel","Apocalypse","Artie Maddicks","Beast","Boom Boom","Caliban","Cyclops","Iceman","Infectia","Jean Grey","Leech","Rictor","Rusty Collins","Ship (Prosh)","Skids"],"name":"X-Factor #28","link":"x-factor_28","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3549},{"year":1988,"characters":["Aptak","Astronomer","Black Panther","Champion","Collector","Contemplator Skrull","Death","Eternity","Galactus","Gardener","Grandmaster","Human Torch","Kylor","Mantis","Ms. Marvel (Sharon Ventura)","Nenora","Nova (Frankie Raye)","Possessor","Ripan","Runner","Shalla Bal","Silver Surfer","Soul Gem","Supreme Intelligence","Thing","Trader"],"name":"Silver Surfer #8-10","link":"silver_surfer_8-10","credits":["Michael Higgins","Michael Rockwitz","Marshall Rogers","Josef Rubinstein","Steve Englehart"],"i":3550},{"year":1988,"characters":["Alan Quartermain","Betty Ross","Clay Quartermain","Diane Bellamy","Half-Life (Hulk villain)","Hotshot","Hulk","Jailbait","Leader","Man-Bull","Nick Fury","Ogress","Omnibus","Redeemer","Rick Jones","Rock","Soul Man"],"name":"Hulk #341-345","link":"hulk_341-345","credits":["Todd McFarlane","Peter David","Christopher Ivy","Jim Sanders III","Bob Harras","Bobbie Chase","Bob Wiacek"],"i":3551},{"year":1988,"characters":["Hawkeye","Henry Pym","Iron Man","Khonshu","Mockingbird","Moon Knight","Scarlet Witch","Thomas (VSW Baby)","Tigra","Vision","William (VSW Baby)","Wonder Man"],"name":"West Coast Avengers #30","link":"west_coast_avengers_30","credits":["Al Milgrom","Mark Gruenwald","Mike Machlan","Gregory Wright"],"i":3552},{"year":1988,"characters":["Beetle","Bertram Hindel","Captain America","Hawkeye","Iron Man","Ling McPherson","Marcy Pearson","Mockingbird","Mr. Hyde","Mrs. Arbogast","Nick Fury","Tigra","Titania","War Machine"],"name":"Iron Man #227-228","link":"iron_man_227-228","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3553},{"year":1988,"characters":["Armadillo","Captain America","D-Man","Falcon","Griffin","Iron Man","Mr. Hyde","Nomad","Redwing","Titania","Vagabond","Vibro","War Machine"],"name":"Captain America #340","link":"captain_america_340","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3554},{"year":1989,"characters":["Ben Urich","Bushwacker","Butch (Fatboys)","Daredevil","Darla (Fatboys)","Eightball (Fatboys)","J. Jonah Jameson","Jet (Wildboy)","Ralf (Fatboys)","Spit (Wildboy)"],"name":"Daredevil annual #4 (Back-ups)","link":"daredevil_annual_4_back-ups","credits":["Ralph Macchio","Al Milgrom","Whilce Portacio","John Romita Jr.","Gregory Wright","Klaus Janson","Jim Lee","Kim DeMulder"],"i":3555},{"year":1988,"characters":["Microchip","Microchip Jr.","Punisher","Wild Rose Kugel"],"name":"Punisher #6-7","link":"punisher_6-7","credits":["David Ross","Kevin Nowlan","Marc McLaurin","Carl Potts","Mike Baron","John Beatty"],"i":3556},{"year":1988,"characters":["Alan Quartermain","Betty Ross","Clay Quartermain","Hotshot","J. Jonah Jameson","Jailbait","Kate Cushing","Leader","Mary Jane Watson","Nick Fury","Ogress","Omnibus","Rick Jones","Soul Man","Spider-Man"],"name":"Hulk #346","link":"hulk_346","credits":["Todd McFarlane","Peter David","Daryl Edelman","Erik Larsen","Jim Sanders III","Bob Harras"],"i":3557},{"year":1988,"characters":["Dream Queen","Goblyn","Jade Dragon","Kariooq","Madison Jeffries","Manikin","Pathway","Persuasion","Puck","Sasquatch","Somon","Tolamaq","Tundra","Veronica Langkowski","Vindicator (Heather Hudson)"],"name":"Alpha Flight #55-60","link":"alpha_flight_55-60","credits":["Bill Mantlo","Al Milgrom","Marc McLaurin","Carl Potts","Jim Lee","Tony DeZuniga"],"i":3558},{"year":1988,"characters":["Awesome Android","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Dr. Druid","Kree Sentry 459","Kubik","Machine Man","Marrina","She-Hulk","Stingray","Sub-Mariner","Super-Adaptoid","TESS-One"],"name":"Avengers #288-290","link":"avengers_288-290","credits":["Ralph Macchio","John Buscema","Gregory Wright","Tom Palmer","Mark Gruenwald"],"i":3559},{"year":1988,"characters":["Balder","Black Knight (Dane Whitman)","Captain America","Captain Marvel (Monica Rambeau)","Dr. Druid","Fandral","Grog","Hogun","Marrina","Seth","She-Hulk","Stingray","Sub-Mariner","Thor","Volstagg"],"name":"Thor #390","link":"thor_390","credits":["Ralph Macchio","Tom Defalco","Brett Breeding","Ron Frenz","Marc Siry"],"i":3560},{"year":1988,"characters":["Punisher"],"name":"Punisher: Assassin's Guild ","link":"punisher_assassins_guild","credits":["Mary Jo Duffy","Carl Potts","Jorge Zaffino","Marc McLauren"],"i":3561},{"year":2012,"characters":["Hawkeye","Hulk","Iron Man","Mockingbird","Tigra","Wonder Man"],"name":"Hulk Smash Avengers #4","link":"hulk_smash_avengers_4","credits":["Jim McCann","Bill Rosemann","Agustin Padilla","Axel Alonso","Jake Thomas","Jaime Mendoza"],"i":3562},{"year":1988,"characters":["Arkon","Banshee (Horse)","Banshee (Western Era Horse)","Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Dr. Druid","Hawkeye","Henry Pym","Iron Man","Khonshu","Mockingbird","Moon Knight","Night Rider (Hamilton Slade)","Night Rider (Lincoln Slade)","She-Hulk","Sub-Mariner","Texas Twister","Tigra","Wonder Man"],"name":"West Coast Avengers #31","link":"west_coast_avengers_31","credits":["Al Milgrom","Gregory Wright","Steve Englehart","Mike Machlan","Mark Gruenwald"],"i":3563},{"year":1988,"characters":["Crimson Dynamo V","Edwin Cord","Gremlin","Hawkeye","Henry Pym","Iron Man","Mockingbird","Moon Knight","Senator Boyton","War Machine","Wonder Man"],"name":"Iron Man #229","link":"iron_man_229","credits":["M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3564},{"year":1988,"characters":["Anaconda","Asp","Battlestar","Black Mamba","Black Racer","Boomslang","Bushmaster II","Captain America","Coachwhip","Cobra","Copperhead III","Cottonmouth","Diamondback","Fer-De-Lance","Iron Man","Left-Winger","Madame Hydra (Viper)","Puff Adder","Rattler","Right-Winger","Rock Python","Sidewinder","USAgent"],"name":"Captain America #341","link":"captain_america_341","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3565},{"year":1987,"characters":["Hawkeye","Mockingbird","Trick Shot (Buck Chisholm)","Wonder Man"],"name":"Solo Avengers #1","link":"solo_avengers_1-2","credits":["M.D. Bright","Tom DeFalco","Josef Rubinstein","em>","Jim Lee","Al Williamson","<em>Mockingbird<","Mark Gruenwald","<em>Hawkeye<"],"i":3566},{"year":1988,"characters":["Anaconda","Asp","Battlestar","Black Mamba","Black Panther","Black Racer","Boomslang","Burner (Crucible)","Bushmaster II","Captain America","Coachwhip","Cobra","Copperhead III","Cottonmouth","D-Man","Diamondback","Douglas Rockwell","Dr. Druid","Falcon","Fer-De-Lance","Lifter (Meteorite)","M'Daka","Madame Hydra (Viper)","Nomad","Peeper (Occult)","Puff Adder","Quill (Resistants)","Rattler","Raymond Sikorski","Redwing","Rock Python","Shocker (Paralyzer)","Sidewinder","Slither","USAgent","Vagabond","Valerie Cooper"],"name":"Captain America #342-344","link":"captain_america_342-344","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3567},{"year":1989,"characters":["Anne Marie Hoag","Daredevil","John Porter","Josie (Bar owner)","Lenny Ballinger","Turk"],"name":"Marvel Comics Presents #19 (Damage Control)","link":"marvel_comics_presents_19_dama","credits":["Michael Rockwitz","Ernie Colon","Dwayne McDuffie","Al Williamson","Terry Kavanagh"],"i":3568},{"year":1988,"characters":["Batroc","Hawkeye","Machete","Mockingbird","Silver Sable","Trick Shot (Buck Chisholm)","Zaran"],"name":"Solo Avengers #2-5 (Hawkeye)","link":"solo_avengers_2-5_hawkeye","credits":["Ron Lim","M.D. Bright","Tom DeFalco","Josef Rubinstein","Gregory Wright","Mark Gruenwald"],"i":3569},{"year":1988,"characters":["Black Knight (Dane Whitman)","Dr. Druid"],"name":"Solo Avengers #4 (Black Knight)","link":"solo_avengers_4_black_knight","credits":["Paul Ryan","Gregory Wright","Roger Stern","Bob Layton","Mark Gruenwald"],"i":3570},{"year":1988,"characters":["Death","John Kowalski","Melinda Morrison","Scarlet Witch","Thomas (VSW Baby)","Vision","William (VSW Baby)"],"name":"Solo Avengers #5 (Scarlet Witch)","link":"solo_avengers_5_scarlet_witch","credits":["John Ridgway","Mark Gruenwald","Dennis Mallonee","Gregory Wright"],"i":3571},{"year":1988,"characters":["Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Colossus","Crystal","Dazzler","Dr. Druid","Goblyn","Havok","Human Torch","Jade Dragon","Longshot","Madison Jeffries","Manikin","Marrina","Ms. Marvel (Sharon Ventura)","Pathway","Persuasion","Psylocke","Rogue","Sasquatch","She-Hulk","Storm","Sub-Mariner","Thing","Thor","Vindicator (Heather Hudson)","Wolverine"],"name":"Alpha Flight #61","link":"alpha_flight_61","credits":["Bill Mantlo","Al Milgrom","Marc McLaurin","Carl Potts","Jim Lee"],"i":3572},{"year":1988,"characters":["Ben Urich","Enrique Lopez","Gullivar South","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Mary Jane Watson","Spider-Man","Tarantula II","Tombstone","USAgent"],"name":"Spectacular Spider-Man #137","link":"spectacular_spider-man_137","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3573},{"year":1988,"characters":["Aloysius R. Jamesley","Balder","Fandral","Hogun","Jerry Sapristi","Mongoose","Spider-Man","Thor","Thunderstrike","Vizier","Volstagg"],"name":"Thor #391","link":"thor_391","credits":["Ralph Macchio","Tom DeFalco","Brett Breeding","Ron Frenz","Marc Siry"],"i":3574},{"year":1988,"characters":["Gullivar South","Joe 'Robbie' Robertson","Kate Cushing","Mary Jane Watson","Persuader","Spider-Man","Tarantula II","Tombstone","USAgent"],"name":"Spectacular Spider-Man #138","link":"spectacular_spider-man_138","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3575},{"year":1988,"characters":["Abe Zimmer","Edwin Cord","Firepower","Iron Man","Marcy Pearson","Mrs. Arbogast","Senator Boyton","War Machine"],"name":"Iron Man #230-232","link":"iron_man_230-232","credits":["Barry Windsor-Smith","M.D. Bright","Gregory Wright","Bob Layton","David Michelinie","Mark Gruenwald"],"i":3576},{"year":1988,"characters":["Arthur Chekov","Aunt May","Harriet Rose Palermo","Looter","Mary Jane Watson","Nate Lubenski","Spider-Man","Victor Palermo"],"name":"Web of Spider-Man #39","link":"web_of_spider-man_39","credits":["Jim Salicrup","Fabian Nicieza","Keith Williams","Glenn Herdling","Alex Saviuk"],"i":3577},{"year":1989,"characters":["Albert Cleary","Anne (Damage Control secretary)","Anne Marie Hoag","Bart Rozum","Black Knight (Dane Whitman)","Dr. Druid","Edifice Rex","Eugene Strausser","Jarvis","John Porter","Lenny Ballinger","Robert Washington","Robin Chapel","She-Hulk","Spider-Man","Thor","Thunderball"],"name":"Damage Control #1","link":"damage_control_1","credits":["Sid Jacobson","Ernie Colon","Dwayne McDuffie","Bob Wiacek","A.A. Perry"],"i":3578},{"year":1990,"characters":["Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Nick Fury","Spider-Man"],"name":"Marvel Super Heroes #4 (Spider-Man/Nick Fury)","link":"marvel_super_heroes_4_spider-m","credits":["Archie Goodwin","Don Perlin","Mike Rockwitz","Frank Springer","Gerry Conway"],"i":3579},{"year":1988,"characters":["Gayle Rogers","Hawkeye","Le Peregrine","Mockingbird","Red Skull (Communist)","Sandman","Shroud","Silver Sable","Wonder Man"],"name":"Solo Avengers #6-9 (Hawkeye)","link":"solo_avengers_6-9_hawkeye","credits":["Jose Marzan","M.D. Bright","Josef Rubenstein","Tom DeFalco","Gregory Wright","Mark Gruenwald"],"i":3580},{"year":1988,"characters":["Falcon","Redwing"],"name":"Solo Avengers #6 (Falcon)","link":"solo_avengers_6_falcon","credits":["Tom Grindberg","Dan Mishkin","Josef Rubinstein","Gregory Wright","Mark Gruenwald"],"i":3581},{"year":1988,"characters":["Black Widow","Ivan Petrovitch"],"name":"Solo Avengers #7 (Black Widow)","link":"solo_avengers_7_black_widow","credits":["Butch Guice","Mark Gruenwald","Gregory Wright","Bob Layton"],"i":3582},{"year":1988,"characters":["Dr. Nemesis (Pym foe)","Henry Pym","Rover (Pym's ship)"],"name":"Solo Avengers #8 (Henry Pym)","link":"solo_avengers_8_henry_pym","credits":["Jose Marzan","Larry Alexander","Gregory Wright","Mark Gruenwald","Mike Barr"],"i":3583},{"year":1988,"characters":["Hellcat","Mad Dog (Buzz Baxter)"],"name":"Solo Avengers #9 (Hellcat)","link":"solo_avengers_9_hellcat","credits":["Stan Drake","Gregory Wright","June Brigman","J.M. DeMatteis","Mark Gruenwald"],"i":3584},{"year":1990,"characters":["Scarlet Witch"],"name":"Marvel Comics Presents #60-63 (Scarlet Witch)","link":"marvel_comics_presents_60-63_s","credits":["Richard Howell","Terry Kavanagh","Kelly Corvese"],"i":3585},{"year":1989,"characters":["Albert Cleary","Anne (Damage Control secretary)","Anne Marie Hoag","Crystal","Dr. Doom","Eugene Strausser","Human Torch","Jay (Damage Control guard)","John Porter","Lenny Ballinger","Lyja the Lazerfist","Marie Leahy","Ms. Marvel (Sharon Ventura)","Robin Chapel","Thing"],"name":"Damage Control #2","link":"damage_control_2","credits":["Lisa Trusiani","Sid Jacobson","Ernie Colon","Dwayne McDuffie","Bob Wiacek"],"i":3586},{"year":1988,"characters":["Black Knight (Dane Whitman)","Fixer","Wasp","Yellowjacket (Rita Demara)"],"name":"Solo Avengers #12 (Yellowjacket)","link":"solo_avengers_12_yellowjacket","credits":["Stan Drake","Dick Hodgins","Gregory Wright","Mark Gruenwald","Amanda Conner","Howard Mackie"],"i":3587},{"year":1988,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Black Knight (Dane Whitman)","Clay Quartermain","Contessa Valentina Allegro De La Fontaine","Crystal","Deltite","Dr. Druid","Dum Dum Dugan LMD","Eric Koenig","Gabriel Jones","Hawkeye","Henry Peter Gyrich","Human Torch","Iron Man","Jasper Sitwell","Kate Neville","Madame Hydra Six","Mockingbird","Ms. Marvel (Sharon Ventura)","Nick Fury","Red (LMD)","Scarlet Witch","She-Hulk","Thing","Thor","Vision","Wonder Man"],"name":"Nick Fury vs. SHIELD #1-6","link":"nick_fury_vs_shield_1-6","credits":["Bob Harras","Sara Tuchinsky","Gregory Wright","Paul Neary","Mark Gruenwald","Kim DeMulder"],"i":3588},{"year":1988,"characters":["Black Crow","Hawkeye"],"name":"Marvel Fanfare #39 (Hawkeye)","link":"marvel_fanfare_39_hawkeye","credits":["Joe Staton","Al Milgrom","Kim DeMulder","J.M. DeMatteis"],"i":3589},{"year":1988,"characters":["Hawkeye","Henry Pym","Khonshu","Mockingbird","Moon Knight","Night Rider (Hamilton Slade)","Night Rider (Lincoln Slade)","Tigra","Wasp","Wonder Man","Yetrigar"],"name":"West Coast Avengers #32","link":"west_coast_avengers_32","credits":["Al Milgrom","Gregory Wright","Steve Englehart","Mark Gruenwald","Tony DeZuniga"],"i":3590},{"year":1988,"characters":["Clumsy Foulup","Contemplator Skrull","Nenora","Nova (Frankie Raye)","Reptyl","Silver Surfer","Surfer-Skrull"],"name":"Silver Surfer #11-12","link":"silver_surfer_11-12","credits":["Michael Higgins","Michael Rockwitz","Marshall Rogers","Josef Rubinstein","Steve Engelhart","Joe Staton"],"i":3591},{"year":1988,"characters":["Cloak","Dagger","Day","Dr. Druid","Dr. Strange","Energizer","Father Delgado","Father Michael Bowen","Gee","Jim Power","Kaluu","Kingpin","Lightspeed","Margaret Power","Mass Master","Mayhem","Melissa Bowen Carlisle","Mr. Jip","Night","Phillip Carlisle","Punisher","Rebecca 'Rusty' Nales","Shaman","Shuma-Gorath","Victoria Bentley"],"name":"Strange Tales #12-14","link":"strange_tales_12-14","credits":["Whilce Portacio","<b>Title:","\"Apogee\"","<em>Doctor Strange<","Credits:","Dan Lawlis","Terry Austin","Richard Case","Marc McLaurin","Carl Potts","em>","\"...Make thee mightier yet!\"","June Brigman","\"Ascent into hell\"","Randy Emberlin","Peter Gillis","Bob Wiacek"],"i":3592},{"year":1988,"characters":["Belasco","Comet Man","Crystal","Dr. Strange","Human Torch","Ka-Zar","King Gerark","Lyja the Lazerfist","Master Pandemonium","Max (Fortisquian)","Mole Man","Morbius","Ms. Marvel (Sharon Ventura)","Shanna the She-Devil","Shuma-Gorath","Superior (Bridge)","Thing"],"name":"Fantastic Four #313-317","link":"fantastic_four_313-317","credits":["Marc Siry","Ralph Macchio","Joe Sinnott","Sal Buscema","Steve Englehart","Keith Pollard","Romeo Tanghal"],"i":3593},{"year":1988,"characters":["El Toro","Hawkeye","Henry Pym","Khonshu","Kristoff","Madame X","Mockingbird","MODAM","Moon Knight","Night Rider (Hamilton Slade)","Quicksilver","Scarlet Beetle","Scarlet Witch","Tigra","Vision","Voice","Wasp","Wonder Man","Zarrko the Tomorrow Man"],"name":"West Coast Avengers #33-36","link":"west_coast_avengers_33-36","credits":["Al Milgrom","Gregory Wright","Steve Englehart","Mike Machlan","Mark Gruenwald"],"i":3594},{"year":1988,"characters":["Microchip","Microchip Jr.","Punisher"],"name":"Punisher #8-9","link":"punisher_8-9","credits":["Whilce Portacio","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3595},{"year":1988,"characters":["Arranger","Daredevil","Glorianna O'Breen","Karen Page","Kingpin","Rip","Typhoid Mary"],"name":"Daredevil #254","link":"daredevil_254","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3596},{"year":1988,"characters":["Bogeyman","Energizer","Gee","Jim Power","Lightspeed","Lighttrakker","Margaret Power","Mass Master"],"name":"Power Pack #37","link":"power_pack_37","credits":["Don Hudson","Stan Drake","Marc McLaurin","Carl Potts","Sal Velluto","Louise Simonson"],"i":3597},{"year":1988,"characters":["Arranger","Daredevil","Foggy Nelson","Karen Page","Kingpin","Typhoid Mary"],"name":"Daredevil #255","link":"daredevil_255","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3598},{"year":1988,"characters":["Cloak","Dagger","Dormammu","Dr. Strange","Enitharmon","Father Delgado","Father Michael Bowen","Kaluu","Mayhem","Mr. Jip","Phillip Carlisle","Rebecca 'Rusty' Nales","Yipyap"],"name":"Strange Tales #15","link":"strange_tales_15","credits":["<b>Title:","Dan Lawlis","<em>Doctor Strange<","Bob McLeod","Terry Austin","<b>Credits:","Richard Case","Marc McLaurin","Carl Potts","em>","Randy Emberlin","Peter Gillis","\"On having no head\""],"i":3599},{"year":1988,"characters":["Angel","Artie Maddicks","Beast","Boom Boom","Cyclops","Iceman","Infectia","Jean Grey","Leech","Rictor","Rusty Collins","Ship (Prosh)","Skids","Trish Tilby"],"name":"X-Factor #29","link":"x-factor_29","credits":["Walt Simonson","Bob Harras","Louise Simonson","Bobbie Chase","Bob Wiacek"],"i":3600},{"year":1988,"characters":["Mary Jane Watson","Morris Sloan","Sandy Kintzler","Silver Sable","Spider-Man","Uncle Morty"],"name":"Amazing Spider-Man #301","link":"amazing_spider-man_301","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3601},{"year":1988,"characters":["Daredevil","Eightball (Fatboys)","Foggy Nelson","Glorianna O'Breen","Karen Page","Kingpin","Rip","Typhoid Mary"],"name":"Daredevil #256","link":"daredevil_256","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3602},{"year":1988,"characters":["Barricade","Black Panther","Captain Blaze","Harrier","Hungyr","Panther God","Voortrekker","White Avenger"],"name":"Black Panther #1-4","link":"black_panther_1-4","credits":["Mark Gruenwald","Denys Cowan","Peter Gillis","Sam DeLaRosa"],"i":3603},{"year":1988,"characters":["Cloak","Dagger"],"name":"Marvel Comics Presents #9 (Cloak)","link":"marvel_comics_presents_9_cloak","credits":["Michael Rockwitz","Tony Salmons","Marc McLaurin","Alan Gordon","Terry Kavanagh"],"i":3604},{"year":1988,"characters":["Energizer","Gee","Jim Power","Lightspeed","Margaret Power","Mass Master"],"name":"Power Pack #38","link":"power_pack_38","credits":["Don Hudson","Stan Drake","Julianna Jones","Marc McLaurin","Carl Potts","Sal Velluto"],"i":3605},{"year":1988,"characters":["Aptak","Contemplator Skrull","Kylor","Nenora","Nova (Frankie Raye)","Ripan","Ronan the Accuser","S'Byll","Silver Surfer","Soul Gem","Supreme Intelligence","Surfer-Skrull"],"name":"Silver Surfer #13-14","link":"silver_surfer_13-14","credits":["Michael Higgins","Craig Anderson","Jose Marzan","Dave Cockrum","Michael Rockwitz","Josef Rubinstein","Joe Staton","Steve Englehart","A.A. Perry"],"i":3606},{"year":1988,"characters":["Beast","Cloak","Dagger","Dr. Strange","Enitharmon","Father Michael Bowen","Iceman","Imei Chang","Jean Grey","Kaluu","Mayhem","Mr. Fantastic","Mr. Jip","Night","Phillip Carlisle","Rebecca 'Rusty' Nales","Rintrah","Sara Wolfe","Ship (Prosh)","Thing","Victoria Bentley","Wong","Yipyap"],"name":"Strange Tales #16-19","link":"strange_tales_16-19","credits":["<b>Title:","Erik Larsen (#19 only)","Kevin Nowlan (#18 only)","\"Go ask Alice...!\"","Terry Austin (#19 only)","Dan Lawlis","<em>Doctor Strange<","\"This old man came rolling home!\"","Terry Austin","Marc McLaurin","<b>Credits:","Richard Case","\"A touch of your hand\"","em>","\"Servants of the secret fire!\"","Randy Emberlin","Carl Potts","Peter Gillis","Bob Wiacek"],"i":3607},{"year":1988,"characters":["Beast","Cloak","Dagger","Day","Father Delgado","Father Michael Bowen","Franklin Richards","Iceman","Invisible Woman","Jean Grey","Mayhem","Mr. Fantastic","Mr. Jip","Mr. Rasputin","Night","Phillip Carlisle","Predator","Rebecca 'Rusty' Nales","Trish Tilby","Yipyap"],"name":"Cloak and Dagger #1-2","link":"cloak_and_dagger_1-2","credits":["P. Craig Russell","Dan Lawlis","Terry Austin","Marc McLaurin","Carl Potts"],"i":3608},{"year":1988,"characters":["Mary Jane Watson","Rosa Cassada","Sandman","Silver Sable","Spider-Man","Uncle Morty"],"name":"Amazing Spider-Man #302","link":"amazing_spider-man_302","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3609},{"year":1988,"characters":["Alfred Coppersmith","Daredevil","Punisher"],"name":"Punisher #10","link":"punisher_10","credits":["Whilce Portacio","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3610},{"year":1988,"characters":["Alfred Coppersmith","Daredevil","Kingpin","Punisher","Typhoid Mary"],"name":"Daredevil #257","link":"daredevil_257","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3611},{"year":2008,"characters":["Arranger","Ben Urich","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Persuader","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #139","link":"spectacular_spider-man_139","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3612},{"year":1988,"characters":["Ant-Man (Scott Lang)","Bertram Hindel","Edwin Cord","Garrison Quint","Iron Man","Kathleen Dare","Marcy Pearson","Mrs. Arbogast","Rae LaCoste","Stature","War Machine"],"name":"Iron Man #233","link":"iron_man_233","credits":["Butch Guice","Bob Layton","David Michelinie","Howard Mackie"],"i":3613},{"year":1988,"characters":["J. Jonah Jameson","Mary Jane Watson","Sandman","Silver Sable","Spider-Man"],"name":"Amazing Spider-Man #303","link":"amazing_spider-man_303","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3614},{"year":1988,"characters":["Bengal","Daredevil","Willie Lincoln"],"name":"Daredevil #258","link":"daredevil_258","credits":["Ron Lim","Ralph Macchio","Fabian Nicieza","Jim Sanders III"],"i":3615},{"year":1988,"characters":["Aloysius R. Jamesley","Balder","Bloodaxe (Jackie Lukus)","Daredevil","Earth-Lord","Enchantress","Fandral","Harris Hobbs","Heimdall","Hogun","Jane Foster","Jerry Sapristi","Jimmy Kincaid","Keith Kincaid","Kevin Masterson","Quicksand","Seth","Skyhawk","Susan Austin","Thor","Thunderstrike","Valdor","Vizier","Volstagg","Wind Warrior"],"name":"Thor #392-395","link":"thor_392-395","credits":["Marc Siry","Bob Hall","Al Milgrom","Ralph Macchio","Tom DeFalco","Roger Stern","Brett Breeding","Ron Frenz","Tony DeZuniga"],"i":3616},{"year":1989,"characters":["Captain Marvel (Monica Rambeau)","Marie Laveau","Scarlet Witch"],"name":"Marvel Fanfare #42 (Captain Marvel)","link":"marvel_fanfare_42_captain_marv","credits":["Bob Hall","Dennis Mallonee","Bill Sienkiewicz","Al Milgrom"],"i":3617},{"year":1988,"characters":["Al Laguardia","Doc Benson","Don Phipps","Justin Baldwin","Maddie Baldwin","Niels","Officer Burnatt","Speedball"],"name":"Speedball #1","link":"speedball_1","credits":["Butch Guice","Tom DeFalco","Steve Ditko","Roger Stern","Terry Kavanagh","Howard Mackie"],"i":3618},{"year":1988,"characters":["Punisher"],"name":"Punisher #11","link":"punisher_11","credits":["Whilce Portacio","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3619},{"year":1988,"characters":["Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Dr. Druid","Henry Pym","Jarvis","Kang","Kang (Chairman)","Kang (Cobra)","Kang (Fred)","Marrina","Ravonna","She-Hulk","Sub-Mariner","Thor"],"name":"Avengers #291-294","link":"avengers_291-294","credits":["Walt Simonson","John Buscema","Gregory Wright","Tom Palmer","Mark Gruenwald"],"i":3620},{"year":1988,"characters":["Cannonball","Colossus","Dazzler","Gateway","Havok","Longshot","Madelyne Pryor","Magik","Mirage (Dani Moonstar)","Rogue","S'ym","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #231","link":"uncanny_x-men_231","credits":["Ann Nocenti","Dan Green","Chris Claremont","Rick Leonardi"],"i":3621},{"year":1988,"characters":["Aunt May","Black Fox","Ginny Edwards","J. Jonah Jameson","Jonathan Caesar","Mary Jane Watson","Prowler","Spider-Man"],"name":"Amazing Spider-Man #304-305","link":"amazing_spider-man_304-305","credits":["Todd McFarlane","Christopher Ivy","Jim Salicrup","Jim Sanders III","Josef Rubinstein","Glenn Herdling","Mark McKenna","Rodney Ramos","Hector Collazo","David Michelinie","Pat Redding","Ken Lopez"],"i":3622},{"year":1988,"characters":["Iron Man","Kathleen Dare","Radioactive Man","Spider-Man","Vic Martinelli","War Machine"],"name":"Iron Man #234","link":"iron_man_234","credits":["Butch Guice","Bob Layton","David Michelinie","Howard Mackie"],"i":3623},{"year":1991,"characters":["Energizer","Gee","Lightspeed","Magik","Mass Master","Warlock"],"name":"Marvel Fanfare #55 (Power Pack)","link":"marvel_fanfare_55_power_pack","credits":["Al Milgrom","Rob Tokar","Terry Austin","Colleen Doran","Chris Cooper","Bob Wiacek"],"i":3624},{"year":1988,"characters":["Goblyn","Madison Jeffries","Manikin","Pathway","Persuasion","Purple Man","Sasquatch","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #62","link":"alpha_flight_62","credits":["Bill Mantlo","Al Milgrom","Marc McLaurin","Carl Potts","Jim Lee"],"i":3625},{"year":1989,"characters":["Madame Joy","O'Donnell (Princess Bar)","Razorfist III","Sapphire Styx","Tyger Tiger","Wolverine"],"name":"Marvel Comics Presents #1-10 (Wolverine)","link":"marvel_comics_presents_1-10_wo","credits":["John Buscema","Michael Rockwitz","Chris Claremont","Klaus Janson","Terry Kavanagh"],"i":3626},{"year":1989,"characters":["Man-Thing"],"name":"Marvel Comics Presents #1-12 (Man-Thing)","link":"marvel_comics_presents_1-12_ma","credits":["Don Hudson","Tom Sutton","Brad Joyce","Michael Rockwitz","Terry Kavanagh","Steve Gerber"],"i":3627},{"year":1988,"characters":["Black Jack Tarr","Cat (Shen Kuei)","Clive Reston","Leiko Wu","Shang-Chi"],"name":"Marvel Comics Presents #1-8 (Shang-Chi)","link":"marvel_comics_presents_1-8_sha","credits":["Tom Grindberg","Doug Moench","Dave Cockrum","Michael Rockwitz","Terry Kavanagh"],"i":3628},{"year":1988,"characters":["Absorbing Man","Anthony Gold","Hulk","Marlo Chandler","Michael Berengetti","Mona (Marlo's friend)","Suzie Berengetti"],"name":"Hulk #347","link":"hulk_347","credits":["Peter David","Jeff Purves","Valerie Gustovich","Michael Gustovich","James DiGiovanna","Bobbie Chase"],"i":3629},{"year":1988,"characters":["Absorbing Man","Anthony Gold","Hulk","Marlo Chandler","Michael Berengetti","Mona (Marlo's friend)"],"name":"Hulk #348","link":"hulk_348","credits":["Peter David","Jeff Purves","Valerie Gustovich","Michael Gustovich","James DiGiovanna","Bobbie Chase"],"i":3630},{"year":1989,"characters":["Black Blade","Lindsay McCabe","O'Donnell (Princess Bar)","Silver Samurai","Spider-Woman (Jessica Drew)","Tai (Madripoor police)","Wolverine"],"name":"Wolverine #1-3","link":"wolverine_1-3","credits":["Bob Harras","Chris Claremont","Al Williamson","John Buscema"],"i":3631},{"year":1988,"characters":["Apocalypse","Artie Maddicks","Beast","Boom Boom","Caliban","Cyclops","Dr. Druid","Dr. Stack","Franklin Richards","High Evolutionary","Iceman","Jean Grey","Leech","Major Purge","Psylocke","Rachel Summers","Rictor","Rusty Collins","Ship (Prosh)","Skids","White Queen (Emma Frost)"],"name":"X-Factor annual #3","link":"x-factor_annual_3","credits":["Al Milgrom","Bob Harras","Josef Rubinstein","Tom Artis","Louise Simonson","Terry Shoemaker"],"i":3632},{"year":1988,"characters":["Colossus","Dazzler","Gateway","Hannah Conover","Havok","Josie Thomas","Longshot","Madelyne Pryor","Psylocke","Rev. William Conover","Rogue","S'ym","Storm","Trish Tilby","Wolverine"],"name":"Uncanny X-Men #232-234","link":"uncanny_x-men_232-234","credits":["Daryl Edelman","Marc Silvestri","Ann Nocenti","Bob Harras","Chris Claremont","Dan Green"],"i":3633},{"year":1988,"characters":["Microchip","Punisher"],"name":"Punisher annual #1","link":"punisher_annual_1","credits":["Scott Williams","Roger Salick","Carl Potts","Mike Vosburg","Mark Texeira","Mike Baron"],"i":3634},{"year":1988,"characters":["Galactus","High Evolutionary","Ikaris","Karkas","Makkari","Mantis","Nova (Frankie Raye)","Sersi","Silver Surfer","Super-Skrull","Thena"],"name":"Silver Surfer annual #1","link":"silver_surfer_annual_1","credits":["Ron Lim","Craig Anderson","Christopher Ivy","Josef Rubinstein","Joe Staton","Steve Englehart","Randy Emberlin"],"i":3635},{"year":1988,"characters":["Hawkeye","Henry Pym","Mantis","Mockingbird","Moon Knight","Scarlet Witch","Tigra","Vision","Voice","Wasp","Wonder Man"],"name":"West Coast Avengers #37","link":"west_coast_avengers_37","credits":["Steve Englehart","Mike Machlan","Al Milgrom","Howard Mackie"],"i":3636},{"year":1990,"characters":["Vindicator (Heather Hudson)","Wild Child","Wolverine"],"name":"Marvel Comics Presents #51-53 (Wolverine)","link":"marvel_comics_presents_51-53_w","credits":["Rob Liefeld","Christopher Ivy","Fabian Nicieza","Josef Rubinstein","Kelly Corvese","Terry Kavanagh"],"i":3637},{"year":1991,"characters":["Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Marvel Comics Presents #64-68 (Fantastic Four)","link":"marvel_comics_presents_64-68_f","credits":["Sam Grainger","Kelly Corvese","Tom Morgan","Bob DeNatale","Tim Dzon","Terry Kavanagh","Mike Harris"],"i":3638},{"year":1988,"characters":["Allison McCourt","Bogeyman","Energizer","Gee","Jim Power","Lightspeed","Lighttrakker","Margaret Power","Mass Master"],"name":"Power Pack #39","link":"power_pack_39","credits":["Mark Farmer","Marc McLaurin","Carl Potts","Sal Velluto","Louise Simonson"],"i":3639},{"year":1988,"characters":["Bogeyman","Cannonball","Energizer","Gee","J. Jonah Jameson","Jim Power","Lightspeed","Lighttrakker","Magik","Magneto","Margaret Power","Mass Master","Mirage (Dani Moonstar)","N'astirh","Sunspot","Warlock","Wolfsbane"],"name":"Power Pack #40","link":"power_pack_40","credits":["Marc McLaurin","Carl Potts","Sal Velluto","Gerry Talaoc","Louise Simonson"],"i":3640},{"year":1988,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Brightwind","Bulk","Cannonball","Dr. Stack","Empath","Glow Worm","High Evolutionary","Lucius Aquilla","Magik","Magma","Magneto","Major Purge","Mirage (Dani Moonstar)","Sunspot","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants annual #4","link":"new_mutants_annual_4","credits":["Ann Nocenti","Bob McLeod","Bob Harras","June Brigman","Louise Simonson","Roy Richardson"],"i":3641},{"year":1988,"characters":["Conchita Ortiz","Microchip","Punisher"],"name":"Punisher #12-13","link":"punisher_12-13","credits":["Whilce Portacio","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3642},{"year":1988,"characters":["Amanda Robertson","Arranger","Ben Urich","Gwen Stacy Clone","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Kingpin","Martha Robertson","Mary Jane Watson","Persuader","Punisher","Randy Robertson","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #140-142","link":"spectacular_spider-man_140-142","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3643},{"year":1988,"characters":["Dr. Druid","Hawkeye"],"name":"Solo Avengers #10","link":"solo_avengers_10","credits":["<b>Title:","Jose Marzan","M.D. Bright","D.G. Chichester","Tom DeFalco","<b>Credits:","Lee Weeks","Gregory Wright","em>","<em>Dr. Druid<","\"Token sacrifice\"","Mark Gruenwald","Margaret Clark"],"i":3644},{"year":1988,"characters":["Bobcat","Butcher T. Washington","Dionysius","Hawkeye","Hercules","Zeus"],"name":"Solo Avengers #11","link":"solo_avengers_11","credits":["Butch Guice","<b>Title:","<em>Hercules<","M.D. Bright","Tom DeFalco","Jose Marzon","<b>Credits:","Gregory Wright","em>","Bob Layton","Mark Gruenwald","\"A farewell --","arms\""],"i":3645},{"year":1989,"characters":["Morris Walters","She-Hulk","Vision"],"name":"Marvel Fanfare #48","link":"marvel_fanfare_48","credits":["Sue Flaxman","Michael Higgins","<b>Title:","Don Perlin","Al Milgrom","Jose Marzan","Jim Sanders III","<em>Vision<","Josef Rubinstein","<b>Credits:","Kerry Gammill","em>","\"California dreaming\"","Ron Wilson","<em>She-Hulk (second story)<","Dwight Jon Zimmerman"],"i":3646},{"year":1988,"characters":["Aunt May","Ben Urich","Betty Brant","Dr. Druid","Flash Thompson","Kate Cushing","Mary Jane Watson","Rev. Jackson Tolliver","Spider-Man"],"name":"Web of Spider-Man #40-43","link":"web_of_spider-man_40-43","credits":["Peter David","Jim Salicrup","Glenn Herdling","Keith Williams","Alex Saviuk"],"i":3647},{"year":1988,"characters":["Ammo","Bullet","Bushwacker","Butch (Fatboys)","Daredevil","Jet (Wildboy)","Karen Page","Kingpin","Lance Cashman","Spit (Wildboy)","Typhoid Mary"],"name":"Daredevil #259","link":"daredevil_259","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3648},{"year":1988,"characters":["Arranger","Ben Urich","Daredevil","High Evolutionary","J. Jonah Jameson","Kate Cushing","Kingpin","Maddie Baldwin","Mary Jane Watson","Speedball","Spider-Man"],"name":"Amazing Spider-Man annual #22","link":"amazing_spider-man_annual_22","credits":["Butch Guice","Jim Salicrup","Tom DeFalco","Steve Ditko","Mark Bagley","Roger Stern","David Michelinie","Mike Esposito"],"i":3649},{"year":1988,"characters":["Aron the Watcher","Black Bolt","Crystal","Dr. Doom","Gorgon","High Evolutionary","Human Torch","Karnak","Lockjaw","Luna","Maya (Inhuman)","Medusa","Ms. Marvel (Sharon Ventura)","Quicksilver","Roberta","Thing","Triton","Uatu the Watcher","Willie Lumpkin"],"name":"Fantastic Four annual #21","link":"fantastic_four_annual_21","credits":["Kieron Dwyer","Butch Guice","Ralph Macchio","Joe Sinnott","Edward L. Norton?","Jose Marzan","Steve Englehart"],"i":3650},{"year":1988,"characters":["Al Laguardia","David Bealer","Doc Benson","Don Phipps","Justin Baldwin","Maddie Baldwin","Niels","Officer Burnatt","Speedball","Sticker","Teri Cooper"],"name":"Speedball #2","link":"speedball_2","credits":["Butch Guice","Tom DeFalco","Steve Ditko","Roger Stern","Terry Kavanagh"],"i":3651},{"year":1989,"characters":["Captain America","Fear Eater"],"name":"Marvel Comics Presents #2 (Captain America)","link":"marvel_comics_presents_2_capta","credits":["Al Milgrom","Michael Rockwitz","Terry Kavanagh"],"i":3652},{"year":1989,"characters":["Daredevil","Fear Eater","Thing","Thor"],"name":"Marvel Comics Presents #3-4 (Thing & Thor)","link":"marvel_comics_presents_3-4_thi","credits":["Al Milgrom","Michael Rockwitz","Terry Kavanagh"],"i":3653},{"year":1988,"characters":["Abe Zimmer","Garrison Quint","Grey Gargoyle","Iron Man","Kathleen Dare","Marcy Pearson","Mrs. Arbogast","Mrs. Fruitbagel","Rae LaCoste","War Machine"],"name":"Iron Man #235-236","link":"iron_man_235-236","credits":["Butch Guice","Bob Layton","David Michelinie","Howard Mackie"],"i":3654},{"year":1988,"characters":["Adrian Sammish","Avalanche","Battlestar","Blob","Burner (Crucible)","Captain America","Crimson Commando","D-Man","Destiny","Diamondback","Douglas Rockwell","Ethan Thurm","Falcon","General Lewis Haywerth","Henry Peter Gyrich","Left-Winger","Lifter (Meteorite)","Mentallo","Mist Mistress","Mystique","Nomad","Peeper (Occult)","Pyro","Quill (Resistants)","Raymond Sikorski","Red Skull","Red Skull (Communist)","Redwing","Right-Winger","Scourge III","Shocker (Paralyzer)","Sidewinder","Spiral","Stonewall","Super Sabre","USAgent","Vagabond","Valerie Cooper"],"name":"Captain America #345-347","link":"captain_america_345-347","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3655},{"year":1988,"characters":["Daredevil","Turk"],"name":"Marvel Comics Presents #5 (Daredevil)","link":"marvel_comics_presents_5_dared","credits":["Michael Gustovich","Terry Kavanagh","Dwayne Turner","Michael Rockwitz"],"i":3656},{"year":1988,"characters":["Captain Britain","Courtney Ross","Dai Thomas","Kylun","Meggan","Nigel Frobisher","Nightcrawler","Rachel Summers","Red Queen (616 Crazy Gang)","Shadowcat (Kitty Pryde)","Tweedledope (616 Crazy Gang)","Vixen","Widget"],"name":"Excalibur #1-2","link":"excalibur_1-2","credits":["Ann Nocenti","Michael Rockwitz","Chris Claremont","Alan Davis","Paul Neary","Terry Kavanagh"],"i":3657},{"year":1988,"characters":["Hulk","Marlo Chandler","Michael Berengetti","Suzie Berengetti"],"name":"Marvel Comics Presents #6 (Hulk)","link":"marvel_comics_presents_6_hulk","credits":["Jeff Purves","Michael Rockwitz","Pat Redding","Bobbie Chase","Terry Kavanagh"],"i":3658},{"year":1988,"characters":["Madison Jeffries","Vindicator (Heather Hudson)"],"name":"Alpha Flight #63","link":"alpha_flight_63","credits":["Don Hudson","Marc McLaurin","Carl Potts","Michael Gustovich","Hugh Haynes","James D. Hudnall"],"i":3659},{"year":1988,"characters":["Aunt May","Black Cat","Chameleon","Humbug","Jonathan Caesar","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #306","link":"amazing_spider-man_306","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3660},{"year":1988,"characters":["Adam Plunder","Amphibius (Savage Land Mutate)","Barbarus","Brainchild (Savage Land Mutate)","C'jime","Colossus","Dazzler","Garokk","Gateway","Gaza","Havok","High Evolutionary","Ka-Zar","Longshot","Lupo","M'rin","Madelyne Pryor","Major Domo","Minor Domo","Mojo","Nereel","Peter (Nereel's baby)","Psylocke","Ricochet Rita (Spiral)","Rogue","Shanna the She-Devil","Storm","Terminus","Wolverine","X-Baby Colossusus","X-Baby Dazzler","X-Baby Havok","X-Baby Longshot","X-Baby Psychilde","X-Baby Shower","X-Baby Sugah","X-Baby Wolvie","Zabu","Zaladane"],"name":"Uncanny X-Men annual #12","link":"uncanny_x-men_annual_12","credits":["Bob Harras","Art Adams","Bob Wiacek","Chris Claremont"],"i":3661},{"year":1988,"characters":["Arthur Chekov","Aunt May","Black Cat","Chameleon","Ginny Edwards","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Jonathan Caesar","Manslaughter Marsdale","Mary Jane Watson","Nate Lubenski","Sandy Kintzler","Sgt. Tork","Spider-Man","Stone (Spider-Man villain)","Styx","Taskmaster"],"name":"Amazing Spider-Man #307-309","link":"amazing_spider-man_307-309","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3662},{"year":1988,"characters":["Al Laguardia","Claude (Doc Benson lab assistant)","David Bealer","Don Phipps","Justin Baldwin","Leaper Logan","Maddie Baldwin","Niels","Officer Burnatt","Speedball","Teri Cooper"],"name":"Speedball #3","link":"speedball_3","credits":["Mary Jo Duffy","Bruce D. Patterson","Steve Ditko","Roger Stern","Terry Kavanagh"],"i":3663},{"year":1988,"characters":["Sub-Mariner"],"name":"Marvel Comics Presents #7 (Sub-Mariner)","link":"marvel_comics_presents_7_sub-m","credits":["Dan Adkins","Michael Rockwitz","Steve Ditko","Hollis Bright","Terry Kavanagh"],"i":3664},{"year":1988,"characters":["Iron Man","Zzzax"],"name":"Marvel Comics Presents #8 (Iron Man)","link":"marvel_comics_presents_8_iron_","credits":["Christopher Ivy","Michael Rockwitz","Javier Saltares","Sholly Fisch","Terry Kavanagh"],"i":3665},{"year":1991,"characters":["Hulk"],"name":"Marvel Comics Presents #95 (Hulk)","link":"marvel_comics_presents_95_hulk","credits":["Vince Evans","Mark Powers","Terry Kavanagh","Danny Fingeroth"],"i":3666},{"year":1988,"characters":["Carlos Cardinale","High Evolutionary","Kingpin","Man-Thing","Mary Jane Watson","Poison","Slug (Crimelord)","Spider-Man"],"name":"Web of Spider-Man annual #4","link":"web_of_spider-man_annual_4","credits":["Alex Saviuk","Cynthia Martin","Jim Salicrup","Steve Gerber"],"i":3667},{"year":1989,"characters":["Albert Cleary","Anne (Damage Control secretary)","Anne Marie Hoag","Bart Rozum","Eugene Strausser","Henry Ackerdson","Iron Man","Jay (Damage Control guard)","John Porter","Lenny Ballinger","Marcy Pearson","Robin Chapel","War Machine"],"name":"Damage Control #3","link":"damage_control_3","credits":["Sid Jacobson","Bob Wiacek","Ernie Colon","Dwayne McDuffie"],"i":3668},{"year":1988,"characters":["Astronomer","Champion","Collector","Death","Franklin Richards","Galactus","Gardener","Grandmaster","In-Betweener","Invisible Woman","Lord Chaos","Malice (Sue Storm's psionic entity)","Master Order","Mr. Fantastic","Nova (Frankie Raye)","Possessor","Punisher Robot","Runner","Silver Surfer","Soul Gem","Trader"],"name":"Silver Surfer #15-18","link":"silver_surfer_15-18","credits":["Sue Flaxman","Ron Lim","Craig Anderson","Josef Rubinstein","Steve Englehart","A.A. Perry"],"i":3669},{"year":1988,"characters":["Beyonder","Blastaar","Dr. Doom","Human Torch","Kubik","Lyja the Lazerfist","Molecule Man","Ms. Marvel (Sharon Ventura)","Roberta","Shaper of Worlds","Thing","Volcana"],"name":"Fantastic Four #318-319","link":"fantastic_four_318-319","credits":["Ralph Macchio","Joe Sinnott","Steve Englehart","Keith Pollard","Marc Siry"],"i":3670},{"year":1988,"characters":["Adam Plunder","Bill Foster","Black Panther","Dr. Stack","Hawkeye","High Evolutionary","Ka-Zar","Khonshu","Mantis","Moon Knight","Scarlet Witch","Shanna the She-Devil","Tigra","Vision","Wonder Man","Zabu"],"name":"West Coast Avengers annual #3","link":"west_coast_avengers_annual_3","credits":["Al Milgrom","Christopher Ivy","Steve Englehart","Gerry Talaoc","Mark Gruenwald"],"i":3671},{"year":1988,"characters":["Arranger","Carlos Lobo","Eduardo Lobo","Gwen Stacy Clone","Kingpin","Mary Jane Watson","Persuader","Punisher","Spider-Man"],"name":"Spectacular Spider-Man #143","link":"spectacular_spider-man_143","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3672},{"year":1988,"characters":["Betty Brant","Brightsword","Caduceus","Calculus","Daydreamer","Genii","Gwen Stacy Clone","Harvest","High Evolutionary","Highnote","Juniper","Katos","Mary Jane Watson","Mindsinger","Moonstalker","Sea Witch","Spider-Man","Splice","Varua"],"name":"Spectacular Spider-Man annual #8","link":"spectacular_spider-man_annual_","credits":["Keith Williams","Mark Bagley","Jim Salicrup","Gerry Conway"],"i":3673},{"year":1988,"characters":["Aurora","Dream Queen","Goblyn","Hodiak","Jade Dragon","Madison Jeffries","Manikin","Nelvanna","Ox (China Force)","Pathway","Persuasion","Rabbit (China Force)","Sasquatch","Snake (China Force)","Snowbird","Somon","Talisman","Tundra","Turoq","Veronica Langkowski","Vindicator (Heather Hudson)"],"name":"Alpha Flight #64","link":"alpha_flight_64","credits":["Bill Mantlo","Al Milgrom","Marc McLaurin","Carl Potts","Jim Lee"],"i":3674},{"year":1989,"characters":["Daredevil","Jason Hunt","Kingpin","Microchip","Philip Richards","Punisher","Rikichi","Yuriko Ezaki"],"name":"Punisher War Journal #1-3","link":"punisher_war_journal_1-3","credits":["Don Daley","Carl Potts","Jim Lee"],"i":3675},{"year":1988,"characters":["Energizer","Gee","Lightspeed","Margaret Power","Mass Master"],"name":"Power Pack #41","link":"power_pack_41","credits":["Don Hudson","Steve Heyer","Stan Drake","Marc McLaurin","Carl Potts","Sal Velluto"],"i":3676},{"year":1988,"characters":["Al Laguardia","Claude (Doc Benson lab assistant)","Don Phipps","Emily Barron","Ghost of Springdale High","Joe Spenser","Justin Baldwin","Maddie Baldwin","Nathan Boder","Niels","Officer Burnatt","Speedball"],"name":"Speedball #4","link":"speedball_4","credits":["Steve Ditko","Terry Kavanagh","Roger Stern","Dan Adkins and Co."],"i":3677},{"year":1988,"characters":["El Aguila"],"name":"Marvel Comics Presents #9 (El Aguila)","link":"marvel_comics_presents_9_aguila","credits":["Michael Rockwitz","Scott Lobdell","Larry Alexander","Jim Sinclair","Terry Kavanagh"],"i":3678},{"year":1988,"characters":["Goblyn","Jade Dragon","Madison Jeffries","Manikin","Ox (China Force)","Pathway","Persuasion","Rabbit (China Force)","Rat (China Force)","Sasquatch","Snake (China Force)","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #65","link":"alpha_flight_65","credits":["Bill Mantlo","Carl Potts","Hugh Haynes","Al Milgrom"],"i":3679},{"year":1988,"characters":["Punisher","Reese McDowell","Vernon Brooks"],"name":"Punisher #14","link":"punisher_14","credits":["Whilce Portacio","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3680},{"year":1988,"characters":["Bertram Hindel","Iron Man","Mrs. Arbogast","War Machine"],"name":"Iron Man #237","link":"iron_man_237","credits":["Butch Guice","Bob Layton","David Michelinie","Howard Mackie"],"i":3681},{"year":1988,"characters":["Captain Britain","Courtney Ross","Juggernaut","Lockheed","Meggan","Nightcrawler","Opal Luna Sat-yr^9","Rachel Summers","Shadowcat (Kitty Pryde)","Tweedledope (616 Crazy Gang)","Vixen","Widget"],"name":"Excalibur #3","link":"excalibur_3","credits":["Terry Kavanagh","Alan Davis","Chris Claremont","Paul Neary"],"i":3682},{"year":1989,"characters":["Daredevil","Owl"],"name":"Daredevil #264","link":"daredevil_264","credits":["Ralph Macchio","Ann Nocenti","Steve Ditko","Mike Manley","Al Williamson","Marc Siry"],"i":3683},{"year":1990,"characters":["Daredevil"],"name":"Marvel Super Heroes #2 (Daredevil)","link":"marvel_super_heroes_2_daredevi","credits":["Terry Kavanagh","Mike DeCarlo","Dwayne Turner"],"i":3684},{"year":1988,"characters":["Angel","Artie Maddicks","Avalanche","Beast","Black Knight (Dane Whitman)","Blob","Boom Boom","Cameron Hodge","Crimson Commando","Cyclops","Destiny","Dr. Druid","Frenzy","Iceman","Infectia","Iron Man","Jean Grey","Leech","Mystique","N'astirh","Nanny II","Orphan-Maker","Pyro","Rictor","Rusty Collins","She-Hulk","Ship (Prosh)","Skids","Spiral","Stinger (X-Factor villain)","Stonewall","Super Sabre","Thor","Timeshadow","Tower","Trish Tilby"],"name":"X-Factor #30-33","link":"x-factor_30-33","credits":["Daryl Edelman","Walt Simonson","Steve Lightle (#32 only)","Tom DeFalco","Bob Harras","Louise Simonson","Bob Wiacek"],"i":3685},{"year":1988,"characters":["Artie Maddicks","Beast","Boom Boom","Crotus","Cyclops","Iceman","Jean Grey","Leech","N'astirh","Rictor","Rusty Collins","S'ym","Skids","Wiz Kid"],"name":"X-Terminators #1","link":"x-terminators_1","credits":["Al Milgrom","Jon Bogdanove","Bob Harras","Al Williamson","Louise Simonson"],"i":3686},{"year":1988,"characters":["Angel","Cameron Hodge","Candy Southern","Cyclops","Jean Grey","N'astirh","Nanny II","Orphan-Maker","Ship (Prosh)"],"name":"X-Factor #34","link":"x-factor_34","credits":["Daryl Edelman","Walt Simonson","Bob Harras","Louise Simonson","Bob Wiacek"],"i":3687},{"year":1988,"characters":["Artie Maddicks","Boom Boom","Cameron Hodge","Crotus","Leech","N'astirh","Rictor","Russell (Inferno Baby)","Rusty Collins","Skids","Timothy (Inferno Baby)","Wiz Kid"],"name":"X-Terminators #2","link":"x-terminators_2","credits":["Louise Simonson","Bob Harras","Jon Bogdanove","Al Milgrom"],"i":3688},{"year":1988,"characters":["Chief Magistrate Anderson","Colossus","Dazzler","Gateway","Genegineer (David Moreau)","Havok","Hawkshaw","Jennifer Ransome","Longshot","Madelyne Pryor","N'astirh","Phillip Moreau","Pipeline","Psylocke","Punchout","Rogue","Storm","Tam","Wipeout","Wolverine"],"name":"Uncanny X-Men #235-238","link":"uncanny_x-men_235-238","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Terry Austin","Chris Claremont","Rick Leonardi","Dan Green"],"i":3689},{"year":1988,"characters":["Black Knight (Dane Whitman)","Dr. Druid","Jarvis","Kang","Kang (Chairman)","Kang (Cobra)","Kang (Fred)","Kang (Mesozoic)","Ravonna","She-Hulk","Thor"],"name":"Avengers #295-297","link":"avengers_295-297","credits":["Walt Simonson","John Buscema","Gregory Wright","Tom Palmer","Mark Gruenwald"],"i":3690},{"year":1988,"characters":["Banshee (Horse)","Banshee (Western Era Horse)","Bill Foster","Hawkeye","Khonshu","Mantis","Martha Williams","Mockingbird","Moon Knight","Night Rider (Hamilton Slade)","Night Rider (Lincoln Slade)","Scarlet Witch","Tigra","Vision","Wonder Man"],"name":"West Coast Avengers #38-39","link":"west_coast_avengers_38-39","credits":["Al Milgrom","D.G. Chichester","Steve Englehart","Tom Morgan","Mark Gruenwald","David Hunt","Margaret Clark","Howard Mackie"],"i":3691},{"year":1988,"characters":["Battlestar","Captain America","Douglas Rockwell","Flag-Smasher","General Lewis Haywerth","Henry Peter Gyrich","Raymond Sikorski","Red Skull","USAgent","Valerie Cooper"],"name":"Captain America #348","link":"captain_america_348","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3692},{"year":1988,"characters":["Captain America","Glory Garsen","Jarvis","Mrs. Jarvis","Spider-Man"],"name":"Avengers #298","link":"avengers_298","credits":["Walt Simonson","John Buscema","Gregory Wright","Tom Palmer","Mark Gruenwald"],"i":3693},{"year":1988,"characters":["Hulk","Marlo Chandler","Mona (Marlo's friend)","Spider-Man"],"name":"Web of Spider-Man #44","link":"web_of_spider-man_44","credits":["Peter David","Jim Salicrup","Glenn Herdling","Keith Williams","Alex Saviuk"],"i":3694},{"year":1988,"characters":["Anthony Gold","Dr. Doom","Hulk","Spider-Man"],"name":"Hulk #349","link":"hulk_349","credits":["Peter David","Jeff Purves","Terry Austin","James DiGiovanna","Bobbie Chase"],"i":3695},{"year":1988,"characters":["Spider-Man","Vulture"],"name":"Web of Spider-Man #45","link":"web_of_spider-man_45","credits":["Alex Saviuk","Keith Williams","Adam Blaustein","Jim Salicrup"],"i":3696},{"year":1988,"characters":["Dr. Doom","Hulk","Hulk (Cosmos Automation)","Human Torch","Lyja the Lazerfist","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #320","link":"fantastic_four_320","credits":["Peter David","Joe Sinnott","Steve Englehart","Keith Pollard","Marc Siry","Ralph Maccho"],"i":3697},{"year":1988,"characters":["Beast","Dr. Doom","Hulk","Hulk (Cosmos Automation)","Thing"],"name":"Hulk #350","link":"hulk_350","credits":["Bobbie Chase","Terry Austin","Peter David","Jeff Purves"],"i":3698},{"year":1988,"characters":["Aron the Watcher","Dragon Man","Human Torch","Lyja the Lazerfist","Ms. Marvel (Sharon Ventura)","She-Hulk","Thing"],"name":"Fantastic Four #321","link":"fantastic_four_321","credits":["Ron Lim","Steve Englehart","Romeo Tanghal","Ralph Macchio"],"i":3699},{"year":1988,"characters":["Attuma","Beast","Captain America","Falcon","Hercules","High Evolutionary","Hulk","Jocasta","Kro","Yellowjacket (Rita Demara)"],"name":"Avengers annual #17","link":"avengers_annual_17","credits":["Walt Simonson","M.D. Bright","Valerie Gustovich","Michael Gustovich","Mark Gruenwald"],"i":3700},{"year":1989,"characters":["Battlestar","Captain America","D-Man","Flag-Smasher","USAgent"],"name":"Captain America #349","link":"captain_america_349","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Gregory Wright","Mark Gruenwald"],"i":3701},{"year":1988,"characters":["Abomination","Hawkeye","Tyrannus"],"name":"Solo Avengers #12 (Hawkeye)","link":"solo_avengers_12_hawkeye","credits":["Ralph Macchio","Ron Lim","Jose Marzan","Tom DeFalco","Gregory Wright","Mark Gruenwald"],"i":3702},{"year":1990,"characters":["Daredevil","Kingpin"],"name":"Marvel Super Heroes #4 (Daredevil)","link":"marvel_super_heroes_4_daredevi","credits":["Robert Campanella","Grant Miehm"],"i":3703},{"year":1991,"characters":["Daredevil"],"name":"Marvel Comics Presents #81 (Daredevil)","link":"marvel_comics_presents_81_dare","credits":["Robert DeNatale","Marshall Rogers","Kelly Corvese","Al Williamson","Terry Kavanagh"],"i":3704},{"year":1989,"characters":["Hulk","Marlo Chandler","Mona (Marlo's friend)","Suzie Berengetti"],"name":"Hulk #351-352","link":"hulk_351-352","credits":["Peter David","Jeff Purves","Terry Austin","Bobbie Chase","James DiGiovanna","Bob Wiacek"],"i":3705},{"year":1988,"characters":["Ben Urich","Boomerang","Cynthia Bernhammer","Frank Farrow","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Kristy Watson","Mary Jane Watson","Randy Robertson","Spider-Man"],"name":"Spectacular Spider-Man #144-145","link":"spectacular_spider-man_144-145","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3706},{"year":1988,"characters":["Bullet Biker","Gayle Rogers","Hawkeye","Wonder Man"],"name":"Solo Avengers #13","link":"solo_avengers_13","credits":["Ralph Macchio","Ron Lim","<b>Title:","Butch Guice","Jose Marzan","Tom DeFalco","<b>Credits:","Gregory Wright","Dwayne McDuffie","em>","Mark Gruenwald","<em>Wonder Man<"],"i":3707},{"year":1989,"characters":["Glorian","Hulk","Marlo Chandler","Michael Berengetti","Suzie Berengetti"],"name":"Hulk #353","link":"hulk_353","credits":["Peter David","Jeff Purves","Terry Austin","James DiGiovanna","Bobbie Chase"],"i":3708},{"year":1988,"characters":["Anne-Marie Baker","Evan Swann","Killer Shrike","Mary Jane Watson","Spider-Man","Tinkerer"],"name":"Amazing Spider-Man #310","link":"amazing_spider-man_310","credits":["Todd McFarlane","Terry Fitzgerald","Jim Salicrup","Glenn Herdling","David Michelinie"],"i":3709},{"year":1989,"characters":["Glorian","Hulk","Marlo Chandler","Michael Berengetti","Mona (Marlo's friend)","Suzie Berengetti"],"name":"Hulk #354","link":"hulk_354","credits":["Peter David","Jeff Purves","James DiGiovanna","Bobbie Chase","Marie Severin"],"i":3710},{"year":1988,"characters":["Brothers Grimm III","Dansen Macabre","Digger (Night Shift)","Gypsy Moth","Hawkeye","Khonshu","Misfit","Mockingbird","Moon Knight","Needle","Scarlet Witch","Shroud","Tatterdemalion","Thomas (VSW Baby)","Ticktock","Tigra","Vision","Werewolf By Night","William (VSW Baby)","Wonder Man"],"name":"West Coast Avengers #40","link":"west_coast_avengers_40","credits":["Al Milgrom","Mark Gruenwald","Howard Mackie","Michael Gustovich"],"i":3711},{"year":1989,"characters":["Clea","Dormammu","Dr. Strange","Gaea","Imei Chang","Sara Wolfe","Topaz","Wong"],"name":"Doctor Strange #1-2","link":"doctor_strange_sorcerer_suprem","credits":["Richard Case","Marc McLaurin","Carl Potts","Randy Emberlin","Peter Gillis"],"i":3712},{"year":1988,"characters":["Ben Locklin","Black King (Sebastian Shaw)","Black Queen (Selene)","Cannonball","Conal Duran","Gosamyr","Grey Havero","Lila Cheney","Magik","Magneto","Mirage (Dani Moonstar)","S'ym","Spyder","Sunspot","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #67-70","link":"new_mutants_67-70","credits":["Al Milgrom","Daryl Edelman","Bob Harras","Al Williamson","Louise Simonson","Terry Shoemaker","Bret Blevins"],"i":3713},{"year":1989,"characters":["Balder","Black Bolt","Black Knight (Dane Whitman)","Caber","Dagda","Earth-Lord","Enchantress","Fandral","Gorgon","Grog","Gudrun","Haag","Heimdall","Hildy","Hogun","Horus","Isis","Karnak","Karnilla","Kevin Masterson","Leir","Loki","Lorelei (Norse Goddess)","Odin","Osiris","Seth","Sif","Skyhawk","Surtur","Thor","Thunderstrike","Triton","Tyr","Valdor","Vizier","Volstagg","Wind Warrior"],"name":"Thor #396-400","link":"thor_396-400","credits":["Marc Siry","Ralph Macchio","Don Heck","Joe Sinnott","Tom DeFalco","Brett Breeding","Ron Frenz","Romeo Tanghal"],"i":3714},{"year":1989,"characters":["Banshee (Horse)","Banshee (Western Era Horse)","Hellstorm","Khonshu","Leir","Mockingbird","Moon Knight","Night Rider (Carter Slade)","Night Rider (Hamilton Slade)","Night Rider (Lincoln Slade)","Seth","Sif","Tigra"],"name":"West Coast Avengers #41","link":"west_coast_avengers_41","credits":["Tom DeFalco","Tom Morgan","Howard Mackie","Ralph Macchio"],"i":3715},{"year":1988,"characters":["Ammo","Bullet","Bushwacker","Butch (Fatboys)","Daredevil","Darla (Fatboys)","Eightball (Fatboys)","Human Torch","Jet (Wildboy)","Karen Page","Kingpin","Spit (Wildboy)","Typhoid Mary"],"name":"Daredevil #260-261","link":"daredevil_260-261","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Eric Siry"],"i":3716},{"year":1989,"characters":["Champion","Clumsy Foulup","Collector","Contemplator Skrull","Firelord","Franklin Richards","Galactus","Gardener","Grandmaster","Invisible Woman","Mantis","Mr. Fantastic","Nenora","Nova (Frankie Raye)","Reptyl","Runner","Shalla Bal","Silver Surfer","Starfox","Super-Skrull"],"name":"Silver Surfer #19-20","link":"silver_surfer_19-20","credits":["Tom Christopher","Ron Lim","Craig Anderson","Keith Williams","Josef Rubinstein","Steve Englehart"],"i":3717},{"year":1992,"characters":["Bill Foster","Celia Jackson","Dale West"],"name":"Marvel Super Heroes #11 (Giant-Man)","link":"marvel_super_heroes_11_giant-m","credits":["Don Hudson","Dan Cuddy","Christopher Ivy","Bob Budiansky","Manny Manos","Rob Tokar","Dwayne McDuffie","Jim Shooter","Anna Mazzarelli","Joe Andreani"],"i":3718},{"year":1990,"characters":["Balder","Fandral","Hogun","Odin","Thermal Man","Thor","Vizier","Volstagg"],"name":"Thor annual #15 (Thermal Man)","link":"thor_annual_15_thermal_man","credits":["Ralph Macchio","Mike DeCarlo","Randall Frenz","Gary Hartle","Michael Heisler"],"i":3719},{"year":1992,"characters":["Frenchie","Marlene Alraune","Moon Knight","Raoul Bushman"],"name":"Moon Knight: Divided We Fall","link":"moon_knight_divided_we_fall","credits":["Bruce Jones","Danny Fingeroth","Tom Palmer","Joey Cavalieri","Mike Manley","Eric Fein","Sarra Mossoff","Denys Cowan"],"i":3720},{"year":1989,"characters":["Colossus"],"name":"Marvel Comics Presents #10-17 (Colossus)","link":"marvel_comics_presents_10-17_c","credits":["Al Milgrom","P. Craig Russell","Ann Nocenti","Michael Rockwitz","Rick Leonardi","Terry Kavanagh"],"i":3721},{"year":1989,"characters":["Machine Man","Peter Spaulding","Simon Kragg"],"name":"Marvel Comics Presents #10 (Machine Man)","link":"marvel_comics_presents_10_mach","credits":["Steve Ditko","Michael Rockwitz","Dave Cockrum","Terry Kavanagh"],"i":3722},{"year":1989,"characters":["Ant-Man (Scott Lang)","Stature"],"name":"Marvel Comics Presents #11 (Ant-Man)","link":"marvel_comics_presents_11_ant-","credits":["Michael Rockwitz","Bob Layton","Terry Kavanagh","Len Wein"],"i":3723},{"year":1989,"characters":["Invisible Woman","Mr. Fantastic","Shanna the She-Devil"],"name":"Marvel Comics Presents #13 (FF & Shanna)","link":"marvel_comics_presents_13_ff_s","credits":["<b>Title:","\"A tooth for a tooth\"","Bruce Jones","<em>Shanna the She-Devil<","Michael Rockwitz","<b>Credits:","C.J. Henderson","em>","Terry Kavanagh","Mike Harris"],"i":3724},{"year":1989,"characters":["Al Laguardia","Don Phipps","Justin Baldwin","Maddie Baldwin","Nomad","Speedball","Umberto Safilios"],"name":"Marvel Comics Presents #14 (Speedball & Nomad)","link":"marvel_comics_presents_14_spee","credits":["Mary Jo Duffy","<b>Title:","Fabian Nicieza","<em>Nomad<","Michael Rockwitz","\"Angel in the snow\"","Larry Alexander","<b>Credits:","Steve Ditko","em>","Carl Potts","Terry Kavanagh"],"i":3725},{"year":1989,"characters":["Altjira","Dazzler","Gateway","Havok","Ka-Zar","Leanne","Longshot","Madelyne Pryor","Rogue","Storm","Wolverine","Zabu"],"name":"Marvel Comics Presents #16 (Longshot & Ka-zar)","link":"marvel_comics_presents_16_long","credits":["<b>Title:","Jim Mooney","Ann Nocenti","Michael Rockwitz","<b>Credits:","em>","Larry Dixon","\"This is a Savage Land...\"","<em>Ka-zar<","Dwight Jon Zimmerman","Terry Kavanagh","Alfredo P. Alcala"],"i":3726},{"year":1990,"characters":["Lobo (Will Talltree's Wolf)","Red Wolf (Will Talltrees)"],"name":"Marvel Super Heroes #2 (Red Wolf)","link":"marvel_super_heroes_2_red_wolf","credits":["Robert Campanella","Larry Alexander"],"i":3727},{"year":1989,"characters":["Angler","Deathurge","Dr. Strange","Eon","Gilbert Vaughn","Human Torch","Invisible Woman","Kayla Ballantine","Magma (Jonathan Darque)","Mr. Fantastic","Quasar"],"name":"Quasar #2-3","link":"quasar_2-3","credits":["Paul Ryan","Dan Bulanadi","David Wohl","Mark Gruenwald","Howard Mackie"],"i":3728},{"year":1989,"characters":["Grim Reaper","Henry Pym","Nekra","Rover (Pym's ship)","Scarlet Witch","Spider-Man","Vision","Wonder Man"],"name":"Web of Spider-Man #46","link":"web_of_spider-man_46","credits":["Richard Howell","Keith Williams","Glenn Herdling","Jim Salicrup"],"i":3729},{"year":1989,"characters":["Cloak","Dagger","Dennis Fiedler","Father Delgado","Father Michael Bowen","Mr. Jip","Phillip Carlisle","Rebecca 'Rusty' Nales","Yipyap"],"name":"Cloak and Dagger #3","link":"cloak_and_dagger_3_1","credits":["Scott Williams","Terry Austin","Marc McLaurin","Carl Potts","Mike Vosburg"],"i":3730},{"year":1989,"characters":["Nova (Frankie Raye)","Obliterator","Shalla Bal","Silver Surfer"],"name":"Silver Surfer #21","link":"silver_surfer_21","credits":["Sue Flaxman","Michael Higgins","Craig Anderson","Dave Cockrum","Marshall Rogers"],"i":3731},{"year":1989,"characters":["Anne-Marie Baker","Evan Swann","Harry Osborn","Jason Macendale","Liz Allan","Lizard","Mary Jane Watson","Mysterio","Normie Osborn","Spider-Man"],"name":"Amazing Spider-Man #311","link":"amazing_spider-man_311","credits":["Todd McFarlane","Jim Salicrup","David Michelinie"],"i":3732},{"year":1988,"characters":["Cable (Baby Nathan Christopher Summers)","Colossus","Dazzler","Havok","Longshot","Madelyne Pryor","Malice (Marauder)","Mr. Sinister","N'astirh","Polaris","Psylocke","Rogue","Storm","Wolverine"],"name":"Uncanny X-Men #239","link":"uncanny_x-men_239","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Chris Claremont","Dan Green"],"i":3733},{"year":1989,"characters":["Arranger","Ben Urich","Eduardo Lobo","Frank Farrow","Glory Grant","Harry Osborn","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Kristy Watson","Liz Allan","Martha Robertson","Mary Jane Watson","Normie Osborn","Spider-Man"],"name":"Spectacular Spider-Man #146","link":"spectacular_spider-man_146","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3734},{"year":1989,"characters":["Black Widow","Butch (Fatboys)","Daredevil","Darla (Fatboys)","Karen Page","Typhoid Mary"],"name":"Daredevil #262","link":"daredevil_262","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3735},{"year":1989,"characters":["Aron the Watcher","Dragon Man","Graviton","Human Torch","Lyja the Lazerfist","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #322","link":"fantastic_four_322","credits":["Keith Pollard","Steve Englehart","Ralph Macchio","Joe Sinnott"],"i":3736},{"year":1989,"characters":["Ben Urich","Eduardo Lobo","Glory Grant","Harriet Rose Palermo","Harry Osborn","J. Jonah Jameson","Jason Macendale","Joy Mercado","Kristy Watson","Liz Allan","Martha (Aunt May's Boarder)","Mary Jane Watson","Nate Lubenski","Normie Osborn","Sophie (Aunt May's Boarder)","Spider-Man","Victor Palermo"],"name":"Web of Spider-Man #47","link":"web_of_spider-man_47","credits":["Alex Saviuk","Keith Willaims","Jim Salicrup","Gerry Conway"],"i":3737},{"year":1989,"characters":["Harry Osborn","J. Jonah Jameson","Jason Macendale","Joy Mercado","Liz Allan","Lizard","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #312","link":"amazing_spider-man_312","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3738},{"year":1989,"characters":["Beast","Cable (Baby Nathan Christopher Summers)","Cyclops","Gailyn Bailey","Iceman","Jean Grey","Joey Bailey","Nanny II","Orphan-Maker"],"name":"X-Factor #35","link":"x-factor_35","credits":["Daryl Edelman","Bob Harras","Josef Rubinstein","Louise Simonson","Terry Shoemaker"],"i":3739},{"year":1989,"characters":["Alex (Inferno Baby)","Artie Maddicks","Bob (Inferno Baby)","Boom Boom","Cable (Baby Nathan Christopher Summers)","Crotus","Face","Leech","Loca (Inferno Baby)","Maw","N'astirh","Rictor","Russell (Inferno Baby)","Rusty Collins","Scab","Shauna (Inferno Baby)","Skids","Timothy (Inferno Baby)","Toko","Trista (Inferno Baby)","Wiz Kid"],"name":"X-Terminators #3","link":"x-terminators_3","credits":["Bob Harras","Louise Simonson","John Bogdanove","Al Milgrom"],"i":3740},{"year":1989,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Cannonball","Gosamyr","Illyana Rasputin (Alt-Limbo version)","Magik","Magneto","Mirage (Dani Moonstar)","N'astirh","S'ym","Sunspot","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #71","link":"new_mutants_71","credits":["Louise Simonson","Bob Harras","Al Williamson","Bret Blevins"],"i":3741},{"year":1989,"characters":["Alex (Inferno Baby)","Angel","Beast","Bob (Inferno Baby)","Cable (Baby Nathan Christopher Summers)","Cameron Hodge","Candy Southern","Crotus","Cyclops","Face","Iceman","Jean Grey","Loca (Inferno Baby)","Maw","N'astirh","Russell (Inferno Baby)","Scab","Shauna (Inferno Baby)","Timothy (Inferno Baby)","Toko","Trish Tilby","Trista (Inferno Baby)"],"name":"X-Factor #36","link":"x-factor_36","credits":["Bob Harras","Louise Simonson","Bob Wiacek","Walt Simonson"],"i":3742},{"year":1989,"characters":["Arclight","Blockbuster","Colossus","Dazzler","Dr. Martin","Dr. Milan","Dr. Snodgrass","Elaine Grey","Gateway","George Shiner","Harpoon","Havok","John Grey","Longshot","Madelyne Pryor","Malice (Marauder)","Mr. Sinister","N'astirh","Polaris","Prism","Psylocke","Riptide","Rogue","Sabretooth","Scalphunter","Scrambler","Storm","Vertigo (Savage Land Mutate)","Wolverine"],"name":"Uncanny X-Men #240-241","link":"uncanny_x-men_240-241","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Chris Claremont","Dan Green"],"i":3743},{"year":1989,"characters":["Arcade","Callisto","Captain Britain","Courtney Ross","Dai Thomas","Executioner (616 Crazy Gang)","Jester (616 Crazy Gang)","Knave (616 Crazy Gang)","Lockheed","Meggan","Miss Locke","Moira MacTaggert","Mr. Chambers","Nightcrawler","Opal Luna Sat-yr^9","Rachel Summers","Red Queen (616 Crazy Gang)","Shadowcat (Kitty Pryde)","Tweedledope (616 Crazy Gang)","Widget"],"name":"Excalibur #4-5","link":"excalibur_4-5","credits":["Terry Kavanagh","Alan Davis","Chris Claremont","Paul Neary"],"i":3744},{"year":1989,"characters":["Alex (Inferno Baby)","Black Knight (Dane Whitman)","Bob (Inferno Baby)","Cable (Baby Nathan Christopher Summers)","Cannonball","Captain America","Face","Forgotten One","Franklin Richards","Gilgamesh","Growing Man","Invisible Woman","Kang (Fred)","Loca (Inferno Baby)","Loki","Magik","Maw","Mirage (Dani Moonstar)","Mr. Fantastic","N'astirh","Nanny II","Orphan-Maker","Russell (Inferno Baby)","Scab","Shauna (Inferno Baby)","Sprite","Sunspot","Thena","Thor","Timothy (Inferno Baby)","Toko","Trista (Inferno Baby)","Warlock","Wolfsbane"],"name":"Avengers #299-300","link":"avengers_299-300","credits":["Ralph Macchio","Walt Simonson","John Buscema","Gregory Wright","Tom Palmer","Tom Morgan","Mark Gruenwald"],"i":3745},{"year":1989,"characters":["Butch (Fatboys)","Daredevil","Karen Page","Kingpin","Typhoid Mary"],"name":"Daredevil #263","link":"daredevil_263","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3746},{"year":1989,"characters":["Bogeyman","Byrel Whitemane","Cannonball","Energizer","Friday","Gee","Gosamyr","Jim Power","Kofi","Lightspeed","Magik","Margaret Power","Mass Master","Mirage (Dani Moonstar)","S'ym","Sunspot","Warlock","Wolfsbane","Yrik Whitemane"],"name":"Power Pack #42-43","link":"power_pack_42-43","credits":["Don Hudson","Stan Drake","Jon Bogdanove","and Company","Marc McLaurin","Carl Potts","Sal Velluto","Al Williamson"],"i":3747},{"year":1989,"characters":["Alex (Inferno Baby)","Artie Maddicks","Bob (Inferno Baby)","Boom Boom","Cable (Baby Nathan Christopher Summers)","Cannonball","Crotus","Face","Gosamyr","Leech","Loca (Inferno Baby)","Magik","Maw","Mirage (Dani Moonstar)","N'astirh","Rictor","Russell (Inferno Baby)","Rusty Collins","S'ym","Scab","Shauna (Inferno Baby)","Skids","Sunspot","Timothy (Inferno Baby)","Toko","Trista (Inferno Baby)","Warlock","Wiz Kid","Wolfsbane"],"name":"X-Terminators #4","link":"x-terminators_4","credits":["Louise Simonson","Bob Harras","Jon Bogdanove","Al Milgrom"],"i":3748},{"year":1989,"characters":["Alex (Inferno Baby)","Artie Maddicks","Black King (Sebastian Shaw)","Black Queen (Selene)","Bob (Inferno Baby)","Boom Boom","Cable (Baby Nathan Christopher Summers)","Cannonball","Colossus","Face","Gosamyr","Illyana Rasputin (Alt-Limbo version)","Leech","Loca (Inferno Baby)","Magik","Magneto","Maw","Mirage (Dani Moonstar)","N'astirh","Rictor","Russell (Inferno Baby)","Rusty Collins","S'ym","Scab","Shauna (Inferno Baby)","Skids","Sunspot","Timothy (Inferno Baby)","Toko","Trista (Inferno Baby)","Warlock","White Queen (Emma Frost)","Wiz Kid","Wolfsbane"],"name":"New Mutants #72-73","link":"new_mutants_72-73","credits":["Bob Harras","Mike Manley","Al Williamson","Louise Simonson","Bret Blevins"],"i":3749},{"year":1989,"characters":["Alistaire Stuart","Alysande Stuart","Captain Britain","Crotus","Dai Thomas","Elaine Grey","John Grey","Lockheed","Madelyne Pryor","Meggan","N'astirh","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur #6-7","link":"excalibur_6-7","credits":["Michael Rockwitz","Chris Claremont","Alan Davis","Paul Neary","Terry Kavanagh"],"i":3750},{"year":1989,"characters":["Aron the Watcher","Dragon Man","Human Torch","Kang","Mantis","Ms. Marvel (Sharon Ventura)","N'astirh","Necrodamus","Silver Surfer","Thing"],"name":"Fantastic Four #323-324","link":"fantastic_four_323-324","credits":["Keith Pollard","Steve Englehart","Romeo Tanghal","Ralph Macchio"],"i":3751},{"year":1989,"characters":["Ego the Living Planet","Silver Surfer"],"name":"Silver Surfer #22","link":"silver_surfer_22","credits":["Ron Lim","Steve Englehart","Craig Anderson","Tom Christopher"],"i":3752},{"year":1989,"characters":["Amanda Robertson","Ben Urich","Demogoblin","Harry Osborn","Jason Macendale","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Martha Robertson","Mary Jane Watson","N'astirh","Randy Robertson","Spider-Man"],"name":"Spectacular Spider-Man #147","link":"spectacular_spider-man_147","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3753},{"year":1989,"characters":["Arranger","Aunt May","Ben Urich","Demogoblin","Eduardo Lobo","Glory Grant","Harry Osborn","J. Jonah Jameson","Jason Macendale","Joy Mercado","Kate Cushing","Kingpin","Kristy Watson","Lizard","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #48","link":"web_of_spider-man_48","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3754},{"year":1989,"characters":["Aunt May","Billy Connors","Jonathan Caesar","Kristy Watson","Lizard","Martha Connors","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #313","link":"amazing_spider-man_313","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3755},{"year":1989,"characters":["Butch (Fatboys)","Daredevil","Darla (Fatboys)"],"name":"Daredevil #265","link":"daredevil_265","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3756},{"year":1989,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Cyclops","Elaine Grey","Iceman","Jean Grey","John Grey","Madelyne Pryor","N'astirh","Wolverine"],"name":"X-Factor #37","link":"x-factor_37","credits":["Bob Harras","Louise Simonson","Bob Wiacek","Walt Simonson"],"i":3757},{"year":1989,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Colossus","Cyclops","Dazzler","Elaine Grey","Havok","Iceman","Jean Grey","John Grey","Longshot","Madelyne Pryor","N'astirh","Psylocke","Rogue","Storm","Wolverine"],"name":"Uncanny X-Men #242","link":"uncanny_x-men_242","credits":["Marc Silvestri","Bob Harras","Dan Green","Chris Claremont"],"i":3758},{"year":1989,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Colossus","Cyclops","Dazzler","Elaine Grey","Havok","Iceman","Jean Grey","John Grey","Longshot","Madelyne Pryor","Phoenix Force","Psylocke","Rogue","Storm","Wolverine"],"name":"X-Factor #38","link":"x-factor_38","credits":["Louise Simonson","Bob Harras","Walt Simonson","Al Milgrom"],"i":3759},{"year":1989,"characters":["Betty Brant","Flash Thompson","Spider-Man"],"name":"Spectacular Spider-Man #148","link":"spectacular_spider-man_148","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3760},{"year":1989,"characters":["Angel","Beast","Blockbuster","Cable (Baby Nathan Christopher Summers)","Colossus","Cyclops","Dazzler","Elaine Grey","Havok","Iceman","Jean Grey","John Grey","Longshot","Madelyne Pryor","Malice (Marauder)","Mr. Sinister","Polaris","Psylocke","Rogue","Sabretooth","Ship (Prosh)","Storm","Wolverine"],"name":"Uncanny X-Men #243","link":"uncanny_x-men_243","credits":["Marc Silvestri","Bob Harras","Chris Claremont","Hilary Barta"],"i":3761},{"year":1989,"characters":["Angel","Beast","Colossus","Cyclops","Dazzler","Gateway","Havok","Iceman","Jean Grey","Longshot","Malice (Marauder)","Mr. Sinister","Polaris","Psylocke","Rogue","Sabretooth","Storm","Wolverine"],"name":"X-Factor #39","link":"x-factor_39","credits":["Louise Simonson","Bob Harras","Walt Simonson","Al Milgrom"],"i":3762},{"year":1989,"characters":["Boom Boom","Cloak","Crotus","Dagger","Dennis Fiedler","Father Michael Bowen","Gosamyr","Mayhem","Mirage (Dani Moonstar)","Phillip Carlisle","Sunspot","Warlock"],"name":"Cloak and Dagger #4","link":"cloak_and_dagger_4_1","credits":["Carl Potts","Terry Austin","Mike Vosburg","Marc McLaurin"],"i":3763},{"year":1989,"characters":["Energizer","Gee","Gosamyr","Jim Power","Lightspeed","Margaret Power","Mass Master","Mirage (Dani Moonstar)","Sunspot","Warlock"],"name":"Power Pack #44","link":"power_pack_44","credits":["Carl Potts","Jon Bogdanove","Marc McLaurin","Russ Heath"],"i":3764},{"year":1989,"characters":["Alex (Inferno Baby)","Artie Maddicks","Black King (Sebastian Shaw)","Black Queen (Selene)","Bob (Inferno Baby)","Boom Boom","Cannonball","Face","Gosamyr","Illyana Rasputin (Alt-Limbo version)","Leech","Loca (Inferno Baby)","Magneto","Maw","Mirage (Dani Moonstar)","Rictor","Russell (Inferno Baby)","Rusty Collins","Scab","Shauna (Inferno Baby)","Ship (Prosh)","Skids","Sunspot","Timothy (Inferno Baby)","Toko","Trista (Inferno Baby)","Warlock","White Queen (Emma Frost)","Wiz Kid","Wolfsbane"],"name":"New Mutants #74","link":"new_mutants_74","credits":["Daryl Edelman","Bob Harras","Louise Simonson","Bob Wiacek","Bret Blevins"],"i":3765},{"year":1989,"characters":["Brightwind","Cable (Baby Nathan Christopher Summers)","Cannonball","Captain Britain","Doctor Octopus","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Meggan","Mirage (Dani Moonstar)","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)","Ship (Prosh)","Spider-Man","Sunspot","Warlock","Wolfsbane"],"name":"Excalibur #8","link":"excalibur_8","credits":["Ron Lim","Josef Rubinstein","Chris Claremont","Terry Kavanagh"],"i":3766},{"year":1989,"characters":["Black King (Sebastian Shaw)","Black Queen (Selene)","Cannonball","Illyana Rasputin (Alt-Limbo version)","Magneto","Mirage (Dani Moonstar)","Sabretooth","Sunspot","Warlock","White Queen (Emma Frost)","Wolfsbane"],"name":"New Mutants #75","link":"new_mutants_75","credits":["Louise Simonson","Bob Harras","John Byrne","Bob McLeod"],"i":3767},{"year":1989,"characters":["Albert Cleary","Bart Rozum","Eugene Strausser","John Porter","Lenny Ballinger","Robin Chapel"],"name":"Damage Control #4","link":"damage_control_4","credits":["Lisa Trusiani","Sid Jacobson","Ernie Colon","Dwayne McDuffie","Bob Wiacek"],"i":3768},{"year":1989,"characters":["Andromeda","Belathauzer","Devil-Slayer","Interloper","Manslaughter","Valkyrie"],"name":"Marvel Comics Presents #37 (Devil-Slayer)","link":"marvel_comics_presents_37_devi","credits":["Jim Sanders III","Kelly Corvese","Rodney Ramos","Dwight Jon Zimmerman","Terry Kavanagh"],"i":3769},{"year":1989,"characters":["Andromeda","Clea","Dr. Strange","Dragon of the Moon","Imei Chang","Interloper","Manslaughter","Morgana Blessing","Sara Wolfe","Valkyrie","Wong"],"name":"Doctor Strange #3-4","link":"doctor_strange_sorcerer_suprem_1","credits":["Richard Case","Marc McLaurin","Carl Potts","Randy Emberlin","Peter Gillis","Tony DeZuniga"],"i":3770},{"year":1989,"characters":["Angel","Beast","Cyclops","Dr. Martin","Dr. Milan","Dr. Snodgrass","Dr. Strange","Elwood McNulty","Forgotten One","George Shiner","Iceman","J. Jonah Jameson","Jake Conover","Jake Farber","Jarvis","Jean Grey","Lance Bannon","Mr. Fantastic","Ship (Prosh)","Thor"],"name":"X-Factor annual #4 (Inferno)","link":"x-factor_annual_4_inferno","credits":["Jim Fern","Bob Harras","Mark Gruenwald","Josef Rubinstein"],"i":3771},{"year":1989,"characters":["Human Torch","Kang","Lyja the Lazerfist","Mantis","Ms. Marvel (Sharon Ventura)","Quoi","Silver Surfer","Thing"],"name":"Fantastic Four #325","link":"fantastic_four_325","credits":["Ralph Macchio","Romeo Tanghal","Steve Englehart","Rich Buckler","Marc Siry"],"i":3772},{"year":1989,"characters":["Bengal","Jean Grey","Owayodata","Red Wolf (Will Talltrees)","Ship (Prosh)"],"name":"Marvel Comics Presents #15 (Jean Grey & Red Wolf)","link":"marvel_comics_presents_15_jean","credits":["<b>Title:","Fabian Nicieza","Michael Rockwitz","<em>Red Wolf<","<b>Credits:","Javier Saltares","Mark McKenna","em>","Michael Gustovich","Bobbie Chase","Terry Kavanagh","Dwayne Turner"],"i":3773},{"year":1989,"characters":["Al Laguardia","Basher","Claude (Doc Benson lab assistant)","David Bealer","Doc Benson","Don Phipps","Justin Baldwin","Maddie Baldwin","Niels","Speedball","Two-Legged Rat"],"name":"Speedball #5","link":"speedball_5","credits":["Mary Jo Duffy","Bruce D. Patterson","Steve Ditko","Roger Stern","Terry Kavanagh"],"i":3774},{"year":1989,"characters":["Dream Queen","Jade Dragon","Madison Jeffries","Manikin","Ox (China Force)","Rabbit (China Force)","Rat (China Force)","Sasquatch","Snake (China Force)","Vindicator (Heather Hudson)"],"name":"Alpha Flight #66","link":"alpha_flight_66","credits":["Bill Mantlo","Marc McLaurin","Carl Potts","Gerry Talaoc","Hugh Haynes"],"i":3775},{"year":1989,"characters":["Battlestar","Captain America","Douglas Rockwell","General Lewis Haywerth","Henry Peter Gyrich","Raymond Sikorski","Red Skull","Scourge III","USAgent","Valerie Cooper"],"name":"Captain America #350","link":"captain_america_350","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Jose Marzan","John Byrne","Mark Gruenwald"],"i":3776},{"year":1989,"characters":["Battlestar","Captain America","Dum Dum Dugan LMD","Gabriel Jones","Machinesmith","Nick Fury","Peggy Carter","Raymond Sikorski","Scourge II","USAgent","Valerie Cooper"],"name":"Captain America #351","link":"captain_america_351","credits":["Kieron Dwyer","Al Milgrom","Mark Gruenwald","Ralph Macchio"],"i":3777},{"year":1989,"characters":["Blizzard II","Captain America","Felix Alvarez","Ghost","Iron Man","Kathleen Dare","Madame Masque Bio-Duplicate","Madame Masque Bio-Duplicate II","Marcy Pearson","Mrs. Arbogast","Rhino","War Machine"],"name":"Iron Man #238","link":"iron_man_238","credits":["Butch Guice","Bob Layton","David Michelinie","Howard Mackie"],"i":3778},{"year":1989,"characters":["Alex (Inferno Baby)","Angel","Artie Maddicks","Beast","Blob","Bob (Inferno Baby)","Boom Boom","Cable (Baby Nathan Christopher Summers)","Cyclops","Elaine Grey","Face","Gailyn Bailey","Iceman","Jean Grey","Joey Bailey","John Grey","Leech","Loca (Inferno Baby)","Madelyne Pryor","Maw","Mystique","Nanny II","Orphan-Maker","Pyro","Rictor","Russell (Inferno Baby)","Rusty Collins","Scab","Shauna (Inferno Baby)","Ship (Prosh)","Skids","Timothy (Inferno Baby)","Toko","Trista (Inferno Baby)","Wiz Kid"],"name":"X-Factor #40","link":"x-factor_40","credits":["Rob Liefeld","Daryl Edelman","Al Milgrom","Bob Harras","Louise Simonson"],"i":3779},{"year":1986,"characters":["Beast","Boom Boom","Brightwind","Cannonball","Cyclops","Iceman","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Mirage (Dani Moonstar)","Rictor","Rusty Collins","Ship (Prosh)","Skids","Sub-Mariner","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #76","link":"new_mutants_76","credits":["Rich Buckler","Daryl Edelman","Bob Harras","Tom Palmer","Louise Simonson"],"i":3780},{"year":1989,"characters":["Allison McCourt","Energizer","Gee","Jim Power","Lightspeed","Margaret Power","Mass Master"],"name":"Power Pack #45","link":"power_pack_45","credits":["Julianna Jones","Marc McLaurin","Carl Potts","June Brigman","Hilary Barta"],"i":3781},{"year":1988,"characters":["Ahura","Black Bolt","Crystal","Gorgon","Karnak","Lockjaw","Luna","Maximus","Medusa","Minxi","Quicksilver","Triton"],"name":"Inhumans Graphic Novel","link":"inhumans_graphic_novel","credits":["Daryle Edelman","Ann Nocenti","Bob Harras","Al Williamson","Bret Blevins"],"i":3782},{"year":1989,"characters":["Colossus","Conchita Ortiz","Dazzler","George Tam Wong","Gunny Bear","Havok","Kingpin","Longshot","Microchip","Punisher","Reese McDowell","Rogue","Storm","Vernon Brooks","Wolverine"],"name":"Punisher #15-18","link":"punisher_15-17","credits":["Whilce Portacio","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3783},{"year":1989,"characters":["Abe Zimmer","Blizzard II","Boomerang","Felix Alvarez","Ghost","Iron Man","Justin Hammer","Kathleen Dare","Mrs. Arbogast","Rae LaCoste","War Machine","Whiplash (Blacklash)"],"name":"Iron Man #239-240","link":"iron_man_239-240","credits":["Butch Guice","Bob Layton","David Michelinie","Howard Mackie"],"i":3784},{"year":1989,"characters":["Archie Corrigan","Battleaxe (Harrier)","Bloodscream","Chang (LLL)","General Nguyen Coy","Hardcase","Hulk","Karma","Lindsay McCabe","O'Donnell (Princess Bar)","Prince Baran","Roughouse","Shotgun (Harrier)","Spider-Woman (Jessica Drew)","Tai (Madripoor police)","Tyger Tiger","Wolverine"],"name":"Wolverine #4-8","link":"wolverine_4-8","credits":["Bob Harras","Chris Claremont","Al Williamson","John Buscema"],"i":3785},{"year":1989,"characters":["Wolverine"],"name":"Wolverine #9","link":"wolverine_9","credits":["Bob Harras","Peter David","Gene Colan"],"i":3786},{"year":1989,"characters":["Lindsay McCabe","Madame Joy","Sabretooth","Spider-Woman (Jessica Drew)","Tai (Madripoor police)","Wolverine"],"name":"Wolverine #10","link":"wolverine_10","credits":["Bob Harras","Chris Claremont","Bill Sienkiewicz","John Buscema"],"i":3787},{"year":1989,"characters":["Kate Cushing","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #49","link":"web_of_spider-man_49","credits":["Val Mayerik","Peter David","Glenn Herdling","Jim Salicrup"],"i":3788},{"year":1989,"characters":["Black Widow","Gargoyle (Defender)","Hawkeye","Henry Pym","Mockingbird","MODAM","Moondragon","Red Ronin","She-Hulk","Sundragon","Titania","Wasp"],"name":"Solo Avengers #14-16","link":"solo_avengers_14-16","credits":["<b>Title:","<em>She-Hulk<","Josef Rubinstein","<b>Credits:","Gregory Wright","Jack Abel","\"Seconds!\"","Fabian Nicieza","Chris Claremont","\"Ronin on empty\"","<em>Wasp<","Mark McKenna","em>","Peter Gillis","Jose Marzan","Tom DeFalco","Tom Morgan","<em>Moondragon<","Al Milgrom","Don Perlin","\"Court costs!\"","Alan Davis","Mark Gruenwald"],"i":3789},{"year":1989,"characters":["Aunt May","Aunt Watson","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Jonathan Caesar","Joy Mercado","Kristy Watson","Martha Robertson","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #314","link":"amazing_spider-man_314","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3790},{"year":1989,"characters":["Daredevil","Mephisto"],"name":"Daredevil #266","link":"daredevil_266","credits":["Ann Nocenti","John Romita Jr.","Marc Siry","Ralph Macchio"],"i":3791},{"year":1989,"characters":["Uatu the Watcher"],"name":"Marvel Comics Presents #17 (Watcher)","link":"marvel_comics_presents_17_watc","credits":["Michael Rockwitz","Tom Sutton","Scott Lobdell","Terry Kavanagh"],"i":3792},{"year":1989,"characters":["Human Torch","Lyja the Lazerfist","Ms. Marvel (Sharon Ventura)","She-Hulk","Thing","Willie Lumpkin"],"name":"Marvel Comics Presents #18 (Christmas)","link":"marvel_comics_presents_18_chri","credits":["<b>Title:","<em>Willie Lumpkin<","Joe Sinnott","Michael Rockwitz","Glenn Herdling","<b>Credits:","em>","John Byrne","\"A Christmas card\"","Richard Howell","Bob Wiacek","Terry Kavanagh"],"i":3793},{"year":1989,"characters":["Ursa Major"],"name":"Marvel Comics Presents #25 (Ursa Major)","link":"marvel_comics_presents_25_ursa","credits":["Don Hudson","Christopher Ivy","Michael Rockwitz","Scott Lobdell","Terry Kavanagh"],"i":3794},{"year":1989,"characters":["Black Panther","Ramonda"],"name":"Marvel Comics Presents #13-37 (Black Panther)","link":"marvel_comics_presents_13-37_b","credits":["Don McGregor","Michael Rockwitz","Kelly Corvese","Tom Palmer","Gene Colan","Terry Kavanagh"],"i":3795},{"year":1989,"characters":["Hulk","Michael Berengetti","Mona (Marlo's friend)","Suzie Berengetti"],"name":"Marvel Comics Presents #38 (Hulk)","link":"marvel_comics_presents_38_hulk","credits":["Bill Mumy","Dan Adkins","Marshall Rogers","Kelly Corvese","Terry Kavanagh"],"i":3796},{"year":1989,"characters":["Al Laguardia","Bug-Eyed Voice","David Bealer","Don Phipps","Emily Barron","Joe Spenser","Justin Baldwin","Maddie Baldwin","Nathan Boder","Niels","Speedball","Teri Cooper"],"name":"Speedball #6","link":"speedball_6","credits":["Mary Jo Duffy","Bruce D. Patterson","Michael Rockwitz","Steve Ditko","Roger Stern","Terry Kavanagh"],"i":3797},{"year":1989,"characters":["Anne-Marie Baker","Arranger","Carrion II","Cynthia Bernhammer","Eduardo Lobo","Evan Swann","Glory Grant","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Mary Jane Watson","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #149","link":"spectacular_spider-man_149","credits":["Glenn Herdling","Sal Buscema","Gerry Conway"],"i":3798},{"year":1989,"characters":["Charles Anderson","Doctor Octopus","Goldbug","Hawkeye","Madame Menace (Sunset Bain)","Sandman","Sub-Mariner"],"name":"Solo Avengers #17","link":"solo_avengers_17","credits":["Ralph Macchio","Al Milgrom","<b>Title:","Don Heck","Danny Fingeroth","Dave Cockrum","Tom DeFalco","<b>Credits:","Gregory Wright","em>","<em>Sub-Mariner<","Mark Gruenwald","Kim DeMulder","\"Greed\""],"i":3799},{"year":1989,"characters":["Microchip","Punisher","Sniper"],"name":"Punisher War Journal #4-5","link":"punisher_war_journal_4-5","credits":["John Wellington","Don Hudson","Scott Williams","Co.","Don Daley","Kelly Corvese","Carl Potts","Jim Lee"],"i":3800},{"year":1989,"characters":["Amanda Robertson","Arranger","Arthur Chekov","Aunt May","Carlos Lobo","Chameleon","Cynthia Bernhammer","Eduardo Lobo","Evan Swann","Frank Farrow","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Kristy Watson","Martha Robertson","Mary Jane Watson","Mindy McPherson","Nate Lubenski","Nick Katzenberg","Prowler","Puma","Randy Robertson","Rocket Racer","Sandman","Silver Sable","Spider-Man","Will O' The Wisp"],"name":"Web of Spider-Man #50","link":"web_of_spider-man_50","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3801},{"year":1990,"characters":["Aunt May","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man: Spirits of the Earth","link":"amazing_spider-man_spirits_of_","credits":["Charles Vess","Jim Salicrup"],"i":3802},{"year":1989,"characters":["Demeityr","Gargoyle (Defender)","Hawkeye","ISAAC","Mentor","Moondragon","Shooting Star","Sundragon","Texas Twister"],"name":"Solo Avengers #18","link":"solo_avengers_18","credits":["<b>Title:","Don Heck","\"Will you won't you will you won't you--?\"","Mark Gruenwald","<b>Credits:","James Brock","Gregory Wright","em>","Ron Wilson","<em>Moondragon<","Peter Gillis","Roy Richardson","Howard Mackie"],"i":3803},{"year":1989,"characters":["Arthur Chekov","Aunt May","Eddie Brock (Venom)","Harriet Rose Palermo","Hydroman","Kristy Watson","Mary Jane Watson","Nate Lubenski","Spider-Man","Venom Symbiote","Victor Palermo"],"name":"Amazing Spider-Man #315","link":"amazing_spider-man_315","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3804},{"year":1989,"characters":["Captain America","Eon","Firelord","Forgotten One","Guardsman II (Michael O'Brien)","Hawkeye","Henry Pym","Human Torch","Invisible Woman","Jarvis","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Peggy Carter","Quasar","Starfox","Super-Nova","Thing","Thor","Tigra","Wonder Man"],"name":"Avengers #301-303","link":"avengers_301-303","credits":["Ralph Macchio","Bob Hall","Rich Buckler","Don Heck","Sara Tuchinsky","Gregory Wright","Tom Palmer","Mark Gruenwald"],"i":3805},{"year":1989,"characters":["Captain America","Firelord","Forgotten One","Hawkeye","Henry Pym","Human Torch","Invisible Woman","Keith Kincaid","Mr. Fantastic","Quasar","Thing","Thor","Tigra","Wonder Man"],"name":"Avengers annual #18 (Quasar)","link":"avengers_annual_18_quasar","credits":["Mark Gruenwald","Christopher Ivy","Mark Bagley","Howard Mackie"],"i":3806},{"year":1990,"characters":["Hulk","Shooting Star"],"name":"Marvel Comics Presents #45 (Hulk & Shooting Star)","link":"marvel_comics_presents_45_hulk","credits":["Herb Trimpe","\"Bang bang","Peter David","<b>Title:","Mike DeCarlo","<em>Shooting Star<","shoot shoot\"","<b>Credits:","Robert Campanella","Kelly Corvese","em>","Jose Delbo","Terry Kavanagh"],"i":3807},{"year":1990,"characters":["Hulk","Michael Berengetti","Rick Jones"],"name":"Marvel Comics Presents #52 (Rick Jones & Hulk)","link":"marvel_comics_presents_52_rick","credits":["<b>Title:","<em>Hulk<","Kelly Corvese","<b>Credits:","em>","Ron Wilson","Tom Morgan","Richard Howell","Terry Kavanagh"],"i":3808},{"year":1989,"characters":["Al Laguardia","Claude (Doc Benson lab assistant)","Don Phipps","Harlequin Hitman","Justin Baldwin","Maddie Baldwin","Nathan Boder","Niels","Speedball"],"name":"Speedball #7","link":"speedball_7","credits":["Mary Jo Duffy","Bruce D. Patterson","Steve Ditko","Roger Stern","Terry Kavanagh"],"i":3809},{"year":1989,"characters":["Amanda Robertson","Arranger","Ben Urich","Betty Brant","Chameleon","Cynthia Bernhammer","Eduardo Lobo","Glory Grant","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Kingpin","Lance Bannon","Martha Robertson","Mary Jane Watson","Nick Katzenberg","Randy Robertson","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #150","link":"spectacular_spider-man_150","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3810},{"year":1989,"characters":["Arranger","Chameleon","Eduardo Lobo","Glory Grant","Hammerhead","J. Jonah Jameson","Joy Mercado","Kate Cushing","Kristy Watson","Mary Jane Watson","Nick Katzenberg","Spider-Man"],"name":"Web of Spider-Man #51","link":"web_of_spider-man_51","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Mark Bagley","Gerry Conway"],"i":3811},{"year":1989,"characters":["Dream Queen","Goblyn","Jade Dragon","Madison Jeffries","Nightmare","Ox (China Force)","Pathway","Persuasion","Puck","Rabbit (China Force)","Rat (China Force)","Sasquatch","Shaman","Snake (China Force)","Snowbird","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #67-70","link":"alpha_flight_67-70","credits":["John Calimee","Marc McLaurin","James Hudnall","Sam DeLaRosa","Carl Potts","Gerry Talaoc","Hugh Haynes","Hilary Barta","John Nyberg"],"i":3812},{"year":1989,"characters":["Diamond Lil","Goblyn","Llan the Sorcerer","Madison Jeffries","Pathway","Persuasion","Sasquatch","Shaman","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #71-73","link":"alpha_flight_71-73","credits":["John Calimee","Marc McLaurin","James Hudnall","Carl Potts","Gerry Talaoc","Mike Manley"],"i":3813},{"year":1989,"characters":["Diamond Lil","Madison Jeffries","Puck","Sasquatch","Shaman","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #74-75","link":"alpha_flight_74-75","credits":["John Calimee","Marc McLaurin","James Hudnall","Carl Potts","Mike Manley"],"i":3814},{"year":1989,"characters":["Arthur Nagan","Bruto the Strongman","Chondu","Clown","Ernesto Gambonno","Jerry Morgan","Luigi Gambonno","Princess Python","Ringmaster","Ruby Thursday","She-Hulk"],"name":"She-Hulk #1","link":"she-hulk_1_1","credits":["Bobbie Chase","John Byrne","Bob Wiacek"],"i":3815},{"year":1991,"characters":["Black Widow","Darkstar","Presence","Red Guardian (Tania Belinksy)"],"name":"Marvel Comics Presents #70 (Black Widow/Darkstar)","link":"marvel_comics_presents_70_blac","credits":["Al Milgrom","Kelly Corvese","Robert Campanella","Larry Alexander","Jack Abel","Terry Kavanagh"],"i":3816},{"year":1989,"characters":["Ant-Man (Scott Lang)","Felix Alvarez","Grandfather Chu","Iron Man","Kathleen Dare","Li Fong","Mandarin","Marcy Pearson","Mrs. Arbogast","Philip Barnett","Rae LaCoste","Soo Lin Chu","Stature","Tigra","War Machine"],"name":"Iron Man #241-243","link":"iron_man_241-243","credits":["Barry Windsor-Smith","Alan Kupperberg","David Wohl","Bob Layton","David Michelinie","Denys Cowan","Howard Mackie"],"i":3817},{"year":1989,"characters":["Glorian","Hulk","Marlo Chandler"],"name":"Hulk #355","link":"hulk_355","credits":["Herb Trimpe","Peter David","Jeff Purves","James DiGiovanna","Bobbie Chase"],"i":3818},{"year":1989,"characters":["Battlestar","Blue Shield","Captain America","Crimson Dynamo V","Darkstar","Fabian Stankowicz","Fantasma","General Lewis Haywerth","Gladiatrix","Guardsman II (Michael O'Brien)","Henry Peter Gyrich","Jarvis","Keith Kincaid","Peggy Carter","Perun","Raymond Sikorski","Red Guardian (Steel Guardian)","Speedball","Ursa Major","Valerie Cooper","Vanguard","Vostok"],"name":"Captain America #352-353","link":"captain_america_352-353","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3819},{"year":1986,"characters":["Glorian","Hulk","Marlo Chandler","Mona (Marlo's friend)","Satannish","Shaper of Worlds"],"name":"Hulk #356","link":"hulk_356","credits":["Peter David","Jim Sanders III","Jeff Purves","James DiGiovanna","Bobbie Chase"],"i":3820},{"year":1989,"characters":["Silver Surfer"],"name":"Silver Surfer #23","link":"silver_surfer_23","credits":["Sue Flaxman","Ron Lim","Craig Anderson","Tom Christopher","Steve Englehart"],"i":3821},{"year":1989,"characters":["Microchip","Punisher"],"name":"Punisher #19","link":"punisher_19","credits":["Larry Stroman","Marc McLaurin","Carl Potts","Randy Emberlin","Mike Baron"],"i":3822},{"year":1989,"characters":["Dakota North","Energizer","Gee","Jessie Wilcox Jones","Mass Master","Punisher"],"name":"Power Pack #46","link":"power_pack_46","credits":["Whilce Portacio","Mark McLaurin","Terry Austin","Mark Badger","Carl Potts"],"i":3823},{"year":1990,"characters":["Daredevil"],"name":"Daredevil #277","link":"daredevil_277","credits":["Ralph Macchio","Ann Nocenti","Michael Rockwitz","Rick Leonardi","Al Williamson"],"i":3824},{"year":1991,"characters":["Eddie Brock (Venom)","Venom Symbiote"],"name":"Amazing Spider-Man annual #25 (Venom)","link":"amazing_spider-man_annual_25_v","credits":["Paris Cullins","Danny Fingeroth","David Micheline","Bud LaRosa"],"i":3825},{"year":1989,"characters":["Dagger","Dennis Fiedler","Ecstasy","Father Michael Bowen","Mayhem","Phillip Carlisle","Rebecca 'Rusty' Nales"],"name":"Cloak and Dagger #5","link":"cloak_and_dagger_5_1","credits":["Carl Potts","Terry Austin","Mike Vosburg","Marc McLaurin"],"i":3826},{"year":1989,"characters":["Awesome Android","Battlestar","Captain America","Fabian Stankowicz","Fourth Sleeper","General Lewis Haywerth","Guardsman II (Michael O'Brien)","Henry Peter Gyrich","Kree Sentry 459","Machinesmith","Magneto Robot","Peggy Carter","Raymond Sikorski","Super-Adaptoid","TESS-One","Thing Robot","USAgent","Valerie Cooper"],"name":"Captain America #354","link":"captain_america_354","credits":["Kieron Dwyer","Al Milgrom","Ralph Macchio","Mark Gruenwald","Marc Siry"],"i":3827},{"year":1989,"characters":["Aunt May","Black Cat","Charles Jefferson","Eddie Brock (Venom)","Eduardo Lobo","Glory Grant","Mary Jane Watson","Nick Katzenberg","Spider-Man","Thing","Venom Symbiote"],"name":"Amazing Spider-Man #316-317","link":"amazing_spider-man_316-317","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3828},{"year":1989,"characters":["Microchip","Philip Richards","Punisher","Rikichi","Wolverine","Yuriko Ezaki"],"name":"Punisher War Journal #6-7","link":"punisher_war_journal_6-7","credits":["Don Daley","Carl Potts","Jim Lee","Kelly Corvese"],"i":3829},{"year":1989,"characters":["Captain America","Forgotten One","Ironclad","Portal","Puma","Thor","Vapor","Vector","X-Ray"],"name":"Avengers #304","link":"avengers_304","credits":["Danny Fingeroth","Tom Palmer","David Wohl","Rich Buckler","Howard Mackie"],"i":3830},{"year":1989,"characters":["Al Laguardia","Bonehead","David Bealer","Don Phipps","Justin Baldwin","Maddie Baldwin","Nathan Boder","Officer Burnatt","Speedball","Teri Cooper"],"name":"Speedball #8","link":"speedball_8","credits":["Mary Jo Duffy","Bruce D. Patterson","Michael Rockwitz","Steve Ditko","Roger Stern","Terry Kavanagh"],"i":3831},{"year":1989,"characters":["Aron the Watcher","Dragon Man","Franklin Richards","Human Torch","Hydroman","Invisible Woman","Klaw","Lyja the Lazerfist","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","She-Hulk","Thing","Titania","Wizard"],"name":"Fantastic Four #326-328","link":"fantastic_four_326-328","credits":["Keith Pollard","Steve Englehart","Romeo Tanghal","Ralph Macchio"],"i":3832},{"year":1989,"characters":["Annihilus","Balder","Count Tagar","Enchantress","Executioner","Fandral","Heimdall","Hela","Hogun","Human Torch","Invisible Woman","Jerry Sapristi","Kevin Masterson","Lorelei (Norse Goddess)","Marcus Stone","Mongoose","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Odin","Quicksand","Susan Austin","Thing","Thor","Thunderstrike","Vizier","Volstagg"],"name":"Thor #402-405","link":"thor_402-405","credits":["Ralph Macchio","Joe Sinnott","Tom DeFalco","Ron Frenz","Marc Siry"],"i":3833},{"year":1989,"characters":["Aron the Watcher","Dragon Man","Human Torch","Hydroman","Invisible Woman","Klaw","Lyja the Lazerfist","Mole Man","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Thing","Titania","Wizard"],"name":"Fantastic Four #329","link":"fantastic_four_329","credits":["Steve Englehart","Rich Buckler","Romeo Tanghal","Ralph Macchio"],"i":3834},{"year":1989,"characters":["Colossus","Dazzler","Dr. Martin","Dr. Milan","Dr. Snodgrass","Gateway","George Shiner","Jubilee","Psylocke","Rogue","Storm"],"name":"Uncanny X-Men #244","link":"uncanny_x-men_244","credits":["Marc Silvestri","Bob Harras","Dan Green","Chris Claremont"],"i":3835},{"year":1989,"characters":["Count Tagar","Grand Commissioner of Rigel","Hercules","High Evolutionary","Kevin Masterson","Mongoose","Odin","Recorder","Scientist Supreme of Rigel","Susan Austin","Thor","Thunderstrike","Vizier"],"name":"Thor #406-408","link":"thor_406-408","credits":["Ralph Macchio","Joe Sinnott","Tom DeFalco","Michael Rockwitz","Ron Frenz"],"i":3836},{"year":1989,"characters":["Archie Corrigan","Baal (god)","Lindsay McCabe","O'Donnell (Princess Bar)","Prince Baran","Spider-Woman (Jessica Drew)","Tai (Madripoor police)","Wolverine"],"name":"Wolverine #11-16","link":"wolverine_11-16","credits":["Bob Harras","Peter David","Bill Sienkiewicz","John Buscema"],"i":3837},{"year":1989,"characters":["Battlestar","Bernie Rosenthal","Captain America","Coachwhip","Falcon","Mother Night","Peggy Carter","Puff Adder","Raymond Sikorski","Redwing","Rock Python","Scarbo","Sersi","Sin","Sister Agony","Sister Death","Sister Dream","Sister Pleasure","Valerie Cooper"],"name":"Captain America #355-357","link":"captain_america_355-357","credits":["Ralph Macchio","Al Milgrom","Rich Buckler","Mark Gruenwald","Marc Siry"],"i":3838},{"year":1992,"characters":["Balder","Fandral","Hermod","Hogun","Kevin Masterson","Loki","Odin","Susan Austin","Thermal Man","Thor","Thunderstrike","Tyr","Vizier","Volstagg"],"name":"Marvel Super Heroes #9 (Thor)","link":"marvel_super_heroes_9_thor","credits":["Ralph Macchio","Randall Frenz","Brian Garvey","Rob Tokar","Kevin West"],"i":3839},{"year":1989,"characters":["Al Laguardia","Don Phipps","Justin Baldwin","Maddie Baldwin","Nathan Boder","Speedball"],"name":"Speedball #9","link":"speedball_9","credits":["Steve Ditko","Mary Jo Duffy","Terry Kavanagh","Jim Sanders III"],"i":3840},{"year":1989,"characters":["Alistaire Stuart","Alysande Stuart","Callisto","Captain Britain","Dai Thomas","Hauptmann England","Lockheed","Meggan","Moira MacTaggert","Nigel Frobisher","Nightcrawler","Opal Luna Sat-yr^9","Rachel Summers","Shadowcat (Kitty Pryde)","Train Dragon","Widget"],"name":"Excalibur #9-11","link":"excalibur_9-10","credits":["Michael Rockwitz","Marshall Rogers","Terry Austin","Chris Claremont","Alan Davis","Terry Kavanagh"],"i":3841},{"year":1989,"characters":["Alistaire Stuart","Alysande Stuart","Captain Britain","Judith Rassendyll","Lockheed","Major Domo","Meggan","Minor Domo","Mojo","Nightcrawler","Rachel Summers","Ricochet Rita (Spiral)","Shadowcat (Kitty Pryde)","Widget","X-Baby Colossusus","X-Baby Dazzler","X-Baby Havok","X-Baby Psychilde","X-Baby Shower","X-Baby Sugah","X-Baby Wolvie"],"name":"Excalibur: Mojo Mayhem","link":"excalibur_mojo_mayhem","credits":["and Co.","Art Adams","Terry Austin","Chris Claremont","Kelly Corvese","Bob Wiacek","Terry Kavanagh"],"i":3842},{"year":1990,"characters":["Captain Britain","Lockheed","Meggan","Nightcrawler","Opal Luna Sat-yr^9","Rachel Summers","Shadowcat (Kitty Pryde)","Ultimus","Widget"],"name":"Excalibur #20","link":"excalibur_20","credits":["Ron Lim","Michael Higgins","Josef Rubinstein","Terry Kavanagh"],"i":3843},{"year":1989,"characters":["Hawkeye","Henry Pym","Mockingbird","Phineas Horton Space Phantom Imposter","Raymond Sikorski","Scarlet Witch","Thomas (VSW Baby)","Tigra","USAgent","Vision","Wasp","William (VSW Baby)","Wonder Man"],"name":"West Coast Avengers #42-45","link":"west_coast_avengers_42-45","credits":["John Byrne","Mike Machlan","Howard Mackie"],"i":3844},{"year":1989,"characters":["Silver Surfer"],"name":"Silver Surfer #24","link":"silver_surfer_24","credits":["Sue Flaxman","Ron Lim","Craig Anderson","Steve Englehart","Randy Emberlin"],"i":3845},{"year":1989,"characters":["Colossus","Dazzler","Gateway","Havok","Longshot","Psylocke","Rogue","Storm","Tessa","Wolverine"],"name":"Uncanny X-Men #245","link":"uncanny_x-men_245","credits":["Rob Liefeld","Bob Harras","Dan Green","Chris Claremont"],"i":3846},{"year":1989,"characters":["Al Laguardia","Claude (Doc Benson lab assistant)","Clyde (Speedball villain)","David Bealer","Doc Benson","Don Phipps","Emily Barron","Joe Spenser","Niels","Speedball","Teri Cooper"],"name":"Speedball #10","link":"speedball_10","credits":["Mary Jo Duffy","Dan Day","Michael Rockwitz","Steve Ditko","Terry Kavanagh"],"i":3847},{"year":1989,"characters":["Betty Brant","Bruiser","Chameleon","Eduardo Lobo","Flash Thompson","Glory Grant","Joe 'Robbie' Robertson","Kate Cushing","Mary Jane Watson","Nick Katzenberg","Puma","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #151","link":"spectacular_spider-man_151","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3848},{"year":1989,"characters":["Bullet","Daredevil","Lance Cashman","Sister Maggie Murdock","Skip Ash"],"name":"Daredevil #267","link":"daredevil_267","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3849},{"year":1989,"characters":["Arranger","Bruiser","Carlos Lobo","Eduardo Lobo","Flash Thompson","Glory Grant","Harry Osborn","Joe 'Robbie' Robertson","Joy Mercado","Kristy Watson","Mary Jane Watson","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #152","link":"spectacular_spider-man_152","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3850},{"year":1989,"characters":["Henry Pym","Scarlet Witch","Tigra","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers Spotlight #23 (Vision)","link":"avengers_spotlight_23_vision","credits":["Kieron Dwyer","Gregory Wright","Karl Kesel","John Byrne","Mark Gruenwald","Evan Skolnick"],"i":3851},{"year":1989,"characters":["Punisher"],"name":"Punisher #20","link":"punisher_20","credits":["Mike Baron","Gerry Talaoc","Shea Anton Pensa","Carl Potts"],"i":3852},{"year":1989,"characters":["Hulk","Krang"],"name":"Marvel Comics Presents #26 (Hulk)","link":"marvel_comics_presents_26_hulk","credits":["Peter David","Mike DeCarlo","Jeff Purves","Michael Rockwitz","Terry Kavanagh"],"i":3853},{"year":1989,"characters":["Glorian","Hulk","Marlo Chandler","Michael Berengetti","Mona (Marlo's friend)","Satannish","Shaper of Worlds"],"name":"Hulk #357-359","link":"hulk_357-359","credits":["Peter David","Jim Sanders III","Jeff Purves","James DiGiovanna","Bobbie Chase","Marie Severin"],"i":3854},{"year":1989,"characters":["Chameleon","J. Jonah Jameson","Spider-Man"],"name":"Web of Spider-Man #52","link":"web_of_spider-man_52","credits":["Jim Salicrup","Frank Springer","Glenn Herdling","John Romita Sr.","Gerry Conway"],"i":3855},{"year":1989,"characters":["Agamotto","Baron Mordo","Clea","Dr. Strange","Imei Chang","Mephista","Mephisto","Rintrah","Sara Wolfe","Satannish","Silver Dagger","Topaz"],"name":"Doctor Strange #5-8","link":"doctor_strange_sorcerer_suprem_2","credits":["Ralph Macchio","Butch Guice","Jose Marzan","Roy Thomas","Michael Rockwitz","Dann Thomas"],"i":3856},{"year":1991,"characters":["Al Laguardia","David Bealer","Don Phipps","Niels","Speedball","Teri Cooper"],"name":"Marvel Super Heroes #5 (Speedball)","link":"marvel_super_heroes_5_speedbal","credits":["Mary Jo Duffy","Mike Rockwitz","Mark Badger","Steve Ditko","Barry Dutter"],"i":3857},{"year":1991,"characters":["Al Laguardia","Claude (Doc Benson lab assistant)","Don Phipps","Justin Baldwin","Maddie Baldwin","Niels","Speedball","Teri Cooper"],"name":"Marvel Super Heroes #6 (Speedball)","link":"marvel_super_heroes_6_speedbal","credits":["Steve Ditko","Mary Jo Duffy","Mike Rockwitz","Dan Adkins"],"i":3858},{"year":1991,"characters":["Arnold Astrovik","Gator Grant","Justice","Norma Astrovik"],"name":"Marvel Super Heroes #7 (Marvel Boy)","link":"marvel_super_heroes_7_marvel_b","credits":["George Wildman","Barry Dutter","Mike Rockwitz","Vince Evans"],"i":3859},{"year":1989,"characters":["Black Panther","Cloud","Demeityr","Gargoyle (Defender)","Hawkeye","Heater Delight","Henry Pym","Moondragon","Orb","Plantman","Starfox","Sundragon","Wonder Man"],"name":"Solo Avengers #19-20, Avengers Spotlight #21","link":"solo_avengers_19-20avengers_sp","credits":["<b>Title:","<em>Black Panther<","Josef Rubinstein","<b>Credits:","Gregory Wright","Ron Wilson","the Dudes","Sara Tuchinsky","James Brock","em>","Peter Gillis","\"The vanities of Philip Whitehead\"","Howard Mackie","Scott Hampton","Don Heck","Sandy Punkett","Tom Morgan","<em>Moondragon<","Mark Gruenwald","<em>Starfox<","Roy Richardson","\"\tThe comedy of Eros\"","Al Milgrom","Tom Artis","\"The sun and the moon!\""],"i":3860},{"year":1989,"characters":["Heater Delight","Starfox"],"name":"Marvel Comics Presents #22 (Starfox)","link":"marvel_comics_presents_22_star","credits":["Jim Sanders III","Dave Cockrum","Michael Rockwitz","Peter Gillis","Terry Kavanagh"],"i":3861},{"year":1989,"characters":["Baron Mordo","Dr. Strange","Imei Chang","Mephista","Rintrah","Sara Wolfe","Satannish","Topaz","Wong"],"name":"Doctor Strange #9","link":"doctor_strange_9_1","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Rockwitz","Dann Thomas"],"i":3862},{"year":1989,"characters":["Chloe Tran","Frenchie","Marlene Alraune","Moon Knight","Raoul Bushman","Spider-Man"],"name":"Moon Knight #1-3","link":"moon_knight_1-3","credits":["Mark Farmer","Chuck Dixon","Marc McLaurin","Carl Potts","Sal Velluto"],"i":3863},{"year":1989,"characters":["Aron the Watcher","Captain America","Dr. Strange","Dragon Man","Franklin Richards","Henry Pym","Hercules","Human Torch","Hydroman","Invisible Woman","Klaw","Lyja the Lazerfist","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Scarlet Witch","She-Hulk","Thing","Thor","Tigra","Titania","Wasp","Wizard","Wonder Man"],"name":"Fantastic Four #330-333","link":"fantastic_four_330-333","credits":["Ralph Macchio","Michael Rockwitz","Steve Englehart","Rich Buckler","Romeo Tanghal"],"i":3864},{"year":1989,"characters":["Clumsy Foulup","Contemplator Skrull","Ronan the Accuser","S'Byll","Shalla Bal","Silver Surfer","Super-Skrull"],"name":"Silver Surfer #25","link":"silver_surfer_25","credits":["Sue Flaxman","Ron Lim","Craig Anderson","Tom Christopher","Steve Englehart"],"i":3865},{"year":1989,"characters":["Dr. Strange"],"name":"Marvel Comics Presents #19-20 (Dr. Strange)","link":"marvel_comics_presents_19-20_d","credits":["Michael Rockwitz","Terry Kavanagh","Mark Badger","Fabian Nicieza"],"i":3866},{"year":1989,"characters":["Clea"],"name":"Marvel Comics Presents #20 (Clea)","link":"marvel_comics_presents_20_clea","credits":["Ron Lim","Jim Sanders III","Michael Rockwitz","Peter Gillis","Terry Kavanagh"],"i":3867},{"year":1989,"characters":["Falcon","Redwing"],"name":"Marvel Comics Presents #23 (Falcon)","link":"marvel_comics_presents_23_falc","credits":["Fabian Nicieza","Dave Cockrum","Michael Rockwitz","Jim Sinclair","Terry Kavanagh"],"i":3868},{"year":1989,"characters":["Arnim Zola","Shamrock"],"name":"Marvel Comics Presents #24 (Shamrock)","link":"marvel_comics_presents_24_sham","credits":["Dennis Jensen","Dan Adkins","Michael Rockwitz","Scott Lobdell","Terry Kavanagh"],"i":3869},{"year":1989,"characters":["Havok","Plasma","Wolverine"],"name":"Marvel Comics Presents #24-31 (Havok)","link":"marvel_comics_presents_24-31_h","credits":["Bruce D. Patterson","Michael Rockwitz","Josef Rubinstein","Kelly Corvese","Rich Buckler","Terry Kavanagh","Howard Mackie"],"i":3870},{"year":1989,"characters":["American Eagle","Peace Monger"],"name":"Marvel Comics Presents #27 (American Eagle)","link":"marvel_comics_presents_27_amer","credits":["Jeffrey Albrecht","Michael Rockwitz","Scott Lobdell","Ron Wilson","Terry Kavanagh"],"i":3871},{"year":1990,"characters":["Dr. Strange","Rintrah","Wong"],"name":"Marvel Comics Presents #44 (Dr. Strange)","link":"marvel_comics_presents_44_doct","credits":["Roy Thomas","Dave Simons","Kelly Corvese","Terry Kavanagh"],"i":3872},{"year":2008,"characters":["Boom Boom","Cannonball","Mad Thinker","Rictor","Rusty Collins","Skids","Sunspot","Wolfsbane"],"name":"X-Men: Odd Men Out #1 (New Mutants)","link":"x-men_odd_men_out_1_new_mutant","credits":["Dave Cockrum","Michael Higgins","Josef Rubinstein","Bob Harras"],"i":3873},{"year":1989,"characters":["Daredevil"],"name":"Daredevil #268","link":"daredevil_268","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Al Williamson","Marc Siry"],"i":3874},{"year":1989,"characters":["Arthur Nagan","Blake Tower","Blonde Phantom","Chondu","Jerry Morgan","Mysterio","Ruby Thursday","She-Hulk","Spider-Man","Wasp"],"name":"She-Hulk #2-3","link":"she-hulk_2-3","credits":["Bobbie Chase","John Byrne","Bob Wiacek","James DiGiovanna"],"i":3875},{"year":1989,"characters":["Big Bertha","Dinah-Soar","Doorman","Flatman","Hawkeye","Mockingbird","Mr. Immortal","Roberto Carlos","Scarlet Witch","Tigra","USAgent"],"name":"West Coast Avengers #46","link":"west_coast_avengers_46","credits":["John Byrne","David Wohl","Mike Machlan","Howard Mackie"],"i":3876},{"year":1989,"characters":["Brie Daniels","Fixer","Force","Garrison Quint","Iron Man","Jonas Hale","Mrs. Arbogast","Mrs. Fruitbagel","Rae LaCoste","War Machine"],"name":"Iron Man #244","link":"iron_man_244","credits":["Don Hudson","Dave Simons","Christopher Ivy","Bob Layton","David Michelinie","Harry Candelerio","Bob Downs (and friends)","Marc Siry","and James Bock","Gavin Curtis","Howard Mackie"],"i":3877},{"year":1989,"characters":["Iris Green","Microchip","Punisher"],"name":"Punisher #21","link":"punisher_21","credits":["Erik Larsen","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3878},{"year":1990,"characters":["Beast","Captain America","Enchantress","Hawkeye","Henry Pym","Iron Man","Scarlet Witch","She-Hulk","Thor","Vision","Wasp","Wonder Man"],"name":"Marvel Comics Presents #38-45 (Wonder Man)","link":"marvel_comics_presents_38-45_w","credits":["Michael Higgins","Jose Marzan","Kelly Corvese","Javier Saltares","Terry Kavanagh"],"i":3879},{"year":1990,"characters":["Iron Man","Le Peregrine","Mrs. Arbogast"],"name":"Marvel Comics Presents #51 (Iron Man & Le Peregrine)","link":"marvel_comics_presents_51_iron","credits":["<b>Title:","Don Heck","Fabian Nicieza","M.D. Bright","Kelly Corvese","<b>Credits:","Steve Safel","em>","Randy Emberlin","\"...The straight approach!\"","Terry Kavanagh","<em>Le Peregrine<"],"i":3880},{"year":1989,"characters":["Clumsy Foulup","Contemplator Skrull","Nenora","S'Byll","Shalla Bal","Silver Surfer","Super-Skrull"],"name":"Silver Surfer #26","link":"silver_surfer_26","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Steve Englehart"],"i":3881},{"year":1989,"characters":["Betty Ross","Bobcat","Bombshell","Brothers Grimm III","Bullet Biker","Crossfire","Firebird","Hawkeye","Impossible Man","Knick Knack","Mad Dog (Buzz Baxter)","Mockingbird","Mordecai P. Boggs","Oddball","Razorfist III","Rick Jones","Ringleader","Scarlet Witch","Tenpin","Trick Shot (Buck Chisholm)","Vision","Wonder Man"],"name":"Avengers Spotlight #22-25","link":"avengers_spotlight_22-25","credits":["<b>Title:","Glenn Herdling","<b>Credits:","Gregory Wright","\"Once there was a Swordsman...!\"","\"Best seller!\"","Rod Ramos","Don Hudson","Fabian Nicieza","em>","Lou Mougin","<em>Firebird<","want not\"","Howard Mackie","Don Heck","Jose Marzan","<em>Swordsman<","\"Waste not","Tom Morgan","Gavin Gurtis","Al Milgrom","<em>Rick Jones<","Steve Buccellato","Mark Gruenwald","Evan Skolnick","Dwight Jon Zimmerman"],"i":3882},{"year":1989,"characters":["Doctor Neutron","Havok","Meltdown","Quark (Scarlett McKenzie)","Wolverine"],"name":"Havok & Wolverine: Meltdown #1-4","link":"havok_wolverine_meltdown_1-4","credits":["Walt Simonson","Jon J Muth","Sherilyn Van Valkenburgh","Steve Buccellato","Louise Simonson","Kent Williams","Margaret Clark"],"i":3883},{"year":1989,"characters":["Energizer","Gee","Jim Power","Lightspeed","Margaret Power","Mass Master"],"name":"Power Pack #47","link":"power_pack_47","credits":["Carl Potts","Jon Bogdanove","Marc McLaurin","Hilary Barta"],"i":3884},{"year":1989,"characters":["Beast","Big Bertha","Black Panther","Black Widow","Blastaar","Captain America","Captain Marvel (Monica Rambeau)","Cybele","Dinah-Soar","Doorman","Falcon","Fandral","Firebird","Flatman","Forgotten One","Hawkeye","Hellcat","Henry Pym","Hogun","Huginn","Ikaris","Invisible Woman","Jarvis","Jinku","Karkas","Khoryphos","Kingo Sunen","Loki","Makkari","Mockingbird","Moondragon","Mr. Fantastic","Mr. Immortal","Muninn","Odin","Phastos","Professor Harker","Quasar","Ran-Sak the Reject","Scarlet Witch","Sersi","She-Hulk","Sprite","Starfox","Sub-Mariner","Thena","Thing","Thor","Thunderstrike","Tigra","Vision","Vizier","Volstagg","Wasp","Wonder Man"],"name":"Avengers #305-310","link":"avengers_305-310","credits":["Paul Ryan","Tom Palmer","John Byrne","David Wohl","Howard Mackie"],"i":3885},{"year":1989,"characters":["Ann Raymond","Big Bertha","Black Panther","Captain America","Dinah-Soar","Doorman","Flatman","Gunthar","Henry Pym","Immortus","Mockingbird","Mr. Immortal","Nebula","Phineas Horton Space Phantom Imposter","Roberto Carlos","Scarlet Witch","She-Hulk","Thomas (VSW Baby)","Tigra","USAgent","Vision","Wasp","William (VSW Baby)","Wonder Man"],"name":"Avengers West Coast #47-49","link":"avengers_west_coast_47-49","credits":["John Byrne","Mike Machlan","Howard Mackie"],"i":3886},{"year":1990,"characters":["Apocalypse","Wolverine"],"name":"Wolverine: The Jungle Adventure","link":"wolverine_the_jungle_adventure","credits":["Mike Mignola","Bob Wiacek","Daryl Edelman","Walt Simonson"],"i":3887},{"year":1989,"characters":["Chameleon","Harry Osborn","Joy Mercado","Justin Hammer","Lance Bannon","Liz Allan","Mary Jane Watson","Rhino","Sandy Kintzler","Scorpion","Spider-Man","Whiplash (Blacklash)"],"name":"Amazing Spider-Man #318-319","link":"amazing_spider-man_318-319","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3888},{"year":1989,"characters":["Alchemy","Angel","Beast","Boom Boom","Brightwind","Cable (Baby Nathan Christopher Summers)","Cannonball","Cyclops","Iceman","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Mirage (Dani Moonstar)","Mrs. Jones (Alchemy's mom)","Phay","Phee","Phough","Phumm","Phy","Rictor","Rusty Collins","Ship (Prosh)","Skids","Sunspot","Warlock","Wolfsbane"],"name":"X-Factor #41-42","link":"x-factor_41-42","credits":["Al Milgrom","Daryl Edelman","Bob Harras","Art Adams","Louise Simonson"],"i":3889},{"year":1989,"characters":["Blake Tower","Blonde Phantom","Lexington Loopner","Razorback","She-Hulk","Stilt-Man","Taryn O'Connell"],"name":"She-Hulk #4","link":"she-hulk_4","credits":["Bobbie Chase","John Byrne","Bob Wiacek","James DiGiovanna"],"i":3890},{"year":1989,"characters":["Arranger","Arthur Chekov","Aunt May","Carlos Lobo","Chameleon","Eduardo Lobo","Hammerhead","Joy Mercado","Kate Cushing","Kingpin","Kristy Watson","Mary Jane Watson","Nick Katzenberg","Spider-Man"],"name":"Web of Spider-Man #53","link":"web_of_spider-man_53","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Mark Bagley","Gerry Conway"],"i":3891},{"year":1989,"characters":["Arthur Chekov","Aunt May","Bruiser","Chameleon","Hammerhead","Joe 'Robbie' Robertson","Kristy Watson","Mary Jane Watson","Nate Lubenski","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #153","link":"spectacular_spider-man_153","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3892},{"year":1989,"characters":["Arranger","Arthur Chekov","Carlos Lobo","Chameleon","Eduardo Lobo","Frank Farrow","Glory Grant","J. Jonah Jameson","Joy Mercado","Kristy Watson","Mary Jane Watson","Nate Lubenski","Nick Katzenberg","Spider-Man","Susan Ransome"],"name":"Web of Spider-Man #54","link":"web_of_spider-man_54","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3893},{"year":1989,"characters":["Kathryn Yakamoto","Punisher","Saracen"],"name":"Punisher #22-23","link":"punisher_22-23","credits":["Erik Larsen","Scott Williams","Marc McLaurin","Carl Potts","Mike Baron"],"i":3894},{"year":1989,"characters":["Energizer","Franklin Richards","Friday","Gee","Invisible Woman","Jim Power","Kofi","Lightspeed","Margaret Power","Mass Master","Yrik Whitemane"],"name":"Power Pack #48-49","link":"power_pack_48-49","credits":["Jon Bogdanove","Marc McLaurin","Carl Potts","Hilary Barta","James Sherman"],"i":3895},{"year":1989,"characters":["Byrel Whitemane","Energizer","Franklin Richards","Friday","Gee","Jim Power","Kofi","Lightspeed","Maraud","Margaret Power","Mass Master","Numinus","Yrik Whitemane"],"name":"Power Pack #50-52","link":"power_pack_50-52","credits":["Jon Bogdanove","Marc McLaurin","Carl Potts","Tod Smith","Mike Manley","Gray Morrow","Al Williamson"],"i":3896},{"year":1989,"characters":["FBI Agent Mallard","Felix Alvarez","Iron Man","Madame Masque Bio-Duplicate II","Mrs. Arbogast","Rae LaCoste","War Machine"],"name":"Iron Man #245","link":"iron_man_245","credits":["Paul Smith","David Wohl","David Michelinie","Roy Richardson","Howard Mackie"],"i":3897},{"year":1990,"characters":["Wolverine"],"name":"Marvel Comics Presents #38-47 (Wolverine)","link":"marvel_comics_presents_38-47_w","credits":["John Buscema","Kelly Corvese","Terry Kavanagh","Marv Wolfman"],"i":3898},{"year":1989,"characters":["Blob","Daredevil","Pyro","Spiral"],"name":"Daredevil #269","link":"darede","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3899},{"year":1990,"characters":["Black Bolt","Crystal","Gorgon","Karnak","Luna","Maximus","Medusa","Quicksilver","Triton"],"name":"Inhumans: The Untold Saga #1 (Inhumans Special)","link":"inhumans_the_untold_saga_1_inh","credits":["Richard Howell","Vincent Colletta","Mark Gruenwald","Lou Mougin"],"i":3900},{"year":1989,"characters":["Clumsy Foulup","Contemplator Skrull","Reptyl","S'Byll","Shalla Bal","Silver Surfer","Stranger","Super-Skrull"],"name":"Silver Surfer #27","link":"silver_surfer_27","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Steve Englehart"],"i":3901},{"year":1989,"characters":["Doctor Bong","Fifi","Razorback","She-Hulk","Taryn O'Connell"],"name":"She-Hulk #5","link":"she-hulk_5","credits":["Bobbie Chase","John Byrne","Bob Wiacek","James DiGiovanna"],"i":3902},{"year":1989,"characters":["Black Cat","Chloe Tran","Frenchie","Hal Parkinson","Marlene Alraune","Midnight (Jeffrey Wilde)","Moon Knight"],"name":"Moon Knight #4-5","link":"moon_knight_4-5","credits":["Mark Farmer","Chuck Dixon","Marc McLaurin","Carl Potts","Sal Velluto","Russ Heath"],"i":3903},{"year":1989,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Contessa Valentina Allegro De La Fontaine","Death's Head (Gnobians)","Dum Dum Dugan LMD","Kate Neville","Lump (Gnobian)","Nick Fury","Red (LMD)","Werner Von Strucker","Wilhelm Schmidt"],"name":"Nick Fury Agent of SHIELD #1","link":"nick_fury_agent_of_shield_1","credits":["Bob Hall","Bob Harras","Gregory Wright","Sara Tuckinsky","Kim DeMulder"],"i":3904},{"year":1989,"characters":["Blackheart","Daredevil","Mephisto","Spider-Man"],"name":"Daredevil #270","link":"daredevil_270","credits":["Ann Nocenti","John Romita Jr.","Al Williamson","Ralph Macchio"],"i":3905},{"year":1989,"characters":["Alistaire Stuart","Bodybag","Captain Britain","China Doll","Gatecrasher","Joyboy","Lockheed","Meggan","Nigel Frobisher","Nightcrawler","Numbers","Rachel Summers","Scatterbrain","Shadowcat (Kitty Pryde)","Train Dragon","Waxworks","Widget","Yap"],"name":"Excalibur #12-13","link":"excalibur_12-13","credits":["Terry Kavanaugh","Michael Rockwitz","Chris Claremont","Alan Davis","Paul Neary"],"i":3906},{"year":1989,"characters":["Banshee","Callisto","Cyclops","Master Mold","Moira MacTaggert"],"name":"Marvel Comics Presents #17-24 (Cyclops)","link":"marvel_comics_presents_17-24_c","credits":["Jeffrey Albrecht","Ron Lim","Bruce D. Patterson","Bob Harras","Michael Rockwitz","Carol Riem","Terry Kavanagh"],"i":3907},{"year":1989,"characters":["Paladin"],"name":"Marvel Comics Presents #21 (Paladin)","link":"marvel_comics_presents_21_pala","credits":["Dan Adkins","Michael Rockwitz","Scott Lobdell","Ron Wilson","Terry Kavanagh"],"i":3908},{"year":1989,"characters":["Triton"],"name":"Marvel Comics Presents #28 (Triton)","link":"marvel_comics_presents_28_trit","credits":["Jose Marzan","Michael Rockwitz","Robert Campanella","Javier Saltares","Terry Kavanagh"],"i":3909},{"year":1989,"characters":["Jennifer Kale","Man-Thing","Quagmire","Quasar"],"name":"Marvel Comics Presents #29 (Quasar)","link":"marvel_comics_presents_29_quas","credits":["Michael Rockwitz","Paul Ryan","Dan Bulanadi","Mark Gruenwald","Terry Kavanagh"],"i":3910},{"year":1989,"characters":["Caber","Dagda","Leir"],"name":"Marvel Comics Presents #30 (Leir)","link":"marvel_comics_presents_30_leir","credits":["Sue Flaxman","Michael Rockwitz","Tom Morgan","Terry Kavanagh"],"i":3911},{"year":1989,"characters":["Corruptor","Sunfire"],"name":"Marvel Comics Presents #32 (Sunfire)","link":"marvel_comics_presents_32_sunf","credits":["Don Heck","Dave Cockrum","Kelly Corvese","Scott Lobdell","Terry Kavanagh"],"i":3912},{"year":1990,"characters":["Captain Ultra","Doc Samson","Doctor Octopus","Silver Surfer"],"name":"Marvel Comics Presents #50 (Captain Ultra & Silver Surfer)","link":"marvel_comics_presents_50_capt","credits":["Jeffrey Albrecht","<b>Title:","Ed Simmons","Christopher Ivy","Dennis Jensen","Jack Sparling","<em>Silver Sufer<","Scott Lobdell","<b>Credits:","Kelly Corvese","em>","Terry Kavanagh","\"You can't go home again\""],"i":3913},{"year":1990,"characters":["Black Cat","Kingpin"],"name":"Marvel Comics Presents #57 (Black Cat)","link":"marvel_comics_presents_57_blac","credits":["Josef Rubinstein","Kelly Corvese","Dwight Jon Zimmerman","Terry Kavanagh","Mike Harris"],"i":3914},{"year":1991,"characters":["Wolverine"],"name":"Marvel Fanfare #54-55 (Wolverine)","link":"marvel_fanfare_54-55_wolverine","credits":["Richard Howell","Al Milgrom"],"i":3915},{"year":1989,"characters":["Clumsy Foulup","Contemplator Skrull","Kree Sentry 7497","Nenora","Reptyl","S'Byll","Shalla Bal","Silver Surfer","Super-Skrull","Supreme Intelligence"],"name":"Silver Surfer #28","link":"silver_surfer_28","credits":["Tom Christopher","Ron Lim","Renee Witterstaetter","Carl Potts","Steve Englehart"],"i":3916},{"year":1989,"characters":["Al the Alien","Big Enilwen","Blonde Phantom","Charlie-27","Major Victory","Martinex","Mary McGrill","Mr. Fantastic","Nikki","Poppa Wheeler","Razorback","Retread","She-Hulk","Starhawk","Taryn O'Connell","U.S. Archer","Wide Load Annie","Xemnu the Titan"],"name":"She-Hulk #6-7","link":"she-hulk_6-7","credits":["Bob Wiacek","John Byrne","James DiGiovanna","Bobbie Chase","Alan Gordon"],"i":3917},{"year":1989,"characters":["Cloak","Crimson Daffodil","Dagger","Dennis Fiedler","Ecstasy","Father Delgado","Father Michael Bowen","Kingpin","Mayhem","Mr. Jip","Phillip Carlisle","Rebecca 'Rusty' Nales"],"name":"Cloak and Dagger #6-8","link":"cloak_and_dagger_6-8","credits":["Barb Rausch","Terry Austin","Marc McLaurin","Carl Potts","Mike Vosburg","Don Cameron"],"i":3918},{"year":1989,"characters":["Blake Tower","Blonde Phantom","Lexington Loopner","She-Hulk"],"name":"She-Hulk #8","link":"she-hulk_8","credits":["Bobbie Chase","John Byrne","Bob Wiacek","James DiGiovanna"],"i":3919},{"year":1989,"characters":["Auric","Diamond Lil","Madison Jeffries","Nemesis II","Puck","Sasquatch","Shaman","Silver","Talisman","Vindicator (Heather Hudson)","Wild Child","Witchfire"],"name":"Alpha Flight #76","link":"alpha_flight_76","credits":["John Calimee","Marc McLaurin","James Hudnall","Carl Potts","Mike Manley"],"i":3920},{"year":1989,"characters":["Captain Marvel (Monica Rambeau)","Frank Rambeau","Maria Rambeau","Moonstone (Karla Sofen)","Mr. Fantastic","Powderkeg","War Machine"],"name":"Captain Marvel #1","link":"captain_marvel_1","credits":["Stan Drake","M.D. Bright","Frank W. Bolle","Dwayne McDuffie","Gregory Wright","Mark Gruenwald"],"i":3921},{"year":1989,"characters":["Dr. Strange","Dreaming Celestial","Ghaur","Llyra","Mephisto","Reptyl","Silver Surfer","Talisman"],"name":"Silver Surfer annual #2","link":"silver_surfer_annual_2","credits":["Ron Lim","Craig Anderson","Jose Marzan","Renee Witterstaetter","Keith Williams","Robert Campanella","Rodney Ramos","Steve Englehart","Jim Valentino"],"i":3922},{"year":1989,"characters":["Agatha Harkness","Ann Raymond","Ebony","Ghaur","Henry Pym","Human Torch (Golden Age)","Immortus","Iron Man","Jarvis","Llyra","Master Pandemonium","Mephisto","Scarlet Witch","Sub-Mariner","Thomas (VSW Baby)","Tigra","USAgent","Vision","Wasp","William (VSW Baby)","Wonder Man"],"name":"Avengers West Coast #50-52","link":"avengers_west_coast_50-52","credits":["John Byrne","David Wohl","Mike Machlan","Howard Mackie"],"i":3923},{"year":1989,"characters":["Andromeda","Attuma","Crimson Dynamo V","Ghaur","Half-Face","Inoshiro Kondo","Irina Tarasova","Iron Man","Krang","Llyra","Mrs. Arbogast","Set","Space Phantom","Sub-Mariner","War Machine","Whiplash (Blacklash)"],"name":"Iron Man annual #10","link":"iron_man_annual_10","credits":["Don Perlin","Fabian Nicieza","Gene Colan","Paul Smith","John Byrne","David Wohl","Various","Michael Gustovich","David Michelinie","Bob Layton","Keith Pollard","Jackson Guice"],"i":3924},{"year":1989,"characters":["Abe Zimmer","Bertram Hindel","FBI Agent Mallard","Felix Alvarez","Iron Man","Kathleen Dare","Marcy Pearson","Mrs. Arbogast","Rae LaCoste","War Machine"],"name":"Iron Man #246","link":"iron_man_246","credits":["Herb Trimpe","David Wohl","Bob Layton","David Michelinie","Howard Mackie"],"i":3925},{"year":1992,"characters":["Cupid","Hawkeye","Henry Pym","Hercules","Iron Man","Mockingbird","Scarlet Witch","USAgent","Venus","Vision","Wasp","Wonder Man","Zeus"],"name":"Marvel Super Heroes #9 (AWC)","link":"marvel_super_heroes_9_awc","credits":["Herb Trimpe","Rob Tokar","Keith Williams","Dwayne McDuffie","Ron Wilson","Nel Yomtov"],"i":3926},{"year":1989,"characters":["Anaconda","Asp","Black Mamba","Black Racer","Boomslang","Bushmaster II","Coachwhip","Cobra","Colossus","Copperhead III","Cottonmouth","Dazzler","Diamondback","Fer-De-Lance","Gateway","Ghaur","Havok","Jubilee","Llyra","Longshot","Mr. Jip","Psylocke","Puff Adder","Rattler","Rock Python","Rogue","Sidewinder","Storm","Wolverine"],"name":"Uncanny X-Men annual #13","link":"uncanny_x-men_annual_13","credits":["Jim Fern","Bob Harras","Josef Rubinstein","Terry Austin","Chris Claremont","Mike Vosburg"],"i":3927},{"year":1989,"characters":["Abomination","Aunt May","Flash Thompson","Ghaur","J. Jonah Jameson","Joy Mercado","Kate Cushing","Kingpin","Lance Bannon","Llyra","Madame Hydra (Viper)","Mary Jane Watson","Nick Katzenberg","Set","She-Hulk","Spider-Man","Tyrannus"],"name":"Amazing Spider-Man annual #23","link":"amazing_spider-man_annual_23","credits":["Rob Liefeld","Jim Salicrup","Vince Mielcarek","James Brock","Andy Mushynsky and Don Hudson","and Keith Williams","Richard Rockwell","David Michelinie","Tim Dzon","Gavin Curtis","Gerry Conway"],"i":3928},{"year":1989,"characters":["Frenchie","Madame Hydra (Viper)","Microchip","Moon Knight","Punisher"],"name":"Punisher annual #2","link":"punisher_annual_2","credits":["Bill Reinhold","Mike Baron","Carl Potts"],"i":3929},{"year":1989,"characters":["Amanda Robertson","Aunt May","Aunt Watson","Ben Urich","Betty Brant","Cloak","Dagger","Flash Thompson","Ghaur","Harry Osborn","J. Jonah Jameson","Jerry Sapristi","Jonathan Caesar","Joy Mercado","Kate Cushing","Kristy Watson","Lance Bannon","Liz Allan","Martha Robertson","Mary Jane Watson","Mindy McPherson","Nate Lubenski","Normie Osborn","Prowler","Randy Robertson","Spider-Man","Sub-Mariner","Tyrannus"],"name":"Spectacular Spider-Man annual #9","link":"spectacular_spider-man_annual","credits":["Christopher Ivy","David Ross","Jim Salicrup","Glenn Herdling","Mark McKenna","Andy Mushynsky and Michael Gustovich","Scott McDaniel","Dan Jurgens","Gerry Conway"],"i":3930},{"year":1989,"characters":["Daredevil","Dr. Strange","Madame Hydra (Viper)","Set","Spider-Man","Tyrannus"],"name":"Daredevil annual #4 (Atlantis Attacks)","link":"daredevil_annual_4_atlantis_at","credits":["Ralph Macchio","Mark Bagley","Sam DeLaRosa","Gerry Conway"],"i":3931},{"year":1989,"characters":["Attuma","Black Panther","Black Widow","Captain America","Captain Marvel (Monica Rambeau)","Ghaur","Hawkeye","Henry Pym","Hulk","Human Torch (Golden Age)","Invisible Woman","Iron Man","Krang","Llyra","Lord Arno","Madame Hydra (Viper)","Mockingbird","Moondragon","Mr. Fantastic","Orka","Quasar","Rick Jones","Scarlet Witch","Sersi","She-Hulk","Sub-Mariner","Thing","Thor","Tyrak","U-Man","Vision","Wasp","Wonder Man"],"name":"Avengers annual #18 (Atlantis Attacks)","link":"avengers_annual_18","credits":["Michael Higgins","Ron Wilson","Howard Mackie","Michael Gustovich"],"i":3932},{"year":1989,"characters":["Boom Boom","Cannonball","Eel (SURF)","Ghaur","Llyra","Namorita","Rictor","Sharkskin","Sunspot","Undertow","Warlock","Wolfsbane"],"name":"New Mutants annual #5","link":"new_mutants_annual_5","credits":["Rob Liefeld","Louise Simonson","Bob Harras","Tim Dzon"],"i":3933},{"year":1989,"characters":["Andromeda","Attuma","Beast","Ghaur","Jean Grey"],"name":"X-Factor annual #4 (Atlantis Attacks)","link":"x-factor_annual_4_atlantis_att","credits":["John Byrne","Bob Harras","Walt Simonson"],"i":3934},{"year":1989,"characters":["Attuma","Aunt May","Captain Universe (Uni-Power)","Evan Swann","Ghaur","Human Torch","Invisible Woman","Llyra","Mary Jane Watson","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Silver Sable","Spider-Man","Sub-Mariner","Thing","Uncle Morty"],"name":"Web of Spider-Man annual #5","link":"web_of_spider-man_annual_5","credits":["Al Milgrom","Christopher Ivy","Fabian Nicieza","Jim Salicrup","Andy Mushynsky","Javier Saltares","Steve Ditko","Randy Emberlin","Mark Propst","Gerry Conway"],"i":3935},{"year":1989,"characters":["Andromeda","Beast","Captain America","Dagger","Firebird","Ghaur","Human Torch (Golden Age)","Invisible Woman","Iron Man","Jean Grey","Quasar","Scarlet Witch","Sersi","Set","She-Hulk","Storm","Thing","Thor","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast annual #4","link":"avengers_west_coast_annual_4","credits":["Christopher Ivy","Fabian Nicieza","Terry Austin","John Byrne","Mike Manley","Mark Gruenwald","Gavin Curtis","Howard Mackie"],"i":3936},{"year":1989,"characters":["Andromeda","Beast","Captain America","Dagger","Demogorge","Dr. Strange","Gaea","Ghaur","Invisible Woman","Iron Man","Jean Grey","Quasar","Scarlet Witch","Sersi","Set","She-Hulk","Storm","Thing","Thor","Vision","Wasp","Wonder Man"],"name":"Thor annual #14 (Atlantis Attacks)","link":"thor_annual_14_atlantis_attack","credits":["Roy Thomas","Don Heck","Al Milgrom","Ralph Macchio"],"i":3937},{"year":1989,"characters":["Andromeda","Beast","Black Panther","Black Widow","Captain America","Captain Marvel (Monica Rambeau)","Dagger","Dr. Strange","Ghaur","Hawkeye","Henry Pym","Human Torch","Human Torch (Golden Age)","Invisible Woman","Iron Man","Jean Grey","Llyra","Mockingbird","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Naga","Namorita","Quasar","Scarlet Witch","Sersi","She-Hulk","Storm","Sub-Mariner","Thing","Thor","Vision","Wasp","Wonder Man"],"name":"Fantastic Four annual #22 (Atlantis Attacks)","link":"fantastic_four_annual_22_atlan","credits":["Roy Thomas","Rich Buckler","Tony DeZuniga","Ralph Macchio"],"i":3938},{"year":1988,"characters":["Galactus","Mephisto","Nova (Frankie Raye)","Silver Surfer"],"name":"Silver Surfer: Judgment Day (Marvel Graphic Novel #38)","link":"silver_surfer_judgment_day_mar","credits":["Tom DeFalco","John Buscema","Ralph Macchio","Stan Lee"],"i":3939},{"year":1990,"characters":["Dr. Doom","Storm"],"name":"Marvel Comics Presents #48 (Storm)","link":"marvel_comics_presents_48_stor","credits":["Christopher Ivy","Kelly Corvese","Rodney Ramos","Dwight Jon Zimmerman","Terry Kavanagh"],"i":3940},{"year":1991,"characters":["Black Queen (Selene)","Hulk","Magneto","White Queen (Emma Frost)"],"name":"Marvel Comics Presents #78 (Hulk)","link":"marvel_comics_presents_78_hulk","credits":["Brian Stelfreeze","Karl Story","Kelly Corvese","Dwight Jon Zimmerman","Terry Kavanagh"],"i":3941},{"year":1991,"characters":["Abomination","Colossus","Doc Samson","Gateway","Havok","Larry Trask","Psylocke","Rogue","Storm","Wolverine"],"name":"Marvel Super Heroes #6-8 (X-Men)","link":"marvel_super_heroes_6-8_x-men","credits":["Michael Higgins","Jim Sanders III","Harry Candelario","M.C. Wyman","Roy Thomas","Mike Rockwitz","Larry Alexander","Sam DeLaRosa","Rich Buckler","Dann Thomas"],"i":3942},{"year":1989,"characters":["Betty Ross","D'Spayre","Hulk","Nightmare","Rick Jones"],"name":"Hulk #360","link":"hulk_360","credits":["Bobbie Chase","Bob Harras","Dan Reed","Marie Severin"],"i":3943},{"year":1989,"characters":["Black Widow","Damage","Hatsu Yakamoto","Manzo","Philip Richards","Punisher","Rikichi","Ron Salazar","Yuriko Ezaki"],"name":"Punisher War Journal #8-9","link":"punisher_war_journal_8","credits":["Don Daley","Carl Potts","Jim Lee","Kelly Corvese"],"i":3944},{"year":1989,"characters":["Arabella Jones","Black King (Sebastian Shaw)","Bonebreaker","Colossus","Dazzler","Gateway","Havok","Jubilee","Lady Deathstrike","Longshot","Master Mold","Nanny II","Nimrod","Orphan-Maker","Psylocke","Rogue","Senator Kelly","Storm","Tessa","White Bishop (Donald Pierce)","Wolverine"],"name":"Uncanny X-Men #246-247","link":"uncanny_x-men_246-247","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Chris Claremont","Dan Green"],"i":3945},{"year":1989,"characters":["Arranger","Aunt May","Chameleon","Eduardo Lobo","Glory Grant","Hammerhead","J. Jonah Jameson","Kate Cushing","Kristy Watson","Mary Jane Watson","Nick Katzenberg","Puma","Spider-Man","Susan Ransome"],"name":"Spectacular Spider-Man #154","link":"spectacular_spider-man_154","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":3946},{"year":1989,"characters":["Arranger","Carlos Lobo","Chameleon","Eduardo Lobo","Glory Grant","Hammerhead","J. Jonah Jameson","Joy Mercado","Kate Cushing","Kingpin","Mary Jane Watson","Nick Katzenberg","Spider-Man"],"name":"Web of Spider-Man #55","link":"web_of_spider-man_55","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3947},{"year":1989,"characters":["Black Bolt","Brandy Ash","Daredevil","Gorgon","Karnak","Medusa","Number Nine","Shotgun (Mercenary)","Skip Ash"],"name":"Daredevil #271-273","link":"daredevil_271-273","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Michael Rockwitz","Al Williamson","Marc Siry"],"i":3948},{"year":1989,"characters":["Aunt May","Carlton Drake","Evan Swann","Harry Osborn","Mary Jane Watson","Paladin","Silver Sable","Spider-Man"],"name":"Amazing Spider-Man #320","link":"amazing_spider-man_320","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3949},{"year":1989,"characters":["Abe Zimmer","FBI Agent Mallard","Felix Alvarez","Hulk","Iron Man","Madame Masque Bio-Duplicate II","Mrs. Arbogast","War Machine"],"name":"Iron Man #247","link":"iron_man_247","credits":["Tim Dzon","Bob Layton","David Michelinie","Howard Mackie"],"i":3950},{"year":1989,"characters":["Hulk","Iron Man","Madame Masque Bio-Duplicate II","Mrs. Arbogast"],"name":"Hulk #361","link":"hulk_361","credits":["Peter David","Jeff Purves","James DiGiovanna","Bobbie Chase","Marie Severin"],"i":3951},{"year":1989,"characters":["Aunt May","Black Cat","Flash Thompson","Harry Osborn","Joe 'Robbie' Robertson","Mary Jane Watson","Randy Robertson","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #155","link":"spectacular_spider-man_155","credits":["Jim Salicrup","Gerry Conway","Glenn Herdling","Sal Buscema","Mike Esposito"],"i":3952},{"year":1989,"characters":["Archie Corrigan","Bloodscream","Geist","General Nguyen Coy","O'Donnell (Princess Bar)","Prince Baran","Roughouse","Sister Salvation","Spore","Tai (Madripoor police)","Tyger Tiger","Wolverine"],"name":"Wolverine #17-18","link":"wolverine_17-18","credits":["Klaus Janson","John Byrne","Bob Harras","Archie Goodwin"],"i":3953},{"year":1989,"characters":["Angelo Macon","Bonebreaker","Colossus","Dazzler","Gateway","Havok","Jubilee","Lady Deathstrike","Longshot","Murray Reese","Nanny II","Orphan-Maker","Pretty Boy","Psylocke","Skullbuster","Storm","Wade Cole","White Bishop (Donald Pierce)"],"name":"Uncanny X-Men #248","link":"uncanny_x-men_248","credits":["Daryl Edelman","Bob Harras","Chris Claremont","Jim Lee","Dan Green"],"i":3954},{"year":1989,"characters":["Punisher"],"name":"Punisher: Return to Big Nothing","link":"punisher_return_to_big_nothing","credits":["Steven Grant","Mike Zeck","Carl Potts","John Beatty","Margaret Clark"],"i":3955},{"year":1989,"characters":["Coldblood"],"name":"Marvel Comics Presents #26-35 (Coldblood)","link":"marvel_comics_presents_26-35_c","credits":["Doug Moench","Michael Rockwitz","Kelly Corvese","Terry Kavanagh","Paul Gulacy"],"i":3956},{"year":1989,"characters":["Sub-Mariner"],"name":"Marvel Comics Presents #33 (Sub-Mariner)","link":"marvel_comics_presents_33_sub-","credits":["Don McGregor","Christopher Ivy","Kelly Corvese","Jim Lee","Terry Kavanagh"],"i":3957},{"year":1989,"characters":["Agent Axis","Captain America","Thin Man"],"name":"Marvel Comics Presents #34 (Captain America)","link":"marvel_comics_presents_34_capt","credits":["Jack Sparling","Kelly Corvese","Sholly Fisch","Randy Emberlin","Terry Kavanagh"],"i":3958},{"year":1989,"characters":["Kismet (Her)"],"name":"Marvel Comics Presents #35 (Her)","link":"marvel_comics_presents_35_her","credits":["Erik Larsen","Fabian Nicieza","Kelly Corvese","Alan Gordon","Terry Kavanagh"],"i":3959},{"year":1989,"characters":["Hellcat"],"name":"Marvel Comics Presents #36 (Hellcat)","link":"marvel_comics_presents_36_hell","credits":["Kelly Corvese","June Brigman","Jack C. Harris","Terry Kavanagh","Roy Richardson"],"i":3960},{"year":1990,"characters":["Avalanche","Blob","Destiny","Mystique","Pyro","Senator Kelly","Spiral"],"name":"Marvel Comics Presents #41 (Freedom Force)","link":"marvel_comics_presents_41_free","credits":["Bruce D. Patterson","Dave Cockrum","Scott Lobdell","Kelly Corvese","Terry Kavanagh"],"i":3961},{"year":1990,"characters":["Diane Arliss","Stingray","Tiger Shark"],"name":"Marvel Comics Presents #53-56 (Stingray)","link":"marvel_comics_presents_53-56_s","credits":["Mike DeCarlo","Jim Fern","Kelly Corvese","Len Wein","Terry Kavanagh"],"i":3962},{"year":1989,"characters":["Death's Head","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Death's Head #9","link":"deaths_head_9","credits":["Simon Furman","John Higgins","Steve White","Geoff Senior","Jenny O'Connor"],"i":3963},{"year":1989,"characters":["Brother Voodoo","Chloe Tran","Frenchie","Hal Parkinson","Midnight (Jeffrey Wilde)","Moon Knight"],"name":"Moon Knight #6-7","link":"moon_knight_6-7","credits":["Mark Farmer","Chuck Dixon","Marc McLaurin","Carl Potts","Sal Velluto"],"i":3964},{"year":1989,"characters":["Abe Zimmer","Atha Williams","Bertram Hindel","Cal Oakley","Erica Sondheim","Felix Alvarez","Iron Man","Kathleen Dare","Marcy Pearson","Mrs. Arbogast","Rae LaCoste","Sunturion","War Machine"],"name":"Iron Man #248","link":"iron_man_248","credits":["Bob Layton","David Michelinie","Howard Mackie"],"i":3965},{"year":1989,"characters":["Hulk","Madman","Marlo Chandler","Mona (Marlo's friend)","Werewolf By Night"],"name":"Hulk #362","link":"hulk_362","credits":["Peter David","Jeff Purves","James DiGiovanna","Bobbie Chase","Marie Severin"],"i":3966},{"year":1992,"characters":["Iron Man","War Machine"],"name":"Marvel Super Heroes #9 (Iron Man)","link":"marvel_super_heroes_9_iron_man","credits":["James Fry","Kurt Busiek","Rob Tokar","Karl Kesel"],"i":3967},{"year":1989,"characters":["Aunt May","Carlton Drake","Flash Thompson","Harry Osborn","Liz Allan","Mary Jane Watson","Normie Osborn","Paladin","Silver Sable","Spider-Man"],"name":"Amazing Spider-Man #321","link":"amazing_spider-man_321","credits":["Todd McFarlane","Glenn Herdling","Jim Salicrup","David Michelinie"],"i":3968},{"year":1989,"characters":["Aunt May","Ben Urich","Harry Osborn","J. Jonah Jameson","Joy Mercado","Kate Cushing","Mary Jane Watson","Nate Lubenski","Nick Katzenberg","Rocket Racer","Skinhead","Spider-Man"],"name":"Web of Spider-Man #56","link":"web_of_spider-man_56","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3969},{"year":1989,"characters":["Dr. Doom","Erica Sondheim","Garrison Quint","Iron Man","Mrs. Arbogast","Mrs. Fruitbagel","Rae LaCoste","War Machine"],"name":"Iron Man #249-250","link":"iron_man_249-250","credits":["Bob Layton","David Michelinie","Howard Mackie"],"i":3970},{"year":1989,"characters":["Aunt May","Captain America","Flash Thompson","Mary Jane Watson","Nate Lubenski","Red Skull","Sabretooth","Silver Sable","Solo","Spider-Man"],"name":"Amazing Spider-Man #322-325","link":"amazing_spider-man_321-325","credits":["Todd McFarlane","Erik Larsen","Jim Salicrup","Glenn Herdling","David Michelinie","Alan Gordon"],"i":3971},{"year":1989,"characters":["Clumsy Foulup","Contemplator Skrull","Kree Sentry 7497","Living Tribunal","Midnight (M'Nai)","Nenora","Reptyl","S'Byll","Shalla Bal","Silver Surfer","Stranger","Supreme Intelligence","Tus-Katt"],"name":"Silver Surfer #29-31","link":"silver_surfer_29-31","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Steve Englehart"],"i":3972},{"year":1989,"characters":["Aunt May","Betty Brant","Black Cat","Flash Thompson","Glory Grant","Harry Osborn","J. Jonah Jameson","Kristy Watson","Liz Allan","Marla Madison Jameson","Mary Jane Watson","Normie Osborn","Puma","Spider-Man","Susan Ransome","Tombstone"],"name":"Spectacular Spider-Man #156","link":"spectacular_spider-man_156","credits":["Jim Salicrup","Gerry Conway","Glenn Herdling","Sal Buscema","Mike Esposito"],"i":3973},{"year":1989,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Contessa Valentina Allegro De La Fontaine","Death's Head (Gnobians)","Kate Neville","Lump (Gnobian)","Network Nina","Nick Fury","Red (LMD)","Wilhelm Schmidt"],"name":"Nick Fury Agent of SHIELD #2","link":"nick_fury_agent_of_shield_2","credits":["Keith Pollard","Bob Harras","Kim DeMulder","Gregory Wright"],"i":3974},{"year":1989,"characters":["Diamond Lil","Kingpin","Madison Jeffries","Vindicator (Heather Hudson)"],"name":"Alpha Flight #77","link":"alpha_flight_77","credits":["Marc McLaurin","James Hudnall","Carl Potts","Huw Thomas","Mike Manley"],"i":3975},{"year":1991,"characters":["Reptyl","S'Byll","Super-Skrull"],"name":"Fantastic Four annual #24 (Super-Skrull)","link":"fantastic_four_annual_24_super","credits":["Tim Dzon","Ralph Macchio","Christopher Ivy","Len Kaminski"],"i":3976},{"year":1989,"characters":["Alistaire Stuart","Captain Britain","Galactus","Lockheed","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)","Widget"],"name":"Excalibur #14","link":"excalibur_14","credits":["Terry Kavanaugh","Michael Rockwitz","Chris Claremont","Alan Davis","Paul Neary"],"i":3977},{"year":1989,"characters":["Bloodaxe (Jackie Lukus)","Captain America","Dr. Doom","Hercules","Jerry Sapristi","Kevin Masterson","Kristoff","Loki","Marcus Stone","She-Hulk","Susan Austin","Thor","Thunderstrike"],"name":"Thor #409-410","link":"thor_409-410","credits":["Tom DeFalco","Ron Frenz","Michael Rockwitz","Ralph Macchio"],"i":3978},{"year":1989,"characters":["Glory Grant","Kate Cushing","Kristy Watson","Mary Jane Watson","Nick Katzenberg","Rocket Racer","Skinhead","Spider-Man","Susan Ransome"],"name":"Web of Spider-Man #57","link":"web_of_spider-man_57","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3979},{"year":1989,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Contessa Valentina Allegro De La Fontaine","Death's Head (Gnobians)","Lump (Gnobian)","Network Nina","Nick Fury","Red (LMD)","Werner Von Strucker","Wilhelm Schmidt"],"name":"Nick Fury Agent of SHIELD #3-6","link":"nick_fury_agent_of_shield_3-6","credits":["Bob Harras","Kim DeMulder","Gregory Wright","Keith Pollard","Evan Skolnick"],"i":3980},{"year":1989,"characters":["Microchip","Punisher","Sniper"],"name":"Punisher War Journal #10","link":"punisher_war_journal_10","credits":["Scott Williams","Don Daley","Rob Tokar","Carl Potts","Jim Lee"],"i":3981},{"year":1989,"characters":["Madcap","She-Hulk"],"name":"She-Hulk #9","link":"she-hulk_9","credits":["Al Milgrom","Walt Simonson","Richard Starkings","Gregory Wright","Bobbie Chase","James DiGiovanna","Bryan Hitch","Bob Wiacek"],"i":3982},{"year":1989,"characters":["Ben Urich","Chameleon","Electro","Flash Thompson","Glory Grant","Hammerhead","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Lance Bannon","Liz Allan","Mary Jane Watson","Nick Katzenberg","Normie Osborn","Puma","Shocker","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #157","link":"spectacular_spider-man_157","credits":["Jim Salicrup","Gerry Conway","Glenn Herdling","Sal Buscema","Mike Esposito"],"i":3983},{"year":1989,"characters":["Hatsu Yakamoto","Iris Green","Kathryn Yakamoto","Manzo","Philip Richards","Punisher","Yuriko Ezaki"],"name":"Punisher #24-25","link":"punisher_24-25","credits":["Erik Larsen","Scott Williams","Marc McLaurin","Carl Potts","Al Williamson","Mike Baron"],"i":3984},{"year":1989,"characters":["Amanda Robertson","Cynthia Bernhammer","Grizzly","Joe 'Robbie' Robertson","Joy Mercado","Kristy Watson","Martha Robertson","Mary Jane Watson","Puma","Randy Robertson","Spider-Man","Susan Ransome","Tinkerer"],"name":"Web of Spider-Man #58","link":"web_of_spider-man_58","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":3985},{"year":1989,"characters":["Empath","Magma"],"name":"New Mutants #81","link":"new_mutants_81","credits":["Bob Harras","Josef Rubinstein","Chris Claremont","Louis Williams","Terry Shoemaker"],"i":3986},{"year":1989,"characters":["Microchip","Punisher","Ron Salazar"],"name":"Punisher War Journal #11","link":"punisher_war_journal_11","credits":["Rob Tokar","Don Daley","Carl Potts","Klaus Janson","Jim Lee"],"i":3987},{"year":1989,"characters":["Mephisto","Silver Surfer"],"name":"Silver Surfer #32","link":"silver_surfer_32","credits":["Jim Valentino","Ron Frenz","Craig Anderson","Joe Sinnott"],"i":3988},{"year":1990,"characters":["Blake Tower","Blonde Phantom","Lexington Loopner","She-Hulk"],"name":"She-Hulk #10-11","link":"she-hulk_10-11","credits":["Al Milgrom","Bobbie Chase","Randy Emberlin","James DiGiovanna","Bryan Hitch","Bob Wiacek","Alan Gordon","Steve Gerber"],"i":3989},{"year":1989,"characters":["Brandy Ash","Daredevil","Gorgon","Karnak","Lockjaw","Medusa","Number Nine","Skip Ash"],"name":"Daredevil #274","link":"daredevil_274","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Michael Rockwitz","Al Williamson"],"i":3990},{"year":1989,"characters":["Punisher"],"name":"Punisher #26-27","link":"punisher_26-27","credits":["Mike Baron","Carl Potts","Marc McLaurin","Russ Heath"],"i":3991},{"year":1989,"characters":["Alistaire Stuart","Bodybag","Captain Britain","China Doll","Doctor Crocodile","Ferro^2","Gatecrasher","Jamie Braddock","Joyboy","Kura","Lockheed","Meggan","Nigel Frobisher","Nightcrawler","Numbers","Rachel Summers","Ringtoss","Scatterbrain","Shadowcat (Kitty Pryde)","Thug","Waxworks","Widget","Yap"],"name":"Excalibur #15","link":"excalibur_15","credits":["Terry Kavanaugh","Michael Rockwitz","Chris Claremont","Alan Davis","Paul Neary"],"i":3992},{"year":1989,"characters":["Aunt May","Doctor Octopus","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man: Parallel Lives","link":"amazing_spider-man_parallel_li","credits":["Alex Saviuk","Andy Mushynsky","Jim Salicrup","Gerry Conway"],"i":3993},{"year":1994,"characters":["Deltite","Iron Man","Nick Fury"],"name":"Fury #1","link":"fury_1","credits":["Ralph Macchio","Christopher Ivy","M.C. Wyman","Greg Adams","Pat Garrahy","Barry Dutter"],"i":3994},{"year":1989,"characters":["Microchip","Punisher"],"name":"Classic Punisher #1","link":"classic_punisher_1","credits":["Marc McLaurin","Carl Potts","Don Cameron","Mike Vosburg","Mike Baron"],"i":3995},{"year":1989,"characters":["Eon","Kayla Ballantine","Quantum","Quasar","Wundarr (Aquarian)"],"name":"Quasar #4","link":"quasar_4","credits":["Paul Ryan","Dan Bulanadi","David Wohl","Mark Gruenwald","Howard Mackie"],"i":3996},{"year":1989,"characters":["Alistaire Stuart","Captain Britain","Carol Danvers","Ch'od","Corsair","Cr'reee","Hepzibah","Kymri","Lilandra","Lockheed","Nightcrawler","Professor X","Rachel Summers","Raza Longknife","Shadowcat (Kitty Pryde)","Widget"],"name":"Excalibur #16-17","link":"excalibur_16-17","credits":["Terry Kavanaugh","Michael Rockwitz","Chris Claremont","Alan Davis","Paul Neary"],"i":3997},{"year":1989,"characters":["Microchip","Punisher"],"name":"Punisher: Intruder","link":"punisher_intruder","credits":["Mike Baron","Carl Potts","William Reinhold","Marc McLaurin"],"i":3998},{"year":1989,"characters":["Baron Blood (Victor Strange)","Dr. Strange","Imei Chang","Morbius","Morgana Blessing","Rintrah","Sara Wolfe","Wong"],"name":"Doctor Strange #10","link":"doctor_strange_10","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Rockwitz","Dann Thomas"],"i":3999},{"year":1990,"characters":["Dr. Strange","Sara Wolfe","Wong"],"name":"Marvel Fanfare #52 (Dr. Strange)","link":"marvel_fanfare_52","credits":["Dean Allen Schreck","Al Milgrom","Al Williamson","Gene Colan"],"i":4000},{"year":1989,"characters":["Atlan","Baron Zemo (Heinrich)","Baron Zemo (Helmut)","Batroc","Bludgeon","Bubbles O'Day","Captain America","Centurius","Crossbones","Curtiss Jackson (Power Broker)","Diamondback","Exo-Mind (Hellfire Helix)","Fabian Stankowicz","General Lewis Haywerth","Guardsman II (Michael O'Brien)","Judas Bardham","Kaballa","Karl Malus","Living Mummy","Machete","Man-Wolf (John Jameson)","Mangler (Power Broker Inc)","Peggy Carter","Red Skull","Scourge II","Scourge IV","Tristam Micawber","Ulysses Bloodstone","USAgent","Vagabond","Wolverine","Zaran"],"name":"Captain America #357-364","link":"captain_america_357-364","credits":["Kieron Dwyer","<b>Title:","Dan Bulanadi","<b>Credits:","\"Augmentation!!\"","\"Won't get scourged again\"","Marc Siry","Don Hudson","\"Conflagration\"","em>","\"Wristy business\"","<em>USAgent<","Ralph Macchio","\"Death calling\"","\"Malus aforethought\"","Al Milgrom","M.D. Bright","Michael Rockwitz","Night of the Scourge: \"Siege\"","<em>Vagabond<","Mark Gruenwald"],"i":4001},{"year":1989,"characters":["Angar the Screamer","Armadillo","Cactus","Electro","Frank Ensign","Griffin","Hawkeye","Hydroman","Iron Man","Klaw","Loki","Mad Thinker","Molten Man","Mr. Hyde","Orka","Peggy Carter","Robin Chapel","Scarecrow","Titania","Whirlwind","Wizard","Yetrigar"],"name":"Avengers Spotlight #26","link":"avengers_spotlight_26","credits":["Christopher Ivy","Dwayne McDuffie","Gregory Wright","Mark Gruenwald","Evan Skolnick","Dwayne Turner"],"i":4002},{"year":1989,"characters":["Albert Cleary","Anne (Damage Control secretary)","Anne Marie Hoag","Bart Rozum","Bulldozer","Captain America","Eugene Strausser","Henry Ackerdson","Iron Man","John Porter","Kingpin","Lenny Ballinger","Marie Leahy","Mickey Souris","Piledriver","Rattler","Robert Washington","Robin Chapel","Thor","Thunderball","Wrecker"],"name":"Damage Control #1","link":"damage_control_1_1","credits":["Sid Jacobson","Ernie Colon","Dwayne McDuffie","Lisa Trusiani"],"i":4003},{"year":1989,"characters":["Arthur Chekov","Aunt May","Bambi","Candy","Evan Swann","Flash Thompson","Glory Grant","Graviton","Harry Osborn","J. Jonah Jameson","Joy Mercado","Kate Cushing","Liz Allan","Mary Jane Watson","Max Lubisch","Nate Lubenski","Nick Katzenberg","Normie Osborn","Phillip Chang","Puma","Randi","Spider-Man"],"name":"Amazing Spider-Man #326","link":"amazing_spider-man_326","credits":["Jim Salicrup","Glenn Herdling","Andy Mushynsky","Colleen Doran","David Michelinie"],"i":4004},{"year":1989,"characters":["Dr. Doom","Grey Gargoyle","Hulk","Madman"],"name":"Hulk #363","link":"hulk_363","credits":["Peter David","Jeff Purves","James DiGiovanna","Bobbie Chase","Marie Severin"],"i":4005},{"year":1990,"characters":["Mary Jane Watson","Spider-Man"],"name":"Marvel Comics Presents #39 (Spider-Man)","link":"marvel_comics_presents_39_spid","credits":["Bill Mumy","Sam Grainger","Kelly Corvese","Terry Kavanagh","Aaron Lopresti"],"i":4006},{"year":1989,"characters":["Amanda Robertson","Captain Universe (Uni-Power)","Cynthia Bernhammer","Dr. Doom","J. Jonah Jameson","Joe 'Robbie' Robertson","Kingpin","Loki","Magneto","Martha Robertson","Mary Jane Watson","Max Lubisch","Nick Katzenberg","Paste Pot Pete","Randy Robertson","Spider-Man","Stuart McPhee","Wizard"],"name":"Spectacular Spider-Man #158","link":"spectacular_spider-man_158","credits":["Mike Esposito","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":4007},{"year":1989,"characters":["Ben Urich","Captain Universe (Uni-Power)","Dr. Doom","Glory Grant","Joy Mercado","Kate Cushing","Lance Bannon","Mary Jane Watson","Nick Katzenberg","Puma","Spider-Man","Titania"],"name":"Web of Spider-Man #59","link":"web_of_spider-man_59","credits":["Alex Saviuk","Keith Williams","Jim Salicrup","Gerry Conway"],"i":4008},{"year":1989,"characters":["Baron Blood (Victor Strange)","Demogoblin","Dr. Strange","Imei Chang","J. Jonah Jameson","Jason Macendale","Morbius","Morgana Blessing","Rintrah","Sara Wolfe","Wong"],"name":"Doctor Strange #11","link":"doctor_strange_11","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Rockwitz","Dann Thomas"],"i":4009},{"year":1989,"characters":["Dr. Doom","Fabian Stankowicz","Guardsman II (Michael O'Brien)","Gunthar","Jarvis","Keith Kincaid","Loki","M'Daka","Mandarin","Nebula","Nuklo","Peggy Carter","Quasar","Starfox"],"name":"Avengers #311","link":"avengers_311","credits":["John Byrne","Paul Ryan","Tom Palmer","Howard Mackie"],"i":4010},{"year":1989,"characters":["Beetle","Captain America","Constrictor","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Shocker","Thing","Thor"],"name":"Fantastic Four #334","link":"fantastic_four_334","credits":["Ralph Macchio","Walt Simonson","Michael Rockwitz","Rich Buckler","Romeo Tanghal"],"i":4011},{"year":1989,"characters":["Arkon","Clea","Dr. Strange","Enchantress","Imei Chang","Morgana Blessing","Rintrah","Sara Wolfe","Wong"],"name":"Doctor Strange #12","link":"doctor_strange_12","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Rockwitz","Dann Thomas"],"i":4012},{"year":1989,"characters":["Diamond Lil","Dr. Strange","Every-Man","Llan the Sorcerer","Madison Jeffries","Master of the World","Puck","Sasquatch","Shaman","Talisman","Veronica Langkowski","Vindicator (Heather Hudson)","Wong"],"name":"Alpha Flight #78","link":"alpha_flight_78","credits":["John Calimee","Marc McLaurin","James Hudnall","Carl Potts","Mike Manley"],"i":4013},{"year":1989,"characters":["Captain Universe (Uni-Power)","Dr. Doom","Flash Thompson","Jason Jerome","Kingpin","Magneto","Mary Jane Watson","Max Lubisch","Spider-Man","Wizard"],"name":"Amazing Spider-Man #327","link":"amazing_spider-man_327","credits":["Erik Larsen","Alan Gordon","Jim Salicrup","David Michelinie"],"i":4014},{"year":1990,"characters":["Dagger","Dr. Doom","Energizer","Gee","Jim Power","Lightspeed","Mass Master","Phillip Carlisle","Typhoid Mary"],"name":"Power Pack #53","link":"power_pack_53","credits":["D.G. Chichester","Ernie Colon","Terry Austin","Sara Tuchinsky"],"i":4015},{"year":1989,"characters":["Absorbing Man","Captain America","Eon","Gilbert Vaughn","Guardsman II (Michael O'Brien)","Kayla Ballantine","Kenjiro Tanaka","Loki","Quasar","Shintaro Kuramoto","Stingray"],"name":"Quasar #5","link":"quasar_5","credits":["Mark Gruenwald","Paul Ryan","Dan Bulanadi","Howard Mackie"],"i":4016},{"year":1989,"characters":["Awesome Android","Black Widow","Boomerang","Captain Marvel (Monica Rambeau)","Firebird","Hawkeye","Hellcat","Loki","Mockingbird","Moondragon","Stingray"],"name":"Avengers Spotlight #27","link":"avengers_spotlight_27","credits":["Al Milgrom","<b>Title:","<em>Reserve Avengers<","Don Heck","Christopher Ivy","<b>Credits:","Dwayne McDuffie","Gregory Wright","em>","Mark Gruenwald","Evan Skolnick","\"Some assembly required\"","Dwayne Turner","Howard Mackie"],"i":4017},{"year":1990,"characters":["Chemistro","Chemistro III","Iron Man","Mrs. Arbogast","War Machine","Wizard","Wrecker"],"name":"Iron Man #251-252","link":"iron_man_251-252","credits":["Herb Trimpe","Al Milgrom","Dwayne McDuffie","Howard Mackie"],"i":4018},{"year":1989,"characters":["Captain America","Controller","Crossbones","Diamondback","Dr. Doom","Fabian Stankowicz","Guardsman II (Michael O'Brien)","Jarvis","Kingpin","Loki","Man-Wolf (John Jameson)","Peggy Carter","Red Skull","Sub-Mariner","Wizard"],"name":"Captain America #365","link":"captain_america_365","credits":["Kieron Dwyer","Ralph Macchio","Michael Rockwitz","Dan Bulanadi","Mark Gruenwald"],"i":4019},{"year":1989,"characters":["Ann Raymond","Henry Pym","Human Torch (Golden Age)","Immortus","Iron Man","Ironclad","Loki","Magneto","Scarlet Witch","Vapor","Vector","Vision","Wasp","Wonder Man","X-Ray"],"name":"Avengers West Coast #53","link":"avengers_west_coast_53","credits":["John Byrne","Keith Williams","David Wohl","Howard Mackie"],"i":4020},{"year":1989,"characters":["Flag-Smasher","Frenchie","Midnight (Jeffrey Wilde)","Moon Knight","Punisher"],"name":"Moon Knight #8-9","link":"moon_knight_8-9","credits":["Chuck Dixon","Danny Fingeroth","Marc McLaurin","Tom Palmer","Carl Potts","Sal Velluto"],"i":4021},{"year":1989,"characters":["Brothers Grimm III","Captain Universe (Uni-Power)","Cynthia Bernhammer","Dr. Doom","J. Jonah Jameson","Spider-Man","Stuart McPhee","Wizard"],"name":"Spectacular Spider-Man #159","link":"spectacular_spider-man_159","credits":["Jim Salicrup","Michael Esposito","Glenn Herdling","Sal Buscema","Gerry Conway"],"i":4022},{"year":1990,"characters":["Eddie Brock (Venom)","Eon","Kayla Ballantine","Klaw","Living Laser","Peggy Carter","Quasar","Red Ghost","Uatu the Watcher","Venom Symbiote"],"name":"Quasar #6","link":"quasar_6","credits":["Mark Gruenwald","Paul Ryan","Dan Bulanadi","Howard Mackie"],"i":4023},{"year":1990,"characters":["Brandy Ash","Daredevil","Dr. Doom","Gorgon","Karnak","Lockjaw","Number Nine","Skip Ash","Ultron","Ultron Mark Twelve"],"name":"Daredevil #275-276","link":"daredevil_275-276","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Michael Rockwitz","All Williamson"],"i":4024},{"year":1989,"characters":["Dr. Doom","Kingpin","Kristoff","Microchip","Punisher"],"name":"Punisher #28","link":"punisher_28","credits":["Mark Farmer","Rob Tokar","Don Daley","Mike Baron","William Reinhold"],"i":4025},{"year":1990,"characters":["Captain America","Controller","Crossbones","Diamondback","Dr. Doom","Fabian Stankowicz","Henry Pym","Juggernaut","Kingpin","Loki","Magneto","Mandarin","Red Skull","Sub-Mariner","Thor","Voice","Wizard"],"name":"Captain America #366","link":"captain_america_366","credits":["Ralph Macchio","Ron Lim","Michael Rockwitz","Dan Bulanadi","Mark Gruenwald"],"i":4026},{"year":1990,"characters":["Angel","Apocalypse","Arishem","Beast","Cable (Baby Nathan Christopher Summers)","Caliban","Cyclops","Gammenon","Iceman","Jean Grey","Lilandra","Loki","One Above All","Professor X","Ship (Prosh)","Sikorsky","Ziran"],"name":"X-Factor #43-50","link":"x-factor_43-50","credits":["Kieron Dwyer","Al Milgrom","Rich Buckler","Daryl Edelman","Bob Harras","Paul Smith","Hilary Barta","Louise Simonson","Terry Shoemaker"],"i":4027},{"year":1990,"characters":["Alexandra Rasputina","Avalanche","Balder","Blob","Boom Boom","Brightwind","Buri","Cannonball","Crimson Commando","Destiny","Dr. Strange","Eitri","Executioner","Fandral","Garm","Harokin","Hela","Hildy","Hogun","Hrimhari","Illyana Rasputin (Alt-Limbo version)","Karnilla","Mirage (Dani Moonstar)","Mist","Mystique","Odin","Pyro","Rictor","Rusty Collins","Ship (Prosh)","Skids","Stonewall","Sunspot","Super Sabre","Tinkerer","Toothgnasher","Toothgrinder","Vizier","Volstagg","Vulture","Warlock","Wolfsbane","Wong"],"name":"New Mutants #77-80,82-85","link":"new_mutants_77-8082-85","credits":["Al Milgrom","Rich Buckler","Daryl Edelman","Geof Isherwood","Bob Harras","Rick Leonardi","Al Williamson","Louise Simonson","Terry Shoemaker","Roy Richardson","Bret Blevins"],"i":4028},{"year":1989,"characters":["Adam Plunder","Amphibius (Savage Land Mutate)","Angelo Macon","Barbarus","Bonebreaker","Brainchild (Savage Land Mutate)","Colossus","Dazzler","Gateway","Gaza","Havok","Jubilee","Ka-Zar","Lady Deathstrike","Lupo","Malice (Marauder)","Murray Reese","Nereel","Peter (Nereel's baby)","Piper (Savage Land Mutate)","Polaris","Psylocke","Shanna the She-Devil","Wade Cole","White Bishop (Donald Pierce)","Whiteout","Worm","Zaladane"],"name":"Uncanny X-Men #249-250","link":"uncanny_x-men_249-250","credits":["Daryl Edelman","Marc Silvestri","Stephen Leialoha","Bob Harras","Chris Claremont","Dan Green"],"i":4029},{"year":1990,"characters":["Colossus","Dazzler","Dr. Doom","Gateway","Geist","Havok","Kingpin","La Bandera","Magneto","Prince Baran","Psylocke","Red Skull","Roughouse","Sister Salvation","Spore","Tiger Shark","Wolverine"],"name":"Wolverine #19-23","link":"wolverine_19-23","credits":["Klaus Janson","John Byrne","Bob Harras","Archie Goodwin"],"i":4030},{"year":1989,"characters":["Alysande Stuart","Amanda Sefton","Angelo Macon","Banshee","Bonebreaker","Callisto","Forge","Gateway","Jubilee","Lady Deathstrike","Lian Shen","Magneto","Moira MacTaggert","Murray Reese","Polaris","Pretty Boy","Shadow King","Skullbuster","Wade Cole","White Bishop (Donald Pierce)","Wolverine"],"name":"Uncanny X-Men #251-253","link":"uncanny_x-men_251-253","credits":["Daryl Edelman","Marc Silvestri","Stephen Leialoha","Bob Harras","Chris Claremont","Rick Leonardi","Kent Williams","Dan Green"],"i":4031},{"year":1989,"characters":["Alysande Stuart","Amanda Sefton","Angelo Macon","Avalanche","Banshee","Blob","Bonebreaker","Callisto","Destiny","Forge","Healer","Lady Deathstrike","Legion","Lian Shen","Masque","Matsuo Tsurayaba","Moira MacTaggert","Murray Reese","Mystique","Polaris","Pretty Boy","Psylocke","Pyro","Shadow King","Sharon Friedlander","Skullbuster","Stonewall","Storm","Sunder","Tom Corsi","Valerie Cooper","Wade Cole","White Bishop (Donald Pierce)"],"name":"Uncanny X-Men #254-255","link":"uncanny_x-men_254-255","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Chris Claremont","Dan Green"],"i":4032},{"year":1991,"characters":["Avalanche","Bart Jones","Blob","Firestar","Mystique","Pyro","Spiral","Super Sabre","White Queen (Emma Frost)"],"name":"Marvel Comics Presents #82-87 (Firestar)","link":"marvel_comics_presents_82-87_f","credits":["Marie Javins","Jose Marzan","Marc McLaurin","Mark Powers","Terry Kavanagh","Dwayne Turner"],"i":4033},{"year":1990,"characters":["Hawkeye","Henry Pym","Scarlet Witch","USAgent","Wasp","Wonder Man"],"name":"Avengers West Coast annual #5 (Henry Pym)","link":"avengers_west_coast_annual_5_h","credits":["Christopher Ivy","James Fry","Carrie Barre","Len Kaminski","Howard Mackie"],"i":4034},{"year":1990,"characters":["Balder","Blob","Boom Boom","Cannonball","Crimson Commando","Eitri","Fandral","Forearm","Hildy","Hogun","Hrimhari","Mirage (Dani Moonstar)","Nitro","Pyro","Reaper","Rictor","Rusty Collins","Skids","Strobe","Stryfe","Tempo","Thumbellina","Tinkerer","Volstagg","Vulture","Warlock","Wildside","Wolfsbane","Zero"],"name":"New Mutants #86","link":"new_mutants_86","credits":["Rob Liefeld","Louise Simonson","Bob Wiacek","Bob Harras"],"i":4035},{"year":1990,"characters":["Andrew Chord","Captain America","Firestar","Justice","Maddie Baldwin","Namorita","Night Thrasher","Nova (Rich Rider)","Quasar","She-Hulk","Speedball","Tai (Dragon's Breadth)","Terrax","Walter Rosen"],"name":"New Warriors #1","link":"new_warriors_1","credits":["Mark Bagley","Al Williamson","Fabian Nicieza","Danny Fingeroth"],"i":4036},{"year":1989,"characters":["Andrew Chord","Firestar","Hercules","Juggernaut","Justice","Kevin Masterson","Loki","Marcy Masterson Steele","Namorita","Night Thrasher","Nova (Rich Rider)","Speedball","Susan Austin","Tai (Dragon's Breadth)","Thor","Thunderstrike"],"name":"Thor #411-412","link":"thor_411-412","credits":["Ralph Macchio","Joe Sinnott","Tom DeFalco","Michael Rockwitz","Ron Frenz"],"i":4037},{"year":1989,"characters":["Avalanche","Blob","Captain America","Dr. Doom","Falcon","Henry Pym","Kingpin","Loki","Magneto","Mandarin","Nebula","Professor Harker","Pyro","Red Skull","Scarlet Witch","Vision","Wasp","Wizard"],"name":"Avengers #312","link":"avengers_312","credits":["Paul Ryan","Tom Palmer","John Byrne","David Wohl","Howard Mackie"],"i":4038},{"year":1991,"characters":["Mystique"],"name":"X-Factor annual #6 (Mystique)","link":"x-factor_annual_6_mystique","credits":["Peter David","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Guang Yap"],"i":4039},{"year":1989,"characters":["Andrea Strucker","Andreas Strucker","Captain America","Cloak","Dagger","Father Delgado","Father Michael Bowen","Hulk (Cosmos Automation)","Hydroman","Iron Man","Jester (Jody Putt)","Marked Man","Predator","Rock","She-Hulk","Thor","Wasp"],"name":"Cloak and Dagger #9","link":"cloak_dagger_9","credits":["Don Cameron","Carl Potts","Terry Austin","Mike Vosburg"],"i":4040},{"year":1990,"characters":["Banshee","Forge","Jubilee","Legion","Li Fong","Lian Shen","Mandarin","Matsuo Tsurayaba","Moira MacTaggert","Mojo","Polaris","Psylocke","Revanche","Rose Wu","Shadow King","Spiral","Storm","Wolverine"],"name":"Uncanny X-Men #256-258","link":"uncanny_x-men_256-258","credits":["Scott Williams","Bob Harras","Josef Rubinstein","Chris Claremont","Jim Lee"],"i":4041},{"year":1990,"characters":["Aunt May","Captain Universe (Uni-Power)","Dr. Doom","Erik Josten","Glory Grant","Kate Cushing","Kingpin","Magneto","Nate Lubenski","Nick Katzenberg","Puma","Spider-Man"],"name":"Web of Spider-Man #60","link":"web_of_spider-man_60","credits":["Jim Salicrup","Keith Williams","Glenn Herdling","Alex Saviuk","Gerry Conway"],"i":4042},{"year":1990,"characters":["Arkon","Baron Mordo","Clea","Dr. Strange","Enchantress","Imei Chang","Morgana Blessing","Rintrah","Sara Wolfe"],"name":"Doctor Strange #13","link":"doctor_strange_13","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Rockwitz","Dann Thomas"],"i":4043},{"year":1990,"characters":["Coachwhip","Frenchie","Killer Shrike","Midnight (Jeffrey Wilde)","Moon Knight","Ringer II"],"name":"Moon Knight #10","link":"moon_knight_10","credits":["Charles Dixon","Danny Fingeroth","Keith Williams","Marc McLaurin","Sal Velluto"],"i":4044},{"year":1990,"characters":["Black King (Sebastian Shaw)","Captain Universe (Uni-Power)","Flash Thompson","Hulk","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #328","link":"amazing_spider-man_328","credits":["Todd McFarlane","Jim Salicrup","David Michelinie"],"i":4045},{"year":1990,"characters":["Angar the Screamer","Hawkeye","Leviathan (Gargantua)","Loki","Mad Thinker","Mockingbird","Songbird (Screaming Mimi)","Wasp","Wonder Man"],"name":"Avengers Spotlight #28","link":"avengers_spotlight_28","credits":["Al Milgrom","<b>Title:","Don Heck","Christopher Ivy","<em>Wasp","<b>Credits:","Dwayne McDuffie","Gregory Wright","em>","Dwayne Turner","Mark Gruenwald","Evan Skolnick","Wonder Man<","Howard Mackie"],"i":4046},{"year":1990,"characters":["Captain Universe (Uni-Power)","Cynthia Bernhammer","Dr. Doom","Hydroman","J. Jonah Jameson","Kingpin","Loki","Marla Madison Jameson","Mary Jane Watson","Nick Katzenberg","Rhino","Shocker","Spider-Man","TESS-One"],"name":"Spectacular Spider-Man #160","link":"spectacular_spider-man_160","credits":["Glenn Herdling","Jim Salicrup","Sal Buscema","Gerry Conway"],"i":4047},{"year":1990,"characters":["Captain Universe (Uni-Power)","Dr. Doom","Dragon Man","Harry Osborn","Kingpin","Kristy Watson","Liz Allan","Loki","Magneto","Mandarin","Mary Jane Watson","Molten Man","Normie Osborn","Red Skull","Spider-Man","Wizard"],"name":"Web of Spider-Man #61","link":"web_of_spider-man_61","credits":["Alex Saviuk","Keith Williams","Jim Salicrup","Gerry Conway"],"i":4048},{"year":1990,"characters":["Asp","Auric","Diamond Lil","Llan the Sorcerer","Madison Jeffries","Nekra","Nemesis II","Owl","Puck","Sasquatch","Scorpion","Shaman","Silver","Talisman","Tinkerer","Vindicator (Heather Hudson)","Wild Child","Witchfire"],"name":"Alpha Flight #79-80","link":"alpha_flight_79-80","credits":["Danny Fingeroth- Editor","John Calimee","Danny Fingeroth","Marc McLaurin","James Hudnall","Carl Potts","Mike Manley"],"i":4049},{"year":1989,"characters":["Kingpin","Nick Fury","Rick Mason (Agent)","Tinkerer"],"name":"Rick Mason, the Agent","link":"rick_mason_the_agent","credits":["Carl Potts","John Ridgeway","Marc McLaurin","James Hudnall"],"i":4050},{"year":1990,"characters":["Captain America","Controller","Crossbones","Fabian Stankowicz","Fourth Sleeper","Henry Pym","Machinesmith","Magneto","Red Skull","Sub-Mariner"],"name":"Captain America #367","link":"captain_america_367","credits":["Kieron Dwyer","Ralph Macchio","Michael Rockwitz","Dan Bulanadi","Mark Gruenwald"],"i":4051},{"year":1990,"characters":["Anaconda","Asp","Black Mamba","Black Racer","Boomslang","Bushmaster II","Coachwhip","Cobra","Cottonmouth","Fer-De-Lance","Loki","Mr. Hyde","Puff Adder","Rattler","Rock Python"],"name":"Captain America #365-367 (Cobra)","link":"captain_america_365-367_cobra","credits":["Ralph Macchio","Don Hudson","M.D. Bright","Michael Rockwitz","Mark Bagley","Mark Gruenwald"],"i":4052},{"year":1990,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Contessa Valentina Allegro De La Fontaine","Gabriel Jones","Kate Neville","Leviathan (Coven)","Network Nina","Nick Fury"],"name":"Nick Fury Agent of SHIELD #7-8","link":"nick_fury_agent_of_shield_7-8","credits":["D.G. Chichester","Kim DeMulder","Gregory Wright","Keith Pollard","Evan Skolnick"],"i":4053},{"year":1990,"characters":["Bambu","Baron Blood (Victor Strange)","Brother Voodoo","Clea","Dr. Strange","Dragonus","Imei Chang","Marie Laveau","Morbius","Morgana Blessing","Rahl","Rintrah","Sara Wolfe","Varnae","Wong"],"name":"Doctor Strange #14-18","link":"doctor_strange_14-18","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Rockwitz","Jim Valentino","Tony DeZuniga","Dann Thomas"],"i":4054},{"year":1990,"characters":["Avalanche","Blob","Captain America","Dr. Doom","Kingpin","Kristoff","Loki","Microchip","Nick Fury","Punisher","Pyro","Sub-Mariner","Thor"],"name":"Punisher #29","link":"punisher_29","credits":["Mark Farmer","Rob Tokar","Don Daley","Mike Baron","William Reinhold"],"i":4055},{"year":2009,"characters":["Albert Cleary","Anne (Damage Control secretary)","Bart Rozum","Captain America","Eugene Strausser","Jarvis","Jay (Damage Control guard)","John Porter","Leap-Frog","Lenny Ballinger","Marie Leahy","Mickey Souris","Punisher","Ray Lippert","Robin Chapel","She-Hulk","Speedball"],"name":"Damage Control #2","link":"damage_control_2_1","credits":["Sid Jacobson","Ernie Colon","Dwayne McDuffie"],"i":4056},{"year":1989,"characters":["Bushwacker","Dr. Doom","Jason Hunt","Kingpin","Loki","Microchip","Punisher"],"name":"Punisher War Journal #12-13","link":"punisher_war_journal_12-13","credits":["Al Milgrom","Don Hudson","Rob Tokar","Don Daley","Dan Bulanadi","Carl Potts","Jim Lee"],"i":4057},{"year":1990,"characters":["Albert Cleary","Anne (Damage Control secretary)","Anne Marie Hoag","Bart Rozum","Captain America","Eugene Strausser","Fabian Stankowicz","Henry Ackerdson","John Porter","Lenny Ballinger","Marie Leahy","Mickey Souris","Nick Fury","Ray Lippert","Robert Washington","Robin Chapel","She-Hulk","Speedball","Wasp"],"name":"Damage Control #3","link":"damage_control_3_1","credits":["Sid Jacobson","Ernie Colon","Dwayne McDuffie","Lisa Trusiani"],"i":4058},{"year":1990,"characters":["Captain America","Giganto (Subterranean)","Henry Pym","Human Torch (Golden Age)","Iron Man","Loki","Magneto","Mole Man","Quasar","Scarlet Witch","Tricephalous","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast #54","link":"avengers_west_coast_54","credits":["John Byrne","Paul Ryan","Howard Mackie"],"i":4059},{"year":1990,"characters":["Agatha Harkness","Black Widow","Captain America","Ebony","Hawkeye","Hellcat","Henry Pym","Jarvis","Kingpin","Loki","Magneto","Mandarin","Mockingbird","Red Skull Robot","Scarlet Witch","Thor","Vision","Wizard","Wonder Man"],"name":"Avengers #313","link":"avengers_313","credits":["John Byrne","Paul Ryan","Tom Palmer","Howard Mackie"],"i":4060},{"year":1990,"characters":["Apocalypse","Armadillo","Baron Brimstone","Dr. Doom","Eel II","Flying Tiger","Franklin Richards","Henry Peter Gyrich","Human Torch","Hydroman","Invisible Woman","Mad Dog (Buzz Baxter)","Man-Ape","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Orka","Owl","Plantman","Quill (Resistants)","Ramrod (Daredevil villain)","Stilt-Man","Super-Adaptoid","Thing","Thunderball","Vanisher","Water Wizard","Whirlwind"],"name":"Fantastic Four #335-336","link":"fantastic_four_335-336","credits":["Richard Buckler","Ron Lim","Ralph Macchio","Walt Simonson","Mike DeCarlo","Michael Rockwitz","Romeo Tanghal"],"i":4061},{"year":1990,"characters":["Asp","Black Mamba","Black Queen (Selene)","Captain America","Cobra","Crossbones","Diamondback","Fabian Stankowicz","Fourth Sleeper","Jarvis","Lifter (Meteorite)","Machinesmith","Magneto","Magneto Robot","Man-Wolf (John Jameson)","Mist Mistress","Peggy Carter","Quill (Resistants)","Red Skull Robot","Scarlet Witch","Shocker (Paralyzer)","Thing Robot"],"name":"Captain America #368","link":"captain_america_368","credits":["Ralph Macchio","Ron Lim","Don Hudson","Michael Rockwitz","Dan Bulanadi","Mark Bagley","Mark Gruenwald"],"i":4062},{"year":1990,"characters":["Bloodaxe (Jackie Lukus)","Dr. Strange","Hercules","Kevin Masterson","Loki","Susan Austin","Thor","Thunderstrike","Ulik","Wong"],"name":"Thor #413","link":"thor_413","credits":["Ralph Macchio","Joe Sinnott","Tom DeFalco","Michael Rockwitz","Ron Frenz"],"i":4063},{"year":1990,"characters":["Beta Ray Bill","Skuttlebutt"],"name":"Thor #411-413 (Beta Ray Bill)","link":"thor_411-413_beta_ray_bill","credits":["Ralph Macchio","Ron Lim","Mike DeCarlo","Tom DeFalco","Michael Rockwitz"],"i":4064},{"year":1990,"characters":["Agatha Harkness","Captain America","Ebony","Falcon","Hawkeye","Henry Pym","Immortus","Iron Man","Kingpin","Loki","Magneto","Mandarin","Mockingbird","Red Skull Robot","Scarlet Witch","Thor","USAgent","Vision","Wasp","Wizard","Wonder Man"],"name":"Avengers West Coast #55","link":"avengers_west_coast_55","credits":["John Byrne","Paul Ryan","Howard Mackie"],"i":4065},{"year":1990,"characters":["Agatha Harkness","Ann Raymond","Henry Pym","Human Torch (Golden Age)","Immortus","Iron Man","Lockjaw","Magneto","Quicksilver","Scarlet Witch","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast #56-57","link":"avengers_west_coast_56-57","credits":["John Byrne","Paul Ryan","Howard Mackie","Len Kaminski"],"i":4066},{"year":1990,"characters":["Henry Pym","Human Torch (Golden Age)","Iron Man","USAgent","Vibro","Wasp","Wonder Man"],"name":"Avengers West Coast #58","link":"avengers_west_coast_58","credits":["Randy Emberlin","Tom Morgan","Fabian Nicieza","Howard Mackie"],"i":4067},{"year":1990,"characters":["Immortus"],"name":"Avengers West Coast #59","link":"avengers_west_coast_59","credits":["Christopher Ivy","Gary Hartle","Danny Fingeroth","Brad Vancata","Howard Mackie"],"i":4068},{"year":1990,"characters":["Agatha Harkness","Ast (Time-Twister)","Ebony","Hawkeye","Henry Pym","Immortus","Iron Man","Lockjaw","Magneto","Quicksilver","Rover (Pym's ship)","Scarlet Witch","Tempus","USAgent","Vort (Time-Twister)","Wasp","Wonder Man","Zanth (Time-Twister)"],"name":"Avengers West Coast #60-62","link":"avengers_west_coast_60-62","credits":["Roy Thomas","Paul Ryan","Dan Bulanadi","Dann Thomas","Howard Mackie"],"i":4069},{"year":1990,"characters":["Captain America","Jarvis","Red Skull Robot","Thor","Vision"],"name":"Avengers annual #19 (Acts of Vengeance)","link":"avengers_annual_19_acts_of_ven","credits":["Bob Downs","Vince Mielcarek","Len Kaminski","Mark Gruenwald","Howard Mackie"],"i":4070},{"year":1990,"characters":["Hercules","Kevin Masterson","Loki","Marcus Stone","Marcy Masterson Steele","Samantha Joyce","Susan Austin","Thor","Thunderstrike","Ulik"],"name":"Thor #414","link":"thor_414","credits":["Ralph Macchio","Joe Sinnott","Tom DeFalco","Michael Rockwitz","Ron Frenz"],"i":4071},{"year":1990,"characters":["Absorbing Man","Angar the Screamer","Captain America","Dollar Bill","Eel II","Flying Tiger","Frank Ensign","Hawkeye","Human Torch","Iron Man","Karl Malus","Klaw","Madcap","Nekra","Quasar","Quill (Resistants)","Rhino","Songbird (Screaming Mimi)","Thing","Thor","Titania","Vision","Wasp","Wizard","Wonder Man"],"name":"Avengers Spotlight #29","link":"avengers_spotlight_29","credits":["<b>Title:","Christopher Ivy","James Brock","<b>Credits:","Dwayne McDuffie","\"'Tales from the Vault (Conclusion)'\"","em>","Evan Skolnick","Dwayne Turner","Gregory Wright","Mark Gruenwald","<em>Iron Man<","Roy Richardson","Howard Mackie"],"i":4072},{"year":1990,"characters":["Albert Cleary","Alexander Goodwin Pierce","Anne (Damage Control secretary)","Anne Marie Hoag","Bart Rozum","Captain America","Eugene Strausser","Henry Peter Gyrich","John Porter","Kingpin","Lenny Ballinger","Mickey Souris","Nick Fury","Punisher","Ray Lippert","Robin Chapel","Speedball","Thor"],"name":"Damage Control #4","link":"damage_control_4_1","credits":["Stan Drake","Lisa Trusiani","Sid Jacobson","Ernie Colon","Dwayne McDuffie","Marie Severin- Inker"],"i":4073},{"year":1990,"characters":["Abomination","Betty Ross","Doc Samson","General 'Thunderbolt' Ross","Hotshot","Hulk","Invisible Woman","Jailbait","Leader","Madman","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Ogress","Rock","Thing"],"name":"Hulk #364-367","link":"hulk_364-367","credits":["James  DiGiovanna","Peter David","Dale Keown","Jeff Purves","Gary Barnum","Bobbie Chase","Marie Severin"],"i":4074},{"year":1990,"characters":["Impossible Man","Silver Surfer"],"name":"Silver Surfer #33","link":"silver_surfer_33","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Valentino"],"i":4075},{"year":1990,"characters":["Aurora","Diamond Lil","Goblyn","Madison Jeffries","Northstar","Pathway","Persuasion","Puck","Sasquatch","Shaman","Talisman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #81-82","link":"alpha_flight_81-82","credits":["John Calimee","Danny Fingeroth","Marc McLaurin","James Hudnall","Mike Manley"],"i":4076},{"year":1990,"characters":["Black Panther","Frenchie","Marlene Alraune","Midnight (Jeffrey Wilde)","Moon Knight","Raoul Bushman"],"name":"Moon Knight #11-14","link":"moon_knight_11-14","credits":["Chuck Dixon","Danny Fingeroth","Marc McLaurin","Tom Palmer","Sal Velluto","Eric Fein"],"i":4077},{"year":1990,"characters":["Doc Samson","Hulk","Mr. Hyde","Prometheus (Pantheon)"],"name":"Hulk #368","link":"hulk_368","credits":["Peter David","Kelley Jones","Sam Kieth","Gary Barnum","Bobbie Chase"],"i":4078},{"year":1990,"characters":["Alistaire Stuart","Captain Britain","Emma Collins","Jamie Braddock","Lockheed","Meggan","Nightcrawler","Opal Luna Sat-yr^9","Rachel Summers","Shadowcat (Kitty Pryde)","Widget"],"name":"Excalibur #18-19","link":"excalibur_18-19","credits":["Al Milgrom","Dennis Jensen","Co.","Dan Adkins","Terry Austin","Chris Claremont","Kelly Corvese","Rick Leonardi","Terry Kavanagh"],"i":4079},{"year":1990,"characters":["Auric","Aurora","Diamond Lil","Dr. Strange","Goblyn","Llan the Sorcerer","Madison Jeffries","Nemesis II","Northstar","Pathway","Persuasion","Sasquatch","Shaman","Silver","Talisman","Vindicator (Heather Hudson)","Wild Child","Witchfire","Wong"],"name":"Alpha Flight #83-86","link":"alpha_flight_83-86","credits":["John Calimee","Danny Fingeroth","James Hudnall","Mike Manley","Mark Bagley","James Sherman","Eric Fein"],"i":4080},{"year":1990,"characters":["Captain Universe (Uni-Power)","Eon","Gilbert Vaughn","Kenjiro Tanaka","Peggy Carter","Quasar","Shintaro Kuramoto","Spider-Man","Terminus"],"name":"Quasar #7","link":"quasar_7","credits":["Dan Bulanadi","Mike Manley","Len Kaminski","Mark Gruenwald","Howard Mackie"],"i":4081},{"year":1990,"characters":["Black Cat","Black King (Sebastian Shaw)","Captain Universe (Uni-Power)","Flash Thompson","Graviton","Loki","Mary Jane Watson","Max Lubisch","Spider-Man","Tri-Sentinel"],"name":"Amazing Spider-Man #329","link":"amazing_spider-man_329","credits":["Erik Larsen","Jim Salicrup","Glenn Herdling","Andy Mushynsky","David Michelinie"],"i":4082},{"year":1990,"characters":["Alistaire Stuart","Captain Britain","Crusader X","Death","Galactus","Jamie Braddock","Justicer Bull","Lockheed","Meggan","Nigel Frobisher","Nightcrawler","Nova (Frankie Raye)","Opal Luna Sat-yr^9","Opal Luna Saturnyne","Phoenix Force","Rachel Summers","Roma","Shadowcat (Kitty Pryde)","Train Dragon","Uatu the Watcher","Vixen","Widget"],"name":"Excalibur #21-25","link":"excalibur_21-25","credits":["Al Milgrom","Kelly Corvese","Chris Claremont","Alan Davis","Paul Neary","Chris Wozniak","Terry Kavanagh"],"i":4083},{"year":1990,"characters":["Amanda Sefton","Auric","Aurora","Banshee","Diamond Lil","Forge","Goblyn","Guardian (James Mac Hudson)","Kristoff","Legion","Madison Jeffries","Master of the World","Moira MacTaggert","Nemesis II","Northstar","Pathway","Persuasion","Puck","Samuel Higgins","Sasquatch","Shaman","Sharon Friedlander","Silver","Talisman","Tom Corsi","Valerie Cooper","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire","Wolverine"],"name":"Alpha Flight #87-90","link":"alpha_flight_87-90","credits":["Mike Manley","Michael Bair","Fabian Nicieza","Danny Fingeroth"],"i":4084},{"year":1990,"characters":["Avalanche","Blob","Crimson Commando","Hulk","Mystique","Prometheus (Pantheon)","Pyro","Shanzar"],"name":"Hulk #369","link":"hulk_369","credits":["Peter David","Dale Keown","Bob McLeod","Gary Barnum","Bobbie Chase"],"i":4085},{"year":1990,"characters":["Amanda Sefton","Andrea Strucker","Andreas Strucker","Banshee","Callisto","Chief Magistrate Anderson","Colossus","Dazzler","Eric Beale","Forge","Freddie Stanachek","Genegineer (David Moreau)","House","Jennifer Ransome","Legion","Masque","Moira MacTaggert","Phillip Moreau","Pipeline","Roman Nekoboh","Shadow King","Sharon Friedlander","Skullbuster II","Strong Guy"],"name":"Uncanny X-Men #259-260","link":"uncanny_x-men_259-260","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Chris Claremont","Dan Green"],"i":4086},{"year":1992,"characters":["Blind Faith","Concussion","Crimson Dynamo V","Crimson Dynamo VI","Darkstar","Fantasma","Firefox","Fyodr Shelkov","Iron Curtain","Mentac","Perun","Red Guardian (Steel Guardian)","Sibercat","Stencil","Titanium Man","Ursa Major","Vanguard","Vostok"],"name":"Soviet Super Soldiers #1","link":"soviet_super_soldiers_1","credits":["Jeffrey Albrecht","Fabian Nicieza","Angel Medina","Javier Saltares","Terry Kavanagh"],"i":4087},{"year":1990,"characters":["Balder","Boom Boom","Cable (Adult)","Cannonball","Eitri","Fandral","Forearm","Hogun","Hrimhari","Karnilla","Mirage (Dani Moonstar)","Mystique","Reaper","Rictor","Rusty Collins","Ship (Prosh)","Skids","Strobe","Stryfe","Sunspot","Tempo","Thumbellina","Volstagg","Warlock","Wildside","Wolfsbane","Zero"],"name":"New Mutants #87","link":"new_mutants_87","credits":["Rob Liefeld","Louise Simonson","Bob Wiacek","Bob Harras"],"i":4088},{"year":1990,"characters":["Angel","Apocalypse","Beast","Cable (Baby Nathan Christopher Summers)","Caliban","Charlotte Jones","Cyclops","Iceman","Jean Grey","Mole","Opal Tanaka","Sabretooth","Ship (Prosh)","Trish Tilby"],"name":"X-Factor #51","link":"x-factor_51","credits":["Al Milgrom","Daryl Edelman","Bob Harras","Louise Simonson","Terry Shoemaker"],"i":4089},{"year":1990,"characters":["Angel","Beast","Blob","Boom Boom","Cable (Adult)","Cable (Baby Nathan Christopher Summers)","Cannonball","Crimson Commando","Cyclops","Iceman","Jean Grey","Moira MacTaggert","Mystique","Pyro","Rictor","Ship (Prosh)","Sunspot","Super Sabre","Warlock","Wolfsbane"],"name":"New Mutants #88","link":"new_mutants_88","credits":["Rob Liefeld","Daryl Edelman","Bob Harras","Hilary Barta","Louise Simonson"],"i":4090},{"year":1990,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Caliban","Charlotte Jones","Cyclops","Iceman","Jean Grey","Locust","Mole","Opal Tanaka","Sabretooth","Ship (Prosh)","Trish Tilby"],"name":"X-Factor #52-53","link":"x-factor_52-53","credits":["Al Milgrom","Daryl Edelman","Bob Harras","Louise Simonson","Terry Shoemaker"],"i":4091},{"year":1990,"characters":["Blob","Boom Boom","Cable (Adult)","Cannonball","Crimson Commando","Legion","Moira MacTaggert","Pyro","Rictor","Shadow King","Ship (Prosh)","Sunspot","Super Sabre","Warlock","Wolfsbane"],"name":"New Mutants #89","link":"new_mutants_89","credits":["Rob Liefeld","Daryl Edelman","Bob Harras","Hilary Barta","Louise Simonson"],"i":4092},{"year":1990,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Charlotte Jones","Colossus","Crimson","Cyclops","Iceman","Jean Grey","Jennifer Ransome","Opal Tanaka","Phillip Moreau","Ship (Prosh)"],"name":"X-Factor #54","link":"x-factor_54","credits":["Al Milgrom","Daryl Edelman","Marc Silvestri","Bob Harras","Louise Simonson"],"i":4093},{"year":1991,"characters":["She-Hulk","Wyatt Wingfoot"],"name":"Marvel Super Heroes #5 (She-Hulk)","link":"marvel_super_heroes_5_she-hulk","credits":["Mike Clark","Jay Geldhof","Mike Rockwitz","Dwight Jon Zimmerman","Barry Dutter"],"i":4094},{"year":1990,"characters":["Betty Brant","Glory Grant","J. Jonah Jameson","Kate Cushing","Mary Jane Watson","Microchip","Punisher","Spider-Man"],"name":"Punisher War Journal #14-15","link":"punisher_war_journal_14-15","credits":["David Ross","Rob Tokar","Don Daley","Carl Potts","Russ Heath"],"i":4095},{"year":1990,"characters":["Krang","Orka","She-Hulk","Wonder Man"],"name":"She-Hulk #12","link":"she-hulk_12","credits":["Peter David","Trina Robbins","Stephen Leialoha","James DiGiovanna","Bobbie Chase"],"i":4096},{"year":1990,"characters":["Cloak","Dagger","Father Delgado","Marked Man","Mayhem","Rebecca 'Rusty' Nales"],"name":"Cloak and Dagger #10","link":"cloak_and_dagger_10_1","credits":["Terry Austin","Mike Vosburg","Danny Fingeroth"],"i":4097},{"year":1990,"characters":["Amanda Robertson","Ben Urich","Cynthia Bernhammer","Demogoblin","Hammerhead","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Lance Bannon","Martha Robertson","Mary Jane Watson","Mr. Fantastic","Nick Katzenberg","Puma","Randy Robertson","Spider-Man","Stuart McPhee","Tombstone"],"name":"Spectacular Spider-Man #161","link":"spectacular_spider-man_161","credits":["Jim Salicrup","Dan Cuddy","Sal Buscema","Gerry Conway"],"i":4098},{"year":1990,"characters":["Asp","Black Queen (Selene)","Captain America","Crossbones","Diamondback","Fabian Stankowicz","Fourth Sleeper","Hate Monger (Hitler)","Jarvis","M'Daka","Machinesmith","Mother Night","Peggy Carter","Thor","Thunderstrike","Tinkerer","Tristam Micawber","Voice"],"name":"Captain America #369-370","link":"captain_america_369-370","credits":["Ralph Macchio","Ron Lim","Don Hudson","Michael Rockwitz","Dan Bulanadi","Mark Bagley","Mark Gruenwald"],"i":4099},{"year":1989,"characters":["Edna Gortch","Harry Osborn","Kristy Watson","Liz Allan","Mary Jane Watson","Molten Man","Normie Osborn","Spider-Man"],"name":"Web of Spider-Man #62","link":"web_of_spider-man_62","credits":["Dan Cuddy","Jim Salicrup","Keith Williams","Alex Saviuk","Gerry Conway"],"i":4100},{"year":1990,"characters":["Banshee","Battleaxe (Harrier)","Blindside","Bliss","Forge","Hardcase","Jean Grey","Jubilee","Lady Deathstrike","Lindsay McCabe","Longbow","Psylocke","Rose Wu","Skullbuster II","Spider-Woman (Jessica Drew)","White Bishop (Donald Pierce)","Wolverine"],"name":"Uncanny X-Men #261","link":"uncanny_x-men_261","credits":["Daryl Edelman","Marc Silvestri","Bob Harras","Chris Claremont","Dan Green"],"i":4101},{"year":1990,"characters":["Angelo Macon","Banshee","Bliss","Bonebreaker","Bouncer","Callisto","Chief Magistrate Anderson","Colonel Alexei Vazhin","Colossus","Debra Levin","Forge","Jean Grey","Lady Deathstrike","Masque","Murray Reese","Phillip Moreau","Pipeline","Pretty Boy","Valerie Cooper","Wade Cole"],"name":"Uncanny X-Men #262-263","link":"uncanny_x-men_262-263","credits":["Kieron Dwyer","Bill Jaaska","Bob Harras","Josef Rubinstein","Chris Claremont"],"i":4102},{"year":1990,"characters":["Angel","Beast","Cyclops","Iceman","Infectia","Mesmero","Opal Tanaka","Ship (Prosh)","Vera Cantor"],"name":"X-Factor #55","link":"x-factor_55","credits":["Bob Harras","Terry Shoemaker","Peter David","Al Milgrom"],"i":4103},{"year":1990,"characters":["Anaconda","Asp","Black Mamba","Captain America","Diamondback","Fabian Stankowicz","Gamecock","Guardsman II (Michael O'Brien)","Jackhammer","Jarvis","Man-Wolf (John Jameson)","Peggy Carter","Poundcakes","Trump"],"name":"Captain America #371","link":"captain_america_371","credits":["Ralph Macchio","Ron Lim","Don Hudson","Michael Rockwitz","Dan Bulanadi","Mark Bagley","Mark Gruenwald"],"i":4104},{"year":1989,"characters":["Blue Shield","Cannonball","Eon","Myron Wilburn","Omnivore","Quasar","Sunspot","Warlock"],"name":"Quasar #8","link":"quasar_8","credits":["Mark Gruenwald","Dan Bulanadi","Mike Manley","Howard Mackie"],"i":4105},{"year":1990,"characters":["Angel","Banshee","Beast","Cable (Baby Nathan Christopher Summers)","Cameron Hodge","Charlotte Jones","Crimson","Cyclops","Forge","Iceman","Jean Grey","Ship (Prosh)","Timothy Jones","Trish Tilby"],"name":"X-Factor #56-58","link":"x-factor_56-58","credits":["Al Milgrom","Jon Bogdanove","Bob Harras","Andy Kubert","Suzanne Gaffney","Steven Carr","Louise Simonson"],"i":4106},{"year":1990,"characters":["Banshee","Beast","Callisto","Charlotte Jones","Colonel Alexei Vazhin","Colossus","Debra Levin","Forge","Hawkshaw","Jean Grey","Jennifer Ransome","Neal Conan","Phillip Moreau","Pipeline","Punchout","Ship (Prosh)","Trish Tilby","Valerie Cooper","Wipeout"],"name":"Uncanny X-Men #264","link":"uncanny_x-men_264","credits":["Bob Harras","Mike Collins","Chris Claremont","Josef Rubenstein"],"i":4107},{"year":1990,"characters":["Boom Boom","Cable (Adult)","Caliban","Cannonball","Hump","Masque","Rictor","Sabretooth","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants #90-91","link":"new_mutants_89-91","credits":["Rob Liefeld","Daryl Edelman","Bob Harras","Hilary Barta","Louise Simonson"],"i":4108},{"year":1990,"characters":["Arranger","Captain Atlas","Cobra","Crossbones","Doctor Minerva","Eon","Gilbert Vaughn","Kayla Ballantine","Kenjiro Tanaka","Madame Masque Bio-Duplicate II","MODAM","Quasar","Secret Empire Agent Number Six","Shintaro Kuramoto","Super-Adaptoid"],"name":"Quasar #9","link":"quasar_9","credits":["Mark Gruenwald","Dan Bulanadi","Mike Manley","Howard Mackie"],"i":4109},{"year":1990,"characters":["Captain Atlas","Doctor Minerva","Eon","Halflife (Avengers villain)","Kayla Ballantine","Kenjiro Tanaka","Quasar"],"name":"Quasar #10","link":"quasar_10","credits":["Mark Gruenwald","Dan Bulanadi","Mike Manley","Howard Mackie"],"i":4110},{"year":1990,"characters":["Captain America","Guardsman II (Michael O'Brien)","Gunthar","Henry Pym","Iron Man","Jarvis","Man-Wolf (John Jameson)","Nebula","Peggy Carter","Professor Harker","Quasar","Sersi","Spider-Man","Starfox","Stranger","Thor","Vision","Wasp","Wonder Man"],"name":"Avengers #314-318","link":"avengers_314-318","credits":["Fabian Nicieza","Paul Ryan","Tom Palmer","John Byrne","Tom Morgan","Len Kaminski","Howard Mackie"],"i":4111},{"year":1991,"characters":["Annie Arnold","Volcana","Wizard"],"name":"Marvel Comics Presents #88 (Volcana)","link":"marvel_comics_presents_88_volc","credits":["Mark Powers","Bob Wiacek","Terry Kavanagh","James Brock"],"i":4112},{"year":1990,"characters":["Microchip","Punisher"],"name":"Punisher #30","link":"punisher_30","credits":["Mark Farmer","Rob Tokar","Don Daley","Mike Baron","William Reinhold"],"i":4113},{"year":1991,"characters":["Armadillo","Arthur Nagan","Avalanche","Blob","Bullet","Captain America","Controller","Crimson Commando","Eddie Brock (Venom)","Electro","Erik Josten","Frenzy","Grey Gargoyle","Griffin","Hawkeye","Henry Pym","Hydroman","Iron Man","Ironclad","Klaw","Mentallo","Moonstone (Karla Sofen)","Mr. Hyde","Mystique","Nekra","Orka","Piledriver","Powderkeg","Pyro","Radioactive Man","Rhino","Scarecrow","She-Hulk","Speed Demon","Super Sabre","Thunderball","Titania","Vapor","Venom Symbiote","Vermin","Vision","Wasp","Wonder Man","Wrecker","X-Ray"],"name":"Avengers: Deathtrap: The Vault","link":"avengers_deathtrap_the_vault","credits":["Ron Lim","Jim Sanders III","Danny Fingeroth","Kelly Corvese","Howard Mackie","Fred Fredricks"],"i":4114},{"year":1990,"characters":["Captain Britain","Eon","Kayla Ballantine","Kenjiro Tanaka","Makkari","Meggan","Modred the Mystic","Moondragon","Nightcrawler","Quasar","Rachel Summers","USAgent","Widget","Wonder Man"],"name":"Quasar #11","link":"quasar_11","credits":["Fred Fredericks","Mark Gruenwald","Mike Manley","Howard Mackie"],"i":4115},{"year":1990,"characters":["Aunt May","Black Cat","Eddie Brock (Venom)","Hal Goldman","Mary Jane Watson","Microchip","Nate Lubenski","Punisher","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #330-331","link":"amazing_spider-man_330-331","credits":["Erik Larsen","Dan Cuddy","Jim Salicrup","Mike Machlan","David Michelinie"],"i":4116},{"year":1990,"characters":["Aunt May","Eddie Brock (Venom)","Flash Thompson","Jonathan Caesar","Mary Jane Watson","Nate Lubenski","Spider-Man","Stone (Spider-Man villain)","Styx","Venom Symbiote"],"name":"Amazing Spider-Man #332-333","link":"amazing_spider-man_332-333","credits":["Erik Larsen","Dan Cuddy","Jim Salicrup","Mike Machlan","David Michelinie","Mike Machlan and friends"],"i":4117},{"year":1990,"characters":["Energizer","Franklin Richards","Gee","Invisible Woman","Jim Power","Lightspeed","Mad Thinker","Margaret Power","Mass Master","Mr. Fantastic"],"name":"Power Pack #54","link":"power_pack_54","credits":["D.G. Chichester","Jon Bogdanove","Judy Bogdanove","Hilary Barta"],"i":4118},{"year":1990,"characters":["Blood Brothers","Eon","Gilbert Vaughn","Kayla Ballantine","Kenjiro Tanaka","Kro","Maelstrom","Makkari","Moondragon","Quasar","Ran-Sak the Reject","Tutinax","Wonder Man"],"name":"Quasar #12","link":"quasar_12","credits":["Fred Fredericks","Mark Gruenwald","Mike Manley","Howard Mackie"],"i":4119},{"year":1990,"characters":["Iron Man","War Machine"],"name":"Iron Man #253","link":"iron_man_253","credits":["Howard Mackie","Len Kaminski","Gene Colan","Danny Fingeroth"],"i":4120},{"year":1990,"characters":["Deader","Death","Drax the Destroyer","Kronos","Ratter","Silver Surfer","Thanos"],"name":"Silver Surfer #34-35","link":"silver_surfer_34-35","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin"],"i":4121},{"year":1990,"characters":["Overmind"],"name":"Marvel Comics Presents #40 (Overmind)","link":"marvel_comics_presents_40_over","credits":["Jeffrey Albrecht","Don Heck","Kelly Corvese","Scott Lobdell","Terry Kavanagh"],"i":4122},{"year":1990,"characters":["Colleen Wing","Misty Knight","Union Jack (Joey Chapman)"],"name":"Marvel Comics Presents #42 (Union Jack & DotD)","link":"marvel_comics_presents_42_unio","credits":["Kieron Dwyer","Mary Jo Duffy","Fabian Nicieza","Chris Tsuda","Dan Adkins","Kelly Corvese","em>","<em>Daughters of the Dragon<","Terry Kavanagh"],"i":4123},{"year":1990,"characters":["Wasp"],"name":"Marvel Comics Presents #48 (Wasp)","link":"marvel_comics_presents_48_wasp","credits":["Eric Shanower","Kelly Corvese","Marc McLaurin","Terry Kavanagh"],"i":4124},{"year":1991,"characters":["Colleen Wing","Misty Knight"],"name":"Marvel Comics Presents #80 (DotD)","link":"marvel_comics_presents_80_dotd","credits":["Mary Jo Duffy","Chris Tsuda","Kelly Corvese","Joe Rosas","Terry Kavanagh"],"i":4125},{"year":1990,"characters":["Punisher"],"name":"Punisher #31-32","link":"punisher_31-32","credits":["Mark Farmer","Rob Tokar","Don Daley","Mike Baron","William Reinhold"],"i":4126},{"year":1990,"characters":["Energizer","Gee","Jim Power","Lightspeed","Margaret Power","Mass Master","Mysterio"],"name":"Power Pack #55","link":"power_pack_55","credits":["Steve Buccellato","D.G. Chichester","Dwayne McDuffie","Dan Spiegle"],"i":4127},{"year":1990,"characters":["Captain America","Impossible Man","She-Hulk","Silver Surfer"],"name":"Silver Surfer #36","link":"silver_surfer_36","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin"],"i":4128},{"year":1990,"characters":["Ahura","Blackheart","Brandy Ash","Daredevil","Gorgon","Karnak","Mephisto","Number Nine","Silver Surfer","Skip Ash"],"name":"Daredevil #278-282","link":"daredevil_278-282","credits":["Ralph Macchio","John Romita Jr.","Ann Nocenti","Michael Rockwitz","Al Williamson","Michael Heisler"],"i":4129},{"year":1990,"characters":["Iron Man","Marcy Pearson","Mrs. Arbogast","Rae LaCoste","Spymaster (Nathon Lemon)","Taskmaster","War Machine"],"name":"Iron Man #254","link":"iron_man_254","credits":["Bob Layton","Howard Mackie"],"i":4130},{"year":1990,"characters":["Drax the Destroyer","Human Torch","Mentor","Silver Surfer","Starfox"],"name":"Silver Surfer #37","link":"silver_surfer_37","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin"],"i":4131},{"year":1990,"characters":["Hogun","Thor","Thunderstrike"],"name":"Thor #415","link":"thor_415","credits":["Herb Trimpe","Tom DeFalco","Ralph Macchio"],"i":4132},{"year":1990,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Captain America","Contessa Valentina Allegro De La Fontaine","Kate Neville","Leviathan (Coven)","Lump (Gnobian)","Madame Hydra Six","Network Nina","Nick Fury"],"name":"Nick Fury Agent of SHIELD #9-10","link":"nick_fury_agent_of_shield_9-10","credits":["D.G. Chichester","Keith Pollard","Kim DeMulder","Gregory Wright"],"i":4133},{"year":1990,"characters":["Aloysius R. Jamesley","Bloodaxe (Jackie Lukus)","Caber","Count Tagar","Dagda","Ed Marrero","Fandral","Heimdall","Hercules","High Evolutionary","Hogun","Kevin Masterson","Leir","Marcus Stone","Marcy Masterson Steele","Odin","Sif","Surtur","Susan Austin","Thor","Thor Replicoid","Thunderstrike","Vizier","Volstagg"],"name":"Thor #416-417","link":"thor_416-417","credits":["Ralph Macchio","Mike DeCarlo","Gary Hartle","Joe Sinnott","Tom DeFalco","Michael Rockwitz","Mark Texeira","Ron Frenz"],"i":4134},{"year":1990,"characters":["Bloodlust","Mary Jane Watson","Spider-Man","Whiplash (Leeann Foreman)","Wolverine"],"name":"Marvel Comics Presents #48-50 (Wolverine/Spider-Man)","link":"marvel_comics_presents_48-50_w","credits":["Erik Larsen","Josef Rubinstein","Kelly Corvese","Terry Kavanagh"],"i":4135},{"year":1990,"characters":["Captain America"],"name":"Marvel Comics Presents #60 (Captain America)","link":"marvel_comics_presents_60_capt","credits":["John Figueroa","Kelly Corvese","Terry Kavanagh","Tom Lyle","Roy Richardson"],"i":4136},{"year":1990,"characters":["Heater Delight","Starfox"],"name":"Marvel Comics Presents #65 (Starfox)","link":"marvel_comics_presents_65_star","credits":["Ernie Chan","Jeffrey Albrecht","Kelly Corvese","Peter Gillis","Terry Kavanagh"],"i":4137},{"year":1990,"characters":["Bulldozer","Caber","Heimdall","Hercules","Kevin Masterson","Leir","Odin","Piledriver","Samantha Joyce","Sif","Surtur","Thor","Thor Replicoid","Thunderball","Thunderstrike","Ulik","Vizier","Wrecker","Ymir"],"name":"Thor #418","link":"thor_418","credits":["Ralph Macchio","Gary Hartle","Joe Sinnott","Tom DeFalco","Michael Rockwitz","Dan Panosian","Ron Frenz"],"i":4138},{"year":1990,"characters":["Blonde Phantom","Captain America","Crimson Dynamo V","Diamond Lil","Diamondback","Fabian Stankowicz","Fantasma","Gabriel Jones","Glory Garsen","Guardsman II (Michael O'Brien)","Jarvis","Kayla Ballantine","Kenjiro Tanaka","Machinesmith","Madison Jeffries","Man-Wolf (John Jameson)","Mother Night","Orka","Peggy Carter","Perun","Puck","Quasar","Red Guardian (Steel Guardian)","Scarbo","Sersi","Shaman","She-Hulk","Stingray","Tyrak","U-Man","Vindicator (Heather Hudson)","Vision","Vostok"],"name":"Avengers #319-325","link":"avengers_319-325","credits":["<b>Title:","\"Party games!\"","<b>Credits:","James Reddington","Fred Fredericks","\"The man and the wolf\"","\"Into the fire\"","Christopher Ivy","Fabian Nicieza","D. Hands","\"Changing of the guard\"","\"Mother of invention\"","Tom Palmer","em>","Michael Ritter","Howard Mackie","James Fry","Keith Williams","Paul Ryan","<em>Avengers Crew<","Brad Vancata","\"Rats in the kitchen\"","Len Kaminski","\"Armies of the night\"","Mark Gruenwald","Rik Levins"],"i":4139},{"year":1990,"characters":["Captain America","Iron Man","Nomad","Ramona Napier","Reb Ralston","Umberto Safilios"],"name":"Captain America annual #9","link":"captain_america_annual_9","credits":["Ralph Macchio","Don Hudson","<b>Title:","Mike DeCarlo","Randall Frenz","\"Walking the line\"","Fabian Nicieza","<em>Nomad<","Roy Thomas","\"A soldier's story\"","Michael Heisler","<b>Credits:","Sam DeLaRosa","em>","Mark Bagley","Tom Morgan","<em>Howling Commandos<","Jim Valentino","Dann Thomas"],"i":4140},{"year":1990,"characters":["Gears Garvin","Iron Man","Jocasta","Machine Man","Madame Menace (Sunset Bain)","Peter Spaulding","War Machine"],"name":"Iron Man annual #11","link":"iron_man_annual_11","credits":["<b>Title:","Christopher Ivy","Harry Candelario","Rob Tokar","Roy Thomas","<b>Credits:","\"The devil's playground\"","Randy Emberlin","Tom Morgan","Len Kaminski","Gavin Curtis","Evan Skolnick","Dann Thomas","\"Mobility\"","Howard Mackie"],"i":4141},{"year":1990,"characters":["Hercules","Terminus","Thor"],"name":"Thor annual #15","link":"thor_annual_15","credits":["Herb Trimpe","Ralph Macchio","Roy Thomas","Mark McKenna","Michael Heisler","Dann Thomas"],"i":4142},{"year":1990,"characters":["Captain America","Eel (SURF)","Firebird","Hawkeye","Henry Pym","Hercules","Human Torch (Golden Age)","Iron Man","Machine Man","Peter Corbeau","Quasar","Quicksilver","Sharkskin","She-Hulk","Terminus","Undertow","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast annual #5","link":"avengers_west_coast_annual_5","credits":["<b>Title:","\"Don't you daaare miss it!\"","Jim Sanders III","James Fry","Roy Thomas","Keith Williams","<b>Credits:","<em>Monster trucks<","Dwayne McDuffie","Gary Barnum","em>","Brad Vancata","Grant Miehm","Len Kaminski","<em>SURF<","Dann Thomas","\"\tTanks for nothing\"","Howard Mackie"],"i":4143},{"year":1990,"characters":["Big Bertha","Captain America","Captain Marvel (Monica Rambeau)","Dinah-Soar","Doorman","Falcon","Flatman","Hawkeye","Henry Pym","Hercules","Human Torch (Golden Age)","Iron Man","Machine Man","Mockingbird","Mr. Immortal","Plantman","Quasar","Quicksilver","Redwing","Sersi","She-Hulk","Starfox","Stilt-Man","Terminus","Thor","USAgent","Vision","Wasp","Water Wizard","Wonder Man","Wrecker"],"name":"Avengers annual #19","link":"avengers_annual_19","credits":["Herb Trimpe","Jeffrey Albrecht","<b>Title:","\"The day the strangers came\"","Kurt Busiek","Roy Thomas","<b>Credits:","Gary Barnum","em>","Michael Ritter","<em>Sons of the Serpent<","Steve Buccellato","\"\tClowning around\"","Len Kaminski","Richard Howell","<em>Avengers Mansion<","Dann Thomas","Howard Mackie"],"i":4144},{"year":1990,"characters":["Agatha Harkness","Ebony","Tabur","Tigra"],"name":"Avengers Spotlight #38","link":"avengers_spotlight_38","credits":["Mark Gruenwald","Roy Thomas","June Brigman","Doug Hazlewood","Len Kaminski","Dann Thomas"],"i":4145},{"year":1990,"characters":["Agatha Harkness","Ann Raymond","Ebony","Hawkeye","Henry Pym","Human Torch (Golden Age)","Iron Man","Living Lightning","Quasar","Quicksilver","Rover (Pym's ship)","Scarlet Witch","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast #63","link":"avengers_west_coast_63","credits":["Roy Thomas","Paul Ryan","Dan Bulanadi","Len Kaminski","Dann Thomas","Howard Mackie"],"i":4146},{"year":1990,"characters":["Arko","Balder","Bloodaxe (Jackie Lukus)","Caber","Captain America","Count Tagar","Deilla","Enchantress","Eson","Fandral","Heimdall","Hercules","High Evolutionary","Hogun","Jerry Sapristi","Juvan","Kevin Masterson","Leir","Marcy Masterson Steele","Nezarr","Nobilus","Odin","Oneg","Peggy Carter","Quasar","Recorder","Samantha Joyce","Scientist Supreme of Rigel","Sersi","She-Hulk","Sif","Stellaris","Surtur","Susan Austin","Thor","Thor Replicoid","Thunderstrike","Vizier","Volstagg","Ymir","Ziran","Zon"],"name":"Thor #419-424","link":"thor_419-424","credits":["Ralph Macchio","Mike DeCarlo","Gary Hartle","Joe Sinnott","Tom DeFalco","Dan Panosian","Michael Heisler","Ron Frenz","Romeo Tanghal"],"i":4147},{"year":1990,"characters":["Arko","Balder","Caber","Count Tagar","Deilla","Fandral","Heimdall","Hercules","High Evolutionary","Hogun","Juvan","Leir","Nobilus","Odin","Recorder","Sif","Surtur","Thor","Thunderstrike","Vizier","Volstagg","Ymir","Zon"],"name":"Thor #425","link":"thor_425","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Dan Bulandi","Ron Frenz"],"i":4148},{"year":1990,"characters":["Captain America","General Lewis Haywerth","Henry Peter Gyrich","Nomad","Umberto Safilios","Valerie Cooper"],"name":"Nomad #1","link":"nomad_1","credits":["Fabian Nicieza","James Fry","Mark McKenna","Len Kaminski","Howard Mackie"],"i":4149},{"year":1991,"characters":["Brothers Grimm III","Mockingbird","Shroud","Werewolf By Night"],"name":"Marvel Comics Presents #87 (Shroud)","link":"marvel_comics_presents_87_shro","credits":["Harry Candelario","Ron Wilson","Mark Powers","Terry Kavanagh","Eric Fein"],"i":4150},{"year":1990,"characters":["Hulk","Mimic","Wolverine"],"name":"Marvel Comics Presents #54-61 (Wolverine/Hulk)","link":"marvel_comics_presents_54-61_w","credits":["Michael Higgins","Dan Day","David Ross","Kelly Corvese","Terry Kavanagh"],"i":4151},{"year":1990,"characters":["Silver Dagger","Werewolf By Night"],"name":"Marvel Comics Presents #54-59 (Werewolf)","link":"marvel_comics_presents_54-59_w","credits":["Brad Joyce","James Fry","Kelly Corvese","Len Kaminski","Terry Kavanagh"],"i":4152},{"year":1990,"characters":["Shroud"],"name":"Marvel Comics Presents #54 (Shroud)","link":"marvel_comics_presents_54_shro","credits":["Kelly Corvese","Steve Ditko","Hollis Bright","Bob Wiacek","Terry Kavanagh"],"i":4153},{"year":1990,"characters":["Collective Man"],"name":"Marvel Comics Presents #55 (Collective Man)","link":"marvel_comics_presents_55_coll","credits":["Greg LaRocque","Harry Candelario","Scott Lobdell","Kelly Corvese","Brad Vancata","Terry Kavanagh"],"i":4154},{"year":1990,"characters":["Speedball"],"name":"Marvel Comics Presents #56 (Speedball)","link":"marvel_comics_presents_56_spee","credits":["Mary Jo Duffy","Sam Grainger","Kelly Corvese","Steve Ditko","Terry Kavanagh"],"i":4155},{"year":1991,"characters":["Sunspot"],"name":"Marvel Comics Presents #79 (Sunspot)","link":"marvel_comics_presents_79_suns","credits":["John Byrne","Daryl Edelman","Kelly Corvese","Terry Kavanagh"],"i":4156},{"year":1990,"characters":["Andie Sterman","General Lewis Haywerth","Henry Peter Gyrich","Nomad","Valerie Cooper"],"name":"Nomad #2","link":"nomad_2","credits":["Fabian Nicieza","James Fry","Mark McKenna","Len Kaminski","Howard Mackie"],"i":4157},{"year":1990,"characters":["Cable (Adult)","Wolfsbane"],"name":"New Mutants #92","link":"new_mutants_92","credits":["Jeffrey Albrecht","Bob Hall","Dwight Zimmerman","Bob Harras","Suzanne Gaffney"],"i":4158},{"year":1990,"characters":["Andrew 'Jock' Jackson","Balder","Bulldozer","Caber","Earth-Lord","Fandral","Fireworks Fielstein","Heimdall","Hercules","Hogun","Leir","Loki","Mad Dog Rassitano","Marcus Stone","Mother Majowski","Odin","Piledriver","Rigger Ruiz","Shelly Conklin","Sif","Thor","Thunderball","Ulik","Vizier","Volstagg","Wrecker"],"name":"Thor #426","link":"thor_426","credits":["Herb Trimpe","Ralph Macchio","Joe Sinnott","Tom DeFalco","Dan Panosian","Michael Heisler","Ron Frenz"],"i":4159},{"year":1990,"characters":["Black Widow","Boomslang","Bullseye","Captain America","Crossbones","Daredevil","Diamondback","Fabian Stankowicz","Guardsman II (Michael O'Brien)","Henry Pym","Keith Kincaid","Kingpin","Machinesmith","Man-Wolf (John Jameson)","Peggy Carter","Red Skull","Typhoid Mary"],"name":"Captain America #372-378","link":"captain_america_372-378","credits":["Ralph Macchio","Ron Lim","Bob Downs","Dan Bulandi","Michael Heisler","Mark Gruenwald","Romeo Tanghal"],"i":4160},{"year":1990,"characters":["Battlestar","Curtiss Jackson (Power Broker)","Drill","Ethan Thurm","Iron Man","Jackhammer","Karl Malus","Red Zeppelin","USAgent","Wonder Man"],"name":"Captain America #372-378 (Battlestar)","link":"captain_america_372-378_battle","credits":["Ralph Macchio","Don Hudson","Dan Panosian","Mark Bagley","Michael Heisler","Mark Gruenwald"],"i":4161},{"year":1990,"characters":["Ahura","Captain America","Daredevil","Gorgon","Karnak","Number Nine"],"name":"Daredevil #283","link":"daredevil_283","credits":["Ralph Macchio","Ann Nocenti","Mark Bagley","Tom Morgan","Al Williamson","Michael Heisler"],"i":4162},{"year":1990,"characters":["Microchip","Punisher"],"name":"Punisher War Journal #16","link":"punisher_war_journal_16","credits":["Kenneth Rubenoff","Steve Biasi","Don Daley","Neil Hansen","Mark Texeira","Mike Baron"],"i":4163},{"year":1990,"characters":["Deader","Death","Geatar","Nebula","Ratter","Silver Surfer","Thanos"],"name":"Silver Surfer #38","link":"silver_surfer_38","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin"],"i":4164},{"year":1990,"characters":["Blonde Phantom","She-Hulk"],"name":"She-Hulk #13","link":"she-hulk_13","credits":["Jim Sanders III","Gary Barnum","Bryan Hitch","Bobbie Chase","Steve Gerber"],"i":4165},{"year":1990,"characters":["Beverly Switzler","Black Hole","Blonde Phantom","Brent Wilcox","Critic","Doctor Angst","Howard The Duck","She-Hulk","Sitting Bullseye","Spanker","Terror (Golden Age)","Tillie the Hun"],"name":"She-Hulk #14-17","link":"she-hulk_14-17","credits":["Jim Sanders III","Gary Barnum","Bryan Hitch","Bobbie Chase","Steve Gerber"],"i":4166},{"year":1990,"characters":["Blonde Phantom","Brent Wilcox","Dr. Bob Doom","She-Hulk"],"name":"She-Hulk #18","link":"she-hulk_18_1","credits":["Jim Sanders III","Gary Barnum","Tom Artis","Bobbie Chase","Steve Gerber"],"i":4167},{"year":1990,"characters":["Lifeform","Microchip","Punisher"],"name":"Punisher annual #3","link":"punisher_annual_3","credits":["Rob Tokar","Don Daley","Gregory Wright","Neil Hansen","Mark Texeira","Kim DeMulder","Mike Baron","Lee Sullivan","Dwayne Turner"],"i":4168},{"year":1990,"characters":["Ben Urich","Butch (Fatboys)","Daredevil","Darla (Fatboys)","David Hobbes","Eightball (Fatboys)","Jet (Wildboy)","Lifeform","Ralf (Fatboys)","Spit (Wildboy)","Typhoid Mary"],"name":"Daredevil annual #6","link":"daredevil_annual_6","credits":["Ralph Macchio","Tom Sutton","Mike DeCarlo","Gary Hartle","Michael Rockwitz","Cam Kennedy","Gregory Wright","Michael Bair"],"i":4169},{"year":1990,"characters":["Ben Urich","Blonde Phantom","Daredevil","Doc Samson","Hulk","Lifeform","Mercy","She-Hulk"],"name":"Hulk annual #16","link":"hulk_annual_16","credits":["Peter David","Dan Reed","Bill Mumy","Angel Medina","Larry Mahlstedt","Jeffery Albrecht","Gary Barnum","Bobbie Chase","Alan Grant","Tim Dzon","Chris Wozniak"],"i":4170},{"year":1990,"characters":["Captain America","Garnok Rebbahn","Lifeform","Mr. Fantastic","Nick Fury","Silver Surfer"],"name":"Silver Surfer annual #3","link":"silver_surfer_annual_3","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Ron Marz","Jim Starlin"],"i":4171},{"year":1990,"characters":["Captain America","Death's Head","Dr. Druid","Franklin Richards","Gee","Henry Pym","Human Torch","Invisible Woman","Iron Man","Jim Power","Kang (Chairman)","Kang (Fred)","Kang (Mesozoic)","Lyja the Lazerfist","Margaret Power","Mass Master","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Ravonna","Thing","Thor"],"name":"Fantastic Four #337-341","link":"fantastic_four_337-341","credits":["Ralph Macchio","Al Milgrom","Walt Simonson","Michael Rockwitz","Bob Wiacek"],"i":4172},{"year":1990,"characters":["Human Torch","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #342","link":"fantastic_four_342","credits":["Kieron Dwyer","Ralph Macchio","Christopher Ivy","Danny Fingeroth","Tom Morgan"],"i":4173},{"year":1990,"characters":["Human Torch","Invisible Woman","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #343-346","link":"fantastic_four_343-346","credits":["Ralph Macchio","Walt Simonson","Art Thibert","Michael Heisler"],"i":4174},{"year":1990,"characters":["Dr. Doom","Dr. Strange","Impossible Man","Impossible Woman","Invisible Woman","Iron Man","Madcap","Punisher","Quasar","Rintrah","S'Byll","She-Hulk","Spider-Man","Wasp"],"name":"Impossible Man Summer Vacation Spectacular #1","link":"impossible_man_summer_vacation","credits":["Dan Bulanadi","Gregory Wright","Greg Capullo","Jim Valentino","Dann Thomas","Butch Guice","Christopher Ivy","Roy Thomas","Craig Andrson","Michael Gallagher","Romeo Tanghal","Aaron Lopresti","Howard Mackie","Peter David","Renee Witterstaetter","Rurik Tyler","Randy Emberlin","Tom Morgan","Barry Crain","Craig Anderson","Luke McDonnell","Mark Gruenwald"],"i":4175},{"year":1990,"characters":["Boom Boom","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants Summer Special #1","link":"the_new_mutants_summer_special","credits":["Ann Nocenti","Bob Harras","Bret Blevins"],"i":4176},{"year":1990,"characters":["Siryn"],"name":"Marvel Comics Presents #43 (Siryn)","link":"marvel_comics_presents_43_siry","credits":["Sam Grainger","Scott Lobdell","Kelly Corvese","Larry Stroman","Terry Kavanagh"],"i":4177},{"year":1990,"characters":["Iron Man"],"name":"Marvel Comics Presents #43 (Iron Man)","link":"marvel_comics_presents_43_iron","credits":["Ed Simmons","Keith Williams","Kelly Corvese","Mark Bagley","Terry Kavanagh"],"i":4178},{"year":1990,"characters":["Belathauzer","Devil-Slayer","Flying Dutchman"],"name":"Marvel Comics Presents #46-49 (Devil-Slayer)","link":"marvel_comics_presents_46-49_d","credits":["Kelly Corvese","Mark McKenna","Rodney Ramos","Dwight Jon Zimmerman","Terry Kavanagh"],"i":4179},{"year":1990,"characters":["Sub-Mariner","Wundarr (Aquarian)"],"name":"Marvel Comics Presents #46 (Aquarian & Sub-Mariner)","link":"marvel_comics_presents_46_aqua","credits":["<b>Title:","\"The eye that sees\"","Fabian Nicieza","Marshall Rogers","Kelly Corvese","<b>Credits:","em>","Fred Frederick","<em>Sub-Mariner<","Hugh Haynes","Hollis Bright","Dell Barras","Terry Kavanagh"],"i":4180},{"year":1990,"characters":["Arabian Knight","Captain America"],"name":"Marvel Comics Presents #47 (Captain America & Arabian Knight)","link":"marvel_comics_presents_47_capt","credits":["\"A father's love\"","<b>Title:","Don Perlin","Scott Lobdell","<em>Arabian Knight<","<b>Credits:","Kelly Corvese","em>","Len Wien","Gerry Talaoc","Steve Buccellato","Deni Loubert","Len Wein","Terry Kavanagh"],"i":4181},{"year":1990,"characters":["Sub-Mariner"],"name":"Marvel Comics Presents #57-59 (Sub-Mariner)","link":"marvel_comics_presents_57-59_s","credits":["Mark Farmer","Kelly Corvese","Bob DeNatale","Terry Kavanagh","Michael Collins"],"i":4182},{"year":1990,"characters":["Punisher"],"name":"Marvel Comics Presents #59 (Punisher)","link":"marvel_comics_presents_59_puni","credits":["Terry Kavanagh","Dan Reed","Marc McLaurin","Kelly Corvese"],"i":4183},{"year":1991,"characters":["Captain America","Mandarin","Mr. Fantastic","Nick Fury","Thing"],"name":"Nick Fury Agent of SHIELD #24","link":"nick_fury_agent_of_shield_24","credits":["Mike Rockwitz","Jack Torrance","Doug Murray","Barry Dutter","Norman Dwyer"],"i":4184},{"year":1991,"characters":["Baby Bucky's Mom","Bucky (Julia Winter)","Captain America","General Lewis Haywerth","Henry Peter Gyrich","Nomad","Valerie Cooper"],"name":"Nomad #3","link":"nomad_3","credits":["Fabian Nicieza","James Fry","Mark McKenna","Len Kaminski","Howard Mackie"],"i":4185},{"year":1990,"characters":["Caleb Alexander","Carrie Alexander","Desmond Marrs","Phoebe Marrs","Sub-Mariner"],"name":"Namor #1","link":"namor_1","credits":["John Byrne","Bob Wiacek","Terry Kavanagh"],"i":4186},{"year":1990,"characters":["Cloak","Crimson Daffodil","Dagger","Marked Man","Mayhem","Mr. Jip","Rebecca 'Rusty' Nales"],"name":"Cloak and Dagger #11","link":"cloak_and_dagger_11_1","credits":["Eric Fein","Terry Austin","Mike Vosburg","Danny Fingeroth"],"i":4187},{"year":1990,"characters":["Ant-Man (Scott Lang)","Carlos Cassada","Henry Pym","Mary Jane Watson","Michael Cassada","Paste Pot Pete","Psycho-Man","Roberto Cassada","Rosa Cassada","Sandman","Scarlet Beetle","Solo","Spider-Man","Thing","Wizard"],"name":"Amazing Spider-Man annual #24","link":"amazing_spider-man_annual_24","credits":["<b>Title:","Dan Cuddy","<em>Ant-Man<","<em>Solo<","Mike Zeck","Jim Salicrup","Tom DeFalco","Rudy D. Nebres","<b>Credits:","\"\tA time to choose!\"","Tony Isabella","Steve Ditko","em>","Dan Green","\"Amazing fantasy\"","J.M. DeMatties","David Michelinie","<em>Sandman<","Gil Kane","\"The mercy bomb\""],"i":4188},{"year":1990,"characters":["Abe Brown","Carlos Cassada","Ernie Sluganski","Harry Osborn","Mary Jane Watson","Mindy McPherson","Paste Pot Pete","Prowler","Psycho-Man","Rocket Racer","Rosa Cassada","Sandman","Silver Sable","Spider-Man","Wizard"],"name":"Spectacular Spider-Man annual #10","link":"spectacular_spider-man_annual_1","credits":["<b>Title:","Glenn Herdling","<b>Credits:","\"What I did on my summer vacation\"","Todd McFarlane","Dan Cuddy","Alan Kupperberg","Stan Lee","em>","<em>Rocket Racer<","\"The choice\"","<em>Sandman<","Gerry Conway","\"Pale reflection\"","Tony Isabella","Mike Manley","Rich Buckler","Mike Esposito","Jim Salicrup","<em>Prowler<","Ross Andru"],"i":4189},{"year":1990,"characters":["Aunt May","Captain Universe (Uni-Power)","Harry Osborn","Mary Jane Watson","Psycho-Man","Punisher","Spider-Man"],"name":"Web of Spider-Man annual #6","link":"web_of_spider-man_annual_6","credits":["<b>Title:","Stan Drake","<b>Credits:","Steve Ditko","June Brigman","<em>Captain Universe<","Dan Cuddy","Alan Kupperberg","\"Child star\"","Sal Buscema","Stan Lee","em>","\"Salesday for a shootout\"","<em>Punisher<","Gil Kane","Gerry Conway","Peter David","<em>Mary Jane<","Tony Isabella","\"Eleven angry man... and one angry woman\"","Mike Esposito","Jim Salicrup","Ross Andru"],"i":4190},{"year":1990,"characters":["Betty Brant","Harry Osborn","Mary Jane Watson","Mr. Fear (Alan Fagan)","Nick Katzenberg","Spider-Man"],"name":"Web of Spider-Man #63","link":"web_of_spider-man_63","credits":["Dan Cuddy","Jim Salicrup","Keith Williams","Alex Saviuk","Gerry Conway"],"i":4191},{"year":1990,"characters":["Carrion II","Demogoblin","Evan Swann","Hammerhead","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Martha MacBride","Mary Jane Watson","Mr. Fantastic","Nick Katzenberg","Puma","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #162-163","link":"spectacular_spider-man_162-163","credits":["Jim Salicrup","Dan Cuddy","Sal Buscema","Gerry Conway"],"i":4192},{"year":1990,"characters":["Crimson Dynamo VI","Devastator II","Iron Man","Mrs. Arbogast"],"name":"Iron Man #255","link":"iron_man_255","credits":["Herb Trimpe","Fabian Nicieza","Glenn Herdling","Len Kaminski","Howard Mackie"],"i":4193},{"year":1990,"characters":["Arranger","Damage","Kingpin","Microchip","Punisher","Rikichi"],"name":"Punisher War Journal #17-19","link":"punisher_war_journal_17-19","credits":["Al Milgrom","Don Hudson","Rob Tokar","Don Daley","Carl Potts","Jim Lee"],"i":4194},{"year":1990,"characters":["Betty Ross","Doc Samson","Dr. Strange","Hulk","Imei Chang","Prometheus (Pantheon)","Rintrah","Shanzar","Sub-Mariner","Wong"],"name":"Hulk #370-371","link":"hulk_370-371","credits":["Peter David","Dale Keown","Bob McLeod","Gary Barnum","Bobbie Chase"],"i":4195},{"year":1990,"characters":["Arranger","Damage","Punisher","Rikichi","Sniper"],"name":"Punisher War Journal #20-24","link":"punisher_war_journal_20-24","credits":["Al Milgrom","Todd Smith","Rob Tokar","Don Daley","Carl Potts","Kim DeMulder","Tony DeZuniga"],"i":4196},{"year":1990,"characters":["Ann Raymond","Human Torch","Sub-Mariner"],"name":"Avengers West Coast #65 (Human Torch)","link":"avengers_west_coast_65_human_t","credits":["Roy Thomas","Keith Williams","Rik Levins","Dann Thomas","Howard Mackie"],"i":4197},{"year":1990,"characters":["Arranger","Beetle","Joy Mercado","Kate Cushing","Kingpin","Mary Jane Watson","Spider-Man"],"name":"Spectacular Spider-Man #164","link":"spectacular_spider-man_164","credits":["Jim Salicrup","Dan Cuddy","Sal Buscema","Gerry Conway"],"i":4198},{"year":1990,"characters":["Caleb Alexander","Carrie Alexander","Desmond Marrs","Griffin","Headhunter","Namorita","Phoebe Marrs","Sub-Mariner"],"name":"Namor #2-3","link":"namor_2-3","credits":["John Byrne","Bob Wiacek","Terry Kavanagh"],"i":4199},{"year":1990,"characters":["Betty Ross","Delphi","Doc Samson","Hulk","Prometheus (Pantheon)","Rick Jones"],"name":"Hulk #372-373","link":"hulk_372","credits":["Sam DeLaRosa- Inker","Peter David","Dale Keown","Bob McLeod","Gary Barnum","Bobbie Chase"],"i":4200},{"year":1990,"characters":["Barbara Ketch","Deathwatch","Doris Ketch","Ghost Rider (Danny Ketch)","Kingpin","Noble Kale","Paulie Stratton","Stacy Dolan","Thomas Dolan"],"name":"Ghost Rider #1","link":"ghost_rider_1","credits":["Bobbie Chase","Javier Saltares","Mark Texeira","Howard Mackie"],"i":4201},{"year":2000,"characters":["Bonebreaker","Gunny Bear","Lady Deathstrike","Microchip","Murray Reese","Pretty Boy","Punisher","White Bishop (Donald Pierce)"],"name":"Punisher #33-34","link":"punisher_33-34","credits":["Mark Farmer","Rob Tokar","Don Daley","Mike Baron","William Reinhold"],"i":4202},{"year":1990,"characters":["Carrie Alexander","Desmond Marrs","Firestar","Invisible Woman","Iron Man","Mr. Fantastic","Namorita","Night Thrasher","Nova (Rich Rider)","Phoebe Marrs","Speedball","Sub-Mariner"],"name":"Namor #4-5","link":"namor_4-5","credits":["John Byrne","Terry Kavanagh","Kelly Corvese"],"i":4203},{"year":1990,"characters":["Wolverine"],"name":"Wolverine #24","link":"wolverine_24","credits":["Bob Harras","Peter David","Gene Colan","Daryl Edelman"],"i":4204},{"year":1990,"characters":["Felix Alvarez","Iron Man","Mrs. Arbogast","War Machine"],"name":"Iron Man #256","link":"iron_man_256","credits":["John Romita Jr.","Harry Candelario","Bob Layton","Len Kaminski","Howard Mackie"],"i":4205},{"year":1991,"characters":["Andie Sterman","Bucky (Julia Winter)","Captain America","General Lewis Haywerth","Henry Peter Gyrich","Nomad","Umberto Safilios","Valerie Cooper"],"name":"Nomad #4","link":"nomad_4","credits":["Fabian Nicieza","James Fry","Mark McKenna","Len Kaminski","Howard Mackie"],"i":4206},{"year":1990,"characters":["Nick Fury"],"name":"Nick Fury Agent of SHIELD #11","link":"nick_fury_agent_of_shield_11_1","credits":["Cam Kennedy","Gregory Wright","Alan Grant","Suzanne Dell'Orto"],"i":4207},{"year":1990,"characters":["Microchip","Punisher"],"name":"Punisher, Kingdom Gone","link":"punisher_kingdom_gone","credits":["Carl Potts","Jorge Zaffino","Chuck Dixon","Marc McLaurin"],"i":4208},{"year":1990,"characters":["Al Laguardia","Black Panther","Brother Voodoo","Cerberus (Greek myth)","David Bealer","Don Phipps","Frenchie","Gena Landers","Hellcat","Hercules","Loralee Tate","Moon Knight","Patty O'Donnels","Speedball","Taku","Teri Cooper"],"name":"Marvel Super Heroes #1","link":"marvel_super_heroes_1","credits":["<b>Title:","<em>Black Panther<","D.G. Chichester","Richard Bensam","Scott Lobdell","<b>Credits:","Steve Ditko","Michael Gustovich","Fred Hembeck","Christopher Ivy","Fabian Nicieza","Dennis Jensen","Jim Sanders III","Bob Ingersoll","\"Conflagration\"","\"The sacrifice\"","em>","Ron Lim","<em>Hellcat<","\"Don't do that Voodoo you do do so well\"","\"I shot an arrow into the sky!\"","Mark Gruenwald","Kim DeMulder","<em>Speedball<","<em>Hercules<","\"Pulitzer Patty\"","Dell Barras","Keith Pollard","<em>Brother Voodoo<","Margaret Clark"],"i":4209},{"year":1990,"characters":["Alex Power Clone","Energizer","Franklin Richards","Friday","Galactus","Infant Terrible","Invisible Woman","Jim Power Clone","Lightspeed","Margaret Power Clone","Mass Master","Mr. Fantastic","Nova (Frankie Raye)","Roberta","Star-Stalker II","Toro"],"name":"Power Pack #56-58","link":"power_pack_56-58","credits":["Michael Higgins","Seth Kruchkow","Andy Mushysnky","Daryl Edelman","Michael Rockwitz","Tom Morgan"],"i":4210},{"year":1990,"characters":["Iron Man","War Machine"],"name":"Iron Man #257","link":"iron_man_257","credits":["Jeffrey Albrecht","Randall Frenz","Rich Yanizesky","Brad Vancata","Howard Mackie"],"i":4211},{"year":1990,"characters":["Barbara Ketch","Blackout (Demon)","Death Ninja","Deathwatch","Doris Ketch","Ghost Rider (Danny Ketch)","Kingpin","Noble Kale","Paulie Stratton","Stacy Dolan"],"name":"Ghost Rider #2-3","link":"ghost_rider_2-3","credits":["Bobbie Chase","Javier Saltares","Mark Texeira","Howard Mackie"],"i":4212},{"year":1990,"characters":["Frenchie","Marlene Alraune","Midnight (Jeffrey Wilde)","Moon Knight","Paladin","Sandman","Secret Empire Agent Number Seven","Secret Empire Agent Number Six","Silver Sable"],"name":"Moon Knight #15-18","link":"moon_knight_15-18","credits":["Chuck Dixon","Danny Fingeroth","Tom Palmer","Sal Velluto","Eric Fein"],"i":4213},{"year":1990,"characters":["Cloak","Dagger","Dr. Doom","Father Delgado","Father Michael Bowen","Mayhem","Mr. Jip","Night","Phillip Carlisle","Rebecca 'Rusty' Nales"],"name":"Cloak and Dagger #12-13","link":"cloak_and_dagger_12-13","credits":["Terry Austin","Eric Fein","Danny Fingeroth","Rick Leonardi"],"i":4214},{"year":1990,"characters":["Wolverine"],"name":"Wolverine #25","link":"wolverine_25","credits":["Bob Harras","Mary Jo Duffy","Daryl Edelman","John Buscema"],"i":4215},{"year":1990,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Gabriel Jones","Iron Man","Kate Neville","Lump (Gnobian)","Madame Hydra Six","N'Gami","Network Nina","Nick Fury","Red (LMD)","Werner Von Strucker","Yellow Claw"],"name":"Nick Fury Agent of SHIELD #12-14","link":"nick_fury_12-14","credits":["Bob Harras","Gregory Wright","Suzanne Dell'Orto","Keith Pollard","Kim DeMulder","Michael Bair"],"i":4216},{"year":1990,"characters":["Microchip","Punisher","Vic Martinelli"],"name":"Punisher: The Prize","link":"punisher_the_prize","credits":["Mike Harris","Terry Kavanagh","Kelly Corvese","C.J. Henderson"],"i":4217},{"year":1990,"characters":["Nightmare"],"name":"Marvel Fanfare #51","link":"marvel_fanfare_51","credits":["Dean Allen Schreck","Al Milgrom","Marc McLaurin","Gene Colan","Al Williamson"],"i":4218},{"year":1990,"characters":["Anne-Marie Baker","Arthur Chekov","Aunt May","Ben Urich","Black Cat","Cable (Adult)","Captain America","Chance (Nicholas Powell)","Demogoblin","Doctor Octopus","Dr. Strange","Electro","Evan Swann","Flash Thompson","Hal Goldman","Harriet Rose Palermo","Iron Man","Jason Macendale","Jonathan Caesar","Kingpin","Mary Jane Watson","Mr. Fantastic","Mysterio","Nate Lubenski","Nova (Rich Rider)","Punisher","Raymond Trask","Sandman","Shocker","Spider-Man","Thor","Victor Palermo","Vulture","Wolverine"],"name":"Amazing Spider-Man #334-339","link":"amazing_spider-man_334-339","credits":["Erik Larsen","John Romita Jr.","Dan Cuddy","Jim Salicrup","Keith Williams","Terry Austin","Mike Machlan","Randy Emberlin","David Michelinie"],"i":4219},{"year":1990,"characters":["Dr. Strange"],"name":"Doctor Strange #19","link":"doctor_strange_19","credits":["Roy Thomas","Dann Thomas","Gene Colan","Ralph Macchio"],"i":4220},{"year":1990,"characters":["Ben Jacobs","Clayton Burr","Dr. Hu","Harlan Ryker","Siege"],"name":"Marvel Comics Presents #62 (Deathlok)","link":"marvel_comics_presents_62_deat","credits":["Butch Guice","Kelly Corvese","Dwayne McDuffie","Gregory Wright","Terry Kavanagh"],"i":4221},{"year":1990,"characters":["Benny Beckley","Comet Man","Max (Fortisquian)","Mr. Fantastic","Rosemary Beckley","Superior (Bridge)"],"name":"Marvel Comics Presents #50-53 (Comet Man)","link":"marvel_comics_presents_50-53_c","credits":["Bill Mumy","Kelley Jones","Kelly Corvese","Gerry Talaoc","Miguel Ferrer","Terry Kavanagh","Alfredo P. Alcala"],"i":4222},{"year":1990,"characters":["Black Widow","Silver Sable"],"name":"Marvel Comics Presents #53 (Black Widow/Silver Sable)","link":"marvel_comics_presents_53_blac","credits":["Rob Liefeld","Fabian Nicieza","Kelly Corvese","Bob Wiacek","Terry Kavanagh"],"i":4223},{"year":1990,"characters":["Dr. Strange","Marjorie Brink"],"name":"Marvel Comics Presents #61 (Dr. Strange)","link":"marvel_comics_presents_61_dr_s","credits":["Mike DeCarlo","Chris Tsuda","Kelly Corvese","Peter Gillis","Terry Kavanagh"],"i":4224},{"year":1990,"characters":["Black Widow","Nick Fury"],"name":"Black Widow: The Coldest War","link":"black_widow_the_coldest_war","credits":["Mark Farmer","Ernie Colon","Kelly Corvese","George Freeman","and Josef Rubinstein","Val Mayerik","Terry Kavanagh","Mike Harris","Gerry Conway"],"i":4225},{"year":1990,"characters":["Wolverine"],"name":"Wolverine #26","link":"wolverine_26","credits":["Mary Jo Duffy","Bob Harras","Tom Palmer","Klaus Janson"],"i":4226},{"year":1990,"characters":["Silver Surfer"],"name":"Silver Surfer #39","link":"silver_surfer_39","credits":["Renee Witterstaetter","Craig Anderson","James Sherman","Alan Grant"],"i":4227},{"year":1990,"characters":["Belasco","Gunny Bear","Jigsaw","Joy Adams","Microchip","Punisher","Reverend Sammy Smith"],"name":"Punisher #35-40","link":"punisher_35-40","credits":["Mark Farmer","Rob Tokar","Don Daley","James Sherman","Jack Slamm","Mark Texeira","Mike Baron","William Reinhold"],"i":4228},{"year":1990,"characters":["Alistaire Stuart","Alysande Stuart","Captain Britain","Dai Thomas","Dolph","Francesca Grace Lexley","Green Knight","Kate McClellan","Meggan","Sir Gawain"],"name":"Knights of Pendragon #1-6","link":"knights_of_pendragon_1-6","credits":["Gary Erskine","Bambos Georgiou","John Tomlinson","Steve White","Andy Lanning","Dan Abnett","Jenny O'Connor"],"i":4229},{"year":1990,"characters":["Al Mackenzie","Microchip","Nick Fury","Punisher"],"name":"Punisher #41","link":"punisher_41","credits":["Jose Marzan","Don Daley","Michael Ritter","Mike Baron","Tony DeZuniga","William Reinhold","John Nyberg"],"i":4230},{"year":1990,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Ben Jacobs","Billy Hansen","Clayton Burr","Deathlok (Michael Collins)","Dr. Hu","Harlan Ryker","Jesus Badalamente","Jim Dworman","Mainframe","N'Gami","Nick Collins","Nick Fury","Siege","Stanley Cross","Sunfire","Tracy Collins"],"name":"Deathlok #1-4","link":"deathlok_1-4","credits":["Butch Guice","Mike DeCarlo","Rick Magyar","Bob Budiansky","Scott Williams","Dwayne McDuffie","Gregory Wright","Tom Brevoort","Kyle Baker","others","Denys Cowan"],"i":4231},{"year":1990,"characters":["Adrian Sammish","General Lewis Haywerth","Henry Peter Gyrich","Microchip","Paladin","Punisher","Raymond Sikorski","USAgent","Valerie Cooper"],"name":"Punisher: No Escape","link":"punisher_no_escape","credits":["Rob Tokar","Don Daley","Gregory Wright","Tod Smith","Dan Bulandi"],"i":4232},{"year":1990,"characters":["Falcon","Iron Man","Justin Baldwin","Maddie Baldwin","Mrs. Arbogast","Speedball","Tigra"],"name":"Marvel Super Heroes #2","link":"marvel_super_heroes_2","credits":["<b>Title:","Danny Fingeroth","D.G. Chichester","<b>Credits:","Steve Ditko","Mike DeCarlo","Christopher Ivy","em>","Hollis Bright","Bob DeNatale","Dennis Mallonee","<em>Falcon<","Larry Alexander","Javier Saltares","Chuck Patton","\"The greater good!\"","<em>Speedball<","<em>Tigra<","\"Storm warning\"","\"The price of their toys\"","Mark Gruenwald","Margaret Clark"],"i":4233},{"year":1990,"characters":["Forgotten One","Sprite"],"name":"Avengers Spotlight #35","link":"avengers_spotlight_35","credits":["Jeffrey Albrecht","Danny Fingeroth","Len Kaminski","Mark Gruenwald","Jim Valentino"],"i":4234},{"year":1990,"characters":["Gambit","Lian Shen","Mystique","Nanny II","Orphan-Maker","Shadow King","Storm","Valerie Cooper"],"name":"Uncanny X-Men #265-266","link":"uncanny_men_265-266","credits":["Mike Collins","Josef Rubenstein","Bill Jaaska","Bob Harras","Chris Claremont","Suzanne Gaffney"],"i":4235},{"year":1990,"characters":["Baron Blood (Victor Strange)","Baron Mordo","Dr. Strange","Imei Chang","Morbius","Morgana Blessing","Rintrah","Wong","Zom"],"name":"Doctor Strange #20","link":"doctor_strange_20_1","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Michael Heisler","Tony DeZuniga","Dann Thomas"],"i":4236},{"year":1990,"characters":["Ghost Rider (Danny Ketch)","Mr. Hyde","Noble Kale","Shriker (Jack D'Auria)"],"name":"Ghost Rider #4","link":"ghost_rider_4","credits":["Javier Saltares","Gary Barnum","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4237},{"year":1990,"characters":["Calypso","Lizard","Mary Jane Watson","Spider-Man"],"name":"Spider-Man #1-5","link":"spider-man_1-5","credits":["Todd McFarlane","Dan Cuddy","Jim Salicrup"],"i":4238},{"year":1990,"characters":["Ben Urich","Brothers Grimm III","Chameleon","Edna Gortch","Erik Josten","Glory Grant","Graviton","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Kingpin","Mary Jane Watson","Nick Katzenberg","Normie Osborn","Paste Pot Pete","Puma","Spider-Man","Titania"],"name":"Web of Spider-Man #64-65","link":"web_of_spider-man_64-65","credits":["Dan Cuddy","Jim Salicrup","Keith Williams","Alex Saviuk","Gerry Conway"],"i":4239},{"year":1990,"characters":["Andrew Chord","Firestar","Harmon Furmintz","Justice","Midnight's Fire","Namorita","Night Thrasher","Nova (Rich Rider)","Silhouette","Speedball","Tai (Dragon's Breadth)","Walter Rosen"],"name":"New Warriors #2","link":"new_warriors_2","credits":["Mark Bagley","Al Williamson","Fabian Nicieza","Danny Fingeroth"],"i":4240},{"year":1990,"characters":["Drax the Destroyer","Geatar","Mentor","Silver Surfer","Starfox"],"name":"Silver Surfer #40-43","link":"silver_surfer_40-43","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Ron Marz","Jim Starlin"],"i":4241},{"year":1990,"characters":["Alpha the Ultimate Mutant","Arcanna","Bi-Beast II","Captive","Death (Axi-Tun)","Diamondhead","Doctor Spectrum","Dragonfly","Ego-Prime","Eon","Famine (Axi-Tun)","Fusion","Futurist","Gorr","Haywire","Hyperion","Jack of Hearts","Jakar","Kayla Ballantine","Kenjiro Tanaka","Krakoa","Lady Lark","Makkari","Mercurio the 4-D Man","Meru the Mindbender","Moondragon","Myron Wilburn","Overmind","Pestilence (Axi-Tun)","Pilai","Power Princess","Presence","Quasar","Red Guardian (Tania Belinksy)","Rocket Raccoon","Shape","Star-Dancer","Stardust","Stranger","Ten For","Trikon","War (Axi-Tun)","Whizzer (Squadron Supreme)","Woodgod"],"name":"Quasar #13-16","link":"quasar_13-16","credits":["Dan Panosian","Mike Manley","Len Kaminski","Mark Gruenwald","Howard Mackie"],"i":4242},{"year":1990,"characters":["Hip Hop","Lionheart","Soar","Surfstreak","Wreckless"],"name":"Brute Force #1-4","link":"brute_force_1-4","credits":["Jose Delbo","Simon Furman","Mike DeCarlo","Bob Budiansky"],"i":4243},{"year":1990,"characters":["Gambit","Lian Shen","Nanny II","Orphan-Maker","Shadow King","Storm"],"name":"Uncanny X-Men #267","link":"uncanny_x-men_267","credits":["Whilce Portacio","Scott Williams","Bob Harras","Chris Claremont","Jim Lee"],"i":4244},{"year":1990,"characters":["Arcanna","Black Racer","Captain Marvel (Monica Rambeau)","Doctor Spectrum","Eon","Fastforward","Fer-De-Lance","Haywire","Hyperion","Kayla Ballantine","Kenjiro Tanaka","Lady Lark","Makkari","Mr. Fantastic","Power Princess","Quasar","Quicksilver","Runner","Scarlet Witch","Shape","Speed Demon","Super Sabre","Whizzer (Squadron Supreme)"],"name":"Quasar #17","link":"quasar_17","credits":["Mark Gruenwald","Howard Mackie","Mike Manley","Len Kaminski"],"i":4245},{"year":1990,"characters":["Ernie Sluganski","Rocket Racer","Speed Demon"],"name":"Marvel Tales #242","link":"marvel_tales_242","credits":["Rudy D. Nebres","Tony Isabella","Jim Salicrup","Alan Kupperberg"],"i":4246},{"year":1990,"characters":["Ahab","Alex Power Clone","Annie Arnold","Banshee","Beyonder","Dr. Doom","Energizer","Forge","Franklin Richards","Human Torch","Invisible Woman","Jim Power Clone","Kubik","Lightspeed","Mass Master","Meggan","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Rachel Summers","Ship (Prosh)","Thing"],"name":"Fantastic Four annual #23","link":"fantastic_four_annual_23","credits":["Ralph Macchio","Butch Guice","<em>Volcana<","Walt Simonson","<b>Title:","\"Cast in fire","carved in stone\"","<em>Kosmos<","Geof Isherwood","Bob Harras","\"Beyond and back\"","Larry Mahlstedt","<b>Credits:","James Brock","Mark McKenna","em>","Michael Heisler","Len Kaminski","Greg Capullo"],"i":4247},{"year":1990,"characters":["Ahab","Banshee","Boom Boom","Cable (Adult)","Cannonball","Cypher","Franklin Richards","Invisible Woman","Mr. Fantastic","Rictor","Sunspot","Warlock","Wolfsbane"],"name":"New Mutants annual #6","link":"new_mutants_annual_6","credits":["\"Tribute the second\"","Al Milgrom","<b>Title:","Peter David","Daryl Edelman","Harry Candelario","Scott Williams","Chris Wozniak","Bob Harras","<b>Credits:","Suzanne Gaffney","em>","Dan Panosian","Gavin Curtis","Louise Simonson","Terry Shoemaker","Art Thibert","<em>Cypher<"],"i":4248},{"year":1990,"characters":["Ahab","Angel","Banshee","Beast","Boom Boom","Cable (Adult)","Cable (Baby Nathan Christopher Summers)","Cannonball","Cyclops","Forge","Human Torch","Iceman","Invisible Woman","Jean Grey","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Rachel Summers","Ship (Prosh)","Sunspot","Thing","Warlock"],"name":"X-Factor annual #5","link":"x-factor_annual_5","credits":["<em>Jean Grey<","Al Milgrom","<b>Title:","Jon Bogdanove","Peter David","David Ross","Geof Isherwood","Bob Harras","<b>Credits:","Suzanne Gaffney","em>","\"Tribute the first\"","Louise Simonson"],"i":4249},{"year":1990,"characters":["Ahab","Banshee","Beast","Boom Boom","Cable (Adult)","Cable (Baby Nathan Christopher Summers)","Cannonball","Cyclops","Dr. Strange","Forge","Franklin Richards","Gambit","Human Torch","Invisible Woman","Jean Grey","Jubilee","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Psylocke","Rachel Summers","Ship (Prosh)","Spider-Man","Storm","Sunspot","Thing","Warlock","Wolverine"],"name":"Uncanny X-Men annual #14","link":"uncanny_x-men_annual_14","credits":["Al Milgrom","Steve Mancuse","<b>Title:","Mark Heike","Geof Isherwood","Art Adams","Bob Harras","Chris Claremont","<b>Credits:","Suzanne Gaffney","em>","Art Thibert","<em>Back-up<","Bob Wiacek","\"The fundamental things\"","Dan Green"],"i":4250},{"year":1991,"characters":["Dr. Mason","Dr. Moore","Dr. Most","Warlock"],"name":"Marvel Comics Presents #71 (Warlock)","link":"marvel_comics_presents_71_warl","credits":["Harry Candelario","Kelly Corvese","Scott Lobdell","Scott McDaniel","Terry Kavanagh"],"i":4251},{"year":1991,"characters":["Human Torch","Iceman","Lyja the Lazerfist"],"name":"Marvel Comics Presents #74 (Human Torch/Iceman)","link":"marvel_comics_presents_74_huma","credits":["Dan Mishkin","Dan Adkins","Kelly Corvese","Joe Staton","Terry Kavanagh"],"i":4252},{"year":1990,"characters":["Balor","Black Knight (Dane Whitman)","Black Knight (Sir Percy of Scandia)","Bloodwraith","Captain America","Captain Britain","Catherwood","Dr. Strange","Dreadknight","Hawkeye","Hellhorse","Mordred the Evil","Morgan Le Fey","Valinor","Valkyrie","Victoria Bentley","Wong"],"name":"Black Knight #1-4","link":"black_knight_1-4","credits":["The Slashing Dudes","Mark Gruenwald","Roy Thomas","Gregory Wright","Rich Buckler","Tony DeZuniga","Dann Thomas"],"i":4253},{"year":1990,"characters":["Boom Boom","Cable (Adult)","Cannonball","Dragoness","General Nguyen Coy","Kamikaze","Rictor","Stryfe","Sumo","Sunfire","Sunspot","Warlock","Wolfsbane","Wolverine","Zero"],"name":"New Mutants #93-94","link":"new_mutants_93-94","credits":["Rob Liefeld","Louise Simonson","Bob Harras","Hilary Barta"],"i":4254},{"year":1990,"characters":["Baron Blood (Victor Strange)","Baron Mordo","Clea","Dormammu","Dr. Strange","Imei Chang","Morgana Blessing","Orini","Rahl","Rintrah","Sara Wolfe","Umar","Wong"],"name":"Doctor Strange #21-24","link":"doctor_strange_21-24","credits":["Ralph Macchio","Butch Guice","Roy Thomas","Mark McKenna","Doug Hazlewood","Michael Heisler","Tony DeZuniga","Dann Thomas"],"i":4255},{"year":1990,"characters":["Andrea Strucker","Andreas Strucker","Black Widow","Jubilee","Matsuo Tsurayaba","Psylocke","Wolverine"],"name":"Uncanny X-Men #268","link":"uncanny_x-men_268","credits":["Scott Williams","Bob Harras","Jim Lee","Chris Claremont"],"i":4256},{"year":1990,"characters":["Champion","Collector","Deader","Death","Gardener","Grandmaster","In-Betweener","Lord Chaos","Master Order","Ratter","Runner","Soul Gem","Thanos"],"name":"Thanos Quest #1-2","link":"thanos_quest_1-2","credits":["Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin","John Beatty"],"i":4257},{"year":1990,"characters":["General Nguyen Coy","Karma","Lindsay McCabe","Prince Baran","Spider-Woman (Jessica Drew)","Tyger Tiger","Wolverine"],"name":"Wolverine #27-30","link":"wolverine_27-30","credits":["Mary Jo Duffy","Al Milgrom","John Buscema","Bill Jaaska","Bob Harras","Keith Williams","Josef Rubinstein","Suzanne Gaffney","Dan Green","Barry Kitson"],"i":4258},{"year":1990,"characters":["Doris Ketch","Flag-Smasher","Ghost Rider (Danny Ketch)","Linda Wei","Noble Kale","Punisher","Stacy Dolan"],"name":"Ghost Rider #5-6","link":"ghost_rider_5-6","credits":["Javier Saltares","Gary Barnum","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4259},{"year":1990,"characters":["Alysande Stuart","Captain Britain","Dai Thomas","Emma Collins","Jamie Braddock","Meggan","Nigel Frobisher","Nightcrawler","Rachel Summers","Vixen"],"name":"Excalibur #27","link":"excalibur_27","credits":["Terry Kavanagh","Barry Windsor-Smith","Chris Claremont","Bill Sienkiewicz"],"i":4260},{"year":1990,"characters":["Blonde Phantom","Lexington Loopner","Nosferata","She-Hulk"],"name":"She-Hulk #19-20","link":"she-hulk_19-20","credits":["Jim Sanders III","Gary Barnum","Bryan Hitch","Bobbie Chase","Steve Gerber"],"i":4261},{"year":1990,"characters":["Captain Britain","Meggan"],"name":"Excalibur #28","link":"excalibur_28","credits":["Bret Blevins","Terry Kavanagh","Terry Austin","Colleen Doran"],"i":4262},{"year":1990,"characters":["Blue Shield","Captain America","Dakota North","Dominic Fortune","Jeannine O'Connell","Kingsize","Radion (Dr. Henri Sorel)","Wasp"],"name":"Marvel Super Heroes #3","link":"marvel_super_heroes_3","credits":["<b>Title:","\"Kingsize problem\"","Gary Hartle","Danny Fingeroth","Mark Gruenwald","Tim Dzon","<b>Credits:","<em>Blue Shield<","<em>Wasp<","Brad Vancata","em>","Len Kaminski","Greg Capullo","Dwight Jon Zimmerman","Tony DeZuniga","Amanda Conner"],"i":4263},{"year":1990,"characters":["Frenchie","Lynn Church","Marlene Alraune","Microchip","Midnight (Jeffrey Wilde)","Moon Knight","Punisher","Secret Empire Agent Number Seven","Secret Empire Agent Number Six","Spider-Man"],"name":"Moon Knight #19-21","link":"moon_knight_19-21","credits":["Sal Velluto","Chuck Dixon","Tom Palmer","Danny Fingeroth"],"i":4264},{"year":1991,"characters":["Foolkiller (Greg Salinger)","Foolkiller (Kurt Gerhardt)","Spider-Man"],"name":"Foolkiller #1-10","link":"foolkiller_1-10","credits":["Craig Anderson","J.J. Birch","Vincent Giarrano","Tony DeZuniga","Steve Gerber"],"i":4265},{"year":1990,"characters":["Dr. Druid","Ravonna"],"name":"Avengers Spotlight #37","link":"avengers_spotlight_37","credits":["Bob Hall","Roy Thomas","Winslow Mortime","Mark Gruenwald","Dann Thomas"],"i":4266},{"year":1990,"characters":["Arranger","Chameleon","Fogg","Frank Farrow","Hammerhead","J. Jonah Jameson","Jason Jerome","Joe 'Robbie' Robertson","Kingpin","Knight","Marla Madison Jameson","Martha Robertson","Mary Jane Watson","Puma","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #165-167","link":"spectacular_spider-man_165-167","credits":["Al Milgrom","Stan Drake","Dan Cuddy","Jim Salicrup","Keith Williams","Andy Mushynsky","Sal Buscema","Jack Abel","Mike Manley","Tom Morgan","Gerry Conway"],"i":4267},{"year":1990,"characters":["Arnold Astrovik","Bart Jones","Charles Rider","Firestar","Harmon Furmintz","Jupiter (Firestar's friend)","Justice","Justin Baldwin","Mad Thinker","Maddie Baldwin","Namorita","Niels","Night Thrasher","Norma Astrovik","Nova (Rich Rider)","Primus","Silhouette","Speedball","Walter Rosen"],"name":"New Warriors #3","link":"new_warriors_3","credits":["Mark Bagley","Al Williamson","Fabian Nicieza","Danny Fingeroth"],"i":4268},{"year":1991,"characters":["Boom Boom","Cable (Adult)","Cannonball","Queen Rain","Rictor","Sunspot","Wolfsbane","Wolverine"],"name":"Wolverine: Rahne of Terra","link":"wolverine_rahne_of_terra","credits":["Suzanne Gaffney","Bob Harras","Peter David","Andy Kubert"],"i":4269},{"year":1990,"characters":["Betty Brant","Frank Farrow","Hammerhead","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mary Jane Watson","Molten Man","Nick Katzenberg","Normie Osborn","Spider-Man","Tombstone"],"name":"Web of Spider-Man #66-68","link":"web_of_spider-man_66-68","credits":["Dan Cuddy","Jim Salicrup","Keith Williams","Mike Manley","Ben Trovato","Alex Saviuk","Gerry Conway"],"i":4270},{"year":1990,"characters":["Archie Corrigan","General Nguyen Coy","Reiko","Tyger Tiger","Wolverine"],"name":"Wolverine #31-33","link":"wolverine_31-33","credits":["Marc Silvestri","Bob Harras","Suzanne Gaffney","Larry Hama","Dan Green"],"i":4271},{"year":1990,"characters":["Betty Brant","Betty Ross","Carlos Lobo","Hulk","J. Jonah Jameson","Joe 'Robbie' Robertson","Kristy Watson","Liz Allan","Mary Jane Watson","Normie Osborn","Spider-Man","Susan Ransome"],"name":"Web of Spider-Man #69-70","link":"web_of_spider-man_69-70","credits":["Dan Cuddy","David Micheline","Jim Salicrup","Keith Williams","Alex Saviuk","Gerry Conway"],"i":4272},{"year":1990,"characters":["Archie Corrigan","Dumas","Rhys","Scarface","Sheik","Stump","Tyger Tiger","Wolverine"],"name":"Marvel Comics Presents #62-63 (Wolverine)","link":"marvel_comics_presents_62-63_w","credits":["Harry Candelario","Kelly Corvese","Paul Ryan","Dwight Jon Zimmerman","Terry Kavanagh"],"i":4273},{"year":1990,"characters":["Hunter In Darkness","Wolverine"],"name":"Wolverine #34","link":"wolverine_34","credits":["Marc Silvestri","Bob Harras","Suzanne Gaffney","Larry Hama","Dan Green"],"i":4274},{"year":1990,"characters":["Calculus","Captain America","Edna Gortch","Glory Grant","Jason Jerome","Joy Mercado","Kingpin","Kristy Watson","Mary Jane Watson","Normie Osborn","Prowler","Puma","Quasar","Rocket Racer","Sandman","Sersi","She-Hulk","Space Phantom","Spider-Man","Thor"],"name":"Spectacular Spider-Man #168-170","link":"spectacular_spider-man_168-170","credits":["Jim Salicrup","Dan Cuddy","Sal Buscema","Gerry Conway"],"i":4275},{"year":1991,"characters":["Mary Jane Watson","Rhino","Spider-Man"],"name":"Spectacular Spider-Man annual #11 (Rhino)","link":"spectacular_spider-man_annual_3","credits":["Danny Fingeroth","Ron Wilson","Bud LaRosa","Terry Kavanagh","Gerry Conway"],"i":4276},{"year":1990,"characters":["Wolverine"],"name":"Wolverine: Bloodlust","link":"wolverine_bloodlust","credits":["Bob Harras","Suzanne Gaffney","Alan Davis","Paul Neary"],"i":4277},{"year":1991,"characters":["Beetle","Ben Urich","Boomerang","Hardshell","Justin Hammer","Kingpin","Mad Dog Rassitano","Marcus Stone","Pembroke","Rhino","Rigger Ruiz","Shocker","Speed Demon","Spider-Man","Tinkerer"],"name":"Deadly Foes of Spider-Man #1-4","link":"deadly_foes_of_spider-man_1-4","credits":["Al Milgrom","Harry Candelario","Danny Fingeroth","Kerry Gammill","Mike Machlan","Terry Kavanagh"],"i":4278},{"year":1991,"characters":["Aunt May","Black Cat","Bloodlust","Cardiac","Chameleon","Enrique Lopez","Flash Thompson","Harry Osborn","J. Jonah Jameson","Knockout","Liz Allan","Mary Jane Watson","Mike Duggan","Mindblast","Normie Osborn","Scorpion","Spider-Man","Tarantula II","Whiplash (Leeann Foreman)","Willie Lumpkin"],"name":"Amazing Spider-Man #340-343","link":"amazing_spider-man_340-343","credits":["Erik Larsen","Friends","Dan Cuddy","Jim Salicrup","Mike Machlan","Randy Emberlin","David Michelinie"],"i":4279},{"year":1990,"characters":["Alex Power Clone","Bruto the Strongman","Clown","Energizer","Ernesto Gambonno","Franklin Richards","Friday","Human Cannonball","Infant Terrible","Invisible Woman","Jim Power Clone","Lightspeed","Livewire","Luigi Gambonno","Margaret Power Clone","Mass Master","Mr. Fantastic","Ringmaster","Toro"],"name":"Power Pack #59","link":"power_pack_59","credits":["Michael Higgins","Seth Kruchkow","Tom Morgan","Mike Rockwitz"],"i":4280},{"year":1990,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Cameron Hodge","Charlotte Jones","Cyclops","Iceman","Jean Grey","Opal Tanaka","Paul Burton","Ship (Prosh)","Timothy Jones","Trish Tilby"],"name":"X-Factor #59","link":"x-factor_59","credits":["Bob Harras","Louise Simonson","Terry Shoemaker","Al Milgrom"],"i":4281},{"year":1991,"characters":["Alex Power Clone","Allison McCourt","Ann Raymond","Energizer","Franklin Richards","Friday","Human Torch","Igor (Super Ape)","Infant Terrible","Invisible Woman","Jim Power Clone","Lightspeed","Margaret Power Clone","Mass Master","Mikhlo (Super Ape)","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Peator (Super Ape)","Puppet Master","Red Ghost","Thing","Toro"],"name":"Power Pack #60-62","link":"power_pack_60-62","credits":["Michael Higgins","Seth Kruchkow","Don Hudson","Dave Cockrum","Michael Rockwitz","Tom Morgan","Steve Buccellato"],"i":4282},{"year":1990,"characters":["Alex Power Clone","Captain Britain","Energizer","Franklin Richards","Friday","Infant Terrible","Jim Power Clone","Lightspeed","Lockheed","Margaret Power Clone","Mass Master","Meggan","Nightcrawler","Nightmare","Rachel Summers"],"name":"Excalibur #29","link":"excalibur_29","credits":["Michael Higgins","Seth Kruchkow","Josef Rubinstein","Chris Wozniak","Terry Kavanagh"],"i":4283},{"year":1991,"characters":["Alex Power Clone","Bride of the Lost Lagoon","Energizer","Franklin Richards","Lightspeed","Mass Master","Monster From The Lost Lagoon"],"name":"Marvel Super Heroes #6 (Power Pack)","link":"marvel_super_heroes_6_power_pa","credits":["Michael Higgins","Don Hudson","Steve Buccellato","Mike Rockwitz"],"i":4284},{"year":1990,"characters":["Andrew Chord","Asylum","Coronary","Firestar","Harmon Furmintz","Impulse (Genetech)","Justice","Mathemanic","Namorita","Night Thrasher","Nova (Rich Rider)","Pretty Persuasions","Speedball","Sphinx II","Tai (Dragon's Breadth)","Walter Rosen"],"name":"New Warriors #4","link":"new_warriors_4","credits":["Mark Bagley","Danny Fingeroth","Fabian Nicieza","Larry Mahlstedt"],"i":4285},{"year":1990,"characters":["Angel","Beast","Cable (Baby Nathan Christopher Summers)","Cyclops","Iceman","Jean Grey","Ship (Prosh)","Synthia Naip"],"name":"X-Factor Prisoner of Love","link":"x-factor_prisoner_of_love","credits":["Bob Harras","Butch Guice","Suzanne Gaffney","Jim Starlin"],"i":4286},{"year":1990,"characters":["Carlos Cardinale","Poison","Slug (Crimelord)"],"name":"Marvel Comics Presents #60-67 (Poison)","link":"marvel_comics_presents_60-67_p","credits":["Terry Kavanagh","Kelly Corvese","Cynthia Martin","Steve Gerber"],"i":4287},{"year":1991,"characters":["Karnak","Lockjaw","Mr. Fantastic"],"name":"Marvel Comics Presents #68 (Lockjaw)","link":"marvel_comics_presents_68_lock","credits":["Al Milgrom","Scott Lobdell","Kelly Corvese","Jack Abel","Jose Delbo","Terry Kavanagh"],"i":4288},{"year":1992,"characters":["Caleb Alexander","Carrie Alexander","Namorita","Rhino","Sub-Mariner"],"name":"Marvel Super Heroes #10 (Sub-Mariner)","link":"marvel_super_heroes_10_sub-mar","credits":["Dan Cuddy","Rob Tokar","Patrick Archibald","Barry Dutter","Andrew Pepoy"],"i":4289},{"year":1991,"characters":["Sub-Mariner"],"name":"Marvel Comics Presents #73 (Sub-Mariner)","link":"marvel_comics_presents_73_sub-","credits":["Terry Kavanagh","John Morelli","Jim Mooney","Kelly Corvese"],"i":4290},{"year":1991,"characters":["Sub-Mariner","Tiger Shark"],"name":"Marvel Comics Presents #77 (Sub-Mariner)","link":"marvel_comics_presents_77_sub-","credits":["Kelly Corvese","Robert Campanella","Terry Kavanagh","Grant Miehm"],"i":4291},{"year":1991,"characters":["Constrictor"],"name":"Marvel Comics Presents #74 (Constrictor)","link":"marvel_comics_presents_74_cons","credits":["Kelly Corvese","Scott Lobdell","Randy Emberlin","Scott McDaniel","Terry Kavanagh"],"i":4292},{"year":1991,"characters":["Ernie Sluganski","Rocket Racer"],"name":"Marvel Tales #250","link":"marvel_tales_250","credits":["Jim Salicrup","Tony Isabella","Dan Cuddy","Alan Kupperberg"],"i":4293},{"year":1990,"characters":["Barbara Ketch","Blackout (Demon)","Doris Ketch","Ghost Rider (Danny Ketch)","Linda Wei","Noble Kale","Scarecrow","Shriker (Jack D'Auria)","Stacy Dolan"],"name":"Ghost Rider #7","link":"ghost_rider_7","credits":["Bobbie Chase","Gary Barnum","Mark Texeira","Howard Mackie"],"i":4294},{"year":1990,"characters":["Angel","Beast","Iceman","Ship (Prosh)"],"name":"Marvel Fanfare #50","link":"marvel_fanfare_50","credits":["Mary Jo Duffy","Al Milgrom","Josef Rubinstein","Marc McLaurin","Joe Staton"],"i":4295},{"year":1990,"characters":["Alistaire Stuart","Alysande Stuart","Captain Britain","Dai Thomas","Dr. Strange","Lockheed","Meggan","Nightcrawler","Rachel Summers","Rintrah","Train Dragon","Widget","Wong"],"name":"Excalibur #30","link":"excalibur_30","credits":["Dana Moreshead","Al Milgrom","Terry Kavanagh","David Ross"],"i":4296},{"year":1990,"characters":["Captain Britain","Meggan","Nightcrawler","Rachel Summers"],"name":"Excalibur #31","link":"excalibur_31","credits":["Al Milgrom","David Ross","Scott Lobdell","Kelly Corvese","Terry Kavanagh"],"i":4297},{"year":1990,"characters":["Microchip","Punisher"],"name":"Punisher #42","link":"punisher_42","credits":["Don Daley","Mike Baron","Mark Texeira","Kevin Kobasic"],"i":4298},{"year":1991,"characters":["Alistaire Stuart","Alysande Stuart","Andrea Strucker","Andreas Strucker","Captain Britain","Colonel Alexei Vazhin","Dai Thomas","Debra Levin","Lockheed","Meggan","Mesmero","Nigel Frobisher","Nightcrawler","Opal Luna Sat-yr^9","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur #32-34","link":"excalibur_32-34","credits":["Terry Kavanagh","Kelly Corvese","Chris Claremont","Ron Wagner"],"i":4299},{"year":1990,"characters":["Black Racer","Boomslang","Captain America","Diamondback","Man-Wolf (John Jameson)","Moonstone (Karla Sofen)","Moonstone (Lloyd Bloch)","Peggy Carter","Quasar"],"name":"Captain America #379","link":"captain_america_379","credits":["Ralph Macchio","Mark Gruenwald","Dan Panosian","Robert Heddon","Mark Bagley","Michael Heisler","Chris Marrinan"],"i":4300},{"year":1991,"characters":["Blonde Phantom","Captain Rectitude","Invisible Woman","Mr. Fantastic","Phantom Blonde","She-Hulk"],"name":"She-Hulk #21-23","link":"she-hulk_21-23","credits":["Buzz Dixon","Jim Sanders III","Gary Barnum","Tom Artis","Bobbie Chase","Steve Gerber"],"i":4301},{"year":1990,"characters":["Alistaire Stuart","Captain Britain","Hauptmann England","Meggan","Moira MacTaggert","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur: Weird War III","link":"excalibur_weird_war_iii","credits":["Michael Higgins","Josef Rubinstein","Kelly Corvese","Justin Thyme","Tom Morgan","Terry Kavanagh"],"i":4302},{"year":1991,"characters":["Captain America","Diamondback","Invisible Woman","Iron Man","Jarvis","Kingpin","L.D.50","Mr. Fantastic","Ngh","Powersurge","Rage","Raymond Sikorski","Sersi","She-Hulk","Thor","Xa"],"name":"Avengers #326-328","link":"avengers_326-328","credits":["Paul Ryan","Tom Palmer","Len Kaminski","Larry Hama","Howard Mackie"],"i":4303},{"year":1990,"characters":["Andrew Chord","Black Bolt","Firestar","Gorgon","Justice","Justin Baldwin","Karnak","Lockjaw","Maddie Baldwin","Medusa","Namorita","Night Thrasher","Nova (Rich Rider)","Speedball","Sphinx II","Star Thief III","Tai (Dragon's Breadth)","Triton","Uatu the Watcher","White Queen (Emma Frost)"],"name":"New Warriors #5-6","link":"new_warriors_5-6","credits":["Fabian Nicieza","Danny Fingeroth","Larry Mahlstedt","Mark Bagley","Eric Fein"],"i":4304},{"year":1990,"characters":["Big Bertha","Captain America","Dinah-Soar","Doorman","Flatman","Human Torch (Golden Age)","Mr. Immortal","Wonder Man"],"name":"Avengers West Coast #64","link":"avengers_west_coast_64","credits":["Dan Bulanadi","Len Kaminski","Chris Wozniak","Terry Kavanagh","Howard Mackie"],"i":4305},{"year":1990,"characters":["Iron Man"],"name":"Marvel Fanfare #53 (Iron Man)","link":"marvel_fanfare_53_iron_man","credits":["Al Milgrom","Christopher Ivy","David Ross","Dan Mishkin"],"i":4306},{"year":1990,"characters":["Angel","Astra","Beast","Black Light","Blackthorn","Captain Britain","Carol Danvers","Ch'od","Corsair","Cr'reee","Cyclops","Deathbird","Earthquake","Electron","Gladiator (Shiar)","Hepzibah","Hobgoblin (Shiar)","Hussar","Iceman","Impulse (Imperial Guard)","Jean Grey","Lilandra","Lockheed","Magic","Meggan","Mentor (Shiar)","Neutron","Nightcrawler","Nightside","Oracle","Phoenix Force","Professor X","Rachel Summers","Raza Longknife","Scintilla","Shadowcat (Kitty Pryde)","Ship (Prosh)","Sikorsky","Smasher (Shiar)","Starbolt","Tempest","Titan","Waldo","Warstar","White Noise","Widget"],"name":"X-Men Spotlight on... Starjammers #1-2","link":"x-men_spotlight_on_starjammers","credits":["Jeffrey Albrecht","Dave Cockrum","Kelly Corvese","Mark Gruenwald","Terry Kavanagh"],"i":4307},{"year":1990,"characters":["Amanda Sefton","Angelo Macon","Bonebreaker","Gateway","Lady Deathstrike","Legion","Lila Cheney","Magneto","Moira MacTaggert","Murray Reese","Mystique","Polaris","Pretty Boy","Rogue","Shadow King","Skullbuster II","Wade Cole","White Bishop (Donald Pierce)"],"name":"Uncanny X-Men #269","link":"uncanny_x-men_269","credits":["Bob Harras","Jim Lee","Chris Claremont","Art Thibert"],"i":4308},{"year":1991,"characters":["Allison Lamb","Ariann Wight","Caspar Wight","Charles Blackwater","Fin Fang Foom","Jennifer Kale","Katherine Reynolds","Liuchow Chan","Martin Gold","Omen"],"name":"Legion of Night #1-2","link":"legion_of_night_1-2","credits":["Ralph Macchio","Whilce Portacio","Scott Williams","Len Kaminski","Steve Gerber"],"i":4309},{"year":1991,"characters":["Captain Britain","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Marvel Comics Presents #75 (Excalibur)","link":"marvel_comics_presents_75_exca","credits":["Sue Flaxman","Christopher Ivy","Kelly Corvese","Terry Kavanagh","Gavin Gurtis"],"i":4310},{"year":1991,"characters":["Iron Man","War Machine"],"name":"Marvel Comics Presents #78 (Iron Man)","link":"marvel_comics_presents_78_iron","credits":["Ken Steacy","Doug Murray","Terry Kavanagh","Kelly Corvese"],"i":4311},{"year":1991,"characters":["J. Jonah Jameson","Jason Jerome","Mary Jane Watson","Puma","Shaman (Puma's uncle)","Spider-Man"],"name":"Spectacular Spider-Man #171-172","link":"spectacular_spider-man_171-172","credits":["Jim Salicrup","Dan Cuddy","Sal Buscema","Gerry Conway"],"i":4312},{"year":1991,"characters":["Ben Urich","Bullseye","Daredevil","Foggy Nelson","J. Jonah Jameson","Kingpin"],"name":"Daredevil #284-290","link":"daredevil_284-290","credits":["Kieron Dwyer","Ralph Macchio","Ann Nocenti","Lee Weeks","Fred Fredericks","Doug Hazlewood","Al Williamson","Michael Heisler","Greg Capullo"],"i":4313},{"year":1990,"characters":["Black Knight (Dane Whitman)","Bloodwraith","Catherwood","Crusader (Holy Zealot)","Valinor","Victoria Bentley"],"name":"Avengers Spotlight #39","link":"avengers_spotlight_39","credits":["Mark Gruenwald","Roy Thomas","Len Kaminski","Tom Dzon","Greg Capullo","Dann Thomas"],"i":4314},{"year":1991,"characters":["Dominic Fortune","Elena Von Lundt","Kate Cushing","Sabbath Raven","Silver Sable","Spider-Man","Wolfgang Von Lundt"],"name":"Web of Spider-Man #71-72","link":"web_of_spider-man_71-72","credits":["Al Milgron","Dan Cuddy","David Ross","Danny Fingeroth","Jim Salicrup","Keith Williams","Andy Mushynsky"],"i":4315},{"year":1990,"characters":["Daredevil","Gladiator (Shiar)"],"name":"Marvel Comics Presents #49 (Daredevil & Gladiator)","link":"marvel_comics_presents_49_dare","credits":["Jeffrey Albrecht","<b>Title:","Don Heck","John Figueroa","Vince Mielcarek","Kelly Corvese","<b>Credits:","<em>Gladiator<","em>","Ron Wilson","\"The unbeatable foe\"","Len Kaminski","Terry Kavanagh"],"i":4316},{"year":1991,"characters":["Beast","Constrictor","Igor (Super Ape)","Jennifer Nyles","Mikhlo (Super Ape)","Peator (Super Ape)","Red Ghost","Ship (Prosh)"],"name":"Marvel Comics Presents #85-92 (Beast)","link":"marvel_comics_presents_85-92_b","credits":["Rob Liefeld","Don Hudson","Jae Lee","Scott Lobdell","Mark Powers","Tim Dzon","Terry Kavanagh"],"i":4317},{"year":1990,"characters":["Punisher"],"name":"Punisher #43","link":"punisher_43","credits":["Don Daley","Mike Baron","William Reinhold","Kevin Kobasic"],"i":4318},{"year":1991,"characters":["Anaconda","Anna Kappelbaum","Asp","Bernie Rosenthal","Black Mamba","Black Racer","Bushmaster II","Captain America","Coachwhip","Cobra","Cottonmouth","Diamondback","Fabian Stankowicz","Fer-De-Lance","Guardsman II (Michael O'Brien)","Jarvis","Josh Cooper","Man-Wolf (John Jameson)","Mike Farrel","Paladin","Peggy Carter","Puff Adder","Rattler","Rock Python","Sidewinder"],"name":"Captain America #380-382","link":"captain_america_380-382","credits":["Ralph Macchio","Ron Lim","Dan Bulanadi","Michael Heisler","Mark Gruenwald"],"i":4319},{"year":1991,"characters":["General Lewis Haywerth","USAgent"],"name":"Captain America #380-382 (USAgent)","link":"captain_america_380-382_usagen","credits":["Ralph Macchio","Dan Panosian","Mark Bagley","Michael Heisler","Mark Gruenwald"],"i":4320},{"year":1991,"characters":["Elio Bessucco","Microchip","Punisher","Saracen"],"name":"Punisher War Journal #25-27","link":"punisher_war_journal_25-27","credits":["Don Daley","Mike Baron","Mark Texeira","Kevin Kobasic"],"i":4321},{"year":1990,"characters":["Banshee","Boom Boom","Cable (Adult)","Cannonball","Forge","Freddie Stanachek","Gambit","Havok","House","Jean Grey","Lila Cheney","Pipeline","Rictor","Stevie Hunter","Storm","Strong Guy","Sunspot","Tam","Trish Tilby","Warlock","Wolfsbane"],"name":"Uncanny X-Men #270","link":"uncanny_x-men_270","credits":["Scott Williams","Bob Harras","Chris Claremont","Suzanne Gaffney","Jim Lee","Art Thibert"],"i":4322},{"year":1990,"characters":["Angel","Banshee","Beast","Boom Boom","Cable (Adult)","Cameron Hodge","Cannonball","Cyclops","Forge","Gambit","Havok","Iceman","Jean Grey","Mystique","Pipeline","Rictor","Stevie Hunter","Storm","Warlock","Wipeout","Wolfsbane"],"name":"New Mutants #95","link":"new_mutants_95","credits":["Rob Liefeld","Co.","Bob Harras","Joe Rubinstein","Louise Simonson"],"i":4323},{"year":1990,"characters":["Angel","Banshee","Beast","Boom Boom","Cable (Adult)","Cable (Baby Nathan Christopher Summers)","Cameron Hodge","Cannonball","Cyclops","Forge","Gambit","Genegineer (David Moreau)","Havok","Hawkshaw","Iceman","Jean Grey","Lou Smith","Mystique","Opal Tanaka","Paul Burton","Pipeline","Rictor","Ship (Prosh)","Storm","Sunspot","Wipeout","Wolfsbane"],"name":"X-Factor #60","link":"x-factor_60","credits":["Louise Simonson","Bob Harras","Jon Bogdanove","Al Milgrom"],"i":4324},{"year":1990,"characters":["Boom Boom","Cameron Hodge","Chief Magistrate Anderson","Genegineer (David Moreau)","Havok","Jubilee","Manoli Wetherell","Moira MacTaggert","Psylocke","Rictor","Storm","Tam","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #271","link":"uncanny_x-men_271","credits":["Scott Williams","Bob Harras","Chris Claremont","Suzanne Gaffney","Jim Lee"],"i":4325},{"year":1990,"characters":["Angel","Beast","Boom Boom","Cable (Adult)","Cameron Hodge","Cannonball","Cyclops","Forge","Gambit","Genegineer (David Moreau)","Havok","Iceman","Jean Grey","Jubilee","Psylocke","Rictor","Sunspot","Wipeout","Wolfsbane","Wolverine"],"name":"New Mutants #96","link":"new_mutants_96","credits":["Rob Liefeld","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Louise Simonson","Art Thibert"],"i":4326},{"year":1990,"characters":["Angel","Banshee","Beast","Cable (Adult)","Cameron Hodge","Cannonball","Cyclops","Forge","Gambit","Genegineer (David Moreau)","Havok","Iceman","Jean Grey","Storm","Sunspot","Wipeout","Wolfsbane","Wolverine"],"name":"X-Factor #61","link":"x-factor_61","credits":["Al Milgrom","Jon Bogdanove","John Caponigro","Bob Harras","Louise Simonson"],"i":4327},{"year":1991,"characters":["Angel","Banshee","Beast","Boom Boom","Cable (Adult)","Cameron Hodge","Cannonball","Chief Magistrate Anderson","Cyclops","Emmanuel Da Costa","Forge","Gambit","Genegineer (David Moreau)","Havok","Iceman","Jean Grey","Jubilee","Manoli Wetherell","Mr. Fantastic","Psylocke","Punisher","Rictor","She-Hulk","Storm","Sunspot","Tam","Wipeout","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #272","link":"uncanny_x-men_272","credits":["Scott Willams","Bob Harras","Jim Lee","Chris Claremont"],"i":4328},{"year":1991,"characters":["Angel","Banshee","Beast","Boom Boom","Cable (Adult)","Cameron Hodge","Cannonball","Cyclops","Forge","Gambit","Genegineer (David Moreau)","Havok","Iceman","Jean Grey","Jubilee","Psylocke","Rictor","Storm","Sunspot","Warlock","Wipeout","Wolfsbane","Wolverine"],"name":"New Mutants #97","link":"new_mutants_97","credits":["Bob Harras","Louise Simonson","Josef Rubinstein","Guang Yap"],"i":4329},{"year":1991,"characters":["Angel","Banshee","Beast","Boom Boom","Cable (Adult)","Cameron Hodge","Cannonball","Cyclops","Forge","Gambit","Havok","Iceman","Jean Grey","Jubilee","Psylocke","Rictor","Storm","Sunspot","Warlock","Wolfsbane","Wolverine"],"name":"X-Factor #62","link":"x-factor_62","credits":["Louise Simonson","Bob Harras","Jon Bogdanove","Al Milgrom"],"i":4330},{"year":1990,"characters":["Blackout (Demon)","Danika Trevani","Doris Ketch","Fiona McCormick","Ghost Rider (Danny Ketch)","Linda Wei","Luz Delgado","Mei Lin","Noble Kale","Stacy Dolan","Tyler Meagher"],"name":"Ghost Rider #8","link":"ghost_rider_8","credits":["Javier Saltares","Gary Barnum","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4331},{"year":1990,"characters":["Angel","Beast","Blackout (Demon)","Cable (Baby Nathan Christopher Summers)","Cyclops","Danika Trevani","Fiona McCormick","Ghost Rider (Danny Ketch)","Iceman","Jean Grey","Linda Wei","Luz Delgado","Mei Lin","Noble Kale","Paulie Stratton","Ship (Prosh)","Shriker (Jack D'Auria)","Stacy Dolan","Tyler Meagher"],"name":"Ghost Rider #9","link":"ghost_rider_9_1","credits":["Javier Saltares","Gary Barnum","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4332},{"year":1991,"characters":["Deathwatch","Ghost Rider (Danny Ketch)","Noble Kale","Shriker (Jack D'Auria)","Wolverine"],"name":"Marvel Comics Presents #64-71 (Wolverine/Ghost Rider)","link":"marvel_comics_presents_64-71_w","credits":["Harry Candelario","Kelly Corvese","Mark Texeira","Terry Kavanagh","Howard Mackie"],"i":4333},{"year":1990,"characters":["Blade","Frank Drake","Hannibal King","Safron Caulder"],"name":"Marvel Comics Presents #64 (Blade)","link":"marvel_comics_presents_64_blad","credits":["Kelly Corvese","Marc McLaurin","Malcom Davis","Joseph Adiletta","Terry Kavanagh"],"i":4334},{"year":1990,"characters":["Blowtorch","Spider-Man"],"name":"Marvel Comics Presents #67 (Spider-Man)","link":"marvel_comics_presents_67_spid","credits":["Kelly Corvese","Michael Gustovich","Len Wein","Terry Kavanagh","Dean Ormstrom"],"i":4335},{"year":1991,"characters":["Daredevil"],"name":"Marvel Comics Presents #69-72 (Daredevil)","link":"marvel_comics_presents_69-72_d","credits":["Christopher Ivy","Sandy Plunkett","Kelly Corvese","Terry Kavanagh","Dwayne Turner"],"i":4336},{"year":1993,"characters":["Apocalypse","Sub-Mariner"],"name":"Namor annual #3","link":"namor_annual_3","credits":["Adam Hughes","Sandu Florea","Karl Story","Wade Grawbadger","Mike Rockwitz","James Pearson","Scott Koblish","Ron Marz","Terry Austin","and Brian Stelfreze","Joe Andreani","Dave Johnson","Cully Hammer","Joe Phillips","and Chris Renkewitz","John Beatty","Joel Thomas","Chris Renkewitz"],"i":4337},{"year":1991,"characters":["De'Lila","Franklin Richards","Ghost Rider (Danny Ketch)","Giganto (Subterranean)","Hulk","Human Torch","Invisible Woman","Lyja the Lazerfist","Mole Man","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Noble Kale","Punisher","Roberta","Spider-Man","Thing","Tricephalous","Wolverine"],"name":"Fantastic Four #347-349","link":"fantastic_four_347-349","credits":["Ralph Macchio","Al Milgrom","Walt Simonson","Art Adams","Gracine Tanaka","Art Thibert"],"i":4338},{"year":2010,"characters":["De'Lila","Ghost Rider (Danny Ketch)","Giganto (Subterranean)","Hulk","Human Torch","Invisible Woman","Kristoff (Time Travel)","Mole Man","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Noble Kale","Spider-Man","Thing","Wolverine"],"name":"Spider-Man/Fantastic Four #3","link":"spider-manfantastic_four_3","credits":["Tom Brennan","Christos Gage","Steve Wacker","Joe Quesada","Mario Alberti"],"i":4339},{"year":1990,"characters":["Betty Ross","Hulk","Marlo Chandler","Rick Jones","Super-Skrull"],"name":"Hulk #374-375","link":"hulk_374-375","credits":["Peter David","Dale Keown","Bob McLeod","Gary Barnum","Bobbie Chase"],"i":4340},{"year":1990,"characters":["Ann Raymond","Caleb Alexander","Carrie Alexander","Colleen Wing","Desmond Marrs","Freidrich Kraus","Headhunter","Human Torch (Golden Age)","Joy Meachum","Master Man","Misty Knight","Namorita","Phoebe Marrs","Sub-Mariner","Super-Skrull","Ward Meachum"],"name":"Namor #6-9","link":"namor_6-9","credits":["John Byrne","Terry Kavanagh","Kelly Corvese"],"i":4341},{"year":1991,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Bruno Krea","Contessa Valentina Allegro De La Fontaine","Human Torch","Kate Neville","Mr. Fantastic","Network Nina","Nick Fury","Thing"],"name":"Nick Fury Agent of SHIELD #15-19","link":"nick_fury_agent_of_shield_15-1","credits":["Herb Trimpe","D.G. Chichester","Bill Jaaska","Mike Rockwitz","Fred Fredericks","Barry Dutter","Romeo Tanghal"],"i":4342},{"year":1990,"characters":["Captain Britain","Lockheed","Mastermind","Meggan","Moira MacTaggert","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)","Widget"],"name":"Excalibur #26","link":"excalibur_26","credits":["Ron Lim","Michael Higgins","Josef Rubinstein","Terry Kavanagh"],"i":4343},{"year":1990,"characters":["Agamemnon","Atalanta","Betty Ross","Doc Samson","Hulk","Marlo Chandler","Paris","Prometheus (Pantheon)","Rick Jones"],"name":"Hulk #376","link":"hulk_376","credits":["Peter David","Dale Keown","Bob McLeod","Gary Barnum","Bobbie Chase"],"i":4344},{"year":1991,"characters":["Grim Reaper","Hawkeye","Henry Pym","Iron Man","Mandrill","Nekra","Quicksilver","Scarlet Witch","Tigra","Ultron","USAgent","Wasp","Wonder Man"],"name":"Avengers West Coast #65-68","link":"avengers_west_coast_65-68","credits":["Roy Thomas","Keith Williams","Paul Ryan","Dan Bulandi","Rik Levins","Dann Thomas","Howard Mackie"],"i":4345},{"year":1991,"characters":["Drax the Destroyer","Eros","Geatar","Mentor","Mephisto","Nebula","Silver Surfer","Soul Gem","Starfox","Thanos"],"name":"Silver Surfer #44-45","link":"silver_surfer_44-45","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin"],"i":4346},{"year":1991,"characters":["Albion","Alysande Stuart","Ben Gallagher","Cam McClellan","Captain Britain","Dai Thomas","Dolph","Francesca Grace Lexley","Green Knight","Iron Man","Justin Meyer","Kate McClellan","Mrs. Arbogast","Randolph Frewin","Rowan Gowell","Union Jack (Joey Chapman)"],"name":"Knights of Pendragon #7-12","link":"knights_of_pendragon_7-12","credits":["Gary Erskine","Bambos Georgiou","John Tomlinson","Kevin Hopgood","Steve White","Andy Lanning","Dan Abnett"],"i":4347},{"year":1991,"characters":["Andrew 'Jock' Jackson","Bloodaxe (Jackie Lukus)","Bulldozer","Captain America","Captain Britain","Dr. Strange","Enchantress","Fireworks Fielstein","Ghost Rider (Danny Ketch)","Jerry Sapristi","Juggernaut","Kevin Masterson","Lockheed","Loki","Mad Dog Rassitano","Marcus Stone","Marcy Masterson Steele","Meggan","Mephisto","Mother Majowski","Nightcrawler","Noble Kale","Piledriver","Quasar","Rachel Summers","Rigger Ruiz","Shadowcat (Kitty Pryde)","Spider-Man","Susan Austin","Thor","Thunderball","Thunderstrike","Ulik","Wrecker"],"name":"Thor #427-430","link":"thor_427-430","credits":["Ralph Macchio","Al Milgrom","Joe Sinnott","Tom DeFalco","Michael Heisler","Ron Frenz"],"i":4348},{"year":1990,"characters":["Chen Hsu","Desmond Marrs","Fin Fang Foom","Henry Pym","Iron Man","Kearson DeWitt","Living Laser","Mandarin","Mrs. Arbogast","Phoebe Marrs","War Machine","Wonder Man"],"name":"Iron Man #258-263","link":"iron_man_258-263","credits":["John Byrne","Bob Wiacek","John Romita Jr.","Howard Mackie"],"i":4349},{"year":1990,"characters":["Doc Benson","Justin Baldwin","Maddie Baldwin","Speedball","Spitfire"],"name":"Marvel Super Heroes #4 (Spitfire & Speedball)","link":"marvel_super_heroes_4_spitfire","credits":["<b>Title:","Don Perlin","Ian Akin","Scott Lobdell","<b>Credits:","em>","Ron Wilson","<em>Speedball<","\"This is our story\""],"i":4350},{"year":1989,"characters":["Arcade","Captain Britain","Lockheed","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)","Train Dragon","Widget"],"name":"Marvel Comics Presents #31-38 (Excalibur)","link":"marvel_comics_presents_31-38_e","credits":["Michael Higgins","Erik Larsen","Terry Austin","Kelly Corvese","Terry Kavanagh"],"i":4351},{"year":1990,"characters":["Puma"],"name":"Marvel Comics Presents #44 (Puma)","link":"marvel_comics_presents_44_puma","credits":["Dan Mishkin","Kelly Corvese","Bob Wiacek","Terry Kavanagh","Gavin Curtis"],"i":4352},{"year":1991,"characters":["Ernie Sluganski","Rocket Racer","Speed Demon"],"name":"Web of Spider-Man annual #7 (Rocket Racer)","link":"web_of_spider-man_annual_7_roc","credits":["Paris Cullins","Dave Cooper","Tony Isabella","Danny Fingeroth"],"i":4353},{"year":1990,"characters":["Aurora","Darby Dean","Diamond Lil","Dr. Doom","General Jeremy Clarke","Guardian (James Mac Hudson)","Kerry Patrick","Kristoff","Madison Jeffries","Northstar","Pathway","Persuasion","Puck","Sasquatch","Shaman","Susan Dean","Talisman","Vindicator (Heather Hudson)","Windshear","Witchfire"],"name":"Alpha Flight #91","link":"alpha_flight_91","credits":["Mike Manley","Michael Bair","Fabian Nicieza","Danny Fingeroth"],"i":4354},{"year":1991,"characters":["Abomination","Achilles","Agamemnon","Ajax","Atalanta","Betty Ross","Delphi","Doc Samson","Hector","Hulk","Marlo Chandler","Nadia Dornova-Blonsky","Nick Fury","Paris","Prometheus (Pantheon)","Red Skull","Rick Jones","Ringmaster","Ulysses"],"name":"Hulk #377-382","link":"hulk_377-382","credits":["Jeffrey Albrecht","Peter David","Mark Farmer","Dale Keown","Bill Jaaska","Bob McLeod","Gary Barnum","Chris Cooper","Bobbie Chase"],"i":4355},{"year":1991,"characters":["Chen Hsu","Desmond Marrs","Felix Alvarez","Fin Fang Foom","Iron Man","Kearson DeWitt","Li Peng","Mandarin","Phoebe Marrs","War Machine"],"name":"Iron Man #264-266","link":"iron_man_264-266","credits":["John Byrne","Bob Wiacek","John Romita Jr.","Howard Mackie"],"i":4356},{"year":1991,"characters":["Dr. Strange","Wong"],"name":"Marvel Super Heroes #5 (Dr. Strange)","link":"marvel_super_heroes_5_dr_stran","credits":["Christopher Ivy","Dan Mishkin","Mike Rockwitz","Vince Mielcarek","Barry Dutter"],"i":4357},{"year":1991,"characters":["Lobo (Will Talltree's 2nd Wolf)","Red Wolf (Will Talltrees)"],"name":"Marvel Comics Presents #72 (Red Wolf)","link":"marvel_comics_presents_72_red_","credits":["Fabian Nicieza","Kelly Corvese","Javier Saltares","Mark McKenna","Terry Kavanagh"],"i":4358},{"year":1991,"characters":["Black Knight (Dane Whitman)","Dr. Strange"],"name":"Marvel Comics Presents #73 (Black Knight)","link":"marvel_comics_presents_73_blac","credits":["Russell Lyman","Dave Cockrum","Kelly Corvese","Jason Balgobis","Terry Kavanagh"],"i":4359},{"year":1991,"characters":["Franklin Richards","Invisible Woman"],"name":"Marvel Comics Presents #75 (Dr. Doom)","link":"marvel_comics_presents_75_dr_d","credits":["Dave Cockrum","Joseph Adiletta","Kelly Corvese","Terry Kavanagh"],"i":4360},{"year":1991,"characters":["Dr. Strange","Nightmare","Sara Wolfe","Wong"],"name":"Marvel Comics Presents #79 (Dr. Strange)","link":"marvel_comics_presents_79_dr_s","credits":["Kelly Corvese","Robert Campanella","Mark McKenna","Terry Kavanagh","Steve Geiger"],"i":4361},{"year":1991,"characters":["Ann Raymond","Captain America","Colleen Wing","Desmond Marrs","Freidrich Kraus","Henry Pym","Herr Nacht","Human Torch","Human Torch (Golden Age)","Jarvis","Master Man","Misty Knight","Namorita","Phoebe Marrs","Rafael Scarfe","Sersi","Spitfire","Sub-Mariner","Super-Skrull","Thor","Union Jack (Joey Chapman)","Vision","Warrior Woman"],"name":"Namor #10-12","link":"namor_10-12","credits":["John Byrne","Terry Kavanagh","Kelly Corvese"],"i":4362},{"year":1991,"characters":["Punisher"],"name":"Punisher #44","link":"punisher_44","credits":["Neil Hansen","Mike Baron","Don Daley"],"i":4363},{"year":1991,"characters":["General Jeremy Clarke","Guardian (James Mac Hudson)","Invisible Woman","Kerry Patrick","Mr. Fantastic","Northstar","Sasquatch","Shaman","Vindicator (Heather Hudson)"],"name":"Alpha Flight #92","link":"alpha_flight_92","credits":["Dan Reed","Fabian Nicieza","Danny Fingeroth","Richard Bennett","Michael Bair"],"i":4364},{"year":1991,"characters":["Gayle Vaughn","Kayla Ballantine","Lisa Vaughn","Oblivion","Origin","Quasar"],"name":"Quasar #18","link":"quasar_18","credits":["Keith Williams","Len Kaminski","Mark Gruenwald","Greg Capullo","Howard Mackie"],"i":4365},{"year":1990,"characters":["Captain America","Jarvis","Laura Lipton","Miles Lipton","Quasar","Sersi","Thor","Vision"],"name":"Avengers Spotlight #40","link":"avengers_spotlight_40","credits":["Dan Panosian","Carrie Barre","Len Kaminski","Mark Gruenwald","Gavin Curtis"],"i":4366},{"year":1991,"characters":["Demogoblin","Ghost Rider (Danny Ketch)","Jason Macendale","Mary Jane Watson","Noble Kale","Spider-Man"],"name":"Spider-Man #6-7","link":"spider-man_6-7","credits":["Todd McFarlane","Dan Cuddy","Jim Salicrup"],"i":4367},{"year":1991,"characters":["Black Crow","Dr. Strange","Hotamitanio","Lobo (Will Talltree's 2nd Wolf)","Owayodata","Red Wolf (Will Talltrees)"],"name":"Doctor Strange #25","link":"doctor_strange_25","credits":["Ron Lim","Ralph Macchio","Fabian Nicieza","Manuel Labor"],"i":4368},{"year":1991,"characters":["Chainsaw","Frenchie","Lynn Church","Marlene Alraune","Midnight (Jeffrey Wilde)","Moon Knight","Secret Empire Agent Number Seven"],"name":"Moon Knight #22-24","link":"moon_knight_22-24","credits":["Chuck Dixon","Christopher Ivy","Danny Fingeroth","Sal Velluto","Eric Fein"],"i":4369},{"year":1991,"characters":["Aireo","Andrew Chord","Arnold Astrovik","Beef","Bengal","Bevatron","Catseye","Father Michael Janes","Firestar","Jetstream","Justice","Justin Baldwin","Maddie Baldwin","Michael Shauneghann","Namorita","Night Thrasher","Nova (Rich Rider)","Omar Barrenos","Punisher","Robbie Rider","Roulette","Silhouette","Silk Fever","Speedball","Sphinx II","Tai (Dragon's Breadth)","Tarot","Terraformer","Water Wizard","White Queen (Emma Frost)"],"name":"New Warriors #7-9","link":"new_warriors_7-9","credits":["Fabian Nicieza","Danny Fingeroth","Larry Mahlstedt","Mark Bagley","Eric Fein"],"i":4370},{"year":1991,"characters":["Bonebreaker","Elsie Dee","Gateway","Lady Deathstrike","Murray Reese","Pretty Boy","Puck","Tyger Tiger","White Bishop (Donald Pierce)","Wolverine"],"name":"Wolverine #35-37","link":"wolverine_35-37","credits":["Marc Silvestri","Bob Harras","Suzanne Gaffney","Larry Hama","Dan Green"],"i":4371},{"year":1991,"characters":["Andrew Chord","Beef","Bevatron","Catseye","Firestar","Jetstream","Justice","Maddie Baldwin","Namorita","Night Thrasher","Nova (Rich Rider)","Roulette","Silhouette","Speedball","Sphinx II","Tai (Dragon's Breadth)","Tarot","White Queen (Emma Frost)"],"name":"New Warriors #10","link":"new_warriors_10","credits":["Fabian Nicieza","Danny Fingeroth","Sam DeLaRosa","Mark Bagley","Eric Fein"],"i":4372},{"year":1991,"characters":["Diablo","Red Raven II","Red Raven III","Sub-Mariner"],"name":"Marvel Super Heroes #8 (Sub-Mariner)","link":"marvel_super_heroes_8_sub-mari","credits":["Mike Rockwitz","Ken Lopez","Scott Lobdell","Jeffery Albrecht","Chris Wozniak"],"i":4373},{"year":1991,"characters":["Captain Britain","D'Spayre","Dai Thomas","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur #35","link":"excalibur_35","credits":["Al Milgrom","Terry Kavanagh","Scott Lobdell","David Ross"],"i":4374},{"year":1991,"characters":["Captain Britain","Meggan","Nightcrawler","Paladin","Prowler","Rachel Summers","Rocket Racer","Sandman","Shadowcat (Kitty Pryde)","Silver Sable"],"name":"Excalibur #36","link":"excalibur_36","credits":["Al Milgrom","David Ross","Scott Lobdell","Kelly Corvese","Terry Kavanagh"],"i":4375},{"year":1991,"characters":["Cardiac","Cletus Kasady (Carnage)","Eddie Brock (Venom)","Joy Mercado","Justin Hammer","Mary Jane Watson","Rhino","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #344","link":"amazing_spider-man_344","credits":["Erik Larsen","Dan Cuddy","Jim Salicrup","Randy Emberlin","David Michelinie"],"i":4376},{"year":1991,"characters":["Aurora","Diamond Lil","Guardian (James Mac Hudson)","Headlok","Human Torch","Invisible Woman","Madison Jeffries","Mr. Fantastic","Northstar","Puck","Sasquatch","Shaman","Thing","Vindicator (Heather Hudson)","Windshear","Witchfire"],"name":"Alpha Flight #93-94","link":"alpha_flight_93-94","credits":["Mike Mankey","Fabian Nicieza","Danny Fingeroth","Michael Bair","Eric Fein"],"i":4377},{"year":1991,"characters":["Black Jack Tarr","Clive Reston","Leiko Wu","Shang-Chi","Zaran II"],"name":"Master of Kung Fu: Bleeding Black #1","link":"master_of_kung_fu_bleeding_bla","credits":["David Day","Dan Day","Doug Moench","Kelly Corvese","Terry Kavanagh"],"i":4378},{"year":1991,"characters":["Aunt May","Boomerang","Cardiac","Carnage Symbiote","Cletus Kasady (Carnage)","Eddie Brock (Venom)","Justin Hammer","Mary Jane Watson","Silver Sable","Spider-Man","Venom Symbiote","Willie Lumpkin"],"name":"Amazing Spider-Man #345","link":"amazing_spider-man_345","credits":["Dan Cuddy","Jim Salicrup","Randy Emberlin","Mark Bagley","David Michelinie"],"i":4379},{"year":1991,"characters":["Aunt May","Black Cat","Eddie Brock (Venom)","Flash Thompson","Kevin Byrnes","Mary Jane Watson","Spider-Man","Tommy Byrnes","Venom Symbiote","Willie Lumpkin"],"name":"Amazing Spider-Man #346-347","link":"amazing_spider-man_346-347","credits":["Erik Larsen","Danny Fingeroth","Randy Emberlin","David Michelinie","Eric Fein"],"i":4380},{"year":1991,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Baron Von Strucker","Bruno Krea","Cassandra Romulus","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Gabriel Jones","Garotte (Hydra)","Kate Neville","Leviathan (Coven)","Network Nina","Nick Fury","Red Skull"],"name":"Nick Fury Agent of SHIELD #20-23","link":"nick_fury_agent_of_shield_20-2","credits":["Butch Guice","D.G. Chichester","Co.","Mike Rockwitz","Dan Panosian","Doug Hazlewood","Barry Dutter","John Beatty"],"i":4381},{"year":1991,"characters":["Black Knight (Dane Whitman)","Black Widow","Captain America","Captain Marvel (Monica Rambeau)","Dr. Doom","Dr. Strange","Edna Staples","Fabian Stankowicz","Falcon","Guardsman II (Michael O'Brien)","Hafga","Hawkeye","Heml","Henry Pym","Hercules","Iron Man","J. Jonah Jameson","Jarvis","Joe 'Robbie' Robertson","L.D.50","Man-Wolf (John Jameson)","Mockingbird","Ngh","Peggy Carter","Quasar","Quicksilver","Rage","Sandman","Scarlet Witch","Sersi","She-Hulk","Spider-Man","Sub-Mariner","Thor","Tigra","USAgent","Vision","Vug","Wasp","Wonder Man","Xa","Yod"],"name":"Avengers #329-331","link":"avengers_329-331","credits":["Paul Ryan","Tom Palmer","Len Kaminski","Larry Hama","Howard Mackie"],"i":4382},{"year":1991,"characters":["Arthur Nagan","Aunt May","Beast","Bora","Captain America","Carrie Alexander","Chondu","Colossus","Firestar","Hercules","Human Torch","Iceman","Jarvis","Jerry Morgan","Justice","Kevin Masterson","Kristy Watson","Lyja the Lazerfist","Marcy Masterson Steele","Mary Jane Watson","Mr. Fantastic","Namorita","Night Thrasher","Nova (Rich Rider)","Painter","Peggy Carter","Quasar","Ruby Thursday","She-Hulk","Ship (Prosh)","Speedball","Spider-Man","Sub-Mariner","Thing","Thor","Willie Lumpkin"],"name":"Web of Spider-Man #73-76","link":"web_of_spider-man_73-76","credits":["Dan Cuddy","Jim Salicrup","Keith Williams","Tony Isabella","John Byrne","Alex Saviuk","Eric Fein"],"i":4383},{"year":1991,"characters":["Amphibius (Savage Land Mutate)","Angel","Banshee","Barbarus","Beast","Boom Boom","Brainchild (Savage Land Mutate)","Cable (Adult)","Cannonball","Carol Danvers","Ch'od","Colossus","Corsair","Cr'reee","Cyclops","Deathbird","Earthquake","Forge","Gambit","Gaza","Gladiator (Shiar)","Hepzibah","Iceman","Jean Grey","Jubilee","Ka-Zar","Lila Cheney","Lilandra","Lupo","Magneto","Mentor (Shiar)","Moira MacTaggert","Nereel","Nick Fury","Oracle","Peter (Nereel's baby)","Piper (Savage Land Mutate)","Professor X","Psylocke","Raza Longknife","Rictor","Rogue","Shadow King","Shanna the She-Devil","Smasher (Shiar)","Starbolt","Stevie Hunter","Storm","Strong Guy","Tempest","Titan","Trish Tilby","Warstar","Whiteout","Wolverine","Worm","Zabu","Zaladane"],"name":"Uncanny X-Men #273-277","link":"uncanny_x-men_273-277","credits":["Karl Altstaetter","Whilce Portacio","Marc Silvestri","Larry Stroman","Scott Williams","Bob Harras","Chris Claremont","Rick Leonardi","Suzanne Gaffney","Klaus Janson","John Byrne","Jim Lee","Michael Golden"],"i":4384},{"year":1991,"characters":["Betty Brant","Doctor Octopus","Gauntlet (Alfredo Morelli)","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Kristy Watson","Lance Bannon","Mary Jane Watson","Nick Katzenberg","Rose (Sgt. Blume)","Spider-Man","Willie Lumpkin"],"name":"Spectacular Spider-Man #173","link":"spectacular_spider-man_173","credits":["Dan Cuddy","Jim Salicrup","Sal Buscema","David Michelinie","Gerry Conway"],"i":4385},{"year":1991,"characters":["Adam Warlock","Autolycus","Drax the Destroyer","Gamora","Kray-Tor","Mephisto","Pip the Troll","Silver Surfer","Soul Gem","Thanos"],"name":"Silver Surfer #46-47","link":"silver_surfer_46-47","credits":["Tom Christopher","Ron Lim","Craig Anderson","Renee Witterstaetter","Jim Starlin"],"i":4386},{"year":1991,"characters":["Ben Urich","Betty Brant","Doctor Octopus","Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Lance Bannon","Marla Madison Jameson","Mary Jane Watson","Nick Katzenberg","Spider-Man"],"name":"Spectacular Spider-Man #174-175","link":"spectacular_spider-man_174-175","credits":["Danny Fingeroth","Sal Buscema","David Michelinie","Terry Kavanagh","Eric Fein","Gerry Conway"],"i":4387},{"year":1991,"characters":["Boom Boom","Cable (Adult)","Cannonball","Copycat","Deadpool","Emmanuel Da Costa","Feral","Forearm","Gideon","Hump","Kamikaze","Masque","Reaper","Rictor","Rusty Collins","Shatterstar","Skids","Strobe","Stryfe","Sunspot","Tempo","Warpath","Wildside","Zero"],"name":"New Mutants #98-100","link":"new_mutants_98-100","credits":["Bob Harras","Rob Liefeld","Suzanne Gaffney","Fabian Nicieza"],"i":4388},{"year":1991,"characters":["Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Luz Delgado","Noble Kale","Shriker (Jack D'Auria)","Stacy Dolan","Thomas Dolan","Tyler Meagher","Zodiak"],"name":"Ghost Rider #10","link":"ghost_rider_10","credits":["Javier Saltares","Gary Barnum","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4389},{"year":1991,"characters":["Cheryl Colon","Darkhawk","Demogoblin","Grace Powell","Jason Macendale","Jason Powell","Jonathan Powell","Louie McPhee","Mike Powell","Phillippe Bazin","Savage Steel (Jimmy Zafar)","Spider-Man","St. Johnny","Steve 'Headset' Rubino"],"name":"Darkhawk #1-3","link":"darkhawk_1-3","credits":["Ricardo Villagran","Mike Manley","Howard Mackie","Danny Fingeroth"],"i":4390},{"year":1991,"characters":["Angel","Beast","Cyclops","Fu'se","Hiro","Iceman","Jean Grey","Mariko Yashida","Opal Tanaka","Ship (Prosh)","Tatsu'o"],"name":"X-Factor #63-64","link":"x-factor_63-64","credits":["Louise Simonson","Suzanne Gaffney","Bob Harras","Whilce Portacio","Art Thibert"],"i":4391},{"year":1991,"characters":["Blonde Phantom","Death's Head","Lightmaster","Plantman","Radioactive Man","She-Hulk","Whirlwind"],"name":"She-Hulk #24","link":"she-hulk_24","credits":["Simon Furman","Gary Barnum","Bryan Hitch","Bobbie Chase","John Beatty"],"i":4392},{"year":1991,"characters":["Microchip","Punisher"],"name":"Punisher #45","link":"punisher_45","credits":["Todd Smith","Chuck Dixon","Don Daley","Dan Bulanadi","Kevin Kobasic"],"i":4393},{"year":1991,"characters":["Shanna the She-Devil"],"name":"Marvel Comics Presents #68-77 (Shanna)","link":"marvel_comics_presents_68-77_s","credits":["Gary Martin","Kelly Corvese","Gerard Jones","Terry Kavanagh","Paul Gulacy"],"i":4394},{"year":1991,"characters":["Clea","Dr. Strange","Mephista","Rintrah","Satannish","Topaz","Werewolf By Night","Wong"],"name":"Doctor Strange #26-27","link":"doctor_strange_26-27","credits":["Dan Slott","Ralph Macchio","Roy Thomas","Mark McKenna","Chris Marrinan","Dann Thomas"],"i":4395},{"year":1991,"characters":["Aleta","Annie Arnold","Charlie-27","Gateway","Henry Pym","Human Torch","Invisible Woman","Klaw","Korvac","Major Victory","Martinex","Molecule Man","Mr. Fantastic","Nikki","Roberta","Starhawk","Thing","Volcana","Yondu"],"name":"Fantastic Four annual #24","link":"fantastic_four_annual_24","credits":["Ralph Macchio","Al Milgrom","Jeffrey Albrecht","James Brock","Tim Dzon"],"i":4396},{"year":1991,"characters":["Aleta","Beta Ray Bill","Charlie-27","Earth-Lord","Ego the Living Planet","Korvac","Major Victory","Martinex","Nikki","Silver Sable","Skuttlebutt","Skyhawk","Starhawk","Wind Warrior"],"name":"Thor annual #16","link":"thor_annual_16","credits":["Herb Trimpe","Alex Trimpe","Ralph Macchio","Bob Petrecca","Tom DeFalco","Michael Heisler","Len Kaminski","Kevin West"],"i":4397},{"year":1991,"characters":["Aleta","Charlie-27","Korvac","Major Victory","Martinex","Midnight (M'Nai)","Nikki","Starfox","Starhawk","Synthia Naip","Yondu"],"name":"Silver Surfer annual #4","link":"silver_surfer_annual_4","credits":["Dale Eaglesham","Ron Lim","Craig Anderson","Ron Marz","Steven Carr","Pat Redding","Ralph Cabrera","John Beatty"],"i":4398},{"year":1991,"characters":["Aleta","Charlie-27","Korvac","Major Victory","Martinex","Starhawk","Yondu"],"name":"Guardians of the Galaxy annual #1","link":"guardians_of_the_galaxy_annual","credits":["Jim Valentino","Craig Anderson","John Lewandowski","Steve Montano"],"i":4399},{"year":1991,"characters":["Arabian Knight","Avalanche","Black Raazer","Blob","Crimson Commando","Pyro","Super Sabre"],"name":"New Mutants annual #7, Uncanny X-Men annual #15, X-Factor annual #6 (Freedom Force)","link":"new_mutants_annual_7uncanny_x-","credits":["Steven Butler","Fabian Nicieza","Gerald DeCaire","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Kirk Jarvinen"],"i":4400},{"year":1991,"characters":["Artie Maddicks","Cyclops","Jean Grey","Leech","Wiz Kid"],"name":"New Mutants annual #7 (X-Terminators)","link":"new_mutants_annual_7_x-termina","credits":["Jon Bogdanove","Bob Harras","Judy Bogdanove","Suzanne Gaffney","Hilary Barta"],"i":4401},{"year":1991,"characters":["Andrew Chord","Beast","Energizer","Invisible Woman","Justice","Night Thrasher","She-Hulk","Speedball","Spider-Man"],"name":"New Warriors annual #1 (Speedball)","link":"new_warriors_annual_1_speedbal","credits":["Dan Slott","John Calimee","Don Hudson","Danny Fingeroth"],"i":4402},{"year":1991,"characters":["Andrew Chord","Artie Maddicks","Boom Boom","Cable (Adult)","Cannonball","Copycat","Feral","Firestar","Frenzy","Gideon","Harmon Furmintz","Harness","Justice","Leech","Namorita","Night Thrasher","Nova (Rich Rider)","Piecemeal (Gilbert Benson)","Shatterstar","Silhouette","Speedball","Stinger (X-Factor villain)","Toad","Tower","Walter Rosen","Warpath","Wiz Kid"],"name":"New Mutants annual #7","link":"new_mutants_annual_7","credits":["Fabian Nicieza","Bob Harras","Suzanne Gaffney","Dan Panosian","Guang Yap"],"i":4403},{"year":1991,"characters":["Andrew Chord","Boom Boom","Cable (Adult)","Cannonball","Copycat","Feral","Firestar","Frenzy","Gideon","Harmon Furmintz","Harness","Justice","Namorita","Night Thrasher","Nova (Rich Rider)","Piecemeal (Gilbert Benson)","Shatterstar","Silhouette","Speedball","Toad","Walter Rosen"],"name":"New Warriors annual #1","link":"new_warriors_annual_1","credits":["Mark Bagley","Danny Fingeroth","Fabian Nicieza","Jeffrey Albrecht"],"i":4404},{"year":1991,"characters":["Alysande Stuart","Andrew Chord","Boom Boom","Cable (Adult)","Cannonball","Copycat","Feral","Firestar","Gideon","Harness","Justice","Legion","Madrox the Multiple Man","Moira MacTaggert","Namorita","Night Thrasher","Nova (Rich Rider)","Piecemeal (Gilbert Benson)","Polaris","Proteus","Shadow King","Shatterstar","Silhouette","Siryn","Speedball","Toad","Warpath"],"name":"Uncanny X-Men annual #15","link":"uncanny_x-men_annual_15","credits":["Tom Raney","Fabian Nicieza","Josef Rubinstein and Co. (inc. Art Nichols)","Bob Harras","Suzanne Gaffney"],"i":4405},{"year":1991,"characters":["Andrew Chord","Angel","Beast","Boom Boom","Cable (Adult)","Cannonball","Captain America","Captain Britain","Copycat","Cyclops","Feral","Firestar","Gideon","Harness","Iceman","Jean Grey","Justice","Legion","Madrox the Multiple Man","Moira MacTaggert","Namorita","Night Thrasher","Nova (Rich Rider)","Piecemeal (Gilbert Benson)","Polaris","Proteus","Red Guardian (Steel Guardian)","Shadow King","Shatterstar","Silhouette","Siryn","Speedball","Toad","Warpath"],"name":"X-Factor annual #6","link":"x-factor_annual_6","credits":["Al Milgrom","Fabian Nicieza","Bob Harras","Suzanne Gaffney","Terry Shoemaker"],"i":4406},{"year":1991,"characters":["Black Widow","Captain America","Fabian Stankowicz","Falcon","Guardsman II (Michael O'Brien)","Hawkeye","Henry Pym","Iron Man","Jarvis","Left-Winger","Man-Wolf (John Jameson)","Peggy Carter","Quasar","Sersi","She-Hulk","Thor","USAgent","Vision","Wasp","Wonder Man"],"name":"Captain America #383","link":"captain_america_383","credits":["Dan Slott","Ron Lim","Ralph Macchio","Dan Bulanadi","Dan Panosian","Mark Bagley","Mark Gruenwald"],"i":4407},{"year":1991,"characters":["Doris Ketch","Dr. Strange","Dreamstalker","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Mephista","Nightmare","Noble Kale","Rintrah","Satannish","Stacy Dolan","Topaz","Zodiak"],"name":"Ghost Rider #11-12","link":"ghost_rider_11-12","credits":["Jimmy Palmiotti","Javier Saltares","Bobbie Chase","Chris Cooper","Mark Texeira","Larry Stroman","Howard Mackie"],"i":4408},{"year":1991,"characters":["Baron Blood (Victor Strange)","Clea","Dr. Strange","Ghost Rider (Danny Ketch)","Imei Chang","Mephista","Mephisto","Morgana Blessing","Noble Kale","Rintrah","Satannish","Topaz","Wong","Zodiak"],"name":"Doctor Strange #28-30","link":"doctor_strange_28-30","credits":["Ralph Macchio","Roy Thomas","Mark McKenna","Michael Heisler","Chris Marrinan","Dann Thomas"],"i":4409},{"year":1991,"characters":["Blonde Phantom","Brent Wilcox","Hercules","She-Hulk","Thor","Zeus"],"name":"She-Hulk #25","link":"she-hulk_25_1","credits":["Bobbie Chase","Simon Furman","Bryan Hitch","John Beatty"],"i":4410},{"year":1991,"characters":["Microchip","Punisher"],"name":"Punisher #46","link":"punisher_46","credits":["Santiago Oliveras","Jimmy Palmiotti","Vince Evans","Don Daley","Ed Lazellari","Ariane Lenshoek","Rodney Ramos","Hugh Haynes","Bud LaRosa","Mike Baron","Bob Wiacek","Kevin Kobasic"],"i":4411},{"year":1991,"characters":["Caleb Alexander","Captain America","Carrie Alexander","Colleen Wing","Griffin","Human Torch","Invisible Woman","Misty Knight","Mr. Fantastic","Namorita","Phoebe Marrs","Rafael Scarfe","Spitfire","Sub-Mariner","Thing","Thor"],"name":"Namor #13","link":"namor_13","credits":["John Byrne","Terry Kavanagh"],"i":4412},{"year":1991,"characters":["Alistaire Stuart","Captain Britain","Dai Thomas","Lockheed","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)","She-Hulk","Widget"],"name":"She-Hulk #26","link":"she-hulk_26","credits":["Simon Furman","Jim Sanders III","Bryan Hitch","Chris Cooper","Bobbie Chase"],"i":4413},{"year":1991,"characters":["Joy Adams","Punisher"],"name":"Punisher War Journal #28","link":"punisher_war_journal_28","credits":["Don Daley","Mike Baron","Mark Texeira","Kevin Kobasic"],"i":4414},{"year":1991,"characters":["Angel","Apocalypse","Barrage","Beast","Black Bolt","Black King (Sebastian Shaw)","Cable (Baby Nathan Christopher Summers)","Captain America","Charlotte Jones","Crystal","Cyclops","Foxbat","Gauntlet (Dark Rider)","Gorgon","Hardrive","Human Torch","Iceman","Jean Grey","Karnak","Lockjaw","Medusa","Opal Tanaka","Psynapse","Sersi","She-Hulk","Shinobi Shaw","Ship (Prosh)","Thing","Trish Tilby","Triton","Tusk","Uatu the Watcher"],"name":"X-Factor #65-68","link":"x-factor_65-68","credits":["Whilce Portacio","Bob Harras","Chris Claremont","Suzanne Gaffney","Jim Lee","Art Thibert"],"i":4415},{"year":1991,"characters":["Alysande Stuart","Amanda Sefton","Banshee","Colossus","Forge","Gambit","Healer","Jubilee","Legion","Lian Shen","Madrox the Multiple Man","Moira MacTaggert","Professor X","Psylocke","Rogue","Shadow King","Sharon Friedlander","Siryn","Stevie Hunter","Storm","Strong Guy","Tom Corsi","Wolverine"],"name":"Uncanny X-Men #278-279","link":"uncanny_x-men_278-279","credits":["Fabian Nicieza","Scott Williams","Bob Harras","Andy Kubert","Chris Claremont","Paul Smith","Suzanne Gaffney","Jim Lee","Hilary Barta"],"i":4416},{"year":1991,"characters":["Angel","Banshee","Beast","Colonel Alexei Vazhin","Colossus","Cyclops","Forge","Gambit","Iceman","Jean Grey","Jubilee","Legion","Madrox the Multiple Man","Moira MacTaggert","Mystique","Polaris","Professor X","Rogue","Shadow King","Siryn","Wolverine"],"name":"X-Factor #69","link":"x-factor_69","credits":["Whilce Portacio","Fabian Nicieza (","Bob Harras","lots of help)","Task Force X"],"i":4417},{"year":1991,"characters":["Angel","Banshee","Beast","Colonel Alexei Vazhin","Colossus","Cyclops","Forge","Gambit","Iceman","Jean Grey","Jubilee","Legion","Madrox the Multiple Man","Moira MacTaggert","Mystique","Polaris","Professor X","Psylocke","Rogue","Shadow King","Siryn","Storm","Strong Guy","Wolverine"],"name":"Uncanny X-Men #280","link":"uncanny_x-men_280","credits":["Steven Butler","Fabian Nicieza","Bob Harras","Andy Kubert","Inks-R-Us"],"i":4418},{"year":1991,"characters":["Angel","Beast","Colossus","Cyclops","Forge","Gambit","Iceman","Jean Grey","Jubilee","Legion","Madrox the Multiple Man","Moira MacTaggert","Mystique","Nick Fury","Polaris","Professor X","Rogue","Storm","Strong Guy","Valerie Cooper","Wolverine"],"name":"X-Factor #70","link":"x-factor_70","credits":["Peter David","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Kirk Jarvinen"],"i":4419},{"year":1991,"characters":["Chen Hsu","Fin Fang Foom","Iron Man","Mandarin","Vibro"],"name":"Iron Man #267-268","link":"iron_man_267-268","credits":["John Byrne","Bob Wiacek","Paul Ryan","Howard Mackie"],"i":4420},{"year":1991,"characters":["Black Knight (Dane Whitman)","Black Panther","Black Widow","Captain America","Captain Marvel (Monica Rambeau)","Daredevil","Dr. Doom","Dr. Strange","Edna Staples","Fabian Stankowicz","Falcon","Guardsman II (Michael O'Brien)","Hawkeye","Henry Pym","Hercules","Hulk","Human Torch","Invisible Woman","Jarvis","Man-Wolf (John Jameson)","Mockingbird","Mr. Fantastic","Namorita","Nick Fury","Nova (Rich Rider)","Peggy Carter","Quasar","Quicksilver","Rage","Raymond Sikorski","Sandman","Scarlet Witch","Sersi","She-Hulk","Speedball","Spider-Man","Sub-Mariner","Thing","Tigra","USAgent","Vision","Wasp","Wolverine","Wonder Man"],"name":"Avengers #332-333","link":"avengers_332-333","credits":["Herb Trimpe","Reggie Jones","Paul Ryan","Tom Palmer","Tom Morgan","Larry Hama","Howard Mackie"],"i":4421},{"year":1991,"characters":["Alistaire Stuart","Captain Britain","Darkoth","Dr. Doom","Iron Man","Lady of the Lake","Lockheed","Meggan","Nightcrawler","Quicksilver","Rachel Summers","S'ym","Scarlet Witch","Shadowcat (Kitty Pryde)","Tigra","Widget","Wonder Man"],"name":"Excalibur #37-39","link":"excalibur_37-39","credits":["Terry Kavanagh","Scott Lobdell","Mark Badger","Kelly Corvese"],"i":4422},{"year":1991,"characters":["Beyonder","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Justice Peace","Kristoff","Kubik","Lyja the Lazerfist","Mobius","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Thing"],"name":"Fantastic Four #350-354","link":"fantastic_four_350-354","credits":["Dan Slott","Al Milgrom","Ralph Macchio","Walt Simonson","Dan Panosian","Mark Bagley","Len Kaminski"],"i":4423},{"year":1991,"characters":["Alistaire Stuart","Cable (Adult)","Captain Britain","Dai Thomas","Lockheed","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur #40-41","link":"excalibur_40-41","credits":["Christopher Ivy","Harry Candelario","Dave Hoover","Scott Lobdell","Kelly Corvese","Dana Moreshead","Tim Dzon","Terry Kavanagh"],"i":4424},{"year":1991,"characters":["Jane Dixon","Ken Reid","NFL Superpro"],"name":"NFL Superpro Special Edition #1","link":"nfl_superpro_special_edition_1","credits":["Bob Hall","Mike DeCarlo","Fabian Nicieza","Bob Budiansky","Jose Delbo","Tom Morgan","Tom Brevoort","Kim DeMulder"],"i":4425},{"year":1991,"characters":["Aurora","Diamond Lil","Guardian (James Mac Hudson)","Madison Jeffries","Northstar","Persuasion","Puck","Sasquatch","Shaman","Talisman","Vindicator (Heather Hudson)","Windshear","Witchfire"],"name":"Alpha Flight #95","link":"alpha_flight_95","credits":["Fabian Nicieza","Danny Fingeroth","Mike Manley","Michael Bair","Eric Fein"],"i":4426},{"year":1991,"characters":["Absorbing Man","Jarvis","Odin","Thor","Vision"],"name":"Avengers annual #20 (Vision/Thor)","link":"avengers_annual_20_visionthor","credits":["Ralph Macchio","Michael Higgins","Ed Murr","Michael Bair","Eric Fein","Howard Mackie"],"i":4427},{"year":1991,"characters":["Captain America","D-Man","Jack Frost","Keith Kincaid","Man-Wolf (John Jameson)","Peggy Carter","Thor"],"name":"Captain America #384","link":"captain_america_384","credits":["Dan Slott","Ron Lim","Ralph Macchio","Dan Bulanadi","Mark Gruenwald"],"i":4428},{"year":1991,"characters":["Diamond Lil","Madison Jeffries","Master of the World","Puck","Vindicator (Heather Hudson)","Windshear"],"name":"Alpha Flight #96","link":"alpha_flight_96","credits":["Fabian Nicieza","Danny Fingeroth","Michael Adams","Mike Manley","Eric Fein"],"i":4429},{"year":1991,"characters":["Ben Urich","Bullet","Daredevil","Foggy Nelson","J. Jonah Jameson","Kingpin","Pembroke"],"name":"Daredevil #291","link":"daredevil_291","credits":["Ann Nocenti","Fred Fredericks","Lee Weeks","Ralph Macchio"],"i":4430},{"year":1991,"characters":["Aurora","Black Widow","Captain America","Darby Dean","Diamond Lil","Galactus","General Jeremy Clarke","Guardian (James Mac Hudson)","Hercules","Kerry Patrick","Kismet (Her)","Madison Jeffries","Manikin","Northstar","Nova (Frankie Raye)","Pathway","Persuasion","Puck","Quasar","Sasquatch","Sersi","Shaman","She-Hulk","Susan Dean","Vindicator (Heather Hudson)","Vision","Windshear","Witchfire"],"name":"Alpha Flight #97-100","link":"alpha_flight_97-100","credits":["John Calimee","Christopher Ivy","Fabian Nicieza","David Ross","Larry Mahlstedt","Dan Bulanadi","June Brigman","Tom Morgan","Chris Cooper","Bobbie Chase","Michael Bair"],"i":4431},{"year":1991,"characters":["Frenchie","Ghost Rider (Danny Ketch)","Marlene Alraune","Moon Knight","Noble Kale","Plasma"],"name":"Moon Knight #25","link":"moon_knight_25","credits":["Mark Bagley","Danny Fingeroth","Tom Palmer","Howard Mackie"],"i":4432},{"year":1991,"characters":["Diamond Lil","Dr. Strange","General Jeremy Clarke","Hercules","Kerry Patrick","Kismet (Her)","Madison Jeffries","Manikin","Northstar","Puck","Quasar","Sasquatch","Sersi","She-Hulk","Vindicator (Heather Hudson)","Vision","Windshear","Wong"],"name":"Alpha Flight #101","link":"alpha_flight_101","credits":["Christopher Ivy","Fabian Nicieza","Tom Morgan","Chris Cooper","Bobbie Chase"],"i":4433},{"year":1991,"characters":["Ben Urich","Black Fox","Black Widow","Captain America","Carlos Cassada","Evan Swann","J. Jonah Jameson","Mary Jane Watson","Michael Cassada","Quasar","Roberto Cassada","Rosa Cassada","Sandman","Sersi","She-Hulk","Spider-Man","Thor","Vision"],"name":"Amazing Spider-Man #348","link":"amazing_spider-man_348","credits":["Erik Larsen","Randy Emberlin","David Michelinie","Danny Fingeroth"],"i":4434},{"year":1991,"characters":["Microchip","Punisher","Saracen","Wild Rose Kugel"],"name":"Punisher #47-48","link":"punisher_47-48","credits":["Jose Marzan","Jimmy Palmiotti","Don Daley","Hugh Haynes","Mike Baron","Kevin Kobasic"],"i":4435},{"year":1991,"characters":["Adam Warlock","Autolycus","Drax the Destroyer","Galactus","Gamora","Kray-Tor","Mephisto","Nova (Frankie Raye)","Pip the Troll","Silver Surfer","Soul Gem","Thanos"],"name":"Silver Surfer #48","link":"silver_surfer_48","credits":["Tom Christopher","Ron Lim","Craig Anderson","John Kewandowski","Jim Starlin"],"i":4436},{"year":1991,"characters":["Ghost Rider (Danny Ketch)","Microchip","Noble Kale","Punisher"],"name":"Punisher War Journal #29-30","link":"punisher_war_journal_29-30","credits":["Don Daley","Mike Baron","Mark Texeira","Kevin Kobasic"],"i":4437},{"year":1991,"characters":["Albert Cleary","Andrew Chord","Andromeda","Anne (Damage Control secretary)","Bart Rozum","Beast","Black Panther","Captain America","Cyclops","Death","Deathlok (Michael Collins)","Edifice Rex","Eternity","Firestar","Galactus","Ghost Rider (Danny Ketch)","Hawkeye","Henry Ackerdson","Hulk","In-Betweener","Infinity","Invisible Woman","Iron Man","Jean Grey","John Porter","Jubilee","Justice","Kismet (Her)","Lenny Ballinger","Lord Chaos","Master Order","Mockingbird","Mr. Fantastic","Namorita","Night Thrasher","Noble Kale","Nova (Rich Rider)","Oblivion","Psylocke","Punisher","Quicksilver","Ray Lippert","Robin Chapel","Scarlet Witch","She-Hulk","Silver Surfer","Speedball","Spider-Man","Storm","Thing","Thor","Thunderball","Tigra","Uatu the Watcher","Vision","Wasp","Wolverine","Wonder Man"],"name":"Damage Control #1-4","link":"damage_control_1-4","credits":["Fabian Nicieza","Ernie Colon","Dwayne McDuffie","Kyle Baker","Evan Skolnick"],"i":4438},{"year":1991,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Baron Von Strucker","Bruno Krea","Captain America","Cassandra Romulus","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Gabriel Jones","Garotte (Hydra)","Human Torch","Kate Neville","Mr. Fantastic","Network Nina","Nick Fury","She-Hulk","Thor","Wolverine"],"name":"Nick Fury Agent of SHIELD #25-26","link":"nick_fury_agent_of_shield_25-2","credits":["Butch Guice","D.G. Chichester","Mike Rockwitz","Doug Hazlewood","Barry Dutter"],"i":4439},{"year":1991,"characters":["Alexander Goodwin Pierce","Baron Von Strucker","Ben Urich","Butch (Fatboys)","Cassandra Romulus","Crippler","Dakini","Daredevil","Darla (Fatboys)","David Hobbes","Doris Urich","Eightball (Fatboys)","Guillotine","Kingpin","Nick Fury","Ralf (Fatboys)","Ron Takimoto"],"name":"Daredevil annual #7","link":"daredevil_annual_7","credits":["Roy Richardson","Don Hudson","Ralph Macchio","Larry Alexander","Gregory Wright","Ron Garney","June Brigman","Fred Fredericks","Doug Hazlewood","Eric Fein"],"i":4440},{"year":1991,"characters":["Alexander Goodwin Pierce","Baron Von Strucker","Dakini","Guillotine","Jerry 'The Whale' Sabini","Microchip","Nick Fury","Punisher","Ron Takimoto"],"name":"Punisher annual #4","link":"punisher_annual_4","credits":["Don Hudson","Stan Drake","D.G. Chichester","Jimmy Palmiotti","Kevin Kobasic","Don Daley","Gregory Wright","Jim Reddington","John Herbert","Tom Morgan","George Caragonne","Mike Baron","Mike Harris"],"i":4441},{"year":1991,"characters":["Baron Von Strucker","Bucky (Julia Winter)","Bushmaster II","Captain America","Cassandra Romulus","Cobra","Dakini","Halflife (Avengers villain)","Nick Fury","Nomad","Sidewinder"],"name":"Captain America annual #10","link":"captain_america_annual_10","credits":["Ralph Macchio","Don Hudson","Don Heck","Fabian Nicieza","D.G. Chichester","Larry Alexander","James Brock","Mike Manley","Mark Gruenwald","Tim Dzon"],"i":4442},{"year":1992,"characters":["Captain America","Dum Dum Dugan LMD","Hawkeye","Iron Man","Jarvis","Nick Fury","Punisher","She-Hulk","Terror (Shreck)","Thor","Vision"],"name":"Punisher/Captain America: Blood & Glory #1-3","link":"punishercaptain_america_blood_","credits":["Ralph Macchio","D.G. Chichester","Klaus Janson","Pat Garrahy","Margaret Clark"],"i":4443},{"year":1991,"characters":["Anne-Marie Baker","Black Panther","Chance (Nicholas Powell)","Evan Swann","Ghost","Iron Man","Jonas Hale","Kingpin","Mary Jane Watson","Mindy McPherson","Prowler","Raymond Trask","Rocket Racer","Sandman","Silver Sable","Spider-Man","Sunturion","Ultron","Uncle Morty","Will O' The Wisp"],"name":"Amazing Spider-Man annual #25","link":"amazing_spider-man_annual_25","credits":["Jeffrey Albrecht","<b>Title:","David Micheline","Alan Kupperberg","Danny Fingeroth","<em>Outlaw Justice!<","<b>Credits:","<em>Chance<","em>","Steve Ditko","Guang Yap","\"Second Chance!\"","\"Outlaw Justice part one\""],"i":4444},{"year":1991,"characters":["Black Panther","Ghost","Iron Man","Jonas Hale","Kingpin","Pembroke","Prowler","Rocket Racer","Sandman","Silver Sable","Spider-Man","Sunturion","Ultron","Will O' The Wisp"],"name":"Spectacular Spider-Man annual #11","link":"spectacular_spider-man_annual_2","credits":["<b>Title:","David Micheline","\"Outlaw Justice part two\"","Alan Kupperberg","Danny Fingeroth","<em>Outlaw Justice!<","<b>Credits:","em>","Marie Severin"],"i":4445},{"year":1991,"characters":["Black Panther","Iron Man","Jonas Hale","Kingpin","Prowler","Rocket Racer","Sandman","Silver Sable","Spider-Man","Sunturion","Ultron","Will O' The Wisp"],"name":"Web of Spider-Man annual #7","link":"web_of_spider-man_annual_7","credits":["<b>Title:","\"Outlaw Justice part three\"","David Micheline","Alan Kupperberg","Danny Fingeroth","<em>Outlaw Justice!<","<b>Credits:","em>","Guang Yap","Bud LaRosa","Keith Aiken"],"i":4446},{"year":1991,"characters":["Andrew 'Jock' Jackson","Bloodaxe (Jackie Lukus)","Captain America","Ed Marrero","Enchantress","Fandral","Fireworks Fielstein","Heimdall","Hogun","Jerry Sapristi","Kevin Masterson","Loki","Mad Dog Rassitano","Marcus Stone","Marcy Masterson Steele","Mephisto","Mother Majowski","Odin","Peggy Carter","Rigger Ruiz","Shelly Conklin","Susan Austin","Thor","Thunderstrike","Ulik","Vizier","Volstagg","Wrecker"],"name":"Thor #431-433","link":"thor_431-435","credits":["Herb Trimpe","Al Milgrom","Ralph Macchio","Tom DeFalco","Michael Heisler","Ron Frenz"],"i":4447},{"year":1991,"characters":["Black Widow","Captain America","Chen Hsu","Fin Fang Foom","Iron Man","Li Peng","Man-Thing","Mandarin","Mary Jane Watson","Mr. Fantastic","Mrs. Arbogast","She-Hulk","Spider-Man","Su Yin","Thing","Thunderstrike","War Machine"],"name":"Iron Man #269-275","link":"iron_man_269-275","credits":["M.D. Bright","Paul Ryan","Nel Yomtov","John Byrne","Richard Ashford","Bob Wiacek","Tony DeZuniga","Howard Mackie"],"i":4448},{"year":1992,"characters":["Black Widow","Iron Man"],"name":"Iron Man #276-277","link":"iron_man_276-277","credits":["Paul Ryan","Nel Yomtov","John Byrne","Richard Ashford","Bob Wiacek"],"i":4449},{"year":1991,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Baron Von Strucker","Cassandra Romulus","Contessa Valentina Allegro De La Fontaine","Dum Dum Dugan LMD","Gabriel Jones","Garotte (Hydra)","Guillotine","Iron Man","Kate Neville","Network Nina","Nick Fury","Saltz","Wolverine"],"name":"Nick Fury Agent of SHIELD #27-29","link":"nick_fury_agent_of_shield_27-2","credits":["Don Hudson","D.G. Chichester","Mike Rockwitz","Ernie Stiner","Barry Dutter"],"i":4450},{"year":1990,"characters":["Hawkeye","Henry Pym","Human Torch (Golden Age)","Iron Man","Lady Lotus","Mockingbird","Scarlet Witch","Tigra","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers Spotlight #30-34,36","link":"avengers_spotlight_30-3436","credits":["\"Beliefs and callings\"","Al Milgrom","<b>Title:","Don Heck","The Xenophobic Man","\"The ends and the means\"","Fabian Nicieza","Dan Lawlis","\"Rocks and hard places\"","Mark Gruenwald","Keith Williams","<b>Credits:","Gregory Wright","em>","Hajek Satter Lee","Howard Mackie","\"Methods and standards\"","Len Kaminski","<em>USAgent<","Steve Gerber"],"i":4451},{"year":1991,"characters":["Firestar","Justice","Night Thrasher","Nova (Rich Rider)","Sayge","Sphinx II"],"name":"New Warriors #11-13","link":"new_warriors_11-13","credits":["Mark Bagley","Danny Fingeroth","Fabian Nicieza","Larry Mahlstedt"],"i":4452},{"year":1991,"characters":["Blackout (Demon)","Danika Trevani","Deathwatch","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Linda Wei","Luz Delgado","Noble Kale","Renee Funaro","Roxanne Simpson","Snowblind","Stacy Dolan","Tyler Meagher"],"name":"Ghost Rider #13-15","link":"ghost_rider_13-15","credits":["Jimmy Palmiotti","Chris Cooper","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4453},{"year":1991,"characters":["Hawkeye","Henry Pym","Iron Man","Jawbreaker","Kuroko","Mockingbird","Quicksilver","Scarlet Witch","Taifu","Tigra","USAgent","Wasp","Wonder Man"],"name":"Avengers West Coast #69","link":"avengers_west_coast_69","credits":["Roy Thomas","Paul Ryan","Dan Bulanadi","Len Kaminski","Dann Thomas","Howard Mackie"],"i":4454},{"year":1991,"characters":["Baron Von Strucker","Christine Harris","Daredevil","Foggy Nelson","Garotte (Hydra)","Larry 'Mad Dog' Cass","Punisher","Taskmaster","Tombstone","Typhoid Mary"],"name":"Daredevil #292-293","link":"daredevil_292-293","credits":["Ralph Macchio","D.G. Chichester","Lee Weeks","Fred Fredericks","Al Williamson","Michael Heisler"],"i":4455},{"year":1991,"characters":["Dragon Man","Grey Gargoyle","Killer Shrike","She-Hulk"],"name":"She-Hulk #27","link":"she-hulk_27","credits":["Mark Heike","Simon Furman","Renee Witterstaetter","Keith Williams","Rik Levins"],"i":4456},{"year":1991,"characters":["Demogoblin","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Jason Macendale","Noble Kale","Rev. Styge","Spider-Man","Stacy Dolan"],"name":"Ghost Rider #16-17","link":"ghost_rider_16-17","credits":["Bobbie Chase","Mark Texeira","Chris Cooper","Howard Mackie"],"i":4457},{"year":1991,"characters":["Ben Urich","Cedric Forrester","Corona","Harry Osborn","Human Torch","Joy Mercado","Liz Allan","Mary Jane Watson","Mr. Fantastic","Normie Osborn","Roger Hochberg","Spider-Man"],"name":"Spectacular Spider-Man #176-177","link":"spectacular_spider-man_176-177","credits":["Kurt Busiek","Eric Fein","Sal Buscema","Danny Fingeroth"],"i":4458},{"year":1991,"characters":["Griffin","Joy Meachum","Ka-Zar","Phoebe Marrs","Sub-Mariner","Super-Skrull","Vashti","Ward Meachum","Zabu"],"name":"Namor #14","link":"namor_14","credits":["John Byrne","Terry Kavanagh","Kelly Corvese"],"i":4459},{"year":1991,"characters":["Black Widow","Caleb Alexander","Captain America","Carrie Alexander","Dr. Strange","Henry Pym","Hulk","Human Torch","Human Torch (Golden Age)","Invisible Woman","Mr. Fantastic","Namorita","Phoebe Marrs","Quasar","Sersi","She-Hulk","Spitfire","Sub-Mariner","Thing"],"name":"Namor annual #1 (Birthday)","link":"namor_annual_1_birthday","credits":["Ian Akin","Brian Garvey","Dave Hoover","Chris Cooper","Sam Hawbaker"],"i":4460},{"year":1991,"characters":["Betrand Crawley","Chloe Tran","Demogoblin","Frenchie","Gena Landers","Jason Macendale","Marlene Alraune","Moon Knight","Stained Glass Scarlet"],"name":"Moon Knight #26-31","link":"moon_knight_26-31","credits":["Danny Fingeroth","Tom Palmer","Ron Garney","J.M. DeMatteis","Eric Fein"],"i":4461},{"year":1991,"characters":["Blonde Phantom","Human Torch","Mephisto","She-Hulk"],"name":"She-Hulk #28","link":"she-hulk_28","credits":["Stan Wilson","Dwight Jon Zimmerman","Renee Witterstaetter","Aaron Lopresti"],"i":4462},{"year":1991,"characters":["Drax the Destroyer","Mentor","Mephisto","Silver Surfer","Soul Gem","Starfox","Thanos"],"name":"Silver Surfer #49","link":"silver_surfer_49","credits":["Tom Christopher","Ron Lim","Craig Anderson","Ron Marz","John Kewandowski"],"i":4463},{"year":1991,"characters":["Alexander Goodwin Pierce","Contessa Valentina Allegro De La Fontaine","Kingpin","Microchip","Network Nina","Nick Fury","Punisher"],"name":"Punisher: POV #1-4","link":"punisher_pov_1-4","credits":["Berni Wrightson","Jim Starlin","Suzanne Dell'Orto","Carl Potts","Nel Yomtov"],"i":4464},{"year":1991,"characters":["8-Ball","Alyssa Conover","Ida Epstein","Morris Epstein","Rambo (dog)","Rick Sheridan","Sleepwalker"],"name":"Sleepwalker #1-3","link":"sleepwalker_1-3","credits":["Kevin Kobasic","Don Daley","Bob Budiansky","Bret Blevins"],"i":4465},{"year":1991,"characters":["Beast","Black Bolt","Black Widow","Captain America","Collector","Crystal","Gorgon","Henry Pym","Hercules","Jarvis","Karnak","Lockjaw","Medusa","Nick Fury","Peggy Carter","Quasar","Quicksilver","Rage","Sersi","Timberius","Triton","Uatu the Watcher","Vision"],"name":"Avengers #334-339","link":"avengers_334-339","credits":["Ralph Macchio","Bob Harras","Andy Kubert","Tom Palmer","Steve Epting","Len Kaminski","Tony DeZuniga"],"i":4466},{"year":1991,"characters":["Fandral","Frigga","Heimdall","Henry Pym","Hogun","Impossible Man","Impossible Woman","Ka-Zar","Psycho-Man","She-Hulk","Speedball","Thunderstrike","Uatu the Watcher","Volstagg","Wonder Man","Zabu"],"name":"Impossible Man Summer Vacation Spectacular #2","link":"impossible_man_summer_vacation_1","credits":["Kieron Dwyer","Marie Javins","Ian Akin","Harry Candelario","Renee Witterstaetter","Phil Winslade","Rick Leonardi","Michael Gallagher","Steven Carr","Barry Crain","Barry Dutter","Keith Wilson","John Beatty"],"i":4467},{"year":1991,"characters":["Daredevil","Impossible Man","Kingpin"],"name":"Marvel Comics Presents #91 (Impossible Man)","link":"marvel_comics_presents_91_impo","credits":["Don Hudson","Terry Kavanagh","Mark Powers","David Manak"],"i":4468},{"year":1991,"characters":["Baron Blood (Kenneth Falsworth)","Black Queen (Selene)","Spitfire"],"name":"Marvel Comics Presents #89 (Spitfire)","link":"marvel_comics_presents_89_spit","credits":["Dan Slott","Jim Starlin","Mark Powers","Rita Fagiani","Terry Kavanagh"],"i":4469},{"year":1991,"characters":["Alyssa Conover","Rambo (dog)","Rick Sheridan","Sleepwalker","Whitney Cooper"],"name":"Sleepwalker #4","link":"sleepwalker_4","credits":["Bob Budiansky","Don Daley","Rick Leonardi","Al Williamson","Kevin Kobasic"],"i":4470},{"year":1991,"characters":["Captain America","Hercules","Iron Man","Jarvis","Quasar","Sersi","She-Hulk","Wasp"],"name":"Avengers #340","link":"avengers_340","credits":["Ralph Macchio","Paul Abrams","Robert Jones","Scott Lobdell","Charles Barnett III","David Michelinie","Len Kaminski"],"i":4471},{"year":1991,"characters":["Anaconda","Asp","Bernie Rosenthal","Black Mamba","Captain America","Diamondback","Fabian Stankowicz","Jarvis","Man-Wolf (John Jameson)","Mike Farrel","MODAM","Peggy Carter","Rage","Rock Python","Sandman","USAgent"],"name":"Captain America #385-386","link":"captain_america_385-386","credits":["Ralph Macchio","Ron Lim","Dan Bulanadi","Dan Panosian","Mark Bagley","Michael Heisler","Mark Gruenwald"],"i":4472},{"year":1991,"characters":["Cybertooth","Doctor Demonicus","Hawkeye","Henry Pym","Irezumi","Iron Man","Jawbreaker","Kain","Kuroko","Living Lightning","Quicksilver","Scarlet Witch","Spider-Woman (Julia Carpenter)","Sub-Mariner","Sunfire","Taifu","Tigra","USAgent","Wasp","Wonder Man"],"name":"Avengers West Coast #70-74","link":"avengers_west_coast_70-74","credits":["Don Hudson","Steven Butler","David Ross","Christopher Ivy","Roy Thomas","Dan Bulanadi","Nel Yomtov","George Freeman","Tom Morgan","Dan Bulandi","Tim Dzon","Dann Thomas","Howard Mackie"],"i":4473},{"year":1991,"characters":["Caleb Alexander","Captain America","Carrie Alexander","Colleen Wing","Desmond Marrs","Griffin","Joy Meachum","Ka-Zar","Master Khan","Misty Knight","Namorita","Phoebe Marrs","Plantman","Punisher","Rafael Scarfe","Shanna the She-Devil","Spitfire","Sssesthugar","Sub-Mariner","Super-Skrull","Vashti","Vyrra","Ward Meachum","Zabu"],"name":"Namor #15-20","link":"namor_15-20","credits":["John Byrne","Terry Kavanagh","Kelly Corvese","Mark Powers"],"i":4474},{"year":1989,"characters":["Ant-Man (Scott Lang)","Dr. Doom","Iron Man","War Machine"],"name":"Marvel Fanfare #44","link":"marvel_fanfare_44","credits":["Ken Steacy","Al Milgrom"],"i":4475},{"year":1991,"characters":["Bart Jones","Darkhawk","Firestar","Justice","Michael Shauneghann","Namorita","Night Thrasher","Nova (Rich Rider)","Sea Urchin","Silhouette","Speedball","Sub-Mariner"],"name":"New Warriors #14","link":"new_warriors_14","credits":["Fabian Nicieza","Danny Fingeroth","Sam DeLaRosa","Mark Bagley","Eric Fein"],"i":4476},{"year":1991,"characters":["Andrew 'Jock' Jackson","Anna Johnson","Cloak","D'Spayre","Dagger","Fireworks Fielstein","Ghost Rider (Danny Ketch)","Mad Dog Rassitano","Marcus Stone","Mayhem","Mephisto","Noble Kale","Phillip Carlisle","Rebecca 'Rusty' Nales","Rigger Ruiz","Soul Gem","Spider-Man","Thanos"],"name":"Cloak and Dagger #14-19","link":"cloak_and_dagger_14-19","credits":["Don Hudson","Christopher Ivy","David Ross","Danny Fingeroth","Keith Williams","Sam DeLaRosa","Rick Leonardi","Joe Rosas","Al Williamson","Terry Kavanagh","Eric Fein","Steve Gerber"],"i":4477},{"year":1991,"characters":["Amanda Robertson","Anna Johnson","Aunt May","Ben Urich","Betty Brant","Black Cat","Cloak","Dagger","Firebrand II","Flash Thompson","Glory Grant","Harriet Rose Palermo","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Kate Cushing","Liz Allan","Marla Madison Jameson","Martha Robertson","Mary Jane Watson","Nick Katzenberg","Randy Robertson","Rebecca 'Rusty' Nales","Spider-Man","Victor Palermo","Willie Lumpkin"],"name":"Web of Spider-Man #77-78","link":"web_of_spider-man_77-78","credits":["Danny Fingeroth","Keith Williams","Kevin Tinsely","Bud LaRosa","Alex Saviuk","Terry Kavanagh","Eric Fein"],"i":4478},{"year":1991,"characters":["Ben Urich","Kingpin","Rambo (dog)","Rick Sheridan","Sleepwalker","Spider-Man"],"name":"Sleepwalker #5-6","link":"sleepwalker_5-6","credits":["Bob Budiansky","Don Daley","Michael Bair","Kevin Kobasic","Bret Blevins"],"i":4479},{"year":1991,"characters":["Arcanna","Arishem","Beauty","Black Crow","Charm","Death","Deathurge","Diamondhead","Doctor Spectrum","Dr. Druid","Dr. Strange","Dragonfly","Eon","Eternity","Fusion","Gaea","Galactus","Gammenon","Gargoyle (Defender)","Gayle Vaughn","Ghost Rider (Danny Ketch)","Gronk","Haywire","Helio","Human Torch","Hyperion","Infinity","Invisible Woman","Jack of Hearts","Kayla Ballantine","Kenjiro Tanaka","Kid Reaper","Kronos","Lady Lark","Lisa Vaughn","Lord Chaos","Maelstrom","Makkari","Mephisto","Moondragon","Mr. Fantastic","Noble Kale","Nova (Frankie Raye)","Oblivion","Origin","Peggy Carter","Phobius","Power Princess","Presence","Quasar","Rachel Summers","Recorder","Red Guardian (Tania Belinksy)","Roma","Sersi","Shaman","Shape","Soul Gem","Spider-Man","Talisman (Australian)","Thanos","Thermo","Thing","Truth","Uatu the Watcher","Whizzer (Squadron Supreme)","Woodgod","Wundarr (Aquarian)"],"name":"Quasar #19-25","link":"quasar_19-25","credits":["Ralph Macchio","Keith Williams","Len Kaminski","Mark Gruenwald","Greg Capullo","Howard Mackie"],"i":4480},{"year":1991,"characters":["Anaconda","Arclight","Arnim Zola","Asp","Baron Von Strucker","Battleaxe (Grappler)","Black Lotus","Black Mamba","Blitzkrieg","Bloodlust","Bombshell","Captain America","Chimera II","Crossbones","Dansen Macabre","Diamondback","Dragoness","Dragonfly","Every-Man","Fera","Fourth Sleeper","Frenzy","Gladiatrix","Golddigger","Gypsy Moth","Hauptmann Deutschland","Ice Princess","Impala","Ion","Iron Maiden","Jackdaw (Bird lady)","Jarvis","Karisma","Knockout","Machinesmith","Man-Wolf (John Jameson)","Mindblast","MODAM","Moonstone (Karla Sofen)","Mother Night","Nightshade","Paladin","Peggy Carter","Pink Pearl","Poundcakes","Princess Python","Puff Adder","Quasar","Quicksand","Red Skull","Rock Python","Snapdragon","Songbird (Screaming Mimi)","Steel Wind","Super-Adaptoid","Superia","Titania","Vapor","Vertigo (Savage Land Mutate)","Vision","Wasp","Water Witch (Outcasts)","Whiplash (Leeann Foreman)","Whiteout","Wrangler","Yellowjacket (Rita Demara)"],"name":"Captain America #387-392","link":"captain_america_387-392","credits":["Ralph Macchio","Michael Heisler","Larry Alexander","Dan Bulanadi","Len Kaminski","Dan Panosian","Bud LaRosa","Mark Gruenwald","Rik Levins"],"i":4481},{"year":1991,"characters":["Silver Surfer","Soul Gem","Thanos"],"name":"Silver Surfer #50","link":"silver_surfer_50","credits":["Tom Christopher","Ron Lim","Craig Anderson","Jim Starlin","John Lewandowski"],"i":4482},{"year":1991,"characters":["Adam Warlock","Captain America","Contessa Valentina Allegro De La Fontaine","Deader","Death","Dr. Strange","Drax the Destroyer","Firelord","Gamora","Hawkeye","Hulk","ISAAC","Mentor","Mephisto","Nebula","Nick Fury","Pip the Troll","S'Byll","Sersi","Silver Surfer","Soul Gem","Spider-Man","Starfox","Thanos","Wong"],"name":"Infinity Gauntlet #1","link":"infinity_gauntlet_1","credits":["Tom Christopher","George Perez","Craig Anderson","Josef Rubinstein","Jim Starlin"],"i":4483},{"year":1991,"characters":["Galactus","Nova (Frankie Raye)"],"name":"Silver Surfer #51","link":"silver_surfer_51","credits":["Tom Christopher","Ron Lim","Craig Anderson","Ron Marz","John Lewandowski"],"i":4484},{"year":1991,"characters":["D'Spayre","Dr. Strange","Dweller In Darkness","Fear Eater","Lurking Unknown","Nightmare","Nox","Rintrah","Silver Surfer","Straw Man"],"name":"Doctor Strange #31","link":"doctor_strange_31","credits":["- Writer","Roy Thomas","Michael Rockwitz","Larry Alexander","Jean-Marc Lofficier","Barry Dutter","Tony DeZuniga","Dann Thomas"],"i":4485},{"year":1991,"characters":["Abomination","Betty Ross","Dr. Strange","Hulk","Marlo Chandler","Nadia Dornova-Blonsky","Rick Jones","Silver Surfer","Spider-Man","Ulysses","Wong"],"name":"Hulk #383","link":"hulk_383","credits":["Peter David","Mark Farmer","Dale Keown","Bobbie Harras","Chris Cooper"],"i":4486},{"year":1991,"characters":["Adam Warlock","Ast (Time-Keeper)","Darkhawk","Deathlok (Michael Collins)","Doctor Spectrum","Eon","Epoch","Fath","Haywire","Hyperion","In-Betweener","Jack of Hearts","Kayla Ballantine","Kenjiro Tanaka","Kismet (Her)","Lady Lark","Lisa Vaughn","Living Tribunal","Lord Chaos","Makkari","Marvel Boy (Quantum Bander)","Master Order","Mephisto","Moon Knight","Moondragon","Power Princess","Quasar","Ree","Shape","Silver Surfer","Sleepwalker","Soul Gem","Thanos","Vort (Time-Keeper)","Wayopex","Whizzer (Squadron Supreme)","Zanth (Time-Keeper)"],"name":"Quasar #26-27","link":"quasar_26-27","credits":["Dave Hoover","Keith Williams","Kelly Corvese","Fred Fredericks","Mark Gruenwald","Greg Capullo"],"i":4487},{"year":1991,"characters":["Adam Warlock","Black Widow","Captain America","Cloak","Death","Drax the Destroyer","Epoch","Fandral","Firelord","Galactus","Henry Pym","Hogun","Human Torch (Golden Age)","ISAAC","Karnak","Loki","Manitou","Mephisto","Namorita","Nebula","Nick Fury","Osiris","Pip the Troll","Quasar","Rintrah","Scarlet Witch","She-Hulk","Sif","Silver Surfer","Soul Gem","Starfox","Sub-Mariner","Tezcatlipoca","Thanos","Thunderstrike","Triton","Vision","Volstagg","Wolverine","Wonder Man","Zeus"],"name":"Infinity Gauntlet #2","link":"infinity_gauntlet_2","credits":["George Perez","Josef Rubinstein","Jim Starlin","Craig Anderson"],"i":4488},{"year":1991,"characters":["Adam Warlock","Captain America","Cloak","Dr. Strange","Drax the Destroyer","Firelord","Iron Man","Nova (Rich Rider)","Pip the Troll","She-Hulk","Silver Surfer","Soul Gem","Spider-Man","Sub-Mariner","Thunderstrike","Wolverine"],"name":"Silver Surfer #52","link":"silver_surfer_52","credits":["Tom Christopher","Ron Lim","Craig Anderson","Ron Marz","John Lewandowski"],"i":4489},{"year":1991,"characters":["Adam Warlock","Agamotto","Clea","D'Spayre","Dr. Doom","Dr. Strange","Dweller In Darkness","Fear Eater","Lurking Unknown","Nightmare","Nox","Pip the Troll","Rintrah","Silver Dagger","Silver Surfer","Soul Gem"],"name":"Doctor Strange #32","link":"doctor_strange_32","credits":["Roy Thomas","Michael Rockwitz","Larry Alexander","Mark McKenna","Jean-Marc Lofficier","Chris Marrinan","Tim Dzon","Barry Dutter","Dann Thomas"],"i":4490},{"year":1991,"characters":["Ael-dan","Clumsy Foulup","Dar-benn"],"name":"Silver Surfer #53","link":"silver_surfer_53","credits":["Ron Lim","Craig Anderson","Ron Marz","Tom Christopher"],"i":4491},{"year":1991,"characters":["Adam Warlock","Alexander Goodwin Pierce","Black Widow","Captain America","Cloak","Contessa Valentina Allegro De La Fontaine","Cyclops","Death","Dr. Doom","Dr. Strange","Drax the Destroyer","Epoch","Eternity","Firelord","Galactus","Hulk","Iron Man","Kronos","Living Tribunal","Lord Chaos","Master Hate","Master Order","Mephisto","Mistress Love","Moon Knight","Nebula","Nick Fury","Nova (Rich Rider)","One Above All","Pip the Troll","Quasar","Rintrah","Scarlet Witch","She-Hulk","Silver Surfer","Soul Gem","Spider-Man","Starfox","Stranger","Sub-Mariner","Thanos","Thunderstrike","Uatu the Watcher","Vision","Wolverine","Ziran"],"name":"Infinity Gauntlet #3","link":"infinity_gauntlet_3","credits":["George Perez","Josef Rubinstein","Jim Starlin","Craig Anderson"],"i":4492},{"year":1991,"characters":["Adam Warlock","Captain America","Dr. Doom","Dr. Strange","Firelord","Hulk","Iron Man","Nova (Rich Rider)","Rhino","Scarlet Witch","She-Hulk","Soul Gem","Spider-Man","Thunderstrike","Vision","Wolverine"],"name":"Silver Surfer #54","link":"silver_surfer_54","credits":["Tom Christopher","Ron Lim","Craig Anderson","Ron Marz","John Lewandowski"],"i":4493},{"year":1991,"characters":["Captain America","Clea","Cyclops","D'Spayre","Dr. Doom","Dr. Druid","Dr. Strange","Drax the Destroyer","Dweller In Darkness","Fear Eater","Firelord","Hulk","Iron Man","Lurking Unknown","Nightmare","Nova (Rich Rider)","Nox","Pip the Troll","She-Hulk","Soul Gem","Spider-Man","Sub-Mariner","Thanos","Thunderstrike","Vision","Wolverine"],"name":"Doctor Strange #33","link":"doctor_strange_33","credits":["- Writer","Friends","Roy Thomas","Michael Rockwitz","Larry Alexander","Mark McKenna","Jean-Marc Lofficier","Chris Marrinan","Tim Dzon","Barry Dutter","Dann Thomas"],"i":4494},{"year":1991,"characters":["Adam Warlock","Silver Surfer","Soul Gem"],"name":"Silver Surfer #55-56","link":"silver_surfer_55-56","credits":["Tom Christopher","Ron Lim","Craig Anderson","Ron Marz","Gavin Curtis","John Lewandowski"],"i":4495},{"year":1991,"characters":["Adam Warlock","Captain America","Cloak","Cyclops","Death","Dr. Doom","Drax the Destroyer","Eternity","Firelord","Galactus","Hulk","Iron Man","Kronos","Lord Chaos","Master Hate","Master Order","Mephisto","Mistress Love","Nebula","Nova (Rich Rider)","One Above All","Quasar","Scarlet Witch","She-Hulk","Silver Surfer","Soul Gem","Spider-Man","Starfox","Stranger","Sub-Mariner","Thanos","Thunderstrike","Uatu the Watcher","Vision","Wolverine","Ziran"],"name":"Infinity Gauntlet #4","link":"infinity_gauntlet_4","credits":["Ron Lim","George Perez","Craig Anderson","Jim Starlin","Josef Rubinstein and Bruce N. Solotoff"],"i":4496},{"year":1991,"characters":["Abomination","Betty Ross","Hulk","Marlo Chandler","Nadia Dornova-Blonsky"],"name":"Hulk #384","link":"hulk_384","credits":["Peter David","Mark Farmer","Dale Keown","Chris Cooper","Bobbie Chase"],"i":4497},{"year":1991,"characters":["Adam Warlock","Captain America","Collector","Reptyl","Silver Surfer","Soul Gem","Thanos"],"name":"Silver Surfer #57-58","link":"silver_surfer_57-58","credits":["Tom Christopher","Ron Lim","Todd Smith","Craig Anderson","Ron Marz","James Brock"],"i":4498},{"year":1991,"characters":["Cerberus (Greek myth)","Clea","Dr. Doom","Dr. Strange","Drax the Destroyer","Firelord","Hela","Pip the Troll","Rintrah","Scarlet Witch","Thunderstrike"],"name":"Doctor Strange #34-35","link":"doctor_strange_34-35","credits":["Don Hudson","Christopher Ivy","Jim Sanders III","Dan Lawlis","Roy Thomas","Michael Rockwitz","Sam DeLaRosa","Barry Dutter","Dann Thomas"],"i":4499},{"year":1991,"characters":["Adam Warlock","Annihilus","Death","Dr. Doom","Dr. Strange","Drax the Destroyer","Epoch","Eternity","Firelord","Galactus","Hulk","Kronos","Lord Chaos","Master Hate","Master Order","Mephisto","Mistress Love","Nebula","One Above All","Silver Surfer","Soul Gem","Starfox","Stranger","Thanos","Thunderstrike","Uatu the Watcher","Ziran"],"name":"Infinity Gauntlet #5","link":"infinity_gauntlet_5","credits":["Ron Lim","Josef Rubinstein","Jim Starlin","Craig Anderson"],"i":4500},{"year":1991,"characters":["Adam Warlock","Collector","Dr. Doom","Dr. Strange","Drax the Destroyer","Firelord","Hulk","Rintrah","Silver Surfer","Soul Gem","Thanos","Thunderstrike"],"name":"Silver Surfer #59","link":"silver_surfer_59","credits":["Tom Raney","Tom Christopher","Craig Anderson","Ron Marz","John Lewandowski"],"i":4501},{"year":1991,"characters":["Adam Warlock","Captain America","Cloak","Dagger","Death","Dr. Doom","Dr. Strange","Drax the Destroyer","Epoch","Firelord","Galactus","Gamora","Hawkeye","Hulk","Iron Man","Kronos","Lord Chaos","Mary Jane Watson","Master Hate","Master Order","Mentor","Mistress Love","Nebula","One Above All","Pip the Troll","Quasar","Rintrah","Sersi","Silver Surfer","Soul Gem","Spider-Man","Starfox","Stranger","Sub-Mariner","Thanos","Thunderstrike","Vision","Ziran"],"name":"Infinity Gauntlet #6","link":"infinity_gauntlet_6","credits":["Ron Lim","Josef Rubinstein","Jim Starlin","Craig Anderson"],"i":4502},{"year":1991,"characters":["Ajax","Atalanta","Hulk","Marlo Chandler","Rick Jones"],"name":"Hulk #385","link":"hulk_385","credits":["Peter David","Mark Farmer","Dale Keown","Chris Cooper","Bobbie Chase"],"i":4503},{"year":1991,"characters":["Darkhawk","Deathlok (Michael Collins)","Doctor Spectrum","Dr. Strange","Eon","Flo Sheridan","Hyperion","Kismet (Her)","Master Link","Missing Link (Chain Gang)","Moon Knight","Rambo (dog)","Sleepwalker","Uplink","Weak Link","William Sheridan"],"name":"Sleepwalker #7","link":"sleepwalker_7","credits":["Bob Budiansky","Don Daley","Michael Bair","Kevin Kobasic","Bret Blevins"],"i":4504},{"year":1991,"characters":["Adam Warlock","Black Bolt","Collector","Dr. Strange","Gorgon","Karnak","Lockjaw","Midnight (M'Nai)","Silver Surfer","Soul Gem","Thunderstrike","Wong"],"name":"Silver Surfer #60","link":"silver_surfer_60","credits":["Ron Lim","Craig Anderson","Jim Sanders III","Ron Marz","John Lewandowski"],"i":4505},{"year":1991,"characters":["Adam Warlock","Baron Blood (Victor Strange)","Clea","Dr. Druid","Dr. Strange","Eternity","Gamora","Imei Chang","Morgana Blessing","Pip the Troll","Rintrah","Sara Wolfe","Scarlet Witch","Soul Gem","Topaz","Wong"],"name":"Doctor Strange #36","link":"doctor_strange_36","credits":["Dan Lawlis","Roy Thomas","Michael Rockwitz","Barry Dutter","Dann Thomas","Andrew Pepoy"],"i":4506},{"year":1991,"characters":["Annihilus","Balder","Bloodaxe (Jackie Lukus)","Bobby Steele","Captain America","Enchantress","Fandral","Gary Paretsky","Harley Kosinski","Heimdall","Hogun","Jerry Sapristi","Loki","Sif","Susan Austin","Thunderstrike","Vizier","Volstagg"],"name":"Thor #434-435","link":"thor_434-435","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Michael Heisler","Ron Frenz"],"i":4507},{"year":1991,"characters":["Arnim Zola","Asp","Baron Von Strucker","Bernie Rosenthal","Black Mamba","Blitzkrieg","Burner (Crucible)","Captain America","Crossbones","Curtiss Jackson (Power Broker)","Derek Freeman","Diamondback","Doughboy","Every-Man","Fabian Stankowicz","Fourth Sleeper","Hauptmann Deutschland","Jarvis","Machinesmith","Madame Hydra (Viper)","Mother Night","Paladin","Peggy Carter","Quasar","Red Skull","Scarbo","Scourge III","Secret Empire Agent Number Seven","Sersi","Sin","Taskmaster","Vision"],"name":"Captain America #393-394","link":"captain_america_393-394","credits":["Ralph Macchio","Larry Alexander","Dan Bulanadi","Bud LaRosa","Mark Gruenwald","Rik Levins"],"i":4508},{"year":1991,"characters":["Microchip","Punisher","Saracen"],"name":"Punisher War Journal #31-33","link":"punisher_war_journal_31-33","credits":["Ron Wagner","Don Daley","Andy Kubert","Joe Kubert","Mike Baron","Mark Pennington","Dan Green","Kevin Kobasic"],"i":4509},{"year":1991,"characters":["J. Jonah Jameson","Mary Jane Watson","Puck","Sasquatch","Spider-Man","Wendigo V","Wolverine"],"name":"Spider-Man #8-12","link":"spider-man_8-12","credits":["Rob Liefeld","Todd McFarlane","Dan Cuddy","Rick Magyar","Jim Salicrup","Scott Williams","Jim Lee"],"i":4510},{"year":1991,"characters":["Punisher"],"name":"Punisher War Journal #34","link":"punisher_war_journal_34","credits":["Don Hudson","and Bud LaRosa","Jimmy Palmiotti","Don Daley","Ed Lazellari","Rodeny Ramos","Ariane Lenshoek","Ron Wagner","Mike Baron","Michael Bair","Kevin Kobasic"],"i":4511},{"year":1991,"characters":["Microchip","Punisher"],"name":"Punisher: Blood on the Moors","link":"punisher_blood_on_the_moors","credits":["John Wagner","Cam Kennedy","Richard Ashford","Alan Grant","Nel Yomtov"],"i":4512},{"year":1991,"characters":["Black Widow","Brutus","Captain America","Grotesk","Hercules","Kala","Mole Man","Quasar","Rage","Sandman","Sersi","She-Hulk","Tyrannus","Vision"],"name":"Avengers annual #20","link":"avengers_annual_20","credits":["Ralph Macchio","Roy Thomas","Fred Fredericks","Kevin West","Dann Thomas"],"i":4513},{"year":1991,"characters":["Achilles","Agamemnon","Betty Ross","Brutus","Hulk","Justin Hammer","Marlo Chandler","Mole Man","Rick Jones","Ringer II","Tyrannus","Ulysses","Whiplash (Blacklash)"],"name":"Hulk annual #17","link":"hulk_annual_17","credits":["Al Milgrom","Peter David","Mike Witherby","Jeffery Albrecht","John Stanisci","Gary Barnum","Bobbie Chase","John Statema","Ron Wagner","Tim Dzon","Ralph Cabrera","Eric Fein"],"i":4514},{"year":1991,"characters":["Fabian Stankowicz","Jarvis","Peggy Carter","Stingray","Sub-Mariner","Vashti"],"name":"Namor annual #1","link":"namor_annual_1","credits":["James Fry","Scott Lobdell","Erik Larsen"],"i":4515},{"year":1991,"characters":["Ant-Man (Scott Lang)","Boulder (Outcasts)","Digger (Outcasts)","Dragonfly","Iron Man","Kala","Landslide","Quasimodo","War Machine","Water Witch (Outcasts)"],"name":"Iron Man annual #12","link":"iron_man_annual_12","credits":["Andrew Pepoy","Don Heck","Roy Thomas","Nel Yomtov","John Stanisci","John Tartaglione","Tom Morgan","Len Kaminski","Dwight Jon Zimmerman","Dann Thomas","Gavin Curtis","Barry Kitson"],"i":4516},{"year":1991,"characters":["Black Widow","Brutus","Captain America","Grotesk","Hawkeye","Hercules","Iron Man","Kala","Living Lightning","Mole Man","Quasar","Rage","Sandman","Scarlet Witch","Sersi","She-Hulk","Spider-Woman (Julia Carpenter)","Tyrannus","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast annual #6","link":"avengers_west_coast_annual_6","credits":["Roy Thomas","George Wildman","Dan Bulanadi","Nel Yomtov","Mark McKenna","George Freeman","Steven Carr","Jeffrey Moore","Bob Wiacek","Dann Thomas","Andrew Pepoy"],"i":4517},{"year":1995,"characters":["Max (Dog)","Microchip","Punisher"],"name":"Punisher War Zone #37","link":"punisher_war_zone_37","credits":["Don Daley","Mark Texeira","Chuck Dixon","Fred Mendez"],"i":4518},{"year":1991,"characters":["Ajak","Daniel Damian","Deborah Ritter","Donald Ritter","Ikaris","Karkas","Khoryphos","Kro","Makkari","Phastos","Ran-Sak the Reject","Sersi","Sprite","Thena","Yrdsis"],"name":"Eternals: The Herod Factor #1","link":"eternals_the_herod_factor_1","credits":["Christopher Ivy","Ian Akin","Roy Thomas","Bob McLeod","Sam DeLaRosa","Mark McKenna","Mark Texeira","Terry Kavanagh","Dann Thomas"],"i":4519},{"year":1991,"characters":["Arkon","Franklin Richards","Grand Vizier (Polemachus)","Hawkeye","Human Torch","Invisible Woman","Iron Man","Living Lightning","Mr. Fantastic","Rachel Carpenter","Scarlet Witch","Spider-Woman (Julia Carpenter)","Thing","Thundra","USAgent","Wonder Man"],"name":"Avengers West Coast #75","link":"avengers_west_coast_75","credits":["Herb Trimpe","Roy Thomas","Charles Barnett III","Nel Yomtov","Dann Thomas"],"i":4520},{"year":1991,"characters":["Blackheart","Ghost Rider (Danny Ketch)","Lucy Crumm","Mephisto","Noble Kale","Punisher","Wolverine"],"name":"Ghost Rider/Wolverine/Punisher: Hearts of Darkness","link":"ghost_riderwolverinepunisher_h","credits":["John Romita Jr.","Klaus Janson","Chris Cooper","Bobbie Chase","Howard Mackie"],"i":4521},{"year":1989,"characters":["Agamotto","Aged Genghis","Dr. Doom","Dr. Strange","Hoggoth","Jules St. Thomas","Khalid Inshallah","Mephisto","Oshtur","Zarrko the Tomorrow Man"],"name":"Doctor Strange & Doctor Doom: Triumph & Torment ","link":"doctor_strange_doctor_doom_tor","credits":["Ralph Macchio","Mark Badger","Roger Stern","Mike Mignola","Marc Siry"],"i":4522},{"year":1991,"characters":["Punisher"],"name":"Punisher #49","link":"punisher_49","credits":["Don Daley","Chuck Dixon","Kevin Kobasic","Ron Wagner"],"i":4523},{"year":1991,"characters":["Darkhawk","Grace Powell","Jason Powell","Jonathan Powell","Louie McPhee","Phillippe Bazin","Portal","Savage Steel (Harry Lennox)","Savage Steel (Jimmy Zafar)","St. Johnny"],"name":"Darkhawk #4-5","link":"darkhawk_4-5","credits":["Ricardo Villagran","Mike Manley","Howard Mackie","Danny Fingeroth"],"i":4524},{"year":1993,"characters":["Bonebreaker","Damage","Kingpin","Microchip","Murray Reese","Pretty Boy","Punisher","Sniper","White Bishop (Donald Pierce)","Wolverine"],"name":"Wolverine/Punisher: Damaging Evidence #1-3","link":"wolverinepunisher_damaging_evi","credits":["Rob Tokar","Carl Potts","Gary Erskine","Gregory Wright"],"i":4525},{"year":1991,"characters":["Anne-Marie Baker","Black Fox","Dr. Doom","Evan Swann","Mary Jane Watson","Raymond Trask","Spider-Man"],"name":"Amazing Spider-Man #349-350","link":"amazing_spider-man_349-350","credits":["Erik Larsen","Danny Fingeroth","Randy Emberlin","David Michelinie","Eric Fein"],"i":4526},{"year":1991,"characters":["Ben Urich","Christine Harris","Daredevil","Flame (Chaste)","Foggy Nelson","Ghost Rider (Danny Ketch)","Izanami","Jerry 'The Whale' Sabini","Jonin","Karen Page","Kingpin","Larry 'Mad Dog' Cass","Maltese","Noble Kale","Peter Scott","Star (Chaste)","Stone (Chaste)","Typhoid Mary","Wing (Chaste)"],"name":"Daredevil #294-296","link":"daredevil_294-296","credits":["Ralph Macchio","D.G. Chichester","Lee Weeks","Ron Garney","Al Williamson","Michael Heisler"],"i":4527},{"year":1991,"characters":["Blonde Phantom","ISBISA","Phantom Blonde","She-Hulk"],"name":"She-Hulk #29-30","link":"she-hulk_29-30","credits":["Jim Sanders III","Renee Witterstaetter","Keith Williams","Tom Morgan","Louise Simonson"],"i":4528},{"year":1991,"characters":["Microchip","Punisher"],"name":"Punisher #50","link":"punisher_50","credits":["Jimmy Palmiotti","Don Daley","Marc McLaurin","Pat Redding","Hugh Haynes","Mike Baron","Roderick Delgado"],"i":4529},{"year":1991,"characters":["Billy Hansen","Deathlok (Michael Collins)","Harlan Ryker","Jim Dworman","Nick Collins","Tracy Collins"],"name":"Deathlok #1","link":"deathlok_1","credits":["Bob Budiansky","Dwayne McDuffie","Gregory Wright","Tom Brevoort","Mike Manley","Denys Cowan"],"i":4530},{"year":1991,"characters":["Albert","Bonebreaker","Cable (Adult)","Elsie Dee","Forge","Jubilee","Lady Deathstrike","Linus Dorfman","Masque","Molokai","Murray Reese","Nick Fury","Reno","Sabretooth","Storm","White Bishop (Donald Pierce)","Wolverine"],"name":"Wolverine #38-44","link":"wolverine_38-44","credits":["Al Milgrom","Peter David","Marc Silvestri","Bob Harras","Suzanne Gaffney","Larry Hama","Larry Stroman","Dan Green"],"i":4531},{"year":1991,"characters":["Adam Crown","Albion","Alistaire Stuart","Alysande Stuart","Ben Gallagher","Black Panther","Cam McClellan","Captain Britain","Dai Thomas","Dolph","Francesca Grace Lexley","Green Knight","Hawkeye","Invisible Woman","Iron Man","Justin Meyer","Kate McClellan","Mr. Fantastic","Randolph Frewin","Red Lord","Union Jack (Joey Chapman)"],"name":"Knights of Pendragon #13-18","link":"knights_of_pendragon_13-18","credits":["Gary Erskine","Bambos Georgiou","Steve Pini","John Tomlinson","Steve White","Dan Abnett","Michael Collins"],"i":4532},{"year":1991,"characters":["Major Domo","Minor Domo","Mojo","Wolverine"],"name":"Uncanny X-Men annual #15 (Mojo/Wolverine)","link":"uncanny_x-men_annual_15_mojowo","credits":["Don Hudson","<b>Title:","Bob Harras","<b>Credits:","in\"","em>","Brad Vancata","Kirk Jarvinen","Suzanne Gaffney","Len Kaminski","Ernie Stiner","<em>Wolverine<","\"The enemy"],"i":4533},{"year":1991,"characters":["Cloak","Dagger"],"name":"Marvel Super Heroes #6 (Cloak & Dagger)","link":"marvel_super_heroes_6_cloak_da","credits":["Mike Rockwitz","Jim Reddington","Jack Herman","Tom Dzon","Barry Dutter"],"i":4534},{"year":1991,"characters":["Sabra"],"name":"Marvel Super Heroes #6 (Sabra)","link":"marvel_super_heroes_6_sabra","credits":["Paul Abrams","Scott Lobdell","Steve Buccellato","Mike Rockwitz"],"i":4535},{"year":1991,"characters":["Solo","Tarantula II"],"name":"Marvel Comics Presents #88 (Solo)","link":"marvel_comics_presents_88_solo","credits":["Don Hudson","Mark Powers","Mark Runyan","Terry Kavanagh","Eric Fein"],"i":4536},{"year":1991,"characters":["Allegra Bazin","Andrew Bazin","Broderick Bazin","Captain America","Daredevil","Darkhawk","Dr. Marin","Grace Powell","Ironclad","Jason Powell","Jonathan Powell","Phillippe Bazin","Portal","Savage Steel (Jimmy Zafar)","Vapor","Vector","X-Ray"],"name":"Darkhawk #6","link":"darkhawk_6","credits":["Danny Fingeroth","Nel Yomtov","Mike Manley","Bud LaRosa","Ricardo Villagran","Bob Wiacek"],"i":4537},{"year":1991,"characters":["Black Cat","Mary Jane Watson","Silvermane","Spider-Man"],"name":"Web of Spider-Man #79-80","link":"web_of_spider-man_79-80","credits":["Danny Fingeroth","Keith Williams","Alex Saviuk","Terry Kavanagh","Eric Fein"],"i":4538},{"year":1991,"characters":["Microchip","Punisher"],"name":"Punisher #51","link":"punisher_51","credits":["Don Daley","Mike Baron","Tom Morgan","Kevin Kobasic"],"i":4539},{"year":1992,"characters":["Aunt May","Baroness Zemo","Ben Urich","Harry Osborn","J. Jonah Jameson","Kate Cushing","Silver Sable","Spider-Man"],"name":"Spider-Man: Fear Itself","link":"spider-man_fear_itself","credits":["Danny Fingeroth","Gerry Conway","Stan Lee","Ross Andru","Eric Fein","Mike Esposito"],"i":4540},{"year":1992,"characters":["Armand Chauffard","Batroc","Coldstream","Kingpin","Microchip","Morgan Sinclair","Outlaw","Punisher","Rapido","Tarantula II"],"name":"Punisher #64-70","link":"punisher_64-70","credits":["Don Daley","Al Williamson","Andy Lanning","Dan Abnett","Doug Braithwaite"],"i":4541},{"year":1992,"characters":["Aunt May","Ben Urich","Betty Brant","Black Cat","Deathlok (Michael Collins)","Demogoblin","Diablo","Doctor Octopus","Dum Dum Dugan LMD","Electro","Flash Thompson","Ghost Rider (Danny Ketch)","Gog (Savage Land Alien)","Hulk","Human Torch","Invisible Woman","J. Jonah Jameson","Jason Macendale","Joe 'Robbie' Robertson","Kristy Watson","Marla Madison Jameson","Mary Jane Watson","Mr. Fantastic","Mysterio","Noble Kale","Nova (Rich Rider)","Rambo (dog)","Rick Sheridan","Rosa Cassada","Sandman","Sleepwalker","Solo","Spider-Man","Thing","Vulture","Willie Lumpkin"],"name":"Spider-Man #18-23","link":"spider-man_18-23","credits":["Erik Larsen","Danny Fingeroth","Keith Williams","Scott McDaniel","Terry Kavanagh","Eric Fein"],"i":4542},{"year":1991,"characters":["Black Tom","Boom Boom","Cable (Adult)","Cannonball","Copycat","Feral","Forearm","G.W. Bridge","Gideon","Kamikaze","Nick Fury","Reaper","Shatterstar","Stryfe","Sunspot","Thumbellina","Warpath","Wildside","Zero"],"name":"X-Force #1","link":"x-force_1","credits":["Bob Harras","Rob Liefeld","Suzanne Gaffney","Fabian Nicieza"],"i":4543},{"year":1991,"characters":["J. Jonah Jameson","Mary Jane Watson","Morbius","Spider-Man"],"name":"Spider-Man #13-14","link":"spider-man_13-14","credits":["Todd McFarlane","Dan Cuddy","Jim Salicrup"],"i":4544},{"year":1991,"characters":["Chloe Tran","Demogoblin","Frenchie","Jason Macendale","Marlene Alraune","Moon Knight","Shadowknight","Spider-Man"],"name":"Moon Knight #32-33","link":"moon_knight_32-33","credits":["Danny Fingeroth","Tom Palmer","Ron Garney","J.M. DeMatteis","Howard Mackie"],"i":4545},{"year":1991,"characters":["Bushwacker","Deathlok (Michael Collins)","Forge","Human Torch","Invisible Woman","Jesus Badalamente","Jocasta","Jubilee","Machine Man","Misty Knight","Mr. Fantastic","Roberta","Ruby Thursday","Storm","Thing","Ultron","Vision","Wolverine"],"name":"Deathlok #2-5","link":"deathlok_2-5","credits":["Dwayne McDuffie","Tom Brevoort","Mike Manley","Sarra Mossoff","Denys Cowan"],"i":4546},{"year":1991,"characters":["Nick Fury","Wolverine"],"name":"Wolverine: Bloody Choices","link":"wolverine_bloody_choices","credits":["Tom DeFalco","Ralph Macchio","John Buscema"],"i":4547},{"year":1991,"characters":["Absorbing Man","Bloodaxe (Jackie Lukus)","Bobby Steele","Captain America","Harley Kosinski","Hercules","Kevin Masterson","Thunderstrike","Titania"],"name":"Thor #436","link":"thor_436","credits":["Tom DeFalco","Ron Frenz","Al Milgrom","Ralph Macchio"],"i":4548},{"year":1992,"characters":["Alexander Goodwin Pierce","Algernon Crowe","Brendan Rathcoole","Bronwen Gryfnn","Dum Dum Dugan LMD","Eadmund Porlock","Gudrun Tyburn","Kate Neville","Killpower","Motormouth","Network Nina","Nick Fury","Oonagh Mullarkey","Ormond Wychwood","Ranulph Haldane"],"name":"Motormouth #1-2","link":"motormouth_1-2","credits":["Jacqui Papp","Graham Marks","Gary Frank","Cam Smith"],"i":4549},{"year":1991,"characters":["Air-Walker","Alysande Stuart","Captain Britain","Coldblood","Lockheed","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur: Air Apparent","link":"excalibur_air_apparent","credits":["Ron Lim","Brian Stelfreeze","Butch Guice","Erik Larsen","Karl Story","Don Hudson","James Fry","Josef Rubinstein","Scott Lobdell","Tom Palmer","Rick Leonardi","Klaus Janson","Mark Powers","Alan Gordon","Dwayne Turner","Terry Kavanagh"],"i":4550},{"year":1990,"characters":["Erik Josten","Glamour Girl (Gloria Angel)","Megan McCambridge","Neal Saroyan","Snap (Ginger Beach)","Wonder Man"],"name":"Wonder Man #1","link":"wonder_man_1_1","credits":["Gerard Jones","Terry Austin","Jeff Johnson","Fabian Nicieza"],"i":4551},{"year":1991,"characters":["Punisher"],"name":"Punisher #52","link":"punisher_52","credits":["Jimmy Palmiotti","Don Daley","Paul Guinan","Mike Baron","Kevin Kobasic"],"i":4552},{"year":1991,"characters":["Allegra Bazin","Cheryl Colon","Darkhawk","Dr. Marin","Grace Powell","Jason Powell","Jonathan Powell","Lodestone","Phillippe Bazin","Savage Steel (Harry Lennox)","Steve 'Headset' Rubino"],"name":"Darkhawk #7-8","link":"darkhawk_7-8","credits":["Ricardo Villagran","Mike Manley","Nel Yomtov","Danny Fingeroth"],"i":4553},{"year":1991,"characters":["Alistaire Stuart","Captain Britain","Meggan","Merlin","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)"],"name":"Excalibur: The Possession","link":"excalibur_the_possession","credits":["Michael Higgins","Terry Kavanagh","Tom Morgan","Kelly Corvese"],"i":4554},{"year":1991,"characters":["Hedy Wolfe","Hellcat","Hellstorm","Nan Hale","Tom 'Tubs' Hale"],"name":"Marvel Fanfare #59 (Hellcat)","link":"marvel_fanfare_59_hellcat","credits":["Richard Howell","Al Milgrom"],"i":4555},{"year":1991,"characters":["Black Panther","Daredevil"],"name":"Marvel Fanfare #60","link":"marvel_fanfare_60","credits":["Al Milgrom","<b>Title:","Walt Simonson","<em>Daredevil<","\"The monkey never dies\"","<b>Credits:","Paul Smith","em>","Denys Cowan"],"i":4556},{"year":1991,"characters":["Firestar","Human Torch","Invisible Woman","Justice","Lyja the Lazerfist","Mr. Fantastic","Namorita","Night Thrasher","Nova (Rich Rider)","Puppet Master","Speedball","Thing"],"name":"Fantastic Four #356","link":"fantastic_four_356","credits":["Tom DeFalco","Paul Ryan","Dan Bulanadi","Ralph Macchio"],"i":4557},{"year":1993,"characters":["Captain America","Daredevil","Dr. Strange","Firestar","Ghost Rider (Danny Ketch)","Howard The Duck","Human Torch","Invisible Woman","Iron Man","Justice","Mary Jane Watson","Mike Peterson","Mr. Fantastic","Namorita","Night Thrasher","Noble Kale","Nova (Rich Rider)","Peggy Carter","Quasar","Silver Surfer","Slapstick","Speedball","Spider-Man","Thing","Thunderstrike","Uatu the Watcher","Vision"],"name":"Slapstick #1-4","link":"slapstick_1-4","credits":["Bobbie Chase","James Fry","Terry Austin","Len Kaminski"],"i":4558},{"year":1991,"characters":["Andrew Chord","Asylum","Bloodstrike","Charles Rider","Coronary","Firestar","Gloria Rider","Harmon Furmintz","Human Torch","Impulse (Genetech)","Invisible Woman","Justice","Justin Baldwin","Left Hand","Maddie Baldwin","Mathemanic","Midnight's Fire","Mr. Fantastic","Namorita","Night Thrasher","Nova (Rich Rider)","Pretty Persuasions","Silhouette","Silver Surfer","Speedball","Tai (Dragon's Breadth)","Terrax","Thing","Walter Rosen"],"name":"New Warriors #15-17","link":"new_warriors_15-17","credits":["Fabian Nicieza","Danny Fingeroth","Larry Mahlstedt","Mark Bagley","Eric Fein"],"i":4559},{"year":1991,"characters":["Blake Tower","Blonde Phantom","Bob Robertson","Mole Man","She-Hulk","Spragg the Living Mountain"],"name":"She-Hulk #31-33","link":"she-hulk_31-33","credits":["Renee Witterstaetter","John Byrne","Keith Williams"],"i":4560},{"year":1991,"characters":["Albert","Elsie Dee","Emily Doolin","Hunter In Darkness","Jubilee","Lady Deathstrike","Masque","Ronald Parvenue","Sabretooth","Wolverine"],"name":"Wolverine #45-46","link":"wolverine_45-46","credits":["Marc Silvestri","Bob Harras","Suzanne Gaffney","Larry Hama","Dan Green"],"i":4561},{"year":1999,"characters":["Alysande Stuart","Rachel Summers","Shadowcat (Kitty Pryde)","Wolverine"],"name":"X-Men: True Friends #1-3","link":"x-men_true_friends_1-3","credits":["Jimmy Palmiotti","Co.","Chris Claremont","Rick Leonardi","Al Williamson","Ruben Diaz"],"i":4562},{"year":1991,"characters":["Aunt May","Carlton Drake","Mary Jane Watson","Nova (Rich Rider)","Spider-Man","Tri-Sentinel"],"name":"Amazing Spider-Man #351-352","link":"amazing_spider-man_351-352","credits":["Danny Fingeroth","Sam DeLaRosa","Randy Emberlin","Mark Bagley","David Michelinie"],"i":4563},{"year":1991,"characters":["Auteur (Alex Flores)","Enchantress","Hawkeye","Iron Man","Scarlet Witch","Spider-Woman (Julia Carpenter)","USAgent","Wonder Man"],"name":"Wonder Man #2","link":"wonder_man_2","credits":["Gerard Jones","Terry Austin","Jeff Johnson","Fabian Nicieza"],"i":4564},{"year":1991,"characters":["Wolverine"],"name":"Wolverine #47","link":"wolverine_47","credits":["Don Hudson","Gerald DeCaire","Bob Harras","Suzanne Gaffney","Larry Hama"],"i":4565},{"year":1991,"characters":["Centurious the Soulless Man","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Noble Kale","Rev. Styge"],"name":"Ghost Rider #18","link":"ghost_rider_18","credits":["Bobbie Chase","Mark Texeira","Chris Cooper","Howard Mackie"],"i":4566},{"year":1991,"characters":["Bodybag","Captain Britain","China Doll","Ferro^2","Gatecrasher","Hard Boiled Henwy","Joyboy","Kylun","Lockheed","Meggan","Nightcrawler","Numbers","Rachel Summers","Ringtoss","Sa'tneen","Scatterbrain","Shadowcat (Kitty Pryde)","Thug","Train Dragon","Waxworks","Widget","Yap"],"name":"Excalibur #42-43","link":"excalibur_42-43","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":4567},{"year":1991,"characters":["Jane Dixon","Joy Mercado","Ken Reid","NFL Superpro","Sanction","Spider-Man","Tim Pressman"],"name":"NFL Superpro #1","link":"nfl_superpro_1","credits":["Bob Budiansky","Jose Delbo","Mike DeCarlo","Fabian Nicieza"],"i":4568},{"year":1992,"characters":["Cannonball","Rogue","Shatterstar","Wolverine"],"name":"Wolverine #54","link":"wolverine_54","credits":["Don Hudson","Fabian Nicieza","Bob Harras","Suzanne Gaffney","Darick Robertson"],"i":4569},{"year":1991,"characters":["Black Panther","Jessica Lynne","Kantu","Kazibe","Lloyd Lynne","Monica Lynne","Ramonda","Taku","Tanzika","Tayete","Venomm","W'Kabi"],"name":"Black Panther: Panther's Prey #1-4","link":"black_panther_panthers_prey_1-","credits":["Don McGregor","Kelly Corvese","Mark Powers","Terry Kavanagh","Dwayne Turner"],"i":4570},{"year":1991,"characters":["Blade","Dracula","Frank Drake","Marlene McKenna-Drake"],"name":"Tomb of Dracula #1-4","link":"tomb_of_dracula_1-4","credits":["Marv Wolfman","Gene Colan","Mark Powers","Al Williamson","Terry Kavanagh"],"i":4571},{"year":1991,"characters":["Ariel O'Hare","Cyclops","Havok","Lockjaw","Madrox the Multiple Man","Polaris","Professor X","Quicksilver","Ricochet","Strong Guy","Valerie Cooper","Vic Chalker","Wolfsbane"],"name":"X-Factor #71-73","link":"x-factor_71-73","credits":["Al Milgrom","Peter David","Bob Harras","Suzanne Gaffney","Larry Stroman"],"i":4572},{"year":1991,"characters":["Andrea Strucker","Andreas Strucker","Angel","Anne-Marie Cortez","Banshee","Beast","Chief Magistrate Anderson","Chrome","Colossus","Cyclops","Fabian Cortez","Forge","Gambit","Iceman","Jean Grey","Magneto","Marco Delgado","Matsuo Tsurayaba","Moira MacTaggert","Nick Fury","Omega Red","Professor X","Psylocke","Rogue","Storm","Valerie Cooper","Wolverine"],"name":"X-Men #1-3","link":"x-men_1-3","credits":["Scott Williams","Bob Harras","Chris Claremont","Suzanne Gaffney","Jim Lee"],"i":4573},{"year":1991,"characters":["Punisher"],"name":"Punisher War Journal #35","link":"punisher_war_journal_35","credits":["Jimmy Palmiotti","Don Daley","Mike Witherby","Ron Wagner","Mike Baron","Kevin Kobasic"],"i":4574},{"year":1991,"characters":["Beast","Masterblaster","Powerhouse II","Spider-Man"],"name":"Spider-Man #15","link":"spider-man_15","credits":["Erik Larsen","Danny Fingeroth"],"i":4575},{"year":1991,"characters":["Black Tom","Boom Boom","Cable (Adult)","Cannonball","Copycat","Deadpool","Feral","G.W. Bridge","Juggernaut","Kane","Shatterstar","Warpath"],"name":"X-Force #2","link":"x-force_2","credits":["Rob Liefeld","Bob Harras","Fabian Nicieza"],"i":4576},{"year":1990,"characters":["Achilles","Agamemnon","Betty Ross","Delphi","Hulk","Marlo Chandler","Rick Jones","Sabra","Ulysses"],"name":"Hulk #386-387","link":"hulk_386-387","credits":["Peter David","Mark Farmer","Dale Keown","Josef Rubinstein","Chris Cooper","Bobbie Chase"],"i":4577},{"year":1992,"characters":["Havok","Madrox the Multiple Man","Mr. Sinister","Polaris","Quicksilver","Ricochet","Slab","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor #74","link":"x-factor_74","credits":["Al Milgrom","Peter David","Suzanne Gaffney","Bob Harris","Larry Stroman"],"i":4578},{"year":1991,"characters":["Black Tom","Boom Boom","Cable (Adult)","Cannonball","Copycat","Feral","Gideon","Juggernaut","Shatterstar","Siryn","Spider-Man","Sunspot","Warpath"],"name":"X-Force #3","link":"x-force_3","credits":["Bob Harras","Rob Liefeld","Suzanne Gaffney","Fabian Nicieza"],"i":4579},{"year":1991,"characters":["Black Tom","Boom Boom","Cable (Adult)","Cannonball","Copycat","Feral","Gideon","Juggernaut","Shatterstar","Siryn","Spider-Man","Sunspot","Warpath"],"name":"Spider-Man #16","link":"spider-man_16","credits":["Rob Liefeld","Todd McFarlane","Eric Fein","Danny Fingeroth"],"i":4580},{"year":1991,"characters":["Black Tom","Boom Boom","Cable (Adult)","Cannonball","Copycat","Deadpool","Feral","G.W. Bridge","Juggernaut","Shatterstar","Siryn","Spider-Man","Warpath"],"name":"X-Force #4","link":"x-force_4","credits":["Bob Harras","Rob Liefeld","Suzanne Gaffney","Fabian Nicieza"],"i":4581},{"year":1991,"characters":["Cyber","General Nguyen Coy","Tyger Tiger","Wolverine"],"name":"Marvel Comics Presents #85-92 (Wolverine)","link":"marvel_comics_presents_85-92_w","credits":["Peter David","Terry Kavanagh","Mark Powers","Sam Kieth"],"i":4582},{"year":1991,"characters":["Silver Surfer"],"name":"Marvel Comics Presents #69 (Silver Surfer)","link":"marvel_comics_presents_69_silv","credits":["Christopher Ivy","Kelly Corvese","Hugh Haynes","Len Wein","Terry Kavanagh"],"i":4583},{"year":1991,"characters":["Leoninus","Minotaurus","Woodgod"],"name":"Marvel Comics Presents #76 (Woodgod)","link":"marvel_comics_presents_76_wood","credits":["Dave Cockrum","Terry Kavanagh","Robert Campanella","Kelly Corvese"],"i":4584},{"year":1991,"characters":["Captain America"],"name":"Marvel Comics Presents #80-81 (Captain America)","link":"marvel_comics_presents_80-81_c","credits":["Steve Ditko","Terry Kavanagh","Terry Austin","Kelly Corvese"],"i":4585},{"year":1991,"characters":["Mr. Fantastic"],"name":"Marvel Comics Presents #80 (Mr. Fantastic)","link":"marvel_comics_presents_80_mr_f","credits":["Terry Kavanagh","Kelly Corvese","Dennis Jensen","Danny Fingeroth"],"i":4586},{"year":1991,"characters":["Ant-Man (Scott Lang)","Stature"],"name":"Marvel Comics Presents #81 (Ant-Man)","link":"marvel_comics_presents_81_ant-","credits":["James Fry","Kelly Corvese","Hilary Barta","Dana Moreshead","Terry Kavanagh"],"i":4587},{"year":1991,"characters":["Iron Man"],"name":"Marvel Comics Presents #82 (Iron Man)","link":"marvel_comics_presents_82_iron","credits":["Stephen Leialoha","Mark Powers","Bill Mumy","Terry Kavanagh"],"i":4588},{"year":1991,"characters":["Luke Cage"],"name":"Marvel Comics Presents #82 (Luke Cage)","link":"marvel_comics_presents_82_luke","credits":["Marc McLaurin","Brad Vancata","Sal Velluto","Mark Powers","Terry Kavanagh"],"i":4589},{"year":1991,"characters":["Hawkeye"],"name":"Marvel Comics Presents #83 (Hawkeye)","link":"marvel_comics_presents_83_hawk","credits":["Don Hudson","Fabian Nicieza","John Stanisci","Mark Powers","Terry Kavanagh"],"i":4590},{"year":1991,"characters":["Human Torch"],"name":"Marvel Comics Presents #83 (Human Torch)","link":"marvel_comics_presents_83_huma","credits":["Steve Ditko","Erik Larsen","Terry Kavanagh","Mark Powers"],"i":4591},{"year":1991,"characters":["Doc Benson","Speedball"],"name":"Marvel Comics Presents #85 (Speedball)","link":"marvel_comics_presents_85_spee","credits":["Christopher Ivy","Scott Lobdell","Ron Wilson","Mark Powers","Terry Kavanagh"],"i":4592},{"year":1991,"characters":["Paladin"],"name":"Marvel Comics Presents #86 (Paladin)","link":"marvel_comics_presents_86_pala","credits":["J. Adam Walters","Sam DeLaRosa","Mark Powers","Terry Kavanagh","Eric Fein"],"i":4593},{"year":1991,"characters":["Angel","Beast","Colossus","Cyclops","Gambit","Iceman","Jean Grey","Jubilee","Major Domo","Minor Domo","Mojo","Professor X","Psylocke","Rogue","Spiral","Storm","Wolverine"],"name":"Marvel Comics Presents #89 (Mojo)","link":"marvel_comics_presents_89_mojo","credits":["Dan Slott","Christopher Ivy","Joe Madureira","Mark Powers","Terry Kavanagh"],"i":4594},{"year":1992,"characters":["Cable (Adult)","Ghost Rider (Danny Ketch)","Noble Kale"],"name":"Marvel Comics Presents #90-97 (Ghost Rider/Cable)","link":"marvel_comics_presents_90-97_g","credits":["Mark Powers","Guang Yap","Bud LaRosa","Terry Kavanagh","Howard Mackie"],"i":4595},{"year":1991,"characters":["Fangu","Nightmare"],"name":"Marvel Comics Presents #90 (Nightmare)","link":"marvel_comics_presents_90_nigh","credits":["Mark Powers","Terry Kavanagh","Ian Akin","Steve Buccellato"],"i":4596},{"year":1991,"characters":["Northstar"],"name":"Marvel Comics Presents #92 (Northstar)","link":"marvel_comics_presents_92_nort","credits":["Antonio Matias","Dan Bulanadi","Joe Madureira","Mark Powers","Karl Bollers","Terry Kavanagh"],"i":4597},{"year":1992,"characters":["Wolverine"],"name":"Marvel Comics Presents #93-98 (Wolverine)","link":"marvel_comics_presents_93-98_w","credits":["Gary Kwapisz","Todd Fox","Timothy Truman","Mark Powers","Terry Kavanagh"],"i":4598},{"year":1991,"characters":["Galactus","Nova (Frankie Raye)"],"name":"Marvel Comics Presents #93-96 (Nova)","link":"marvel_comics_presents_93-96_n","credits":["Susan Kennedy","Ian Akin","Tim Tuohy","Mark Powers","Terry Kavanagh","Gavin Curtis"],"i":4599},{"year":1991,"characters":["Black Widow","Daredevil","Dum Dum Dugan LMD"],"name":"Marvel Comics Presents #93 (DD/BW)","link":"marvel_comics_presents_93_ddbw","credits":["Dan Slott","Mark Powers","Dwayne Turner","Terry Kavanagh"],"i":4600},{"year":1991,"characters":["Human Torch","Mr. Fantastic","Thing"],"name":"Marvel Comics Presents #94 (Thing)","link":"marvel_comics_presents_94_thin","credits":["Don Hudson","John Figueroa","Ron Wilson","Mark Powers","Terry Kavanagh"],"i":4601},{"year":1991,"characters":["Speedball"],"name":"Marvel Comics Presents #96 (Speedball)","link":"marvel_comics_presents_96_spee","credits":["Don Hudson","Dennis Jensen","Scott Lobdell","Mark Powers","Terry Kavanagh"],"i":4602},{"year":1992,"characters":["Mr. Fantastic","Silver Surfer"],"name":"Marvel Comics Presents #97 (Silver Surfer)","link":"marvel_comics_presents_97_silv","credits":["John Figueroa","Ron Wilson","Mark Powers","Bud LaRosa","Terry Kavanagh"],"i":4603},{"year":1993,"characters":["Ghost Rider (Danny Ketch)","Noble Kale"],"name":"Spirits of Vengeance #7-8 (back-up)","link":"spirits_of_vengeance_7-8_back-","credits":["Bobbie Chase","Matthew Morra","Joe Kubert","Howard Mackie"],"i":4604},{"year":1991,"characters":["Black Tom","Blob","Boom Boom","Cable (Adult)","Cannonball","Copycat","Deadpool","Feral","G.W. Bridge","Genesis","Henry Peter Gyrich","Juggernaut","Nick Fury","Sauron","Shatterstar","Siryn","Tanya Anderssen","Toad","Valerie Cooper","Warpath"],"name":"X-Force #5","link":"x-force_5","credits":["Rob Liefeld","Fabian Nicieza","Bob Harras","Brian Murray","Suzanne Gaffney","Marat Mychaels"],"i":4605},{"year":1991,"characters":["Betty Ross","Hector","Hulk","Jacqueline Shorr","Jim Wilson","Marlo Chandler","Rick Jones","Speedfreek","Ulysses"],"name":"Hulk #388","link":"hulk_388","credits":["Peter David","Mark Farmer","Dale Keown","Chris Cooper","Bobbie Chase"],"i":4606},{"year":1992,"characters":["Gorgeous George","Hairbag","Havok","Madrox the Multiple Man","Moira MacTaggert","Mr. Sinister","Polaris","Quicksilver","Ramrod (Nasty Boy)","Ricochet","Ruckus","Slab","Strong Guy","Valerie Cooper","Vic Chalker","Wolfsbane"],"name":"X-Factor #75","link":"x-factor_75","credits":["Bob Harras","Larry Stroman","Peter David","Al Milgrom"],"i":4607},{"year":1992,"characters":["Brothers Grimm III","Consuela","Dansen Macabre","Digger (Night Shift)","Dr. Strange","Gypsy Moth","Hangman II","Hawkeye","Iron Man","Larry Carpenter","Living Lightning","Misfit","Mockingbird","Mona (Living Lightning's gf)","Needle","Rachel Carpenter","Satannish","Scarlet Witch","Stella Houston","Tatterdemalion","Ticktock","USAgent","Wasp","Wonder Man","Wong"],"name":"Avengers West Coast #76-79","link":"avengers_west_coast_76-79","credits":["David Ross","Roy Thomas","Nel Yomtov","Richard Ashford","Tim Dzon","Dann Thomas"],"i":4608},{"year":1991,"characters":["Angel (Simon Halloway)","Cloak","Dagger"],"name":"Marvel Super Heroes #7 (Cloak & Dagger)","link":"marvel_super_heroes_7_cloak_da","credits":["Randy Emberlin","Peter David","Mike Rockwitz","Gary Hartle"],"i":4609},{"year":1991,"characters":["Cat (Shroud's agent)","Mouse (Shroud's agent)","Shroud"],"name":"Marvel Super Heroes #7 (Shroud)","link":"marvel_super_heroes_7_shroud","credits":["Steve Ditko","Stephen Leialoha","Steven Grant","Mike Rockwitz"],"i":4610},{"year":1991,"characters":["Alistaire Stuart","Bodybag","Brother Brit-Man","Captain Britain","Captain Empire","Captain England","Captain UK","China Doll","Dai Thomas","Emelia Witherspoon","Ferro^2","Hauptmann England","Joyboy","Justicer Bull","Kylun","Lockheed","Meggan","Micromax","Nightcrawler","Rachel Summers","Ringtoss","Sa'tneen","Scatterbrain","Shadowcat (Kitty Pryde)","Thug","Waxworks","Widget"],"name":"Excalibur #44","link":"excalibur_44","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":4611},{"year":1991,"characters":["Spider-Man"],"name":"Spider-Man #17","link":"spider-man_17","credits":["Ann Nocenti","Danny Fingeroth","Al Williamson","Rick Leonardi"],"i":4612},{"year":1991,"characters":["Aurora","Diablo","Diamond Lil","Headlok","Madison Jeffries","Northstar","Puck","Sasquatch","USAgent","Vindicator (Heather Hudson)","Whirlwind","Wild Child","Windshear"],"name":"Alpha Flight #102-103","link":"alpha_flight_102-103","credits":["Christopher Ivy","Scott Lobdell","Tom Morgan","Chris Cooper","Bobbie Chase"],"i":4613},{"year":1992,"characters":["Colleen Wing","Dr. Strange","Iron Fist","Joy Meachum","Ka-Zar","Lei Kung the Thunderer","Llyra","Master Khan","Misty Knight","Namorita","Phoebe Marrs","Plantman","Rafael Scarfe","Shanna the She-Devil","Spitfire","Sssesthugar","Sub-Mariner","Vashti","Vyrra","Wolverine","Wong"],"name":"Namor #21-25","link":"namor_21-25","credits":["John Byrne","Bob Wiacek","Mark Powers","Terry Kavanagh"],"i":4614},{"year":1991,"characters":["Ken Reid","NFL Superpro","Sanction"],"name":"NFL Superpro #2","link":"nfl_superpro_2","credits":["Bob Budiansky","Jose Delbo","Mike DeCarlo","Fabian Nicieza"],"i":4615},{"year":1992,"characters":["Aurora","Diamond Lil","Headlok","Madison Jeffries","Manikin","Northstar","Puck","Sasquatch","Vindicator (Heather Hudson)","Wild Child","Windshear"],"name":"Alpha Flight #104","link":"alpha_flight_104","credits":["Bobbie Chase","Tom Morgan","Scott Lobdell","Christopher Ivy"],"i":4616},{"year":1991,"characters":["Bloodshed","Ricky Dichinson","Spider-Man"],"name":"Web of Spider-Man #81","link":"web_of_spider-man_81","credits":["Don Hudson","Chris Ivy","Steven Butler","Danny Fingeroth","Kurt Busiek"],"i":4617},{"year":1991,"characters":["Bloodaxe (Jackie Lukus)","Bobby Steele","Enchantress","Gary Paretsky","Hercules","Quasar","Sersi","Susan Austin","Thunderstrike"],"name":"Thor #437","link":"thor_437","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Len Kaminski","Ron Frenz"],"i":4618},{"year":1991,"characters":["Captain America","Colossus","Cyclops","Doc Samson","Forgotten One","Guardsman II (Michael O'Brien)","Hercules","Hyperion","Ikaris","Jack of Hearts","Kismet (Her)","Makkari","Moondragon","Neal Saroyan","Quasar","Thunderstrike","Wolverine","Wonder Man"],"name":"Quasar #28-29","link":"quasar_28-29","credits":["Greg Capullo","Mark Gruenwald","Kelly Corvese","Harry Candelario"],"i":4619},{"year":1991,"characters":["8-Ball","Arnim Zola","Asp","Battleaxe (Grappler)","Bernie Rosenthal","Black Mamba","Blackwing","Bulldozer","Captain America","Crossbones","Cutthroat","Deathstroke","Derek Freeman","Diamondback","Doughboy","Golddigger","Guardsman II (Michael O'Brien)","Hercules","Impala","Jack O'Lantern (Steven Levins)","Jarvis","Machinesmith","Madame Hydra (Viper)","Man-Wolf (John Jameson)","Mangler (Power Broker Inc)","Mother Night","Oddball","Peggy Carter","Piledriver","Princess Python","Quasar","Red Skull","Sersi","Steel Wind","Taskmaster","Thunderstrike","Whiplash (Blacklash)","Wrecker"],"name":"Captain America #394-397","link":"captain_america_394-397","credits":["Ralph Macchio","Larry Alexander","Dan Bulanadi","Dan Panosian","Len Kaminski","Mark Gruenwald","Rik Levins"],"i":4620},{"year":1991,"characters":["Elio Bessucco","Microchip","Punisher"],"name":"Punisher War Journal #36","link":"punisher_war_journal_36","credits":["Steven Butler","Don Daley","Kim DeMulder","Mike Baron","Kevin Kobasic"],"i":4621},{"year":1991,"characters":["Ben Urich","Doris Urich","Man-Mountain Marko","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #82","link":"web_of_spider-man_82","credits":["Kurt Busiek","Ron Wilson","Don Hudson","Danny Fingeroth"],"i":4622},{"year":1991,"characters":["Glamour Girl (Gloria Angel)","Snap (Ginger Beach)","Stat (Spider Beach)","Wonder Man"],"name":"Wonder Man #3","link":"wonder_man_3","credits":["Gerard Jones","Terry Austin","Jeff Johnson","Fabian Nicieza"],"i":4623},{"year":1991,"characters":["Doris Ketch","Ghost Rider (Danny Ketch)","Mephisto","Noble Kale","Stacy Dolan","Suicide","Zodiak"],"name":"Ghost Rider #19-20","link":"ghost_rider_19-20","credits":["Chris Cooper","Ron Wagner","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4624},{"year":1991,"characters":["Aunt May","Bob Robbins","Mary Jane Watson","Spider-Man"],"name":"Web of Spider-Man #83","link":"web_of_spider-man_83","credits":["Chris Marrinan","Kurt Busiek","Don Hudson","Danny Fingeroth"],"i":4625},{"year":1992,"characters":["Carol Hines","Cyclops","Forge","Harry Tabeshaw","Jean Grey","Jubilee","Nick Fury","Professor Thorton","Professor X","Shiva","Silver Fox","Wolverine"],"name":"Wolverine #48-50","link":"wolverine_48-50","credits":["Marc Silvestri","Bob Harras","Tom Palmer","Suzanne Gaffney","Hilary Barta","Larry Hama","Dan Green"],"i":4626},{"year":1991,"characters":["Andrew Chord","Black Widow","Captain America","Edna Staples","Falcon","Firestar","Guardsman II (Michael O'Brien)","Hate-Monger (Animus)","Justice","Namorita","Night Thrasher","Peggy Carter","Rage","Silhouette","Vision"],"name":"Avengers #341-342","link":"avengers_341-342","credits":["Ralph Macchio","Fabian Nicieza","Tom Palmer","Steve Epting","Len Kaminski"],"i":4627},{"year":1992,"characters":["Kraven the Hunter","Mary Jane Watson","Roger Hochberg","Spider-Man"],"name":"Amazing Spider-Man: Soul of the Hunter","link":"amazing_spider-man_soul_of_the","credits":["Mike Zeck","Danny Fingeroth","Bob McLeod","J.M. DeMatteis","Eric Fein"],"i":4628},{"year":1991,"characters":["Cheryl Colon","Darkhawk","Grace Powell","Mike Powell","Punisher","Savage Steel (Harry Lennox)","Steve 'Headset' Rubino"],"name":"Darkhawk #9","link":"darkhawk_9","credits":["Ricardo Villagran","Mike Manley","Nel Yomtov","Danny Fingeroth"],"i":4629},{"year":1991,"characters":["Ashley Kafka","Aunt May","Harry Osborn","Liz Allan","Mary Jane Watson","Normie Osborn","Spider-Man","Vermin"],"name":"Spectacular Spider-Man #178-183","link":"spectacular_spider-man_178-183","credits":["Danny Fingeroth","Eric Fein","Sal Buscema","J.M. DeMatteis"],"i":4630},{"year":1991,"characters":["Bodybag","Captain Britain","Captain UK","China Doll","Dai Thomas","Ferro^2","Hauptmann England","Inky Blot","Joyboy","Kylun","Lockheed","Meggan","Micromax","Necrom","Nightcrawler","Numbers","Opal Luna Saturnyne","Rachel Summers","Ringtoss","Sa'tneen","Scatterbrain","Thug","Train Dragon","Waxworks","Widget"],"name":"Excalibur #45","link":"excalibur_45","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":4631},{"year":1992,"characters":["Ashley Kafka","Frog-Man II","Harry Osborn","Leap-Frog","Liz Allan","Mary Jane Watson","Molten Man","Normie Osborn","Spider-Man","Vermin","Walrus","White Rabbit"],"name":"Spectacular Spider-Man #184-185","link":"spectacular_spider-man_184-185","credits":["Danny Fingeroth","Eric Fein","Sal Buscema","J.M. DeMatteis"],"i":4632},{"year":1991,"characters":["Balder","Beta Ray Bill","Bobby Steele","Dargo Ktor","Destroyer (Asgardian armor)","Fandral","Garm","Gary Paretsky","Heimdall","Hela","Hogun","Jerry Sapristi","Karnilla","Kevin Masterson","Lorelei (Norse Goddess)","Marcy Masterson Steele","Servitor","Sif","Stellaris","Susan Austin","Thunderstrike","Volstagg","Zarrko the Tomorrow Man"],"name":"Thor #437-441","link":"thor_437-441","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Len Kaminski","Ron Frenz","Pat Olliffe"],"i":4633},{"year":1992,"characters":["Aunt May","Captain America","Chain","Darkhawk","Frenchie","Grasp","Joe 'Robbie' Robertson","Lynn Church","Marlene Alraune","Mary Jane Watson","Microchip","Midnight (Jeffrey Wilde)","Moon Knight","Night Thrasher","Nova (Rich Rider)","Punisher","Savage Steel (Jimmy Zafar)","Secret Empire Agent Number Seven","Secret Empire Agent Number Six","Silhouette","Sonic","Spider-Man","Thunderball"],"name":"Amazing Spider-Man #353-358","link":"amazing_spider-man_353-358","credits":["Al Milgrom","Danny Fingeroth","Randy Emberlin","Mark Bagley","Eric Fein"],"i":4634},{"year":1992,"characters":["Black Bishop (Harry Leland)","Black Talon II","Blake Tower","Blonde Phantom","Changeling","Garth (Zombie)","Jack O'Diamonds","Keeper of the Comics Code","Mahkizmo","Scaleface","She-Hulk"],"name":"She-Hulk #34-35","link":"she-hulk_34-35","credits":["Renee Witterstaetter","John Byrne","Keith Willaims"],"i":4635},{"year":1991,"characters":["Punisher"],"name":"Punisher War Journal #37","link":"punisher_war_journal_37","credits":["Art Nichols","Mike Baron","Mike Harris"],"i":4636},{"year":1991,"characters":["Instant Replay","Ken Reid","NFL Superpro","Sanction"],"name":"NFL Superpro #3","link":"nfl_superpro_3","credits":["Bob Budiansky","Charles Bennett","Jose Delbo","Fabian Nicieza"],"i":4637},{"year":1993,"characters":["Kingpin","Microchip","Punisher"],"name":"Punisher: The Ghosts of Innocents #1-2","link":"punisher_the_ghosts_of_innocen","credits":["Renee Witterstaetter","Tom Grindberg","Jim Starlin"],"i":4638},{"year":1992,"characters":["Deathlok (Michael Collins)","Kate Neville","Leviathan (Coven)","Network Nina","Nick Fury"],"name":"Nick Fury Agent of SHIELD #30-31","link":"nick_fury_agent_of_shield_30-3","credits":["Larry Mahlstedt","D.G. Chichester","Mike Rockwitz","Scott Lobdell","Ernie Stiner","Barry Dutter"],"i":4639},{"year":1991,"characters":["Colonel De Sade","Punisher"],"name":"Punisher Summer Special #1","link":"punisher_summer_special_1","credits":["Dan Slott","Peter David","Armando Gil","Will Murray","Jimmy Palmiotti","Kevin Kobasic","Don Daley","Val Mayerik","Rodney Ramos","Mark Texeira","Tony Skinner","Michael Bair","Pat Mills","Mike Harris"],"i":4640},{"year":1992,"characters":["Deathlok (Michael Collins)","Jesus Badalamente","Nick Collins","Punisher","Silvermane"],"name":"Deathlok #6-7","link":"deathlok_6-7","credits":["Gregory Wright","Tom Brevoort","Mike Manley","Sara Mossoff","Denys Cowan"],"i":4641},{"year":1992,"characters":["George Tam Wong","Gregario","Jigsaw","Kingpin","Max (Dog)","Melinda Brewer","Microchip","Punisher"],"name":"Punisher #53-59","link":"punisher_53-59","credits":["Jimmy Palmiotti","Don Daley","Hugh Haynes","Mike Baron","Kevin Kobasic"],"i":4642},{"year":1992,"characters":["Deathwatch","Doris Ketch","Ghost Rider (Danny Ketch)","Linda Wei","Noble Kale","Snowblind","Stacy Dolan","Thomas Dolan","Vengeance"],"name":"Ghost Rider #21","link":"ghost_rider_21","credits":["and Mark Texeira","Vince Evans","Jimmy Palmiotti","Ariane Lenshoek","Chris Cooper","Ron Wagner","Bobbie Chase","Michael Bair","Howard Mackie"],"i":4643},{"year":1992,"characters":["Aunt May","Deathwatch","Demogoblin","Gauntlet (Alfredo Morelli)","Jason Macendale","Kingpin","Kristy Watson","Mary Jane Watson","Nick Katzenberg","Richard Fisk","Rose (Sgt. Blume)","Spider-Man","Willie Lumpkin"],"name":"Web of Spider-Man #84-85","link":"web_of_spider-man_84-85","credits":["Danny Fingeroth","Keith Williams","Alex Saviuk","Eric Fein","Howard Mackie"],"i":4644},{"year":1991,"characters":["Daredevil","Foggy Nelson","Jerry 'The Whale' Sabini","Karen Page","Kingpin","Maltese","Typhoid Mary"],"name":"Daredevil #297","link":"daredevil_297","credits":["D.G. Chichester","Lee Weeks","Al Williamson","Ralph Macchio"],"i":4645},{"year":1992,"characters":["Demogoblin","Gauntlet (Alfredo Morelli)","Jason Macendale","Joe 'Robbie' Robertson","Nick Katzenberg","Richard Fisk","Rose (Sgt. Blume)","Spider-Man"],"name":"Web of Spider-Man #86","link":"web_of_spider-man_86","credits":["Danny Fingeroth","Sam DeLaRosa","Alex Saviuk","Eric Fein","Howard Mackie"],"i":4646},{"year":1991,"characters":["Alexander Goodwin Pierce","Baron Von Strucker","Daredevil","Dum Dum Dugan LMD","Garotte (Hydra)","Kate Neville","Kingpin","Larry 'Mad Dog' Cass","Maltese","Nick Fury","Peter Scott"],"name":"Daredevil #298","link":"daredevil_298","credits":["D.G. Chichester","Lee Weeks","Al Williamson","Ralph Macchio"],"i":4647},{"year":1992,"characters":["Craig Blaze","Deathwatch","Doris Ketch","Emma Blaze","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Linda Wei","Noble Kale","Renee Funaro","Roxanne Simpson","Shriker (Jack D'Auria)","Snowblind","Stacy Dolan","Troll (Ghost Rider villain)","Vengeance"],"name":"Ghost Rider #22-24","link":"ghost_rider_22-24","credits":["Andy Kubert","Chris Cooper","Mark Texeira","Bobbie Chase","Howard Mackie"],"i":4648},{"year":1992,"characters":["Aunt May","Demogoblin","Gauntlet (Alfredo Morelli)","Jason Macendale","Mary Jane Watson","Nick Katzenberg","Richard Fisk","Rose (Sgt. Blume)","Spider-Man"],"name":"Web of Spider-Man #87","link":"web_of_spider-man_87","credits":["Alex Saviuk","Danny Fingeroth","Sam DeLaRosa","Howard Mackie"],"i":4649},{"year":1992,"characters":["Baron Von Strucker","Daredevil","Dum Dum Dugan LMD","Garotte (Hydra)","J. Jonah Jameson","Jerry 'The Whale' Sabini","Karen Page","Kathy Malper","Kingpin","Maltese","Mary Jane Watson","Nick Fury","Spider-Man"],"name":"Daredevil #299-300","link":"daredevil_299-300","credits":["D.G. Chichester","Lee Weeks","Al Williamson","Ralph Macchio"],"i":4650},{"year":1992,"characters":["Aunt May","Gauntlet (Alfredo Morelli)","Jason Macendale","Joe 'Robbie' Robertson","Mary Jane Watson","Nick Katzenberg","Richard Fisk","Rose (Sgt. Blume)","Spider-Man"],"name":"Web of Spider-Man #88-89","link":"web_of_spider-man_88-89","credits":["Alex Saviuk","Danny Fingeroth","Sam DeLaRosa","Howard Mackie"],"i":4651},{"year":1991,"characters":["Andrew (Lotus henchman)","Attractive Lad (Aundray Phelps)","Auteur (Alex Flores)","Buff (Lahoya Scripps)","Glamour Girl (Gloria Angel)","Lady Lotus","Neal Saroyan","Splice II","Visionary (Argus LeVecchio)","Wonder Man"],"name":"Wonder Man #4","link":"wonder_man_4","credits":["Jeff Johnson","Fabian Nicieza","Jan Anton Harps","Evan Skolnick","Gerard Jones"],"i":4652},{"year":1992,"characters":["Allegra Bazin","Broderick Bazin","Cheryl Colon","Darkhawk","Eddie Brock (Venom)","Grace Powell","Jason Powell","Jonathan Powell","Lodestone","Louie McPhee","Mike Powell","Phillippe Bazin","Savage Steel (Harry Lennox)","St. Johnny","Tombstone","Venom Symbiote"],"name":"Darkhawk #10-15","link":"darkhawk_10-15","credits":["Danny Fingeroth","Nel Yomtov","Mike Manley","Richard Ashford","Ricardo Villagran"],"i":4653},{"year":1991,"characters":["Dr. Doom","Iron Man","Monkey Joe","Squirrel Girl"],"name":"Marvel Super Heroes #8 (Iron Man)","link":"marvel_super_heroes_8_iron_man","credits":["Steve Ditko","Mike Rockwitz","Will Murray"],"i":4654},{"year":1992,"characters":["Alicia Masters","Awesome Android","Cobra","Devos the Devastator","Dr. Doom","Dreadface","Franklin Richards","General Kalamari","Human Torch","Invisible Woman","Lyja the Lazerfist","Mad Thinker","Mr. Fantastic","Paibok the Power Skrull","Puppet Master","Thing"],"name":"Fantastic Four #357-360","link":"fantastic_four_357-360","credits":["Ralph Macchio","Tom DeFalco","Art Adams","Paul Ryan","Dan Bulanadi","Len Kaminski"],"i":4655},{"year":1991,"characters":["Andrew Chord","Firestar","Justice","Namorita","Night Thrasher","Nova (Rich Rider)","Pretty Persuasions","Silhouette","Speedball"],"name":"New Warriors #18","link":"new_warriors_18","credits":["Mark Bagley","Danny Fingeroth","Fabian Nicieza","Larry Mahlstedt"],"i":4656},{"year":1997,"characters":["Janet Ruiz","Jeff Piper","Kingpin"],"name":"Code of Honor #4","link":"code_of_honor_4","credits":["Jason White","Brad Parker","Kelly Corvese","Chuck Dixon"],"i":4657},{"year":1992,"characters":["Angar the Screamer","Arthur Nagan","Batroc","Chondu","Cobra","Electro","Hydroman","Impossible Man","Jerry Morgan","Paste Pot Pete","Princess Python","Ringmaster","Rocket Racer","Ruby Thursday","Shocker","Stilt-Man","Whiplash (Blacklash)","Whirlwind"],"name":"Marvel Comics Presents #97 (Bar)","link":"marvel_comics_presents_97_bar","credits":["Don Hudson","Kelly Corvese","Sholly Fisch","Mark Bagley","Terry Kavanagh"],"i":4658},{"year":1992,"characters":["Andrew Chord","Arnold Astrovik","Firestar","Fu'se","Gideon","Justice","Left Hand","Mariko Yashida","Namorita","Night Thrasher","Norma Astrovik","Nova (Rich Rider)","Silhouette","Smiling Tiger","Speedball","Tai (Dragon's Breadth)","Tatsu'o"],"name":"New Warriors #19-20","link":"new_warriors_19-20","credits":["Don Hudson","Fabian Nicieza","Larry Mahlstedt","Danny Fingeroth","Mark Bagley","Eric Fein"],"i":4659},{"year":1992,"characters":["Balder","Beta Ray Bill","Dr. Strange","Enchantress","Gary Paretsky","Jerry Sapristi","Mephisto","Odin","Sif","Silver Surfer","Susan Austin","Thunderstrike","Wong"],"name":"Thor #442-443","link":"thor_442-443","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Len Kaminski","Ron Frenz","Pat Olliffe"],"i":4660},{"year":1992,"characters":["Analisa Medina","Cruz Bushmaster","Dakota North","Elio Angelopoulus III","Hardcore","Jeryn Hogarth","Luke Cage","Micky Hamilton","Mr. Drewston"],"name":"Cage #1","link":"cage_1","credits":["Dwayne Turner","Kelly Corvese","Marc McLaurin","Christopher Ivy"],"i":4661},{"year":1992,"characters":["Elio Angelopoulus III","George Tam Wong","Luke Cage","Melinda Brewer","Melva (Cage's friend)","Punisher"],"name":"Punisher #60-62","link":"punisher_60-62","credits":["Don Daley","Marc McLaurin","Tim Tuohy","Al Williamson","Val Mayerik","Mike Baron"],"i":4662},{"year":1993,"characters":["Blonde Phantom","Critic","Phantom Blonde","Puppet Master","She-Hulk"],"name":"She-Hulk #47","link":"she-hulk_47","credits":["Renee Witterstaetter","Keith Williams","Simon Furman","Rik Levins"],"i":4663},{"year":1992,"characters":["Punisher"],"name":"Punisher War Journal #38","link":"punisher_war_journal_38","credits":["Chuck Dixon","Don Daley","Mike Witherby","Ron Wagner","Kevin Kobasic"],"i":4664},{"year":1992,"characters":["Dum Dum Dugan LMD","Nick Fury","Wolverine"],"name":"Wolverine: Inner Fury","link":"wolverine_inner_fury","credits":["D.G. Chichester","Suzanne Gaffney","Bill Sienkiewicz"],"i":4665},{"year":1992,"characters":["Alicia Masters","Dictionary Dawson","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Little Larry Lee","Lugwrench Lubowski","Mr. Fantastic","Roberta","Roberto 'Rhythm' Ruiz","Smooth Manny Merengues","Thing","Two-Fisted Tommy Boyd"],"name":"Fantastic Four #361","link":"fantastic_four_361","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Len Kaminski"],"i":4666},{"year":1992,"characters":["Blonde Phantom","Christina Devasquez Ridge","Cupid","Daniel 'Zapper' Ridge","Hermes","Morris Walters","Richard Rory","She-Hulk","Venus","Wyatt Wingfoot"],"name":"She-Hulk #36","link":"she-hulk_36","credits":["Renee Witterstaetter","John Byrne","Keith Williams"],"i":4667},{"year":1992,"characters":["Alex Power Clone","Energizer","Friday","Gee","Jim Power","Jim Power Clone","Kofi","Lightspeed","Maraud","Margaret Power","Margaret Power Clone","Mass Master","Yrik Whitemane"],"name":"Power Pack Holiday Special #1","link":"power_pack_holiday_special_1","credits":["Dan Slott","Jeffrey Albrecht","Alexander Morrissey","Fabian Nicieza","June Brigman","Mindy Newell","Steve Buccellato","Louise Simonson","Roy Richardson"],"i":4668},{"year":1993,"characters":["Abe Zimmer","Iron Man","Mrs. Arbogast","War Machine"],"name":"Marvel Holiday Special #2 (Iron Man)","link":"marvel_holiday_special_2_iron_","credits":["Renee Witterstaetter","Tom Morgan","Sholly Fisch"],"i":4669},{"year":1992,"characters":["Microchip","Punisher"],"name":"Punisher: G-Force","link":"punisher_g-force","credits":["Jimmy Palmiotti","Don Daley","Tim Tuohy","Hugh Haynes","Ken Branch","Mike Baron"],"i":4670},{"year":1992,"characters":["Aloysius R. Jamesley","Bloodaxe (Jackie Lukus)","Bobby Steele","Captain America","Ed Marrero","Gary Paretsky","Hercules","Jerry Sapristi","Kevin Masterson","Marcy Masterson Steele","Samantha Joyce","Susan Austin","Thunderstrike"],"name":"Thor #444","link":"thor_444","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Len Kaminski","Ron Frenz"],"i":4671},{"year":1992,"characters":["Aurora","Diamond Lil","Madison Jeffries","Northstar","Pink Pearl","Puck","Sasquatch","Vindicator (Heather Hudson)","Wild Child","Windshear"],"name":"Alpha Flight #105","link":"alpha_flight_105","credits":["Christopher Ivy","Christian Cooper","Scott Lobdell","Tom Morgan","Bobbie Chase"],"i":4672},{"year":1992,"characters":["Adam Crown","Albion","Algernon Crowe","Black Knight (Dane Whitman)","Breeze James","Bronwen Gryfnn","Dai Thomas","Eadmund Porlock","Francesca Grace Lexley","Gudrun Tyburn","Harvester","Iron Man","Magpie","Ormond Wychwood","Ranulph Haldane","Red Lord","Sir Gawain","Tanuta Umbotha","Union Jack (Joey Chapman)","Valinor","Victor Sternwood","War Machine"],"name":"Knights of Pendragon #1-5","link":"knights_of_pendragon_1-5","credits":["Stuart Bartlett","Adolfo Buylla","Bambos Georgiou","John Tomlinson","John Royle","Phil Gascoine","Dan Abnett"],"i":4673},{"year":1992,"characters":["Microchip","Punisher"],"name":"Punisher War Journal #39","link":"punisher_war_journal_39","credits":["Rodney Ramos","Don Daley","Chuck Dixon","Ron Wagner"],"i":4674},{"year":1992,"characters":["Garth (Zombie)","Living Eraser","She-Hulk","Wyatt Wingfoot"],"name":"She-Hulk #37","link":"she-hulk_37","credits":["Renee Witterstaetter","John Byrne","Keith Williams"],"i":4675},{"year":1992,"characters":["Auteur (Alex Flores)","Beast","Captain America","Lady Lotus","Rampage","Scarlet Witch","Snap (Ginger Beach)","Stat (Spider Beach)","Wonder Man"],"name":"Wonder Man #5-6","link":"wonder_man_5-6","credits":["Jeff Johnson","Fabian Nicieza","Jan Anton Harps","Evan Skolnick","Gerard Jones"],"i":4676},{"year":1992,"characters":["Hulk","Man-Thing","Paris","Rick Jones"],"name":"Hulk #389","link":"hulk_389","credits":["Mark Farmer","Tom Field","Chris Cooper","Bobbie Chase","Gary Barker"],"i":4677},{"year":1992,"characters":["Alyssa Conover","Deathlok (Michael Collins)","Jesus Badalamente","Rick Sheridan","Sleepwalker","Whitney Cooper"],"name":"Sleepwalker #8","link":"sleepwalker_8","credits":["Bob Budiansky","Don Daley","Mike Manley","Kevin Kobasic","Bret Blevins"],"i":4678},{"year":1992,"characters":["Antibody","Captain Manhattan","Chrome (New Universe)","Erishkigal","Kayla Ballantine","Kenjiro Tanaka","Kismet (Her)","Makkari","Man-Thing","Metallurgist","Quasar","Uatu the Watcher"],"name":"Quasar #30-31","link":"quasar_30-31","credits":["Harry Candelario","Joel Zulueta","Co.","Kelly Corvese","Pat Brokerick","Fred Fredericks","Mark Gruenwald","Greg Capullo"],"i":4679},{"year":1992,"characters":["Baroness Victoria Von Frankenstein","Dr. Strange","Frankensurfer"],"name":"Doctor Strange #37","link":"doctor_strange_37","credits":["Mike Rockwitz","Geof Isherwood","Roy Thomas","Jean-Marc Lofficier","Barry Dutter","Dann Thomas"],"i":4680},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Captain America","Crystal","Hercules","Jarvis","Lockjaw","Luna","Magdalene","Marilla","Mikhail Kutuzov","Peter Corbeau","Proctor","Quicksilver","Sersi","Swordsman (Gatherers)","Talia Kruma","Thunderstrike","Uatu the Watcher","Valinor","Vision"],"name":"Avengers #343-344","link":"avengers_343-344","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Len Kaminski"],"i":4681},{"year":1992,"characters":["Frenchie","Killer Shrike","Marlene Alraune","Moon Knight"],"name":"Moon Knight #34","link":"moon_knight_34_1","credits":["J.J. Birch","Chuck Dixon","Eric Fein","Danny Fingeroth"],"i":4682},{"year":1992,"characters":["Jane Dixon","Ken Reid","NFL Superpro","Sanction","Tim Pressman"],"name":"NFL Superpro #4","link":"nfl_superpro_4","credits":["Mike DeCarlo","Fabian Nicieza","Bob Budianksy","Jose Delbo","David Wohl"],"i":4683},{"year":1992,"characters":["Alistaire Stuart","Bodybag","Captain Britain","Cerise","China Doll","Cobweb (Special Executive)","Dai Thomas","Emelia Witherspoon","Feron","Ferro^2","Inky Blot","Kylun","Lockheed","Meggan","Merlin","Micromax","Necrom","Nightcrawler","Numbers","Opal Luna Saturnyne","Oxo","Phoenix Force","Rachel Summers","Ringtoss","Roma","Sa'tneen","Scatterbrain","Shadowcat (Kitty Pryde)","Thug","Train Dragon","Wardog","Waxworks","Widget","Zeitgeist"],"name":"Excalibur #46-50","link":"excalibur_46-50","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":4684},{"year":1992,"characters":["Avatar","Collector","Garnok Rebbahn","Master Hate","Mistress Love","Reptyl","Silver Surfer"],"name":"Silver Surfer #61-66","link":"silver_surfer_61-66","credits":["Tom Christopher","Ron Lim","Steve Carr","Craig Anderson","Ron Marz","Deryl Skeleton","John Lewandowski"],"i":4685},{"year":1992,"characters":["Alistaire Stuart","Captain Britain","Cerise","Dai Thomas","Feron","Gatecrasher","Hard Boiled Henwy","Jean Grey","Kylun","Meggan","Nightcrawler","Professor X","Rachel Summers","Shadowcat (Kitty Pryde)","Yap"],"name":"Excalibur #51","link":"excalibur_51","credits":["Jeffrey Albrecht","and Jimmy Palmiotti","Jose Marzan","Mark McKenna","Alan Davis","Mark Powers","Terry Kavanagh","Doug Braithwaite"],"i":4686},{"year":1992,"characters":["Sabretooth","Werewolf By Night"],"name":"Marvel Comics Presents #98 (Werewolf By Night)","link":"marvel_comics_presents_98_were","credits":["S. Clarke Hawbaker","Mark McKenna","Mark Powers","Len Kaminski","Terry Kavanagh"],"i":4687},{"year":1992,"characters":["D'Spayre","Ghost Rider (Danny Ketch)","Noble Kale"],"name":"Marvel Comics Presents #98-99 (Ghost Rider)","link":"marvel_comics_presents_98-99_g","credits":["Dan Slott","Jimmy Palmiotti","Mark Powers","Terry Kavanagh"],"i":4688},{"year":1992,"characters":["Betsy Beatty Potter","Gladiator"],"name":"Marvel Comics Presents #98 (Gladiator)","link":"marvel_comics_presents_98_glad","credits":["Mark Powers","Terry Kavanagh","Scott Benson","John Stanisci"],"i":4689},{"year":1992,"characters":["Nightmare","Wolverine"],"name":"Marvel Comics Presents #99 (Wolverine)","link":"marvel_comics_presents_99_wolv","credits":["Rob Liefeld","Mark Powers","Bud LaRosa","Jim Valentino","Terry Kavanagh","Howard Mackie"],"i":4690},{"year":1992,"characters":["Dr. Doom","Dreamstalker","Ghost Rider (Danny Ketch)","Nightmare","Noble Kale","Wolverine"],"name":"Marvel Comics Presents #100","link":"marvel_comics_presents_100","credits":["Sam Kieth","Mark Powers","Howard Mackie","Terry Kavanagh","Tim Vigil"],"i":4691},{"year":1992,"characters":["Arishem","Brightsword","Caduceus","Calculus","Daydreamer","Eson","Genii","Hargen","Harvest","Highnote","Juniper","Katos","Mindsinger","Moonstalker","Nezarr","One Above All","Sea Witch","Splice","Tefral","Varua","Ziran"],"name":"Marvel Comics Presents #101-109 (Young Gods)","link":"marvel_comics_presents_101-109","credits":["Tom Sutton","Jon Holdredge","Mark Powers","Scott Kolins","Terry Kavanagh","Eric Fein","Gerry Conway"],"i":4692},{"year":1992,"characters":["Dr. Strange","Ghost Rider (Danny Ketch)","Mephisto","Noble Kale"],"name":"Marvel Comics Presents #101-106 (Ghost Rider)","link":"marvel_comics_presents_101-106","credits":["Jimmy Palmiotti","Rick Leonardi","Mark Powers","Terry Kavanagh","Howard Mackie"],"i":4693},{"year":1992,"characters":["Punisher"],"name":"Marvel Comics Presents #101 (Punisher)","link":"marvel_comics_presents_101_pun","credits":["Jon Holdredge","Ron Marz","Mark Powers","Scott Kolins","Terry Kavanagh"],"i":4694},{"year":1992,"characters":["Banshee (Horse)","D'Spayre","Night Rider (Carter Slade)","Night Rider (Hamilton Slade)"],"name":"Marvel Comics Presents #102 (Phantom Rider)","link":"marvel_comics_presents_102_pha","credits":["Dave Hoover","Gary Barnum","Mark Powers","Terry Kavanagh"],"i":4695},{"year":1992,"characters":["Dr. Strange","Rintrah","Sara Wolfe"],"name":"Marvel Comics Presents #103 (Rintrah)","link":"marvel_comics_presents_103_rin","credits":["Jon Holdredge","Larry Alexander","James Felder","Mark Powers","Terry Kavanagh"],"i":4696},{"year":1992,"characters":["Peace Monger","USAgent"],"name":"Marvel Comics Presents #104 (USAgent)","link":"marvel_comics_presents_104_usa","credits":["Paul Abrams","Scott Lobdell","Mark Powers","Tim Tuohy","Terry Kavanagh","Paula Foye"],"i":4697},{"year":1992,"characters":["Mr. Fantastic","Thing"],"name":"Marvel Comics Presents #105 (Thing)","link":"marvel_comics_presents_105_thi","credits":["Joel Zulueta","Skip Dietz","Mark Powers","Tim Tuohy","Terry Kavanagh"],"i":4698},{"year":1992,"characters":["Catherine (Devil Witch)","Desadia","Gabriel the Devil Hunter"],"name":"Marvel Comics Presents #106 (Gabriel)","link":"marvel_comics_presents_106_gab","credits":["Terry Kavanagh","Robert Campanella","Mark Powers","Bret Blevins"],"i":4699},{"year":1992,"characters":["Ghost Rider (Danny Ketch)","Noble Kale","Werewolf By Night"],"name":"Marvel Comics Presents #107-112 (Ghost Rider)","link":"marvel_comics_presents_107-112","credits":["Jimmy Palmiotti","John Stanisci","Mark Powers","Ken Branch","Chris Cooper","Terry Kavanagh"],"i":4700},{"year":1992,"characters":["Red Wolf (Will Talltrees)"],"name":"Marvel Comics Presents #107 (Red Wolf)","link":"marvel_comics_presents_107_red","credits":["James Blackburn","Christopher Ivy","Fabian Nicieza","Jon Holdredge","Mark Powers","Terry Kavanagh"],"i":4701},{"year":2008,"characters":["Beast","Cyclops","Fred Duncan","Jean Grey","Professor X","Wolverine"],"name":"X-Men: Odd Men Out #1 (Agent Duncan)","link":"x-men_odd_men_out_1_agent_dunc","credits":["Dave Cockrum","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Roger Stern"],"i":4702},{"year":1992,"characters":["Adam Warlock","Epoch","Eternity","Galactus","Living Tribunal","Lord Chaos","Master Hate","Master Order","Mistress Love","One Above All","Soul Gem","Stranger","Uatu the Watcher","Ziran"],"name":"Warlock and the Infinity Watch #1","link":"warlock_and_the_infinity_watch","credits":["Craig Anderson","Terry Austin","Jim Starlin","Angel Medina"],"i":4703},{"year":1992,"characters":["Clea","D'Spayre","Daredevil","Dr. Strange","Dreamstalker","Dweller In Darkness","Fear Eater","Imei Chang","Lurking Unknown","Nightmare","Nox","Rintrah","Roadkill","Sara Wolfe","Splatt","Straw Man","Wong"],"name":"Doctor Strange #38-40","link":"doctor_strange_38-40_1","credits":["Jim Sanders III","Mike Rockwitz","Geof Isherwood","Roy Thomas","Jean-Marc Lofficier","Barry Dutter","Dann Thomas"],"i":4704},{"year":1992,"characters":["Punisher"],"name":"Punisher War Journal #40","link":"punisher_war_journal_40","credits":["Steven Butler","Chuck Dixon","Michael Barreiro","Don Daley","Tim Touhy","Kim DeMulder"],"i":4705},{"year":1992,"characters":["Alistaire Stuart","Captain Britain","Executioner (616 Crazy Gang)","Jean Grey","Jester (616 Crazy Gang)","Knave (616 Crazy Gang)","Meggan","Nightcrawler","Phoenix Force","Professor X","Rachel Summers","Red Queen (616 Crazy Gang)","Shadowcat (Kitty Pryde)","Tweedledope (616 Crazy Gang)"],"name":"Excalibur #52","link":"excalibur_52","credits":["Will Simpson","Jimmy Palmiotti","Alan Davis","Mark Powers","Jeffry Albrech","Terry Kavanagh"],"i":4706},{"year":1992,"characters":["Ben Urich","Daredevil","Foggy Nelson","Karen Page","Owl","Pete London"],"name":"Daredevil #301-303","link":"daredevil_301-303","credits":["Ralph Macchio","Christopher Ivy","D.G. Chichester","M.C. Wyman","Len Kaminski"],"i":4707},{"year":1992,"characters":["Ben Urich","Black Cat","Cardiac","Carnage Symbiote","Cletus Kasady (Carnage)","Flash Thompson","J. Jonah Jameson","Joy Mercado","Liz Allan","Mary Jane Watson","Spider-Man"],"name":"Amazing Spider-Man #359-360","link":"amazing_spider-man_359-360","credits":["Danny Fingeroth","Keith Williams","David Michelinie","Chris Marrinan","Eric Fein"],"i":4708},{"year":1992,"characters":["Ben Jacobs","Deathlok (Michael Collins)","Jesus Badalamente","Mainframe"],"name":"Deathlok #8","link":"deathlok_8","credits":["Jimmy Palmiotti","Gregory Wright","Tom Brevoort","John Hebert","Mindy Newell"],"i":4709},{"year":1992,"characters":["Punisher"],"name":"Punisher War Journal #41","link":"punisher_war_journal_41","credits":["Tim Tuohy","Don Daley","Chuck Dixon","Gary Kwapisz"],"i":4710},{"year":1992,"characters":["Jane Dixon","Ken Reid","NFL Superpro"],"name":"NFL Superpro #5","link":"nfl_superpro_5","credits":["Buzz Dixon","Mike DeCarlo","Bob Budiansky","Jose Delbo","David Wohl"],"i":4711},{"year":1992,"characters":["Captain Britain","Meggan"],"name":"Excalibur #53","link":"excalibur_53","credits":["Christopher Ivy","James Fry","Scott Lobdell","Mark Powers","Terry Kavanagh"],"i":4712},{"year":1992,"characters":["Cecilia Perez","Rambo (dog)","Rick Sheridan","Sleepwalker","Tolliver Smith"],"name":"Sleepwalker #9","link":"sleepwalker_9","credits":["Bob Budiansky","Don Daley","Mike Manley","Tim Tuohy","Bret Blevins"],"i":4713},{"year":1992,"characters":["Black Jack Tarr","Brynocki","Moon Knight","Mordillo","Shang-Chi"],"name":"Moon Knight Special #1","link":"moon_knight_special_1","credits":["Joey Cavalieri","Doug Moench","Christopher Ivy","Art Nichols"],"i":4714},{"year":1992,"characters":["Aurora","Mr. Hyde","Northstar","Puck","Sasquatch","Vindicator (Heather Hudson)","Wild Child","Windshear"],"name":"Alpha Flight #106","link":"alpha_flight_106","credits":["Mark Pacella","Scott Lobdell","Dan Panosian","Chris Cooper","Bobbie Chase"],"i":4715},{"year":1992,"characters":["Aurora","Havok","Madrox the Multiple Man","Northstar","Polaris","Sasquatch","Strong Guy","Valerie Cooper","Vindicator (Heather Hudson)","Wild Child","Wolfsbane"],"name":"Alpha Flight #107","link":"alpha_flight_107","credits":["Rob Tokar","Tom Morgan","Scott Lobdell"],"i":4716},{"year":1992,"characters":["Al the Alien","Blonde Phantom","Cupid","Dionysius","Mahkizmo","Morris Walters","She-Hulk","Spragg the Living Mountain","Thing","U.S. Archer","Wyatt Wingfoot"],"name":"She-Hulk #38-39","link":"she-hulk_38-39","credits":["Renee Witterstaetter","John Byrne"],"i":4717},{"year":1992,"characters":["Nick Fury","Wild Child"],"name":"Nick Fury Agent of SHIELD #32","link":"nick_fury_agent_of_shield_32","credits":["Don Hudson","Mike Rockwitz","Dave Hoover","Scott Lobdell","Barry Dutter"],"i":4718},{"year":1992,"characters":["Alicia Masters","Franklin Richards","Human Torch","Invisible Woman","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Spider-Man","Thing"],"name":"Fantastic Four #362-365","link":"fantastic_four_362-365","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Len Kaminski"],"i":4719},{"year":1993,"characters":["Lynn Michaels","Mickey Fondozzi","Microchip","Punisher","Roc","Rosa Carbone","Sal Carbone","Shotgun (Mercenary)"],"name":"Punisher War Zone #1-11","link":"punisher_war_zone_1-11","credits":["John Romita Jr.","Chuck Dixon","Jimmy Palmiotti","Don Daley","J.J. Birch","Klaus Janson","Mike Manley","Tim Tuohy","Mike Harris"],"i":4720},{"year":1992,"characters":["Andrew Chord","Bloodstrike","Firestar","Foggy Nelson","Hybrid (Scott Washington)","Justice","Left Hand","Midnight's Fire","Namorita","Night Thrasher","Norma Astrovik","Nova (Rich Rider)","Omar Barrenos","Rachel Dreyfuss","Silhouette","Silk Fever","Smiling Tiger","Tai (Dragon's Breadth)"],"name":"New Warriors #21","link":"new_warriors_21","credits":["Fabian Nicieza","Danny Fingeroth","Larry Mahlstedt","Mark Bagley","Eric Fein"],"i":4721},{"year":1992,"characters":["Aurora","Brain Drain","Le Peregrine","Master of the World","Micromax","Northstar","Sasquatch","Shamrock","Vindicator (Heather Hudson)","Wild Child"],"name":"Alpha Flight #108","link":"alpha_flight_108","credits":["Rob Tokar","Tom Morgan","Scott Lobdell","Dan Cuddy"],"i":4722},{"year":1992,"characters":["Andrew Chord","Bart Jones","Bloodstrike","Darkhawk","Edna Staples","Firestar","Foggy Nelson","Guardsman II (Michael O'Brien)","Hybrid (Scott Washington)","Justice","Left Hand","Midnight's Fire","Namorita","Night Thrasher","Norma Astrovik","Nova (Rich Rider)","Peggy Carter","Rachel Dreyfuss","Rage","Silhouette","Silk Fever","Smiling Tiger","Speedball","Tai (Dragon's Breadth)","Thing","Walter Rosen"],"name":"New Warriors #22-25","link":"new_warriors_22-25","credits":["Fabian Nicieza","Larry Mahlstedt","Danny Fingeroth","Mark Bagley","Chris Marrinan","Eric Fein","Andrew Pepoy"],"i":4723},{"year":1992,"characters":["Adam Warlock","Drax the Destroyer","Gamora","Moondragon","Pip the Troll","Soul Gem","Starfox"],"name":"Warlock and the Infinity Watch #2","link":"warlock_and_the_infinity_watch_1","credits":["Craig Anderson","Terry Austin","Jim Starlin","Angel Medina"],"i":4724},{"year":1992,"characters":["Blackwing","Captain America","Cutthroat","Delphi","Hulk","Jack O'Lantern (Steven Levins)","Machinesmith","Madame Hydra (Viper)","Man-Wolf (John Jameson)","Mother Night","Oracle","Peggy Carter","Red Skull","Rick Jones","Supreme Intelligence","Tempest","Warstar"],"name":"Captain America #398","link":"captain_america_398","credits":["Ralph Macchio","Larry Alexander","Dan Bulanadi","Dan Panosian","Len Kaminski","Mark Gruenwald","Rik Levins"],"i":4725},{"year":1992,"characters":["Captain America","Electron","Hawkeye","Iron Man","Living Lightning","Mockingbird","Oracle","Quasar","Rick Jones","Scarlet Witch","Spider-Woman (Julia Carpenter)","Tempest","USAgent","Warstar","Wonder Man"],"name":"Avengers West Coast #80","link":"avengers_west_coast_80","credits":["David Ross","Roy Thomas","Nel Yomtov","Richard Ashford","Tim Dzon","Dann Thomas"],"i":4726},{"year":1992,"characters":["Angler","Antibody","Captain America","Captain Atlas","Doctor Minerva","Epoch","Hawkeye","Impulse (Imperial Guard)","Iron Man","Kayla Ballantine","Kenjiro Tanaka","Korath the Pursuer","Magic","Manta","Mikhail Kutuzov","Peggy Carter","Peter Corbeau","Quasar","Rick Jones","Starfox","Talia Kruma","Wonder Man"],"name":"Quasar #32","link":"quasar_32","credits":["Greg Capullo","Mark Gruenwald","Kelly Corvese","Harry Candelario"],"i":4727},{"year":1992,"characters":["Auteur (Alex Flores)","Captain America","Captain Atlas","Doctor Minerva","Neal Saroyan","Peter Corbeau","Quasar","Rick Jones","Scarlet Witch","Starfox","Supreme Intelligence","Ultimus","Wonder Man"],"name":"Wonder Man #7","link":"wonder_man_7","credits":["Jeff Johnson","Fabian Nicieza","Evan Skolnick","Dan Panosian","Gerard Jones"],"i":4728},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Captain America","Captain Marvel (Monica Rambeau)","Crystal","Deathbird","Falcon","Forgotten One","Hawkeye","Henry Pym","Hercules","Hobgoblin (Shiar)","Iron Man","Kismet (Her)","Lilandra","Living Lightning","Mockingbird","Peter Corbeau","Quasar","Scarlet Witch","Sersi","She-Hulk","Spider-Woman (Julia Carpenter)","Starfox","Talia Kruma","Thunderstrike","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers #345","link":"avengers_345","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Len Kaminski"],"i":4729},{"year":1992,"characters":["Black Knight (Dane Whitman)","Captain America","Crystal","Hawkeye","Hercules","Iron Man","Sersi","Shatterax","Supreme Intelligence"],"name":"Iron Man #278","link":"iron_man_278","credits":["Paul Ryan","Nel Yomtov","Richard Ashford","Len Kaminski","Bob Wiacek"],"i":4730},{"year":1992,"characters":["Captain Marvel (Monica Rambeau)","Gladiator (Shiar)","Living Lightning","Scarlet Witch","Starfox","Thunderstrike","Vision","Wonder Man"],"name":"Thor #445","link":"thor_445","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Len Kaminski","Pat Olliffe"],"i":4731},{"year":1992,"characters":["Black Knight (Dane Whitman)","Captain America","Crossbones","Crystal","Diamondback","Hawkeye","Hercules","Iron Man","Korath the Pursuer","Ronan the Accuser","Sersi","Shatterax","Supreme Intelligence","Ultimus"],"name":"Captain America #399","link":"captain_america_399","credits":["Ralph Macchio","Larry Alexander","Dan Bulanadi","Dan Panosian","Pat Garrahy","Mark Gruenwald","Rik Levins"],"i":4732},{"year":1992,"characters":["Captain Atlas","Doctor Minerva","Falcon","Forgotten One","Henry Pym","Hobgoblin (Shiar)","Kismet (Her)","Mockingbird","Neutron","Nightside","Quasar","Scintilla","She-Hulk","Spider-Woman (Julia Carpenter)","Starbolt","USAgent","Warstar","Wasp"],"name":"Avengers West Coast #81","link":"avengers_west_coast_81","credits":["Davis Ross","Roy Thomas","Nel Yomtov","Richard Ashford","Tim Dzon","Dann Thomas"],"i":4733},{"year":1992,"characters":["Angler","Antibody","Araki Imposter","Captain Atlas","Captain Marvel (Monica Rambeau)","Carol Danvers","Electron","Epoch","Glom","Hobgoblin (Shiar)","Kayla Ballantine","Kismet (Her)","Lilandra","Living Lightning","Moondancer","Neutron","Onslaught (Shiar)","Oracle","Quasar","Scarlet Witch","Scintilla","Shatterax","Solar Wind","Starbolt","Starfox","Tempest","Thunderstrike","Vision","Voyager","Warstar","Wonder Man"],"name":"Quasar #33","link":"quasar_33","credits":["Fred Fredericks","Mark Gruenwald","Kelly Corvese","Rurik Tyler"],"i":4734},{"year":1992,"characters":["Captain Marvel (Monica Rambeau)","Ch'od","Corsair","Cr'reee","Hepzibah","Lilandra","Living Lightning","Raza Longknife","Scarlet Witch","Starfox","Thunderstrike","Vision","Waldo","Wonder Man"],"name":"Wonder Man #8","link":"wonder_man_8","credits":["Jeff Johnson","Art Nichols","Fabian Nicieza","Jan Anton Harps","Evan Skolnick","Stephen B. Jones","Gerard Jones"],"i":4735},{"year":1992,"characters":["Ael-dan","Black Knight (Dane Whitman)","Captain America","Captain Atlas","Crystal","Dar-benn","Deathbird","Doctor Minerva","Hercules","Korath the Pursuer","Ronan the Accuser","Sersi","Shatterax","Supreme Intelligence","Ultimus"],"name":"Avengers #346","link":"avengers_346","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":4736},{"year":1992,"characters":["Ael-dan","Black Knight (Dane Whitman)","Captain America","Crystal","Dar-benn","Deathbird","Hawkeye","Hercules","Iron Man","Ronan the Accuser","Sersi","Supreme Intelligence","Vision","Wonder Man"],"name":"Iron Man #279","link":"iron_man_279","credits":["Keith William","Paul Ryan","Nel Yomtov","Len Kaminski","Bob Wiacek"],"i":4737},{"year":1992,"characters":["Araki Imposter","Astra","Captain Marvel (Monica Rambeau)","Earthquake","Hussar","Korath the Pursuer","Lilandra","Living Lightning","Ronan the Accuser","Scarlet Witch","Shatterax","Smasher (Shiar)","Starfox","Supreme Intelligence","Thunderstrike","Titan","Ultimus","Vision","Wonder Man"],"name":"Thor #446","link":"thor_446","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Pat Garrahy","Pat Olliffe"],"i":4738},{"year":1992,"characters":["Black Knight (Dane Whitman)","Captain America","Crossbones","Crystal","D-Man","Diamondback","Falcon","Flag-Smasher","Forgotten One","Hawkeye","Henry Pym","Hercules","Iron Man","Mockingbird","Peggy Carter","Sersi","She-Hulk","Spider-Woman (Julia Carpenter)","Supreme Intelligence","USAgent","Vision","Wasp","Wonder Man"],"name":"Captain America #400","link":"captain_america_400","credits":["Ralph Macchio","Kathryn Bolinger","Larry Alexander","Dan Bulanadi","Dan Panosian","Pat Garrahy","Mark Gruenwald","Rik Levins"],"i":4739},{"year":1992,"characters":["Antro","Arachne (Deathweb)","Araki Imposter","Astra","Captain Marvel (Monica Rambeau)","Earthquake","Glom","Henry Pym","Korath the Pursuer","Lilandra","Living Lightning","Mockingbird","Quasar","Ronan the Accuser","Scarlet Witch","Shatterax","Smasher (Shiar)","Spider-Woman (Julia Carpenter)","Starfox","Supreme Intelligence","Therak","Thunderstrike","Titan","Ultimus","USAgent","Vision","Wasp","Wonder Man"],"name":"Avengers West Coast #82","link":"avengers_west_coast_82","credits":["David Ross","Roy Thomas","Nel Yomtov","Richard Ashford","Tim Dzon","Dann Thomas"],"i":4740},{"year":1992,"characters":["Angler","Antibody","Carol Danvers","Devon Ballantine","Epoch","Jarvis","Kayla Ballantine","Keith Kincaid","Kismet (Her)","Quasar","Super-Skrull"],"name":"Quasar #34","link":"quasar_34","credits":["Keith Williams","Mark Gruenwald","Kelly Corvese","Rurik Tyler"],"i":4741},{"year":1992,"characters":["Black Knight (Dane Whitman)","Captain Marvel (Monica Rambeau)","Crystal","Hawkeye","Hercules","Iron Man","Lilandra","Living Lightning","Scarlet Witch","Sersi","Starfox","Thunderstrike","Vision","Wonder Man"],"name":"Wonder Man #9","link":"wonder_man_9","credits":["Jeff Johnson","Fabian Nicieza","Dan Panosian","Bud DeLaRosa","Evan Skolnick","Stephen B. Jones","Gerard Jones"],"i":4742},{"year":1992,"characters":["Black Knight (Dane Whitman)","Captain America","Captain Atlas","Captain Marvel (Monica Rambeau)","Crystal","Deathbird","Doctor Minerva","Electron","Hawkeye","Hercules","Impulse (Imperial Guard)","Iron Man","Korath the Pursuer","Lilandra","Living Lightning","Oracle","Quasar","Scarlet Witch","Sersi","Shatterax","Starfox","Supreme Intelligence","Tempest","Thunderstrike","Titan","Ultimus","Vision","Wonder Man"],"name":"Avengers #347","link":"avengers_347","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":4743},{"year":1992,"characters":["Ajax","Atalanta","Betty Ross","Farnoq Dahn","Havok","Hector","Hulk","Jacqueline Shorr","Madrox the Multiple Man","Marlo Chandler","Polaris","Prometheus (Pantheon)","Quicksilver","Rick Jones","Strong Guy","Ulysses","Valerie Cooper","Wolfsbane"],"name":"Hulk #390-391","link":"hulk_390-391","credits":["Peter David","Mark Farmer","Dale Keown","Chris Cooper","Bobbie Chase"],"i":4744},{"year":1992,"characters":["Ajax","Atalanta","Farnoq Dahn","Hector","Madrox the Multiple Man","Polaris","Prometheus (Pantheon)","Quicksilver","Strong Guy","Ulysses","Valerie Cooper","Wolfsbane"],"name":"X-Factor #76","link":"x-factor_76","credits":["Tom Raney","Al Milgrom","Peter David","Bob Harras","Suzanne Gaffney","Kevin West"],"i":4745},{"year":1992,"characters":["Ajax","Farnoq Dahn","Havok","Hector","Hulk","Madrox the Multiple Man","Polaris","Prometheus (Pantheon)","Quicksilver","Rick Jones","Strong Guy","Ulysses","Valerie Cooper","Wolfsbane"],"name":"Hulk #392","link":"hulk_392","credits":["Peter David","Mark Farmer","Dale Keown","Chris Cooper","Bobbie Chase"],"i":4746},{"year":1992,"characters":["Henry Pym","Human Torch (Golden Age)","Hyena","Machine Man","Mockingbird","Quicksilver","Tigra","Wasp"],"name":"Avengers West Coast #83","link":"avengers_west_coast_83","credits":["Herb Trimpe","Roy Thomas","Charles Barnett III","Nel Yomtov","Dann Thomas"],"i":4747},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Captain America","Captain Marvel (Monica Rambeau)","Crossbones","Crystal","D-Man","Diamondback","Falcon","Forgotten One","Hawkeye","Henry Pym","Hercules","Iron Man","Jarvis","Living Lightning","Mockingbird","Peggy Carter","Quasar","Scarlet Witch","Sersi","She-Hulk","Spider-Woman (Julia Carpenter)","Starfox","Thunderstrike","USAgent","Vision","Wasp","Wonder Man"],"name":"Captain America #401","link":"captain_america_401","credits":["Ralph Macchio","Dan Bulanadi","Pat Garrahy","Mark Gruenwald","Rik Levins"],"i":4748},{"year":1992,"characters":["Angler","Antibody","Captain America","Chief Examiner","Deathbird","Devon Ballantine","Epoch","Erishkigal","Fath","Kayla Ballantine","Kenjiro Tanaka","Kismet (Her)","Korath the Pursuer","Lightmaster","Makkari","Mr. Ballantine","Origin","Quagmire","Quasar","Shatterax","Soul-Eater","Ultimus","Wayopex"],"name":"Quasar #35-36","link":"quasar_35-36","credits":["Greg Capullo","Mark Gruenwald","Kelly Corvese","Harry Candelario"],"i":4749},{"year":1992,"characters":["Arcade","Captain Britain","Dai Thomas","J. Jonah Jameson","Joe 'Robbie' Robertson","Meggan","Spider-Man"],"name":"Spider-Man #25","link":"spider-man_25","credits":["Mark Stegbauer","Danny Fingeroth","Chris Marrinan","Terry Kavanagh","Eric Fein"],"i":4750},{"year":1992,"characters":["Aunt May","Carnage Symbiote","Cletus Kasady (Carnage)","Eddie Brock (Venom)","Human Torch","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Mary Parker Duplicate","Mr. Fantastic","Richard Parker Duplicate","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #361-363","link":"amazing_spider-man_361-363","credits":["Danny Fingeroth","Randy Emberlin","Mark Bagley","David Michelinie","Eric Fein"],"i":4751},{"year":1992,"characters":["Captain America","Charnel","Death's Head","Death's Head II (Minion)","Evelyn Necker","Ghost Rider (Danny Ketch)","Hulk","Human Torch","Invisible Woman","Iron Man","Major Oak","Mr. Fantastic","Phaedra","Scarlet Witch","Thing","Thunderstrike","Tuck"],"name":"Death's Head II #1-4","link":"deaths_head_ii_1-4","credits":["Liam Sharp","John Freeman","Gary Russell","Bambos Georgiou","Steve White","Andy Lanning","Dan Abnett"],"i":4752},{"year":1992,"characters":["Deathlok (Michael Collins)","Ghost Rider (Danny Ketch)","Jesus Badalamente","Jim Dworman","Nick Fury","Nightmare","Noble Kale"],"name":"Deathlok #9-10","link":"deathlok_9-10","credits":["Gregory Wright","Tom Brevoort","Mike Manley","Mindy Newell","Denys Cowan"],"i":4753},{"year":1992,"characters":["Aunt May","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Parker Duplicate","Richard Parker Duplicate","Shocker","Spider-Man"],"name":"Amazing Spider-Man #364","link":"amazing_spider-man_364","credits":["Danny Fingeroth","Randy Emberlin","Mark Bagley","David Michelinie","Eric Fein"],"i":4754},{"year":1992,"characters":["Auric","Carlton Drake","Cloak","Dagger","Jonas Hale","Justin Hammer","Lightmaster","Namorita","Night Thrasher","Nova (Rich Rider)","Silver","Solo","Speedball","Sphinx","Spider-Man"],"name":"Amazing Spider-Man annual #26","link":"amazing_spider-man_annual_26","credits":["Don Hudson","Danny Fingeroth","Vince Evans","Keith Williams","Sam DeLaRosa","Scott McDaniel","Scott Kolins","David Michelinie","Eric Fein"],"i":4755},{"year":1992,"characters":["Abe Brown","Beetle","Bombshell","Boomerang","Carlton Drake","Cloak","Constrictor","Dagger","Discus","Firestar","Hydroman","Jonas Hale","Justin Hammer","Lightmaster","Namorita","Night Thrasher","Nova (Rich Rider)","Prowler","Rhino","Silhouette","Speed Demon","Sphinx","Spider-Man","Stiletto","Whiplash (Blacklash)","White Dragon"],"name":"Spectacular Spider-Man annual #12","link":"spectacular_spider-man_annual_4","credits":["Todd Smith","Don Hudson","Danny Fingeroth","Vince Evans","Glenn Herdling","Keith Williams","Scott McDaniel","David Michelinie","Eric Fein"],"i":4756},{"year":1992,"characters":["Auric","Beetle","Black Cat","Bombshell","Boomerang","Carlton Drake","Cloak","Constrictor","Dagger","Discus","Firestar","Hydroman","Jonas Hale","Justin Hammer","Lightmaster","Namorita","Night Thrasher","Nova (Rich Rider)","Rhino","Silhouette","Silver","Speed Demon","Speedball","Sphinx","Spider-Man","Stiletto","Whiplash (Blacklash)"],"name":"Web of Spider-Man annual #8","link":"web_of_spider-man_annual_8","credits":["Todd Smith","Don Hudson","Danny Fingeroth","Vince Evans","Keith Williams","Alan Barnum","Scott McDaniel","David Michelinie","Eric Fein"],"i":4757},{"year":1992,"characters":["Bart Jones","Bombshell","Constrictor","Firestar","Hydroman","Jonas Hale","Jupiter (Firestar's friend)","Justin Baldwin","Justin Hammer","Laura Dunham","Maddie Baldwin","Michael Shauneghann","Mr. Fantastic","Namorita","Night Thrasher","Nova (Rich Rider)","Omar Barrenos","Rhino","Roberta","Sea Urchin","Silhouette","Speed Demon","Speedball","Sphinx","Spider-Man","Stiletto","Whiplash (Blacklash)"],"name":"New Warriors annual #2","link":"new_warriors_annual_2","credits":["Mark Stegbauer","Al Milgrom","Fabian Nicieza","Danny Fingeroth","Jimmy Palmiotti","Keith Williams","Eric Fein","Brandon Peterson"],"i":4758},{"year":1993,"characters":["Algernon Crowe","Black Axe","Brendan Rathcoole","Bronwen Gryfnn","Death's Head II (Minion)","Eadmund Porlock","Gudrun Tyburn","Mephisto","Ormond Wychwood","Sunfire"],"name":"Black Axe #1-3","link":"black_axe_1-3","credits":["Rodney Ramos","Michael Bennent","Simon Jowett","Edmund Perryman"],"i":4759},{"year":1992,"characters":["Chemistro","Deathlok (Michael Collins)","Jesus Badalamente","Moses Magnum"],"name":"Deathlok #11","link":"deathlok_11","credits":["Dwayne McDuffie","Tom Brevoort","Mike Manley","Mindy Newell","Denys Cowan"],"i":4760},{"year":1992,"characters":["Andrea Strucker","Andreas Strucker","Angel","Arthur Barrington","Banshee","Beast","Birdy","Colossus","Cyclops","Dazzler","Dr. Cornelius","Forge","Gambit","House","Iceman","Jean Grey","Jubilee","Lila Cheney","Longshot","Major Domo","Matsuo Tsurayaba","Maverick","Moira MacTaggert","Mojo","Omega Red","Professor X","Psylocke","Rogue","Sabretooth","Spiral","Storm","Wolverine"],"name":"X-Men #4-7","link":"x-men_4-7","credits":["Bob Harrs","Scott Williams","Josef Rubinstein","Scott Lobdell","Suzanne Gaffney","John Byrne","Jim Lee","Bob Wiacek","Art Thibert"],"i":4761},{"year":1992,"characters":["Angel","Angelo Macon","Bantam (XSE)","Beef","Bevatron","Bishop","Black Queen (Selene)","Bonebreaker","Catseye","Colossus","Forge","Gamesmaster","Gateway","Henry Pym","Iceman","Jean Grey","Jetstream","Lady Deathstrike","Malcolm","Mikhail Rasputin","Mr. Fantastic","Murray Reese","Nick Fury","Pretty Boy","Professor X","Randall","Roulette","Senator Kelly","Shinobi Shaw","Skullbuster II","Storm","Sunfire","Tarot","Trevor Fitzroy","Trish Tilby","Wade Cole","White Bishop (Donald Pierce)","White Queen (Emma Frost)"],"name":"Uncanny X-Men #281-286","link":"uncanny_x-men_281-286","credits":["Karl Altstaetter","Whilce Portacio","Scott Williams","Bob Harras","Scott Lobdell","Suzanne Gaffney","John Byrne","Jim Lee","Al Milgrom- Inker","Art Thibert"],"i":4762},{"year":1992,"characters":["Alistaire Stuart","Captain Britain","Cerise","Dai Thomas","Executioner (616 Crazy Gang)","Jester (616 Crazy Gang)","Joyboy","Knave (616 Crazy Gang)","Kylun","Lockheed","Mastermind (Computer)","Meggan","Nightcrawler","Red Queen (616 Crazy Gang)","Shadowcat (Kitty Pryde)","Tweedledope (616 Crazy Gang)","Widget"],"name":"Excalibur #54","link":"excalibur_54","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":4763},{"year":1992,"characters":["Nightcrawler","Wolverine"],"name":"Marvel Comics Presents #101-108 (Wolverine/Nightcrawler)","link":"marvel_comics_presents_101-108","credits":["Scott Lobdell","Gene Colan","Mark Powers","Al Williamson","Terry Kavanagh"],"i":4764},{"year":1992,"characters":["Albert","Beast","Cyclops","Elsie Dee","Forge","Gambit","Gateway","Hunter In Darkness","Jean Grey","Jubilee","Masque","Mojo","Mr. Fantastic","Mystique","Nick Fury","Professor X","Spiral","Storm","Thing","Wolverine"],"name":"Wolverine #51-53","link":"wolverine_51-53","credits":["Marc Silvestri","Bob Harras","Andy Kubert","Suzanne Gaffney","Klaus Janson","Hilary Barta","Larry Hama","Dan Green"],"i":4765},{"year":1992,"characters":["Black Blade","Gambit","Jubilee","Lady Deathstrike","Mariko Yashida","Matsuo Tsurayaba","Reiko","Silver Fox","Silver Samurai","Skullbuster II","Sunfire","Wolverine","Yukio"],"name":"Wolverine #55-57","link":"wolverine_55-57","credits":["Al Milgrom","Marc Silvestri","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Larry Hama","Dan Green"],"i":4766},{"year":1992,"characters":["Billy Hansen","Deathlok (Michael Collins)","Jesus Badalamente","Nick Collins","Nick Fury","Powderkeg","Tracy Collins"],"name":"Deathlok #12-15","link":"deathlok_12-15","credits":["Jimmy Palmiotti","John Heebink","Dwayne McDuffie","Mike Manley","Adam McClellan","Tom Brevoort","Mindy Newell","Denys Cowan"],"i":4767},{"year":1992,"characters":["Colonel De Sade","Punisher"],"name":"Punisher Summer Special #2","link":"punisher_summer_special_2","credits":["Mick Gray","Chuck Dixon","Kevin Kobasic","Don Daley","Terry Austin","Mark McKenna","Tim Tuohy","Mike McKone","John Hinkleton","Pat Mills","Henry Flint"],"i":4768},{"year":1993,"characters":["Aldo Ferro","Carol Hines","Cyclops","Gambit","Jean Grey","John Wraith","Jubilee","Mariko Yashida","Mastodon","Matsuo Tsurayaba","Maverick","Nick Fury","Professor X","Sabretooth","Shiva","Silver Fox","Sunfire","Wolverine","Yukio"],"name":"Wolverine #60-65","link":"wolverine_60-65","credits":["Mark Pacella","Steve Biasi","Scott Hanna","Bob Harras","Keith Williams","Dave Hoover","Mark Texeira","Suzanne Gaffney","Dan Panosian","Lisa Patrick","Larry Hama"],"i":4769},{"year":1992,"characters":["Captain Britain","Cerise","Dr. Doom","Kylun","Meggan","Nightcrawler","Shadowcat (Kitty Pryde)"],"name":"Excalibur: XX Crossing","link":"excalibur_xx_crossing","credits":["Ron Lim","Steve Lightle","Brian Stelfreeze","Karl Story","Jae Lee","Jimmy Palmiotti","Scott Lobdell","Shawn McManus","Rick Leonardi","Joe Madureira","Mark Powers","Al Williamson","Alan Gordon","Terry Kavanagh","Malcolm Jones III"],"i":4770},{"year":1992,"characters":["Jane Dixon","Ken Reid","NFL Superpro"],"name":"NFL Superpro #6","link":"nfl_superpro_6","credits":["Jose Delbo","Buzz Dixon","Mike DeCarlo","David Wohl"],"i":4771},{"year":1992,"characters":["Abe Zimmer","Erica Sondheim","Felix Alvarez","Inazuma","Iron Man","Justin Hammer","Kaminari","Kaze","Nick Fury","Osamu Moroboshi","War Machine"],"name":"Iron Man #280-283","link":"iron_man_280-283","credits":["Nel Yomtov","Richard Ashford","Kevin Hopgood","Len Kaminski","Bob Wiacek","Andrew Pepoy"],"i":4772},{"year":1992,"characters":["Dr. Doom","Frenchie","Marlene Alraune","Microchip","Moon Knight","Psycho","Punisher","Shadowknight","Sheriff","Sigmund"],"name":"Moon Knight #35-38","link":"moon_knight_35-38","credits":["Tom Palmer","Ron Garney","Joey Cavalieri","Sarra Mossoff","Terry Kavanagh"],"i":4773},{"year":1992,"characters":["Analisa Medina","Dakota North","Daryl 'Troop' Andrews","Hardcore","Kickback","Luke Cage","Micky Hamilton","Nitro","Teague","Tombstone"],"name":"Cage #2","link":"cage_2","credits":["Chris Ivy","Dwayne Turner","Kelly Corvese","Marc McLaurin"],"i":4774},{"year":1992,"characters":["Punisher"],"name":"Punisher #63","link":"punisher_63","credits":["Todd Smith","Chuck Dixon","Co.","Don Daley","Josef Rubinstein","Tim Tuohy"],"i":4775},{"year":1992,"characters":["Cover Girl","Don G","Donna Kraft","Dr. Doom","Fingers","Frenchie","Moon Knight","Mr. Fantastic","Penny Annie","Sigmund","Stash"],"name":"Moon Knight #39-40","link":"moon_knight_39-40","credits":["Gary Kwapisz","Tom Palmer","Ron Garney","Joey Cavalieri","Sarra Mossoff","Terry Kavanagh"],"i":4776},{"year":1992,"characters":["Analisa Medina","Cruz Bushmaster","Dakota North","Daryl 'Troop' Andrews","Hardcore","Kickback","Luke Cage","Micky Hamilton","Microchip","Nitro","Punisher","Steele","Teague","Tombstone"],"name":"Cage #3-4","link":"cage_3-4","credits":["Chris Ivy","Dwayne Turner","Kelly Corvese","Marc McLaurin"],"i":4777},{"year":1992,"characters":["Cecilia Perez","Ghost Rider (Danny Ketch)","Noble Kale","Rambo (dog)","Rick Sheridan","Sleepwalker","Tolliver Smith"],"name":"Sleepwalker #10-11","link":"sleepwalker_10-11","credits":["Bob Budiansky","Don Daley","Mike Manley","Tim Tuohy","Bret Blevins"],"i":4778},{"year":1992,"characters":["Analisa Medina","Blasting Cap","Coldfire","Crazylegs","Cruz Bushmaster","D.W. Griffith","Dakota North","Daryl 'Troop' Andrews","Hardcore","Hawkeye","Iron Man","James Lucas (Geary)","Jeryn Hogarth","Kid Thor","Living Lightning","Luke Cage","Micky Hamilton","Mr. Drewston","Noah Burstein","Razor Cut","Scarlet Witch","Steele","USAgent","Vision","Wonder Man"],"name":"Cage #5-8","link":"cage_5-8","credits":["Dwayne Turner","Kelly Corvese","Marc McLaurin","Christopher Ivy"],"i":4779},{"year":1992,"characters":["Ast (Time-Keeper)","Ast (Time-Twister)","Immortus","Tempus","Uatu the Watcher","Vort (Time-Keeper)","Vort (Time-Twister)","Zanth (Time-Keeper)","Zanth (Time-Twister)"],"name":"What If? #35-39","link":"what_if_35-39","credits":["Don Hudson","Mark Pacella","Craig Anderson","Ian Akin","M.C. Wyman","Roy Thomas","Dave Hoover","Jean-Marc Lofficier","Marshall Rogers","Dan Panoisian","Steve Montano","Sam DeLaRosa","Rodney Ramos","Sam DelaRosa","Joe Phillips","Michael Bair","Gavin Curtis","John Lewandowski"],"i":4780},{"year":1992,"characters":["Jubilee","Professor X","Terror (Shreck)","Wolverine"],"name":"Wolverine #58-59","link":"wolverine_58-59","credits":["D.G. Chichester","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Darick Robertson"],"i":4781},{"year":1992,"characters":["Nightcrawler"],"name":"Marvel Comics Presents #110 (Nightcrawler)","link":"marvel_comics_presents_110_nig","credits":["Mark Powers","Tim Tuohy","Mark Runyan","Barry Dutter","Terry Kavanagh"],"i":4782},{"year":1992,"characters":["Adam Warlock","Drax the Destroyer","Gamora","High Evolutionary","Human Torch","Man-Beast","Moondragon","Mr. Fantastic","Nobilus","Pip the Troll","Soul Gem","Triax"],"name":"Warlock and the Infinity Watch #3-4","link":"warlock_and_the_infinity_watch_2","credits":["Craig Anderson","Terry Austin","Jim Starlin","Rick Leonardi","John Lewandowski"],"i":4783},{"year":1993,"characters":["Aldo Ferro","Birdy","Graydon Creed","Mystique","Sabretooth","Wolverine"],"name":"Sabretooth #1-4","link":"sabretooth_1-4","credits":["Steve Biasi","Bob Harras","Mark Texeira","Larry Hama","Michael Bair"],"i":4784},{"year":1992,"characters":["Angel","Bishop","Colossus","Forge","Iceman","Jean Grey","Malcolm","Professor X","Randall","Storm","Styglut"],"name":"Uncanny X-Men #287","link":"uncanny_x-men_287","credits":["John Romita Jr.","Christopher Ivy","Bill Sienkiewicz","Scott Williams","Bob Harras","Scott Lobdell","Dan Panosian","Jim Lee","Bob Wiacek"],"i":4785},{"year":1992,"characters":["Cannonball","Dr. Tucker","Forearm","Hairbag","Havok","Madrox the Multiple Man","Polaris","Quicksilver","Reaper","Slab","Strobe","Strong Guy","Stryfe","Tempo","Thumbellina","Valerie Cooper","Vic Chalker","Vicky Wang","Wildside","Wolfsbane","Zero"],"name":"X-Factor #77","link":"x-factor_77","credits":["Al Milgrom","Peter David","Bob Harras","Suzanne Gaffney","Larry Stroman"],"i":4786},{"year":1992,"characters":["Ken Reid","NFL Superpro","Repulsor"],"name":"NFL Superpro #7","link":"nfl_superpro_7","credits":["Mike DeCarlo","Matt Morra","Jose Delbo","David Wohl","Evan Skolnick"],"i":4787},{"year":1992,"characters":["Blackout (Demon)","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Noble Kale","Paulie Stratton","Shriker (Jack D'Auria)","Stacy Dolan","Stern","Thomas Dolan","Vengeance"],"name":"Ghost Rider #25","link":"ghost_rider_25_1","credits":["Ron Wagner","Bobbie Chase","Mike Witherby","Howard Mackie"],"i":4788},{"year":1992,"characters":["Cyclops","Dr. Tucker","Forearm","Hairbag","Havok","Madrox the Multiple Man","Mr. Sinister","Polaris","Professor X","Quicksilver","Reaper","Strobe","Strong Guy","Stryfe","Tempo","Valerie Cooper","Vicky Wang","Wildside","Wolfsbane","Zero"],"name":"X-Factor #78","link":"x-factor_78","credits":["Al Milgrom","Peter David","Bob Harras","Larry Stroman","Brandon Peterson"],"i":4789},{"year":1992,"characters":["Beast","Bella Donna Boudreaux","Bishop","Cyclops","Forge","Gambit","Ghost Rider (Danny Ketch)","Jean Grey","Jubilee","Noble Kale","Professor X","Psylocke","Rogue","Storm","Wolverine"],"name":"X-Men #8","link":"x-men_8","credits":["Bob Harras","Scott Lobdell","Suzanne Gaffney","Jim Lee","Art Thibert"],"i":4790},{"year":1992,"characters":["Beast","Bella Donna Boudreaux","Cyclops","Gambit","Ghost Rider (Danny Ketch)","Jubilee","Julien Boudreaux","Noble Kale","Psylocke","Rogue","Wolverine"],"name":"Ghost Rider #26","link":"ghost_rider_26_1","credits":["Ron Wagner","Bobbie Chase","Mike Witherby","Howard Mackie"],"i":4791},{"year":1992,"characters":["Beast","Bella Donna Boudreaux","Cyclops","Gambit","Ghost Rider (Danny Ketch)","Jubilee","Noble Kale","Psylocke","Rogue","Wolverine"],"name":"X-Men #9","link":"x-men_9","credits":["Bob Harras","Scott Lobdell","Suzanne Gaffney","Jim Lee","Art Thibert"],"i":4792},{"year":1992,"characters":["Beast","Bella Donna Boudreaux","Clara Menninger","Cyclops","Gambit","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Jubilee","Julien Boudreaux","Noble Kale","Psylocke","Rogue","Wolverine"],"name":"Ghost Rider #27","link":"ghost_rider_27_1","credits":["Christian Cooper","Mike Witherby","Ron Wagner","Bobbie Chase","Howard Mackie"],"i":4793},{"year":1992,"characters":["Blackout (Demon)","Caretaker","Doris Ketch","Dr. Strange","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Noble Kale","Stacy Dolan","Stern","Thomas Dolan","Vengeance"],"name":"Ghost Rider #28","link":"ghost_rider_28_1","credits":["Bobbie Chase","Andy Kubert","Joe Kubert","Howard Mackie"],"i":4794},{"year":1992,"characters":["Blackout (Demon)","Clara Menninger","Craig Blaze","Dr. Strange","Eli McIntyre","Emma Blaze","George Waters","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Lilith (Demon Mother)","Marianne Waters","Noble Kale","Pilgrim","Red Fowler","Roxanne Simpson","Wolff"],"name":"Spirits of Vengeance #1","link":"spirits_of_vengeance_1","credits":["Bobbie Chase","Adam Kubert","Howard Mackie"],"i":4795},{"year":1992,"characters":["Agent-X (Next Wave)","Beast","Frederick Penner","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Noble Kale","Snare (Next Wave)","Turk (Next Wave)","Wolverine"],"name":"Ghost Rider #29","link":"ghost_rider_29","credits":["Andy Kubert","Chris Cooper","Joe Kubert","Bobbie Chase","Howard Mackie"],"i":4796},{"year":1992,"characters":["Blackout (Demon)","Bloodthirst","Fang (Lilan)","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Jacob Weisenthal","Joe 'Robbie' Robertson","Lilith (Demon Mother)","Martine Bancroft","Morbius","Nakota","Noble Kale","Pilgrim","Spider-Man"],"name":"Morbius #1","link":"morbius_1","credits":["Ron Wagner","Bobbie Chase","Mike Witherby","Len Kaminski"],"i":4797},{"year":1992,"characters":["Centurious the Soulless Man","Clara Menninger","Eli McIntyre","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Lilith (Demon Mother)","Nakota","Nightmare","Noble Kale","Rev. Styge","Steel Vengeance","Wolff"],"name":"Spirits of Vengeance #2","link":"spirits_of_vengeance_2","credits":["Bobbie Chase","Chris Warner","Adam Kubert","Howard Mackie"],"i":4798},{"year":1992,"characters":["Doris Ketch","Dreamstalker","Ghost Rider (Danny Ketch)","Nightmare","Noble Kale","Shriker (Jack D'Auria)","Stacy Dolan","Thomas Dolan"],"name":"Ghost Rider #30","link":"ghost_rider_30","credits":["Bobbie Chase","Andy Kubert","Joe Kubert","Howard Mackie"],"i":4799},{"year":1992,"characters":["Darkhold Dwarf","Doc","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Lilith (Demon Mother)","Louise Hastings","Modred the Mystic","Nakota","Nash Salvato","Noble Kale","Pilgrim","Randolph DeGuzman","Sam Buchanan","Victoria Montesi","Vittorio Montesi"],"name":"Darkhold #1","link":"darkhold_1","credits":["Bobbie Chase","Mark McKenna","Richard Case","Chris Cooper"],"i":4800},{"year":1992,"characters":["Blackout (Demon)","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Lilith (Demon Mother)","Nakota","Noble Kale","Pilgrim","Skinner"],"name":"Spirits of Vengeance #3","link":"spirits_of_vengeance_3","credits":["Bobbie Chase","Chris Warner","Adam Kubert","Howard Mackie"],"i":4801},{"year":1992,"characters":["Blade","Dr. Strange","Frank Drake","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hannibal King","Lilith (Demon Mother)","Marlene McKenna-Drake","Meatmarket","Nakota","Noble Kale","Pilgrim"],"name":"Nightstalkers #1","link":"nightstalkers_1","credits":["D.G. Chichester","Ron Garney","Bobbie Chase","Tom Palmer"],"i":4802},{"year":1992,"characters":["Blackout (Demon)","Blade","Doc","Dr. Strange","Fang (Lilan)","Frank Drake","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hannibal King","Lilith (Demon Mother)","Louise Hastings","Meatmarket","Morbius","Nakota","Noble Kale","Pilgrim","Sam Buchanan","Victoria Montesi"],"name":"Ghost Rider #31","link":"ghost_rider_31","credits":["Bobbie Chase","Andy Kubert","Joe Kubert","Howard Mackie"],"i":4803},{"year":1992,"characters":["Dr. Strange","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Noble Kale","Stern"],"name":"Ghost Rider #32","link":"ghost_rider_32","credits":["Bobbie Chase","Matthew Morra","Bret Blevins","Howard Mackie"],"i":4804},{"year":1992,"characters":["Ajax","Atalanta","Crimson Dynamo V","Fantasma","Hector","Hulk","Igor Drenkov","Perun","Red Guardian (Steel Guardian)","Rick Jones","Ulysses","Vostok"],"name":"Hulk #393","link":"hulk_393","credits":["Herb Trimpe","Peter David","Mark Farmer","Dale Keown","Charles Barnett III","Chris Cooper","Bobbie Chase"],"i":4805},{"year":1992,"characters":["Angel","Beast","Bishop","Colossus","Cyclops","Forge","Iceman","Jean Grey","Jubilee","Opal Tanaka","Professor X","Storm","Styglut"],"name":"Uncanny X-Men #288","link":"uncanny_x-men_288","credits":["Whilce Portacio","Bill Sienkiewicz","Bob Harras","Andy Kubert","Scott Lobdell","John Byrne","Jim Lee"],"i":4806},{"year":1992,"characters":["Captain America","Crossbones","Ken Reid","NFL Superpro","Sanction"],"name":"NFL Superpro #8","link":"nfl_superpro_8","credits":["Herb Trimpe","Matthew Morra","Mike DeCarlo","David Wohl"],"i":4807},{"year":1992,"characters":["Ajax","Atalanta","Betty Ross","Hector","Hulk","Marlo Chandler","Paris","Rick Jones","Trauma","Ulysses"],"name":"Hulk #394","link":"hulk_394","credits":["Andrew Wildman","Peter David","Christopher Ivy","Chris Cooper","Bobbie Chase"],"i":4808},{"year":1992,"characters":["Punisher"],"name":"Punisher War Journal #42","link":"punisher_war_journal_42","credits":["Chuck Dixon","Don Daley","Todd Fox","Fred Fredericks","Tim Tuohy"],"i":4809},{"year":1992,"characters":["Angel","Bishop","Forge","Hiro","Iceman","Jean Grey","Madeline Drake","Mikhail Rasputin","Mystique","Opal Tanaka","Professor X","Storm","William Drake"],"name":"Uncanny X-Men #289-290","link":"uncanny_x-men_289-290","credits":["Whilce Portacio","Scott Williams","Bob Harras","Scott Lobdell","Suzanne Gaffney"],"i":4810},{"year":1992,"characters":["Dreamstalker","Nightmare","Rambo (dog)","Rick Sheridan","Sleepwalker"],"name":"Sleepwalker #12","link":"sleepwalker_12","credits":["Bob Budiansky","Jimmy Palmiotti","Don Daley","Tim Tuohy","Joe Quesada","Michael Bair"],"i":4811},{"year":1992,"characters":["Arize","Beast","Cyclops","Forge","Gambit","Gog (Mojoverse)","Magog (Mojoverse)","Major Domo","Mojo","Mojo II","Professor X","Psylocke","Quark","Rogue","Wolverine"],"name":"X-Men annual #1","link":"x-men_annual_1","credits":["Adam Hughes","Brian Stelfreeze","and Mark Texiera","P. Craig Russell","Fabian Nicieza","Harry Candelario","Bob Harras","Dan Panoisian","Joe Rubinstein","Suzanne Gaffney","Dan Panosian","Jim Lee","Stuart Immonen","Greg Capullo"],"i":4812},{"year":1992,"characters":["Angel","Arize","Beast","Bishop","Colossus","Cyclops","Iceman","Jean Grey","Mojo II","Professor X","Storm","Wolverine"],"name":"Uncanny X-Men annual #16","link":"uncanny_x-men_annual_16","credits":["Herb Trimpe","Joseph Rubinstein","Fabian Nicieza","Skip Dietz","Jae Lee","Jan Anton Harps","Bob Harras","Tom Palmer","Suzanne Gaffney","Chris Cooper"],"i":4813},{"year":1992,"characters":["Arize","Havok","Madrox the Multiple Man","Major Domo","Mojo","Polaris","Quicksilver","Spiral","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor annual #7","link":"x-factor_annual_7","credits":["Peter David","Fabian Nicieza","Bob Harras","Josef Rubinstein","Suzanne Gaffney","Joe Madureira","Darick Robertson","Joe Quesada","Andrew Pepoy"],"i":4814},{"year":1992,"characters":["Artie Maddicks","Leech","Wiz Kid"],"name":"X-Force annual #1","link":"x-force_annual_1","credits":["Fabian Nicieza","Harry Candelario","Bob Harras","Suzanne Gaffney","Dan Panosian","Greg Capullo","Gavin Curtis"],"i":4815},{"year":1992,"characters":["Dr. Strange"],"name":"Marvel Super Heroes #12 (Dr. Strange)","link":"marvel_super_heroes_12_dr_stra","credits":["Armando Gil","Dan Cuddy","Rob Tokar","Roy Thomas","Jean-Marc Lofficier","Brian Postman","Stuart Hopen"],"i":4816},{"year":1993,"characters":["Danika Trevani","Doris Ketch","Fiona McCormick","Ghost Rider (Danny Ketch)","Luz Delgado","Madcap","Mei Lin","Noble Kale","Stern","Tyler Meagher"],"name":"Ghost Rider #33","link":"ghost_rider_33","credits":["Matthew Morra","Howard Mackie","Al Williamson","Bobbie Chase","Bret Blevins"],"i":4817},{"year":1992,"characters":["Bucky (Julia Winter)","Giscard Epurer","Nomad"],"name":"Nomad #1","link":"nomad_1_1","credits":["S. Clarke Hawbaker","Fabian Nicieza","Glenn Herdling","Mark McKenna","Pat Garrahy"],"i":4818},{"year":1992,"characters":["Clea","Dr. Strange","Imei Chang","Wolverine","Wong"],"name":"Doctor Strange #41","link":"doctor_strange_41_1","credits":["Mike Rockwitz","Geof Isherwood","Roy Thomas","Jean-Marc Lofficier","Barry Dutter"],"i":4819},{"year":1992,"characters":["Alexis Primo","Dr. Strange","Hellfire (Mikal Drakonmegas)","Jessie Drakonmegas","Rekrab","Satan","Terror (Shreck)"],"name":"Terror Inc. #1-5","link":"terror_inc_1-5","credits":["D.G. Chichester","Jorge Zaffino","Tom Danning","Marc McLaurin"],"i":4820},{"year":1992,"characters":["Daredevil"],"name":"Daredevil #304","link":"daredevil_304","credits":["Ralph Macchio","D.G. Chichester","Ron Garney","Pat Garrahy","Bud LaRosa"],"i":4821},{"year":1992,"characters":["Achilles","Agamemnon","Ajax","Atalanta","Betty Ross","Delphi","Doc Samson","Dr. Strange","Hector","Hulk","Lucian Aster","Marlo Chandler","Mentallo","Paris","Rick Jones","Shanzar","Silver Surfer","Sub-Mariner","Thing","Ulysses","Wong"],"name":"Hulk annual #18","link":"hulk_annual_18","credits":["Peter David","Tony Harris","Travis Charest","Jimmy Palmiotti","Josef Rubinstein","James Robinson","Kevin Maguire","Brad Vancata","Joe Phillips","Evan Skolnick","Bobbie Chase","Dan Green","Gary Barker"],"i":4822},{"year":1992,"characters":["Dr. Strange","Hulk","Lucian Aster","Namorita","Neptune","Rick Jones","Shanzar","Silver Surfer","Spitfire","Sub-Mariner","Wild One"],"name":"Namor annual #2","link":"namor_annual_2","credits":["Tom Raney","Christopher Ivy","James Fry","Ron Marz","Terry Kavanagh"],"i":4823},{"year":1992,"characters":["Delphi","Dr. Strange","Firelord","Hulk","Lucian Aster","Nebula","Rick Jones","Shanzar","Silver Surfer","Starfox","Sub-Mariner","Wild One"],"name":"Silver Surfer annual #5","link":"silver_surfer_annual_5","credits":["Tom Christopher","Karl Altstaetter","Craig Anderson","Ron Marz","Tom Morgan","John Lewandowski"],"i":4824},{"year":1992,"characters":["Aggamon","Ajax","Baron Blood (Victor Strange)","Clea","Dormammu","Dr. Strange","House of Shadows","Hulk","Lucian Aster","Morgana Blessing","Paris","Rick Jones","Rintrah","Shanzar","Silver Surfer","Sub-Mariner","Ulysses","Wild One"],"name":"Dr. Strange annual #2","link":"dr_strange_annual_2","credits":["E.R. Cruz","Jim Sanders III","Jimmy Palmiotti","M.C. Wyman","Roy Thomas","Dave Hoover","Frank Lopez","Mike Rockwitz","Ken Branch","Jean-Marc Lofficier","Bob Petrecca","Barry Dutter"],"i":4825},{"year":1992,"characters":["Daredevil","Foggy Nelson","Karen Page","Spider-Man","Terror (Shreck)"],"name":"Daredevil #305-306","link":"daredevil_305-306","credits":["Ralph Macchio","Christopher Ivy","D.G. Chichester","Scott McDaniel","Pat Garrahy"],"i":4826},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Carol Danvers","Crystal","Hercules","Laura Lipton","Luna","Magdalene","Marilla","Miles Lipton","Proctor","Vision"],"name":"Avengers #348","link":"avengers_348","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Kirk Jarvinen","Pat Garrahy"],"i":4827},{"year":1992,"characters":["Ashley Kafka","Aunt May","Gregory Bestman","Harry Osborn","J. Jonah Jameson","Liz Allan","Mary Jane Watson","Molten Man","Nocturne (Angela Cairn)","Normie Osborn","Rhino","Spider-Man","Vulture"],"name":"Spectacular Spider-Man #186-190","link":"spectacular_spider-man_186-190","credits":["Danny Fingeroth","Bob McLeod","Sal Buscema","J.M. DeMatteis","Eric Fein"],"i":4828},{"year":1992,"characters":["Cyber","Havok","Madrox the Multiple Man","Polaris","Prodigal","Quicksilver","Rahpsody","Shrew","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor #79-81","link":"x-factor_79-81","credits":["Al Milgrom","Peter David","Jim Fern","Bob Harras","Suzanne Gaffney","Larry Stroman"],"i":4829},{"year":1992,"characters":["Anna Sablinova","Dmitri Petrovitch","Doug Powell","Joy Mercado","Lorna Kleinfeldt","Sandman","Silver Sable","Spider-Man","Uncle Morty"],"name":"Silver Sable & the Wild Pack #1","link":"silver_sable_the_wild_pack_1","credits":["Craig Anderson","Steven Butler","Gregory Wright","Jim Sanders III"],"i":4830},{"year":1992,"characters":["Instant Replay","NFL Superpro"],"name":"NFL Superpro #9","link":"nfl_superpro_9","credits":["Evan Skolnick","Don Hudson","Jose Delbo","David Wohl"],"i":4831},{"year":1992,"characters":["Punisher"],"name":"Punisher Back To School Special #1","link":"punisher_back_to_school_specia","credits":["Jeffrey Albrecht","Chuck Dixon","Alexander Morrissey","Don Daley","Walter McDaniel","JJ. Birch","John Ridgeway","Mark Nelson","Tom Brevoort","Tim Tuohy","Mike Kanterovich","Barry Dutter","Kevin Kobasic"],"i":4832},{"year":1993,"characters":["Caretaker","Death Ninja","Doris Ketch","Ghost Rider (Danny Ketch)","Linda Wei","Noble Kale"],"name":"Ghost Rider #34","link":"ghost_rider_34","credits":["Matthew Morra","Howard Mackie","Al Williamson","Bobbie Chase","Bret Blevins"],"i":4833},{"year":1992,"characters":["Cheryl Colon","Darkhawk","Grace Powell","Jason Powell","Jonathan Powell","Mitch 'Madman' Marley","Ned Dobbs","St. Johnny","Volga Belle"],"name":"Darkhawk #16-18","link":"darkhawk_16-18","credits":["Danny Fingeroth","John Heebink","Nel Yomtov","Ande Parks","Mike Manley","Adam McClellan","Richard Ashford","Ricardo Villagran"],"i":4834},{"year":1992,"characters":["Alyssa Conover","C.W. Fong","Flo Sheridan","Human Torch","Invisible Woman","Mr. Fantastic","Rambo (dog)","Rick Sheridan","Sleepwalker","Spectra","Thing","Tolliver Smith","Whitney Cooper","William Sheridan"],"name":"Sleepwalker #13-16","link":"sleepwalker_13-16","credits":["Bob Budiansky","Don Daley","Mike Manley","Tim Tuohy","Bret Blevins"],"i":4835},{"year":1992,"characters":["Andie Sterman","Bucky (Julia Winter)","Henry Peter Gyrich","Jack Norriss","Nomad","USAgent","Valerie Cooper"],"name":"Nomad #2","link":"nomad_2_1","credits":["Mark McKenna","S. Clarke Hawbaker","Glenn Herdling","Fabian Nicieza"],"i":4836},{"year":1992,"characters":["Microchip","Punisher"],"name":"Punisher War Journal #43","link":"punisher_war_journal_43","credits":["Don Daley","Fred Fredericks","Tim Tuohy","Val Mayerik","Rich Rainey"],"i":4837},{"year":2002,"characters":["Al the Alien","Big Enilwen","Blonde Phantom","Mary McGrill","Poppa Wheeler","Razorback","Retread","Rocket Raccoon","She-Hulk","Spragg the Living Mountain","Taryn O'Connell","U.S. Archer","Vuk","Wide Load Annie","Wyatt Wingfoot","Xemnu the Titan"],"name":"She-Hulk #40-46","link":"she-hulk_40-46","credits":["Renee Witterstaetter","John Byrne"],"i":4838},{"year":1993,"characters":["Blonde Phantom","Invisible Woman","Morris Walters","Mr. Fantastic","Razorback","She-Hulk","Taryn O'Connell","Thing","Titania","Wyatt Wingfoot"],"name":"She-Hulk #48-49","link":"she-hulk_48-49","credits":["Renee Witterstaetter","John Byrne"],"i":4839},{"year":1992,"characters":["Alexander Ryking","Beast","Cyclops","Dazzler","Gambit","Jubilee","Lila Cheney","Longshot","Major Domo","Maverick","Mojo","Mojo II","Professor X","Psylocke","Rogue","Warhawk","Wolverine"],"name":"X-Men #10-11","link":"x-men_10-11","credits":["Karl Altstaetter","Scott Williams","Bob Harras","Scott Lobdell","and Dan Panosian","Jim Lee","Mark Texeira","Bob Wiacek"],"i":4840},{"year":1992,"characters":["Ares","Black Knight (Dane Whitman)","Black Widow","Crystal","Hera","Hercules","Taylor Madison","Thunderstrike","Vision"],"name":"Avengers #349","link":"avengers_349","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":4841},{"year":1993,"characters":["Blonde Phantom","Hector Devasquez","She-Hulk","Thing","War Zone"],"name":"She-Hulk #50","link":"she-hulk_50","credits":["Adam Hughes","Walt Simonson","Mike DeCarlo","Renee Witterstaetter","Terry Austin","Todd Britton","Frank Miller","John Byrne","Dave Gibbons","Wendy Pini","Michael Eury","Howard Chaykin","Howard Mackie"],"i":4842},{"year":1992,"characters":["Audit","Badhand","Blackheart","Brendan Rathcoole","Clementine","Gregory (Warheads)","Iron Man","Leona McBride","Master Key","Misha (Warheads)","Mr. Grant","Nick Fury","Perez (Warheads)","Stacy Arnheim","Tigon Liger","War Machine"],"name":"Warheads #1-3","link":"warheads_1-3","credits":["John Freeman","Jon Beeston","Gary Russell","Gary Erskine","Geoff Senior","Lee Sullivan","Nick Vince"],"i":4843},{"year":1992,"characters":["Alexander Goodwin Pierce","Algernon Crowe","Badhand","Brendan Rathcoole","Bronwen Gryfnn","Eadmund Porlock","Gudrun Tyburn","Kate Neville","Killpower","Motormouth","Network Nina","Nick Fury","Oonagh Mullarkey","Ormond Wychwood","Punisher"],"name":"Motormouth #3-5","link":"motormouth_3-5","credits":["Graham Marks","Cam Smith","Jacqui Papp","Phil Gascoine","Gary Frank"],"i":4844},{"year":1992,"characters":["Audit","Blackheart","Boom Boom","Brendan Rathcoole","Cable (Adult)","Cannonball","Clementine","Copycat","Death's Head II (Minion)","Feral","Gregory (Warheads)","Leona McBride","Master Key","Misha (Warheads)","Mr. Grant","Perez (Warheads)","Shatterstar","Stacy Arnheim","Tigon Liger","Tuck","Warpath"],"name":"Warheads #4-5","link":"warheads_4-5","credits":["Stuart Jennett","John Freeman","Garry Russell","David Taylor","Nick Vince","Cam Smith"],"i":4845},{"year":1992,"characters":["Algernon Crowe","Angel of Death","Beast","Brendan Rathcoole","Bronwen Gryfnn","Bug (Encoders)","Cyclops","Dark Angel","Eadmund Porlock","Gudrun Tyburn","Guide","Iceman","Mephisto","Ormond Wychwood","Professor X","Psylocke","Ranulph Haldane","Rogue","Signal","Storm","Vakume","Wolverine"],"name":"Hell's Angel #1-5","link":"hells_angel_1-5","credits":["Helen Stone","Geoff Senior","Cam Smith","Bernadette Jaye"],"i":4846},{"year":1993,"characters":["Adam Crown","Albion","Breeze James","Francesca Grace Lexley","Green Knight","Misha (Warheads)","Sir Gawain","Spider-Man","Spitfire","Stacy Arnheim","Tigon Liger","Union Jack (Joey Chapman)"],"name":"Knights of Pendragon #6-9","link":"knights_of_pendragon_6-9","credits":["Stuart Bartlett","Martin Griffith","Bambos Georgious","Jeff Anderson","John Tomlinson","John Royle","Dan Abnett","Michael Eve"],"i":4847},{"year":1993,"characters":["Algernon Crowe","Audit","Blackheart","Brendan Rathcoole","Bronwen Gryfnn","Bysshe","Che","Clementine","Cyclops","Death's Head II (Minion)","Eadmund Porlock","Gregory (Warheads)","Gudrun Tyburn","Jubilee","Leona McBride","Lord Chaos","Master Order","Mephisto","Misha (Warheads)","Mr. Grant","Ormond Wychwood","Perez (Warheads)","Psylocke","Silver Surfer","Stacy Arnheim","Storm","Tigon Liger","Tuck","Wolverine"],"name":"Warheads #6-9","link":"warheads_6-9","credits":["Stuart Jennett","Tim Quinn","John Freeman","Warwick Gray","Adolfo Buylla","Simon Coleby","Rodney Ramos","Charles Adlard","Sean Hardy","Bambos Georgiou","Nick Vince"],"i":4848},{"year":1993,"characters":["Angel","Beast","Colossus","Cyclops","Death's Head II (Minion)","Evelyn Necker","Gambit","Jubilee","Kite","Phaedra","Psylocke","Rogue","Tuck","Wolverine"],"name":"Death's Head II #1-4","link":"deaths_head_ii_1-4_1","credits":["Liam Sharp","Tim Quinn","John Freeman","Rodney Ramos","Steve Whitaker","Bryan Hitch","Andy Lanning","Dan Abnett","Cam Smith"],"i":4849},{"year":1992,"characters":["Algernon Crowe","Angel of Death","Brendan Rathcoole","Bronwen Gryfnn","Captain Britain","Dark Angel","Eadmund Porlock","Gudrun Tyburn","Guide","Nightcrawler","Ormond Wychwood","Shadowcat (Kitty Pryde)"],"name":"Dark Angel #6","link":"dark_angel_6","credits":["Simon Furman","Gary Russell","Bernadette Jaye","Paul Neary","Kevin Hopgood","Sean Hardy","Andy Lanning","Gary Frank"],"i":4850},{"year":1993,"characters":["Algernon Crowe","Blackheart","Brendan Rathcoole","Che","Clementine","Eadmund Porlock","Gregory (Warheads)","Leona McBride","Mephisto","Misha (Warheads)","Perez (Warheads)","Stacy Arnheim","Tigon Liger"],"name":"Warheads #10","link":"warheads_10","credits":["John Freeman","Tim Quinn","Nick Vince","Jerry Cruz"],"i":4851},{"year":1993,"characters":["Adam Crown","Albion","Baron Blood (John Falsworth)","Francesca Grace Lexley","Ormond Wychwood","Sir Gawain","Spitfire","Union Jack (Joey Chapman)"],"name":"Knights of Pendragon #10-11","link":"knights_of_pendragon_10-11","credits":["Stuart Bartlett","Terry Clark","John Royle- Inker","John Tomlinson","John Royle","Dan Abnett"],"i":4852},{"year":1992,"characters":["Beast","Cannonball","Cyclops","Gambit","Hazard","Jubilee","Professor X","Psylocke","Rogue","Rusty Collins","Skids","Stryfe","Valerie Cooper","Wolverine","Zero"],"name":"X-Men #12-13","link":"x-men_12-13","credits":["Fabian Nicieza","Bob Harras","Suzanne Gaffney","Lisa Patrick","Art Thibert"],"i":4853},{"year":1993,"characters":["Algernon Crowe","Brendan Rathcoole","Bronwen Gryfnn","Dark Angel","Eadmund Porlock","Gudrun Tyburn","Ormond Wychwood","Psylocke"],"name":"Dark Angel #7-8","link":"dark_angel_7-8","credits":["Duncan Oakley","Gary Russell","Duke Mighten"],"i":4854},{"year":1992,"characters":["Alistaire Stuart","Alysande Stuart","Captain Britain","Cerise","Dai Thomas","Emelia Witherspoon","Feron","Jamie Braddock","Kylun","Lockheed","Meggan","Nick Fury","Nigel Frobisher","Nightcrawler","Opal Luna Sat-yr^9","Psylocke","Shadowcat (Kitty Pryde)","Vixen","Widget"],"name":"Excalibur #55-56","link":"excalibur_55-56","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":4855},{"year":1993,"characters":["Alexander Goodwin Pierce","Algernon Crowe","Badhand","Brendan Rathcoole","Bronwen Gryfnn","Bysshe","Cable (Adult)","Eadmund Porlock","Firecrest","Gudrun Tyburn","Hatch","Kate Neville","Killpower","Motormouth","Network Nina","Nick Fury","Oonagh Mullarkey","Punisher"],"name":"Motormouth and Killpower #6-8","link":"motormouth_and_killpower_6-8","credits":["John Freeman","Graham Marks","David Taylor","Cam Smith","Jacqui Papp","Dell Barras","Bambos Georgiou","Edmund Perryman","Gary Frank"],"i":4856},{"year":1993,"characters":["Algernon Crowe","Angel","Beast","Braxus","Bronwen Gryfnn","Cyclops","Dark Angel","Eadmund Porlock","Guide","Iceman","Mephisto","Ormond Wychwood","Psylocke","Ranulph Haldane","Rogue","Sapphire","Wolverine","Xena"],"name":"Dark Angel #9","link":"dark_angel_9","credits":["Dell Barras","Bambos Georgiou","Bernadette Jaye"],"i":4857},{"year":1993,"characters":["Algernon Crowe","Badhand","Brendan Rathcoole","Bronwen Gryfnn","Cable (Adult)","Eadmund Porlock","Gudrun Tyburn","Hatch","Killpower","Motormouth","Nick Fury","Ormond Wychwood","Time Guardian"],"name":"Motormouth and Killpower #9","link":"motormouth_and_killpower_9","credits":["David Taylor","Graham Marks","Tim Quinn","John Freeman"],"i":4858},{"year":1993,"characters":["Albion","Algernon Crowe","Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Brendan Rathcoole","Bronwen Gryfnn","Captain America","Clementine","Colossus","Cyclops","Dark Angel","Death's Head II (Minion)","Dr. Strange","Eadmund Porlock","Gambit","Green Knight","Gudrun Tyburn","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Leona McBride","Madrox the Multiple Man","Master Key","Misha (Warheads)","Mr. Fantastic","Nick Fury","Ormond Wychwood","Polaris","Professor X","Quicksilver","Rogue","Sersi","She-Hulk","Stacy Arnheim","Storm","Strong Guy","Thing","Thunderstrike","Tigon Liger","Union Jack (Joey Chapman)","Vision","Wolfsbane","Wolverine"],"name":"Mys-Tech Wars #1","link":"mys-tech_wars_1","credits":["John Freeman","Dan Abnett","Bryan Hitch","Jeff Anderson"],"i":4859},{"year":1993,"characters":["Algernon Crowe","Angel","Bishop","Bronwen Gryfnn","Cyclops","Dark Angel","Iceman","Jean Grey","Jubilee","Professor X","Psylocke","Rogue","Storm","Wolverine"],"name":"Dark Angel #10","link":"dark_angel_10","credits":["Dell Barras","Bambos Georgiou","Bernadette Jaye"],"i":4860},{"year":1993,"characters":["Algernon Crowe","Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Brendan Rathcoole","Bronwen Gryfnn","Captain America","Captain Britain","Che","Clementine","Colossus","Cyclops","Dark Angel","Death's Head II (Minion)","Dr. Strange","Eadmund Porlock","Gambit","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Gregory (Warheads)","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Jubilee","Killpower","Leona McBride","Meggan","Misha (Warheads)","Motormouth","Mr. Fantastic","Nick Fury","Nightcrawler","Noble Kale","Professor X","Rogue","Sersi","Shadowcat (Kitty Pryde)","She-Hulk","Stacy Arnheim","Storm","Thing","Thunderstrike","Tigon Liger","Vision","Wolverine"],"name":"Mys-Tech Wars #2","link":"mys-tech_wars_2","credits":["John Freeman","Jeff Anderson","Steve Whitaker","Bryan Hitch","Dan Abnett"],"i":4861},{"year":1993,"characters":["Algernon Crowe","Brendan Rathcoole","Bronwen Gryfnn","Che","Clementine","Death's Head II (Minion)","Eadmund Porlock","Evelyn Necker","Gregory (Warheads)","Gudrun Tyburn","Kite","Leona McBride","Misha (Warheads)","Ormond Wychwood","Stacy Arnheim","Tigon Liger","Wadlow"],"name":"Death's Head II #5","link":"deaths_head_ii_5","credits":["Liam Sharp","John Freeman","Robin Riggs","Dell Barras","Andy Lanning","Dan Abnett"],"i":4862},{"year":1993,"characters":["Algernon Crowe","Brendan Rathcoole","Bronwen Gryfnn","Che","Clementine","Death's Head II (Minion)","Eadmund Porlock","Gregory (Warheads)","Gudrun Tyburn","Leona McBride","Misha (Warheads)","Ormond Wychwood","Stacy Arnheim","Tigon Liger"],"name":"Warheads #11","link":"warheads_11","credits":["Nick Vance","David Taylor","John Freeman"],"i":4863},{"year":1993,"characters":["Adam Crown","Albion","Algernon Crowe","Breeze James","Bronwen Gryfnn","Eadmund Porlock","Francesca Grace Lexley","Gudrun Tyburn","Ormond Wychwood","Sir Gawain","Union Jack (Joey Chapman)"],"name":"Knights of Pendragon #12","link":"knights_of_pendragon_12","credits":["Stuart Bartlett","Jeff Anderson","John Tomlinson","John Royle","Dan Abnett"],"i":4864},{"year":1993,"characters":["Adam Crown","Albion","Algernon Crowe","Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Breeze James","Brendan Rathcoole","Bronwen Gryfnn","Captain America","Che","Clementine","Colossus","Cyclops","Dark Angel","Death's Head II (Minion)","Dr. Strange","Eadmund Porlock","Francesca Grace Lexley","Gambit","Gregory (Warheads)","Gudrun Tyburn","Havok","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Jubilee","Killpower","Leona McBride","Madrox the Multiple Man","Misha (Warheads)","Motormouth","Mr. Fantastic","Nick Fury","Ormond Wychwood","Polaris","Professor X","Quicksilver","Rogue","She-Hulk","Sir Gawain","Stacy Arnheim","Strong Guy","Thing","Thunderstrike","Tigon Liger","Union Jack (Joey Chapman)","Vision","Wolfsbane","Wolverine"],"name":"Mys-Tech Wars #3","link":"mys-tech_wars_3","credits":["John Freeman","Steve Whitaker","Bryan Hitch","Andy Lanning","Dan Abnett"],"i":4865},{"year":1993,"characters":["Albion","Algernon Crowe","Black Knight (Dane Whitman)","Brendan Rathcoole","Bronwen Gryfnn","Captain America","Colossus","Dark Angel","Death's Head II (Minion)","Dr. Strange","Eadmund Porlock","Francesca Grace Lexley","Gambit","Gudrun Tyburn","Hulk","Invisible Woman","Jean Grey","Killpower","Motormouth","Nick Fury","Ormond Wychwood","Professor X","Strong Guy","Time Guardian"],"name":"Mys-Tech Wars #4","link":"mys-tech_wars_4","credits":["Stuart Bartlett","Dan Abnett","Bryan Hitch"],"i":4866},{"year":1993,"characters":["Algernon Crowe","Angel of Death","Anti-Being","Braxus","Bronwen Gryfnn","Cyclops","Dark Angel","Guide","Psylocke","Ranulph Haldane","Sapphire","Wolverine","Xena"],"name":"Dark Angel #11-12","link":"dark_angel_11-12","credits":["Bambos Georgiou","David Hine","Salvador Larroca","Bernadette Jaye"],"i":4867},{"year":1992,"characters":["Microchip","Punisher","Recoil"],"name":"Punisher #71","link":"punisher_71","credits":["Jimmy Palmiotti","Don Daley","Tim Tuohy","Andy Lanning","Dan Abnett","Doug Braithwaite"],"i":4868},{"year":1992,"characters":["Daredevil","Eddie Brock (Venom)","Grey Gargoyle","Moonstone (Karla Sofen)","Spider-Man","Venom Symbiote"],"name":"Spider-Man Special Edition #1","link":"spider-man_special_edition_1","credits":["David Day","Dan Day","Peter David","Glenn Herdling","Jim Craig"],"i":4869},{"year":1992,"characters":["Angar the Screamer","Dum Dum Dugan LMD","G.W. Bridge","Henry Peter Gyrich","Ivory","Knockabout","Mad Dog (Buzz Baxter)","Nick Fury","Overrider","Psi-Borg","Violence"],"name":"Nick Fury Agent of SHIELD #33-35","link":"nick_fury_agent_of_shield_33-3","credits":["Don Hudson","Mike Rockwitz","M.C. Wyman","Scott Lobdell","Barry Dutter"],"i":4870},{"year":1992,"characters":["Bernard Modine","Microchip","Punisher","Recoil"],"name":"Punisher #72","link":"punisher_72","credits":["Jimmy Palmiotti","Don Daley","Mark McKenna","Sean Hardy","Al Williamson","Andy Lanning","Dan Abnett","Doug Braithwaite"],"i":4871},{"year":1993,"characters":["Achilles","Analisa Medina","Coldfire","Dakota North","Daryl 'Troop' Andrews","Delphi","Hardcore","Hulk","Iron Fist","Jeryn Hogarth","Luke Cage","Melva (Cage's friend)","Rhino"],"name":"Cage #9-10","link":"cage_9-10","credits":["Chris Ivy","Josef Rubinstein","Kelly Corvese","Marc McLaurin","Rurik Tyler","Jaye Gardner","Dwayne Turner"],"i":4872},{"year":1993,"characters":["Blasting Cap","Bushmaster","Coldfire","Contract","Crazylegs","Cruz Bushmaster","Dakota North","Daryl 'Troop' Andrews","Emma Burstein","Hardcore","Iron Fist","James Lucas (Geary)","Jeryn Hogarth","Karl Malus","Kid Thor","Luke Cage","Manslaughter","Micky Hamilton","Noah Burstein","Randolph Creed","Razor Cut","Rick Mason (Agent)","Thing","Tinkerer","Toy"],"name":"Cage #11-13","link":"cage_11-13","credits":["Christopher Ivy","Gordon Purcell","Frank Turner","Kelly Corvese","Marc McLaurin","Scott Benefiel","Jaye Gardner","Dwayne Turner","Andrew Pepoy"],"i":4873},{"year":1992,"characters":["Basilisk (Wayne Gifford)","Detective Butler","Dr. Paine","J. Jonah Jameson","Jacob Weisenthal","Mary Jane Watson","Morbius","Simon Stroud","Spider-Man"],"name":"Morbius #2-4","link":"morbius_2-4","credits":["Ron Wagner","Bobbie Chase","Mike Witherby","Len Kaminski"],"i":4874},{"year":1992,"characters":["Punisher"],"name":"Punisher War Journal #44","link":"punisher_war_journal_44","credits":["Val Mayerik","Fred Fredericks","Don Daley","Chuck Dixon"],"i":4875},{"year":1992,"characters":["Ken Reid","NFL Superpro"],"name":"NFL Superpro #10","link":"nfl_superpro_10","credits":["Buzz Dixon","Don Hudson","Mike DeCarlo","Matt Morra","Jose Delbo","David Wohl"],"i":4876},{"year":1992,"characters":["Mary Jane Watson","Maxie Shiffman","Mysterio","Spider-Man"],"name":"Web of Spider-Man #90","link":"web_of_spider-man_90","credits":["Danny Fingeroth","Sam DeLaRosa","Alex Saviuk","Eric Fein","Howard Mackie"],"i":4877},{"year":1992,"characters":["Andie Sterman","Bucky (Julia Winter)","Horizon","Jack Norriss","Legs","Nomad","USAgent"],"name":"Nomad #3","link":"nomad_3_1","credits":["S. Clarke Hawbaker","Fabian Nicieza","Glenn Herdling","Mark McKenna","Mike Lackey"],"i":4878},{"year":1992,"characters":["Microchip","Punisher"],"name":"Punisher: Die Hard in the Big Easy","link":"punisher_die_hard_in_the_big_e","credits":["Phil Gascoine","John Wagner","Marie Javins","Paula Foye"],"i":4879},{"year":1992,"characters":["Max E. Mumm","Microchip","Punisher","Ultra-Max"],"name":"Punisher annual #5","link":"punisher_annual_5","credits":["Peter David","Steven Butler","Vince Evans","Rob Tokar","Don Daley","Roger Salick","Dan Panosian","Tim Tuohy","Al Williamson","Val Mayerik"],"i":4880},{"year":1992,"characters":["Bushwacker","Butch (Fatboys)","Crippler","Daredevil","Darla (Fatboys)","Deathlok (Michael Collins)","Eightball (Fatboys)","Foggy Nelson","Jesus Badalamente","Jet (Wildboy)","Max E. Mumm","Ralf (Fatboys)","Spit (Wildboy)","Ultra-Max"],"name":"Daredevil annual #8","link":"daredevil_annual_8","credits":["Ralph Macchio","M.C. Wyman","Larry Alexander","Gregory Wright","June Brigman","Bud LaRosa","Pat Garrahy","Roy Richardson"],"i":4881},{"year":1992,"characters":["Snap (Ginger Beach)","Stat (Spider Beach)","Ultra-Max","Wonder Man"],"name":"Wonder Man annual #1","link":"wonder_man_annual_1","credits":["Ian Akin","Fabian Nicieza","Evan Skolnick","Darick Robertson","Gerard Jones"],"i":4882},{"year":1992,"characters":["Ultra-Max"],"name":"Guardians of the Galaxy annual #2","link":"guardians_of_the_galaxy_annual_1","credits":["Herb Trimpe","Craig Anderson","Steve Montano","Jim Valentino","John Lewandowski"],"i":4883},{"year":1992,"characters":["Amy Chen","Battlestar","Crippler","Doug Powell","Foreigner","Lorna Kleinfeldt","Raul Quentino","Sandman","Silver Sable"],"name":"Silver Sable & the Wild Pack #2-3","link":"silver_sable_the_wild_pack_2-3","credits":["Craig Anderson","Steven Butler","Gregory Wright","Jim Sanders III"],"i":4884},{"year":1992,"characters":["Constrictor","Dum Dum Dugan LMD","Luke Cage","Nick Fury"],"name":"Nick Fury Agent of SHIELD #36","link":"nick_fury_agent_of_shield_36","credits":["Don Hudson","Mike Rockwitz","M.C. Wyman","Scott Lobdell","Barry Dutter"],"i":4885},{"year":1992,"characters":["Andrea Strucker","Andreas Strucker","Baron Von Strucker","Bucky (Julia Winter)","Daredevil","Foggy Nelson","Hammerhead","Izanami","Jonin","Justin Hammer","Kingpin","Nomad","Secret Empire Agent Number Six","Silvermane","Slug (Crimelord)","Tatsu'o","Tombstone","Werner Von Strucker","Word (Red Skull minon)"],"name":"Daredevil #307","link":"daredevil_307","credits":["D.G. Chichester","Ralph Macchio","Scott McDaniel","Bud LaRosa"],"i":4886},{"year":1992,"characters":["Andreas Strucker","Bucky (Julia Winter)","Bushwacker","Deadpool","Genesis","Hammerhead","Jonin","Justin Hammer","Legs","Nomad","Secret Empire Agent Number Six","Silvermane","Slug (Crimelord)","Tatsu'o","Tombstone","Werner Von Strucker","Word (Red Skull minon)"],"name":"Nomad #4","link":"nomad_4_1","credits":["Fabian Nicieza","Glenn Herdling","Mark McKenna","Mike Lackey","Pat Olliffe"],"i":4887},{"year":1992,"characters":["Bucky (Julia Winter)","Chainsaw","Mickey Fondozzi","Microchip","Pit-Viper 12","Punisher","Silvermane","Werner Von Strucker"],"name":"Punisher War Journal #45","link":"punisher_war_journal_45","credits":["Chuck Dixon","Don Daley","Fred Fredericks","Tim Tuohy","John Hebert"],"i":4888},{"year":1992,"characters":["Andrea Strucker","Andreas Strucker","Bucky (Julia Winter)","Bushwacker","Chainsaw","Hammerhead","Jonin","Justin Hammer","Legs","Nomad","Punisher","Slug (Crimelord)","Tatsu'o","Werner Von Strucker","Word (Red Skull minon)"],"name":"Nomad #5","link":"nomad_5","credits":["Fabian Nicieza","Glenn Herdling","Mark McKenna","Mike Lackey","Pat Olliffe"],"i":4889},{"year":1992,"characters":["Andrea Strucker","Andreas Strucker","Baron Von Strucker","Daredevil","Foggy Nelson","Hammerhead","Jonin","Justin Hammer","Kingpin","Punisher","Secret Empire Agent Number Six","Silvermane","Slug (Crimelord)","Terror (Shreck)","Tombstone","Werner Von Strucker","Word (Red Skull minon)"],"name":"Daredevil #308","link":"daredevil_308","credits":["Ralph Macchio","D.G. Chichester","Scott McDaniel","Pat Garrahy","Bud LaRosa"],"i":4890},{"year":1992,"characters":["Baron Von Strucker","Bucky (Julia Winter)","Mickey Fondozzi","Microchip","Punisher","Secret Empire Agent Number Six","Silvermane","Werner Von Strucker"],"name":"Punisher War Journal #46","link":"punisher_war_journal_46","credits":["Chuck Dixon","Don Daley","John Herbert","Fred Fredericks","Tim Tuohy"],"i":4891},{"year":1992,"characters":["Andrea Strucker","Andreas Strucker","Baron Von Strucker","Daredevil","Hammerhead","Izanami","Jonin","Justin Hammer","Kingpin","Nomad","Punisher","Secret Empire Agent Number Six","Slug (Crimelord)","Terror (Shreck)","Tombstone","Werner Von Strucker","Word (Red Skull minon)"],"name":"Daredevil #309","link":"daredevil_309","credits":["Ralph Macchio","D.G. Chichester","Scott McDaniel","Pat Garrahy","Bud LaRosa"],"i":4892},{"year":1992,"characters":["Daredevil","Giscard Epurer","Jonin","Nomad","Punisher","Slug (Crimelord)","Word (Red Skull minon)"],"name":"Nomad #6","link":"nomad_6","credits":["Fabian Nicieza","Glenn Herdling","Mark McKenna","Hector Collazo","Pat Olliffe"],"i":4893},{"year":1992,"characters":["Andrea Strucker","Andreas Strucker","Chainsaw","Daredevil","Hammerhead","Mickey Fondozzi","Microchip","Nomad","Pit-Viper 12","Punisher","Secret Empire Agent Number Six","Tombstone"],"name":"Punisher War Journal #47","link":"punisher_war_journal_47","credits":["Chuck Dixon","Don Daley","John Herbert","Fred Fredericks","Tim Tuohy"],"i":4894},{"year":1992,"characters":["Antro","Arachne (Deathweb)","Consuela","Hawkeye","Iron Man","Larry Carpenter","Living Lightning","Manipulator III","Mike Clemson","Mona (Living Lightning's gf)","Rachel Carpenter","Scarlet Witch","Spider-Man","Spider-Woman (Julia Carpenter)","USAgent","Wonder Man"],"name":"Avengers West Coast #84-86","link":"avengers_west_coast_84-86","credits":["David Ross","Roy Thomas","Nel Yomtov","Richard Ashford","Tim Dzon","Dann Thomas"],"i":4895},{"year":1992,"characters":["Darkhawk","Iron Man","Living Lightning","Lou (Superhero Commission)","Savage Steel (Arthur Vale)","Savage Steel (Harry Lennox)","Savage Steel (Jimmy Zafar)","Scarlet Witch","Spider-Woman (Julia Carpenter)","USAgent","War Machine","Wonder Man"],"name":"Darkhawk annual #1","link":"darkhawk_annual_1","credits":["Danny Fingeroth","Mike Manley","Richard Ashford","Kevin Hopgood","Bud LaRosa","Nel Yomtov"],"i":4896},{"year":1992,"characters":["Chain","Darkhawk","Grasp","Hawkeye","Iron Man","Living Lightning","Lou (Superhero Commission)","Professor Power","Raider-1","Raider-2","Raider-3","Scarlet Witch","Sonic","Spider-Woman (Julia Carpenter)","USAgent","War Machine","Wonder Man"],"name":"Avengers West Coast annual #7","link":"avengers_west_coast_annual_7","credits":["M.C. Wyman","Roy Thomas","Keith Williams","Nel Yomtov","John Tartaglione","Richard Ashford","Tim Dzon","John Dennis","Dann Thomas"],"i":4897},{"year":1992,"characters":["Chain","Darkhawk","Grasp","Hawkeye","Iron Man","Kearson DeWitt","Living Lightning","Marcy Pearson","Mrs. Arbogast","Raider-1","Raider-2","Raider-3","Scarlet Witch","Sonic","Spider-Woman (Julia Carpenter)","USAgent","War Machine","Wonder Man"],"name":"Iron Man annual #13","link":"iron_man_annual_13","credits":["Cooper Smith","Andrew Currie","Chuck Wojtkiewicz","Gene Colan","Nel Yomtov","Tom Brevoort","John Tomlinson","Richard Ashford","Mike Kanterovich","Al Williamson","Len Kaminski","Tim Dzon","Andrew Pepoy"],"i":4898},{"year":1992,"characters":["Black Knight (Dane Whitman)","Captain America","Crystal","Firestar","Hercules","Hybrid (Scott Washington)","Justice","Namorita","Night Thrasher","Nova (Rich Rider)","Rage","Silhouette","Speedball","Vision"],"name":"New Warriors #26","link":"new_warriors_26","credits":["Danny Fingeroth","Darick Robertson","Fabian Nicieza","Larry Mahlstedt"],"i":4899},{"year":1992,"characters":["Sidney Joern","Typhoid Mary","Wolverine"],"name":"Marvel Comics Presents #109-116 (Wolverine)","link":"marvel_comics_presents_109-116","credits":["Ann Nocenti","Steve Lightle","Terry Kavanagh","Mark Powers"],"i":4900},{"year":1992,"characters":["Iron Fist"],"name":"Marvel Comics Presents #111 (Iron Fist)","link":"marvel_comics_presents_111_iro","credits":["Alexander Morrissey","Brad Vancata","Mark Powers","Joey Cavalieri","Terry Kavanagh"],"i":4901},{"year":1992,"characters":["Deathlok (Michael Collins)","Jesus Badalamente"],"name":"Deathlok annual #1","link":"deathlok_annual_1","credits":["Butch Guice","Jimmy Palmiotti","Dwayne McDuffie","Gregory Wright","Tom Brevoort","Denys Cowan"],"i":4902},{"year":1992,"characters":["Ghost Rider (Danny Ketch)","Iron Fist","Noble Kale"],"name":"Marvel Comics Presents #113-118 (Ghost Rider)","link":"marvel_comics_presents_113-118_1","credits":["Jimmy Palmiotti","Shawn McManus","Mark Powers","Ken Branch","Joey Cavalieri","Terry Kavanagh"],"i":4903},{"year":1992,"characters":["Dr. Strange","Melinda Morrison","Rintrah","Spider-Man","Wong","Xandu"],"name":"Spider-Man/Dr. Strange: The Way To Dusty Death","link":"spider-mandr_strange_the_way_t","credits":["Dan Cuddy","Rob Tokar","Roy Thomas","Mark Beachum","Mark Texeira","Michael Bair","Gerry Conway"],"i":4904},{"year":1993,"characters":["Cloak","Dagger","Ghost Rider (Danny Ketch)","Noble Kale"],"name":"Marvel Comics Presents #119-122 (Ghost Rider)","link":"marvel_comics_presents_119-122","credits":["Alexander Morrissey","Tim Tuohy","Mark Powers","Ken Branch","Terry Kavanagh","Paula Foye"],"i":4905},{"year":1993,"characters":["Andromeda","Attuma"],"name":"Marvel Comics Presents #121 (Andromeda)","link":"marvel_comics_presents_121_and","credits":["Mark Moretti","Josef Rubinstein","Mark Powers","Karl Bollers","Terry Kavanagh"],"i":4906},{"year":1993,"characters":["Charnel","Death's Head II (Minion)","Evelyn Necker","Major Oak","Serene","Tuck","Wadlow"],"name":"Death's Head II #6-9","link":"deaths_head_6-9","credits":["Tim Quinn","John Freeman","Co.","Simon Coleby","Anthony Williams","Bryan Hitch","Sean Hardy","Andy Lanning","Dan Abnett"],"i":4907},{"year":1994,"characters":["Boom Boom","Wolverine"],"name":"Wolverine: Evilution #1","link":"wolverine_evilution_1","credits":["Ann Nocenti","Suzanne Gaffney","Adrew Peopy","John Royle","Mark Texeira","Philip Moy"],"i":4908},{"year":1992,"characters":["Centauria","Centaurio","Centauron","Crossfire","Dum Dum Dugan LMD","Elephantine","Henry Peter Gyrich","Ivory","Knockabout","Minotaurus","Nick Fury","Psi-Borg","Siren","Violence","Woodgod"],"name":"Nick Fury Agent of SHIELD #37-41","link":"nick_fury_agent_of_shield_37-4","credits":["Eliot Brown","Don Hudson","Paul Abrams","Mike Rockwitz","Bob Sharp","M.C. Wyman","Scott Lobdell","Charles Barnett III","Jerry DeCair","Barry Dutter"],"i":4909},{"year":1993,"characters":["Dr. Strange","Ghost Rider (Danny Ketch)","Noble Kale","Quasar","Rambo (dog)","Rick Sheridan","Sleepwalker"],"name":"Sleepwalker Holiday Special #1","link":"sleepwalker_holiday_special_1","credits":["Armando Gil","Don Daley","Bruce Zick","Tom Brevoort","Joe Phillips and company","Mike Kanterovich"],"i":4910},{"year":1992,"characters":["Captain America","Ghost Rider (Danny Ketch)","Noble Kale","Scarecrow","Stacy Dolan","Stern","Thomas Dolan"],"name":"Ghost Rider/Captain America: Fear","link":"ghost_ridercaptain_america_fea","credits":["Lee Weeks","Matthew Morra","Al Williamson","Bobbie Chase","Howard Mackie"],"i":4911},{"year":1993,"characters":["Angel","Caretaker","Centurious the Soulless Man","Daredevil","Death Ninja","Ghost Rider (Danny Ketch)","Mr. Hyde","Noble Kale","Scarecrow","Stacy Dolan","Suicide","Thomas Dolan","Tyler Meagher","Vengeance"],"name":"Ghost Rider #35-38","link":"ghost_rider_35-38","credits":["Matthew Morra","Howard Mackie","Al Williamson","Bobbie Chase","Bret Blevins"],"i":4912},{"year":1992,"characters":["Bernie Rosenthal","Black Widow","Cable (Adult)","Captain America","D-Man","Donna Maria Puentes","Dr. Druid","Druid","Fera","J. Jonah Jameson","Keith Kincaid","Man-Wolf (John Jameson)","Moonhunter","Nightshade","Peggy Carter","Shatterstar","Werewolf By Night","Wolf","Wolfsbane","Wolverine"],"name":"Captain America #402-408","link":"captain_america_402-408","credits":["Ralph Macchio","Don Hudson","Raymond Kryssing","Michael Rockwitz","Dan Bulanadi","Barry Dutter","Steve Alexandrov","Pat Garrahy","Mark Gruenwald","Rik Levins"],"i":4913},{"year":1992,"characters":["Absalom","Blob","Boom Boom","Burke","Cable (Adult)","Cannonball","Copycat","Deadpool","Feral","Forearm","General Jeremy Clarke","Genesis","Gideon","Kane","Masque","Nicodemus (External)","Phantazia","Pyro","Rictor","Saul","Sauron","Shatterstar","Siryn","Stryfe","Sumo","Thornn (Morlock)","Toad","Warpath","Wildside","Zero"],"name":"X-Force #6-10","link":"x-force_6-10","credits":["Rob Liefeld","Mark Pacella","Fabian Nicieza","Bob Harras","Marat Mychaels","Suzanne Gaffney","Dan Panosian","Mike Mignola","Bob Wiacek"],"i":4914},{"year":1992,"characters":["Boom Boom","Cable (Adult)","Cannonball","Copycat","Deadpool","Domino","Feral","G.W. Bridge","Genesis","Kane","Pico","Rictor","Sauron","Shatterstar","Siryn","Tygerstryke","Warpath","Yeti (Dept K)"],"name":"X-Force #11","link":"x-force_11","credits":["Rob Liefeld","Mark Pacella","Bob Harras","Fabian Nicieza- Script","Dan Panosian"],"i":4915},{"year":1992,"characters":["Blob","Havok","Jennifer Ransome","Lukas (X-Patriot)","Madrox the Multiple Man","Number One Fan (Rick Chalker)","Phantazia","Phillip Moreau","Pirouette","Polaris","Prodigal","Pyro","Quicksilver","Sauron","Shrew","Strong Guy","Taylor (X-Patriot)","Toad","Valerie Cooper","Wolfsbane"],"name":"X-Factor #82-83","link":"x-factor_82-83","credits":["Al Milgrom","Peter David","Mark Pacella","Kelly Corvese","Rurik Tyler","Jaye Gardner"],"i":4916},{"year":1992,"characters":["Andrew (Lotus henchman)","Attractive Lad (Aundray Phelps)","Auteur (Alex Flores)","Buff (Lahoya Scripps)","Dreamer (Jamie Flores)","Father Phim","Glamour Girl (Gloria Angel)","Henry Pym","Lady Lotus","Living Lightning","Mr. Fantastic Doppelganger","Neal Saroyan","Scarlet Witch","Snap (Ginger Beach)","Spider-Woman (Julia Carpenter)","Stat (Spider Beach)","USAgent","Visionary (Argus LeVecchio)","Wonder Man"],"name":"Wonder Man #10-12","link":"wonder_man_10-12","credits":["Jeff Johnson","Fabian Nicieza","Gordon Purcell","Dan Panosian","Evan Skolnick","Mike Parobeck","Gerard Jones","Andrew Pepoy"],"i":4917},{"year":1992,"characters":["Aurora","Darby Dean","Diamond Lil","Dream Queen","Goblyn","Madison Jeffries","Manikin","Mr. Fantastic Doppelganger","Northstar","Pathway","Persuasion","Puck","Sasquatch","Susan Dean","Talisman","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire"],"name":"Alpha Flight #109","link":"alpha_flight_109","credits":["E. Craig Brasfield","Simon Furman","Pat Broderick","Bruce D. Patterson","Rob Tokar","Sven Larsen","Ralph Cabrera"],"i":4918},{"year":1992,"characters":["Adam Warlock","Drax the Destroyer","Gamora","Giganto (Subterranean)","Man-Beast","Mole Man","Moondragon","Pip the Troll","Soul Gem","Thanos","Triax","Tricephalous"],"name":"Warlock and the Infinity Watch #5-7","link":"warlock_and_the_infinity_watch_3","credits":["Tom Raney","Craig Anderson","Angel Medina","Bob Almond","Terry Austin","Jim Starlin","John Lewandowski"],"i":4919},{"year":1992,"characters":["Adam Warlock","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Doppelganger","Dr. Doom","Dr. Strange","Drax the Destroyer","Eternity","Firestar","Forge","Galactus","Gambit","Gamora","Havok","Hellspawn","Henry Pym","Iceman","Iron Man","Iron Man Doppelganger","Jean Grey","Kang","Living Lightning","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Mole Man","Moondragon","Mr. Fantastic","Mr. Fantastic Doppelganger","Namorita","Northstar","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Psylocke","Puck","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Sersi","Silhouette","Soul Gem","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos","Thanos Doppelganger","USAgent","Valerie Cooper","Vindicator (Heather Hudson)","Vision","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Infinity War #1","link":"infinity_war_1","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":4920},{"year":1992,"characters":["Alicia Masters","Bridget O'Neil","Devos the Devastator","Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Magus (Evil Adam Warlock)","Mr. Fantastic","Mr. Fantastic Doppelganger","Ms. Marvel (Sharon Ventura)","Paibok the Power Skrull","Puppet Master","Thanos Doppelganger","Thing"],"name":"Fantastic Four #366","link":"fantastic_four_366","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":4921},{"year":1992,"characters":["Demogoblin","Doppelganger","Jason Macendale","Mary Jane Watson","Spider-Man"],"name":"Spider-Man #24","link":"spider-man_24","credits":["Larry Alexander","Danny Fingeroth","Andrew Pepoy","Howard Mackie"],"i":4922},{"year":1992,"characters":["Deathlok (Michael Collins)","Jesus Badalamente","Tracy Collins"],"name":"Deathlok #16","link":"deathlok_16","credits":["Jimmy Palmiotti","Dwayne McDuffie","Tom Brevoort","Mindy Newell","Walter McDaniel"],"i":4923},{"year":1992,"characters":["Clea","Dormammu","Dr. Strange","Galactus","Nova (Frankie Raye)","Rintrah","Silver Surfer"],"name":"Doctor Strange #42","link":"doctor_strange_42","credits":["Geof Isherwood","Roy Thomas","Barry Dutter","Michael Rockwitz"],"i":4924},{"year":1992,"characters":["Dr. Strange","Firelord","Galactus","Geatar","Magus (Evil Adam Warlock)","Mentor","Nebula","Nova (Frankie Raye)","Silver Surfer","Starfox"],"name":"Silver Surfer #67","link":"silver_surfer_67","credits":["Tom Christopher","Craig Anderson","Ron Marz","Kevin West","John Lewandowski"],"i":4925},{"year":1992,"characters":["Agamotto","Clea","Dormammu","Dr. Strange","Galactus","Hoggoth","Nova (Frankie Raye)","Oshtur","Rintrah","Sara Wolfe","Silver Surfer"],"name":"Doctor Strange #43","link":"doctor_strange_43","credits":["Geof Isherwood","Roy Thomas","Barry Dutter","Michael Rockwitz"],"i":4926},{"year":1992,"characters":["Adam Warlock","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Daredevil","Darkhawk","Death","Dr. Doom","Dr. Strange","Drax the Destroyer","Firestar","Forge","Galactus","Gambit","Gamora","Havok","Hawkeye","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Jean Grey","Kang","Living Lightning","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Mole Man","Moon Knight","Moondragon","Mr. Fantastic Doppelganger","Namorita","Northstar","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Puck","Quasar","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silhouette","Silver Surfer","Soul Gem","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Thunderstrike","USAgent","Vindicator (Heather Hudson)","Vision","Wasp","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Infinity War #2","link":"infinity_war_2","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":4927},{"year":1992,"characters":["Angel","Aurora","Beast","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Daredevil","Darkhawk","Firestar","Forge","Franklin Richards","Gambit","Havok","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man Doppelganger","Jean Grey","Living Lightning","Madrox the Multiple Man","Moon Knight","Mr. Fantastic Doppelganger","Ms. Marvel (Sharon Ventura)","Namorita","Northstar","Nova (Rich Rider)","Polaris","Professor X","Psylocke","Puck","Puppet Master","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silhouette","Speedball","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thing","Thunderstrike","USAgent","Vindicator (Heather Hudson)","Vision","Wasp","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Fantastic Four #367","link":"fantastic_four_367","credits":["Ralph Macchio","Christopher Ivy","Raymond Kryssing","Tom DeFalco","Paul Ryan","Pat Garrahy"],"i":4928},{"year":1992,"characters":["Dr. Strange","Galactus","Geatar","Morg","Nebula","Nova (Frankie Raye)","Silver Surfer"],"name":"Silver Surfer #68-69","link":"silver_surfer_68-69","credits":["Tom Christopher","Craig Anderson","Ron Marz","Kevin West","John Lewandowski"],"i":4929},{"year":1992,"characters":["Cyttorak","Dr. Strange","Galactus","Juggernaut","Nova (Frankie Raye)","Silver Surfer"],"name":"Doctor Strange #44","link":"doctor_strange_44","credits":["Geof Isherwood","Roy Thomas","Barry Dutter","Michael Rockwitz"],"i":4930},{"year":1992,"characters":["Andrew 'Jock' Jackson","Demogoblin","Doppelganger","Fireworks Fielstein","Mad Dog Rassitano","Marcus Stone","Mother Majowski","Rigger Ruiz"],"name":"Marvel Comics Presents #112 (Demogoblin)","link":"marvel_comics_presents_112_dem","credits":["Danny Fingeroth","Gene Colan","Mark Powers","Al Williamson","Terry Kavanagh"],"i":4931},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Aurora","Beast","Black Cat","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Cyclops","Daredevil","Darkhawk","Dr. Doom","Dr. Druid","Dr. Strange","Drax the Destroyer","Eternity","Firestar","Forge","Galactus","Gambit","Gamora","Havok","Hellspawn","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man Doppelganger","Jean Grey","Kang","Living Lightning","Living Tribunal","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Moon Knight","Moondragon","Mr. Fantastic Doppelganger","Namorita","Northstar","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Puck","Quasar","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silhouette","Silver Surfer","Soul Gem","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Thunderstrike","USAgent","Vindicator (Heather Hudson)","Vision","Wasp","Wild Child","Wolfsbane","Wonder Man"],"name":"Infinity War #3","link":"infinity_war_3","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":4932},{"year":1992,"characters":["Agatha Harkness","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Daredevil","Darkhawk","Dr. Druid","Firestar","Forge","Franklin Richards","Gambit","Havok","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man Doppelganger","Living Lightning","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Moon Knight","Mr. Fantastic Doppelganger","Namorita","Northstar","Nova (Rich Rider)","Polaris","Professor X","Psylocke","Puck","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silhouette","Speedball","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos Doppelganger","Thing","Thunderstrike","USAgent","Vindicator (Heather Hudson)","Vision","Wasp","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Fantastic Four #368","link":"fantastic_four_368","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":4933},{"year":1992,"characters":["Agatha Harkness","Andrew (Lotus henchman)","Angel","Aurora","Auteur (Alex Flores)","Beast","Black Cat","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Daredevil","Darkhawk","Dr. Druid","Dreamer (Jamie Flores)","Firestar","Forge","Gambit","Havok","Hawkeye","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man Doppelganger","Jean Grey","Lady Lotus","Living Lightning","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Moon Knight","Mr. Fantastic Doppelganger","Namorita","Northstar","Nova (Rich Rider)","Polaris","Professor X","Psylocke","Puck","Quasar","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silhouette","Snap (Ginger Beach)","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Stat (Spider Beach)","Storm","Strong Guy","Thanos Doppelganger","Thing","Thunderstrike","USAgent","Vindicator (Heather Hudson)","Vision","Warpath","Wasp","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Wonder Man #13","link":"wonder_man_13","credits":["Jeff Johnson","Fabian Nicieza","Carlos Lopez","Dan Panosian","Gerard Jones"],"i":4934},{"year":1937,"characters":["Anthromorpho","Antibody","Captain America","Caregiver","Chief Examiner","Contemplator","Epoch","Erishkigal","Eternity","Kayla Ballantine","Kismet (Her)","Makkari","Origin","Quagmire","Quasar"],"name":"Quasar #37","link":"quasar_37","credits":["Greg Capullo","Mark Gruenwald","Kelly Corvese","Harry Candelario"],"i":4935},{"year":1992,"characters":["Angel","Beast","Black Knight (Dane Whitman)","Captain America","Colossus","Cyclops","Darkhawk","Firestar","Havok","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Jean Grey","Justin Baldwin","Maddie Baldwin","Madrox the Multiple Man","Namorita","Night Thrasher","Northstar","Nova (Rich Rider)","Psylocke","Puck","Quicksilver","Rage","Rogue","Sasquatch","Scarlet Witch","She-Hulk","Silhouette","Speedball","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thing","Thunderstrike","Vision","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"New Warriors #27","link":"new_warriors_27","credits":["Fabian Nicieza","Danny Fingeroth","Larry Mahlstedt","Darick Robertson","Eric Fein"],"i":4936},{"year":1992,"characters":["Adam Warlock","Death","Drax the Destroyer","Gamora","Moondragon","Pip the Troll","Soul Gem","Thanos"],"name":"Marvel Comics Presents #108-111 (Thanos)","link":"marvel_comics_presents_108-111","credits":["Larry Alexander","Jim Starlin","Shawn McManus","Mark Powers","Tim Tuohy","Terry Kavanagh"],"i":4937},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Captain America","Colossus","Cyclops","Dr. Druid","Drax the Destroyer","Gamora","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Living Lightning","Magus (Evil Adam Warlock)","Moondragon","Nova (Frankie Raye)","Pip the Troll","Polaris","Professor X","Psylocke","Quasar","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Soul Gem","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Thunderstrike","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Warlock and the Infinity Watch #8","link":"warlock_and_the_infinity_watch_4","credits":["Tom Raney","Craig Anderson","Keith Williams","Jim Starlin","John Lewandowski"],"i":4938},{"year":1992,"characters":["Death","Dr. Strange","Galactus","Nova (Frankie Raye)","Silver Surfer"],"name":"Doctor Strange #45","link":"doctor_strange_45_1","credits":["Geof Isherwood","Roy Thomas","Barry Dutter","Michael Rockwitz"],"i":4939},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Captain America","Colossus","Crystal","Cyclops","Daredevil","Darkhawk","Dr. Doom","Dr. Druid","Dr. Strange","Drax the Destroyer","Eternity","Firestar","Forge","Galactus","Gambit","Gamora","Havok","Hellspawn","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Kang","Living Lightning","Living Tribunal","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Moon Knight","Moondragon","Namorita","Northstar","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Puck","Quasar","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silver Surfer","Soul Gem","Speedball","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Thunderstrike","Uatu the Watcher","USAgent","Vindicator (Heather Hudson)","Vision","Wasp","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Infinity War #4","link":"infinity_war_4","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":4940},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Captain America","Chief Examiner","Colossus","Contemplator","Cyclops","Dr. Druid","Drax the Destroyer","Erishkigal","Eternity","Gamora","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Kayla Ballantine","Living Tribunal","Makkari","Moondragon","Pip the Troll","Professor X","Psylocke","Quasar","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Soul Gem","Strong Guy","Thanos","Thing","Thunderstrike","Vindicator (Heather Hudson)","Wolverine","Wonder Man"],"name":"Quasar #38","link":"quasar_38","credits":["Greg Capullo","Mark Gruenwald","Kelly Corvese","Harry Candelario"],"i":4941},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Auteur (Alex Flores)","Captain America","Colossus","Cyclops","Dr. Druid","Dr. Strange","Drax the Destroyer","Dreamer (Jamie Flores)","Galactus","Gamora","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Living Lightning","Moondragon","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Quasar","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silver Surfer","Soul Gem","Storm","Strong Guy","Thanos","Thing","Thunderstrike","Vindicator (Heather Hudson)","Vision","Visionary (Argus LeVecchio)","Wolverine","Wonder Man"],"name":"Wonder Man #14","link":"wonder_man_14","credits":["Jeff Johnson","Fabian Nicieza","Carlos Lopez","Dan Panosian","Gerard Jones"],"i":4942},{"year":1992,"characters":["Alicia Masters","Angel","Aurora","Banshee","Beast","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Daredevil","Darkhawk","Don G","Fingers","Firestar","Forge","Franklin Richards","Frenchie","Gambit","Havok","Hellspawn","Henry Pym","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man Doppelganger","Jean Grey","Jubilee","Junior Birdman","Living Lightning","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Mercy (Shadow Cabinet)","Moon Knight","Mr. Fantastic Doppelganger","Namorita","Northstar","Nova (Rich Rider)","Polaris","Professor X","Psylocke","Puck","Quicksilver","Rogue","Sasquatch","Scarlet Witch","Scout","Sersi","Seth the Immortal","Shaman","Shark (Shadow Cabinet)","She-Hulk","Sheriff","Sigmund","Silhouette","Speedball","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos Doppelganger","Thing","Thunderstrike","USAgent","Vindicator (Heather Hudson)","Vision","Wasp","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Moon Knight #41-43","link":"moon_knight_41-43","credits":["Gary Kwapisz","Norm Breyfogle","Jimmy Palmiotti","Kelley Jones","James Fry","Tom Palmer","Karl Kesel","Klaus Janson","and Ty Tempelton","Joey Cavalieri","Sarra Mossoff","Terry Kavanagh","John Beatty"],"i":4943},{"year":1992,"characters":["Brother Voodoo","Calypso","Daredevil","Foggy Nelson","Hellspawn","Nameless One (Voodoo Guy)"],"name":"Daredevil #310-311","link":"daredevil_310-311","credits":["Ralph Macchio","Glenn Herdling","Scott McDaniel","Pat Garrahy","Bud LaRosa"],"i":4944},{"year":1992,"characters":["Ebbtide","Nomad","Vernon Hatchway"],"name":"Nomad #7","link":"nomad_7","credits":["S. Clarke Hawbaker","Fabian Nicieza","Glenn Herdling","Mark McKenna","Hector Collazo","Mike Harris"],"i":4945},{"year":1992,"characters":["Amy Chen","Battlestar","Crippler","Doug Powell","Dr. Doom","Kang","Raul Quentino","Sandman","Silver Sable"],"name":"Silver Sable & the Wild Pack #4-5","link":"silver_sable_the_wild_pack_4-5","credits":["Craig Anderson","Steven Butler","Jim Sanders III","Gregory Wright","John Lewandowski"],"i":4946},{"year":1992,"characters":["Absorbing Man","Aleta","Black Bolt","Charlie-27","Doctor Octopus","Fabian Stankowicz","Gorgon","Guardsman II (Michael O'Brien)","Jackhammer","Jarvis","Karnak","Leviathan (Gargantua)","Lockjaw","Major Victory","Medusa","Nikki","Oddball","Peggy Carter","Powderkeg","Puff Adder","Shocker","Starhawk","Talon","Titania","Triton","Yellowjacket (Rita Demara)"],"name":"Guardians of the Galaxy #27-29","link":"guardians_of_the_galaxy_27-29","credits":["Herb Trimpe","Craig Anderson","J.J. Birch","Mike Gallagher","Steve Montano","Jim Valentino","John Lewandowski"],"i":4947},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Captain America","Charlie-27","Colossus","Cyclops","Deathlok (Michael Collins)","Dr. Doom","Dr. Druid","Dr. Strange","Drax the Destroyer","Eternity","Galactus","Gamora","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Kang","Living Tribunal","Magus (Evil Adam Warlock)","Major Victory","Moondragon","Nikki","Nomad","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Quasar","Rogue","Sandman","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silver Sable","Silver Surfer","Sleepwalker","Soul Gem","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Thunderstrike","Uatu the Watcher","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Infinity War #5","link":"infinity_war_5","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":4948},{"year":1992,"characters":["Angel","Captain America","Colossus","Cyclops","Deathurge","Drax the Destroyer","Epoch","Erishkigal","Fath","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Kayla Ballantine","Kismet (Her)","Makkari","Moondragon","Nova (Frankie Raye)","Nova (Rich Rider)","Professor X","Psylocke","Quasar","Rogue","Sasquatch","She-Hulk","Silver Surfer","Storm","Strong Guy","Thanos","Thing","Thunderstrike","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Quasar #39","link":"quasar_39","credits":["Steve Lightle","Harry Candelario","Kelly Corvese","Mark McKenna","Mark Gruenwald"],"i":4949},{"year":1992,"characters":["Eternity","Galactus","Gamora","Infinity","Living Tribunal"],"name":"Warlock and the Infinity Watch #9","link":"warlock_and_the_infinity_watch_5","credits":["Craig Anderson","Angel Medina","Bob Almond","Jim Starlin","John Lewandowski"],"i":4950},{"year":1992,"characters":["Blob","Darkhawk","Evilhawk","J. Jonah Jameson","Ned Dobbs","Phantazia","Portal","Pyro","Sauron","Sleepwalker","Spider-Man","Toad","Traci Fields"],"name":"Darkhawk #19-20","link":"darkhawk_19-20","credits":["Aaron McClellan","Danny Fingeroth","John Heebink","Mike Manley","Richard Ashford","Nel Yomtov"],"i":4951},{"year":1992,"characters":["Blob","C.W. Fong","Darkhawk","Janine Epstein","Jean Grey","Moondragon","Phantazia","Portal","Professor X","Psylocke","Pyro","Rambo (dog)","Rick Sheridan","Sauron","Sleepwalker","Spider-Man","Toad","Traci Fields"],"name":"Sleepwalker #17","link":"sleepwalker_17","credits":["Bob Budiansky","Don Daley","Mike Manley","Tim Tuohy","Bret Blevins"],"i":4952},{"year":1992,"characters":["Janine Epstein","Jean Grey","Moondragon","Professor X","Psylocke","Rick Sheridan","Sleepwalker"],"name":"Sleepwalker #18","link":"sleepwalker_18","credits":["Bob Budiansky","Don Daley","Kelly Krantz","Rodney Ramos","Tim Tuohy"],"i":4953},{"year":1992,"characters":["Angel","Captain America","Caregiver","Colossus","Contemplator","Cyclops","Drax the Destroyer","Eon","Erishkigal","Fath","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Kayla Ballantine","Kid Reaper","Kismet (Her)","Makkari","Marvel Boy (Quantum Bander)","Nova (Frankie Raye)","Oblivion","Origin","Pip the Troll","Quasar","Sasquatch","Scarlet Witch","She-Hulk","Storm","Strong Guy","Thanos","Thing","Thunderstrike","Vindicator (Heather Hudson)","Vision"],"name":"Quasar #40","link":"quasar_40","credits":["Steve Lightle","Kelly Corvese","Mark McKenna","Mark Gruenwald","Andy Smith","Ralph Cabrera"],"i":4954},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Alicia Masters","Angel","Aron the Watcher","Captain America","Colossus","Cyclops","Devos the Devastator","Dr. Druid","Dr. Strange","Drax the Destroyer","Gamora","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Jean Grey","Living Lightning","Lyja the Lazerfist","Magus (Evil Adam Warlock)","Malice (Sue Storm's psionic entity)","Moondragon","Nova (Frankie Raye)","Nova (Rich Rider)","Paibok the Power Skrull","Pip the Troll","Polaris","Professor X","Psylocke","Puppet Master","Quasar","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silver Surfer","Soul Gem","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Thunderstrike","Uatu the Watcher","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Fantastic Four #369","link":"fantastic_four_369","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":4955},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Autolycus","Beast","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Cyclops","Dr. Druid","Dr. Strange","Drax the Destroyer","Forge","Galactus","Gambit","Gamora","Goddess","Havok","Hercules","Hulk","Human Torch","Iceman","Infinity","Invisible Woman","Jean Grey","Kray-Tor","Living Lightning","Magus (Evil Adam Warlock)","Moondragon","Mr. Fantastic","Nova (Frankie Raye)","Nova (Rich Rider)","Pip the Troll","Polaris","Psylocke","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silver Surfer","Soul Gem","Storm","Strong Guy","Thanos","Thanos Doppelganger","Thing","Uatu the Watcher","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Infinity War #6","link":"infinity_war_6","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":4956},{"year":1992,"characters":["Agatha Harkness","Dr. Druid","Dr. Strange","Ebony","Imei Chang","Jean Grey","Moondragon","Necromancer (Counter-Earth)","Professor X","Psylocke","Rick Sheridan","Scarlet Witch","Shaman","Silver Surfer","Sleepwalker","Wong"],"name":"Doctor Strange #46-47","link":"doctor_strange_46-47","credits":["Geof Isherwood","Roy Thomas","Co.","Michael Rockwitz","Bob Petrecca","Barry Dutter"],"i":4957},{"year":1992,"characters":["Adam Warlock","Magus (Evil Adam Warlock)","Soul Gem","Thanos","Thanos Doppelganger"],"name":"Warlock and the Infinity Watch #10","link":"warlock_and_the_infinity_watch_6","credits":["Lynaire Brust","Craig Anderson","Angel Medina","Bob Almond","Jim Starlin"],"i":4958},{"year":1992,"characters":["Angel","Captain America","Colossus","Cyclops","Drax the Destroyer","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Living Lightning","Moondragon","Nova (Rich Rider)","Pip the Troll","Polaris","Rogue","Sasquatch","Scarlet Witch","Silver Surfer","Storm","Strong Guy","Thing","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Wonder Man #15","link":"wonder_man_15","credits":["Jeff Johnson","Fabian Nicieza","Carlos Lopez","Dan Panosian","Gerard Jones"],"i":4959},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Alicia Masters","Angel","Aron the Watcher","Black Widow","Captain America","Colossus","Cyclops","Daredevil","Darkhawk","Devos the Devastator","Dr. Druid","Dr. Strange","Drax the Destroyer","Franklin Richards","Galactus","Gamora","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","Jean Grey","Living Lightning","Lyja the Lazerfist","Magus (Evil Adam Warlock)","Moondragon","Mr. Fantastic","Namorita","Nova (Frankie Raye)","Nova (Rich Rider)","Paibok the Power Skrull","Pip the Troll","Polaris","Professor X","Psylocke","Puppet Master","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silver Surfer","Soul Gem","Storm","Strong Guy","Thanos","Thing","Thunderstrike","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Fantastic Four #370","link":"fantastic_four_370","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":4960},{"year":1992,"characters":["Adam Warlock","Agatha Harkness","Angel","Aurora","Beast","Bile","Black Knight (Dane Whitman)","Brain Drain","Captain America","Cyclops","Dr. Druid","Drax the Destroyer","Gamora","Goblyn","Hercules","Hulk","Human Torch","Iceman","Jean Grey","Mad Dog (Buzz Baxter)","Madison Jeffries","Magus (Evil Adam Warlock)","Manikin","Master of the World","Miss Mass","Moondragon","Northstar","Pathway","Persuasion","Professor X","Psylocke","Puck","Sasquatch","Scarlet Witch","Sersi","Shaman","She-Hulk","Sinew","Soul Gem","Speedball","Strong Guy","Strongarm","Talisman","Tech-Noir","Thanos","Thing","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire","Wolverine"],"name":"Alpha Flight #110-112","link":"alpha_flight_110-112","credits":["Simon Furman","Pat Broderick","Christopher Ivy","Bruce D. Patterson","Rob Tokar","Dan Buddy"],"i":4961},{"year":1993,"characters":["Allegra Bazin","Andrew 'Jock' Jackson","Cheryl Colon","Darkhawk","Evilhawk","Fireworks Fielstein","Ghost Rider (Danny Ketch)","Grace Powell","Jason Powell","Jonathan Powell","Kistur","Mad Dog Rassitano","Marcus Stone","Mitch 'Madman' Marley","Mother Majowski","Ned Dobbs","Noble Kale","Ocsh","Rigger Ruiz","Savage Steel (Arthur Vale)","St. Johnny","Steve 'Headset' Rubino","Traci Fields"],"name":"Darkhawk #21-25","link":"darkhawk_21-25","credits":["Aaron McClellan","Christopher Ivy","Danny Fingeroth","John Lowe","Frank Percy","Sam DeLaRosa","Tom Palmer","Nel Yomtov","Mike Manley","Tim Dzon","John Lewandowski"],"i":4962},{"year":1992,"characters":["Betty Brant","Foreigner","Killer Shrike","Pulse-3","Spider-Man","Swift-1"],"name":"Web of Spider-Man #91-92","link":"web_of_spider-man_91-92","credits":["Mark Stegbauer","Al Milgrom","Danny Fingeroth","Jimmy Palmiotti","Al Williamson","Alex Saviuk","Eric Fein","Howard Mackie"],"i":4963},{"year":1992,"characters":["Aunt May","Billy Connors","Blood Spider","Captain America","Death-Shield","J. Jonah Jameson","Jagged Bow","Joe 'Robbie' Robertson","Joy Mercado","Lizard","Madame Hydra (Viper)","Marla Madison Jameson","Martha Connors","Mary Jane Watson","Mary Parker Duplicate","Mindy McPherson","Prowler","Red Skull","Richard Parker Duplicate","Solo","Spider-Man","Taskmaster"],"name":"Amazing Spider-Man #365-367","link":"amazing_spider-man_364-367","credits":["Todd Smith","Jerry Bingham","Danny Fingeroth","Tom DeFalco","Stan Lee","Randy Emberlin","Mark Bagley","John Romita Sr.","David Michelinie","Eric Fein","Andrew Pepoy","Aaron Lopresti"],"i":4964},{"year":1992,"characters":["Agony","Alicia Masters","Basilisk (Hellbent)","Black Widow","Dr. Strange","Franklin Richards","Human Torch","Invisible Woman","Mercy (Shadow Cabinet)","Moon Knight","Mr. Fantastic","Psycho","Seth the Immortal","Shark","Sheriff","Thing"],"name":"Moon Knight #44","link":"moon_knight_44","credits":["Jimmy Palmiotti","Joey Cavalieri","Terry Kavanagh","Gary Kwapisz"],"i":4965},{"year":1992,"characters":["Betty Brant","Demogoblin","Doppelganger","Eddie Brock (Venom)","Foreigner","Hag","Jason Macendale","Mary Jane Watson","Moon Knight","Nick Katzenberg","Spider-Man","Troll (Ghost Rider villain)","Venom Symbiote"],"name":"Web of Spider-Man #93-94","link":"web_of_spider-man_93-94","credits":["Don Hudson","Danny Fingeroth","Bob McLeod","Alex Saviuk","Eric Fein","Howard Mackie"],"i":4966},{"year":1993,"characters":["Deadzone","Demogoblin","Dr. Strange","Frenchie","Moon Knight","Mr. Fantastic","Psycho"],"name":"Moon Knight #45-46","link":"moon_knight_45-46","credits":["Christopher Ivy","James Fry","Joey Cavalieri","Sarra Mossoff","Terry Kavanagh"],"i":4967},{"year":1992,"characters":["Clara Menninger","Deathwatch","Eddie Brock (Venom)","Eli McIntyre","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Kodiak","Noble Kale","Troll (Ghost Rider villain)","Venom Symbiote","Wolff"],"name":"Spirits of Vengeance #4","link":"spirits_of_vengeance_4","credits":["Adam Kubert","Art Adams","Joe Kubert","Bobbie Chase","Tom Mandrake","Howard Mackie"],"i":4968},{"year":1992,"characters":["Demogoblin","Doppelganger","Eddie Brock (Venom)","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Jason Macendale","Noble Kale","Spider-Man","Troll (Ghost Rider villain)","Venom Symbiote"],"name":"Web of Spider-Man #95","link":"web_of_spider-man_95","credits":["Alex Saviuk","Josef Rubinstein","Danny Fingeroth","Howard Mackie"],"i":4969},{"year":1992,"characters":["Clara Menninger","Deathwatch","Demogoblin","Doppelganger","Eddie Brock (Venom)","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Jason Macendale","Noble Kale","Spider-Man","Timothy Woods","Troll (Ghost Rider villain)","Venom Symbiote"],"name":"Spirits of Vengeance #5","link":"spirits_of_vengeance_5","credits":["Adam Kubert","Matthew Morra","Bobbie Chase","William Reinhold","Howard Mackie"],"i":4970},{"year":1993,"characters":["Deathwatch","Demogoblin","Doppelganger","Eddie Brock (Venom)","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Jason Macendale","Noble Kale","Spider-Man","Troll (Ghost Rider villain)","Venom Symbiote"],"name":"Web of Spider-Man #96","link":"web_of_spider-man_96","credits":["Danny Fingeroth","Josef Rubinstein","Dan Panosian","Alex Saviuk","Howard Mackie"],"i":4971},{"year":1993,"characters":["Clara Menninger","Deathwatch","Demogoblin","Eddie Brock (Venom)","Eli McIntyre","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Jason Macendale","Kodiak","Miranda Woods","Noble Kale","Spider-Man","Troll (Ghost Rider villain)","Venom Symbiote","Wolff"],"name":"Spirits of Vengeance #6","link":"spirits_of_vengeance_6","credits":["Adam Kubert","Matthew Morra","Bobbie Chase","William Reinhold","Howard Mackie"],"i":4972},{"year":1993,"characters":["Clara Menninger","Deathwatch","Eli McIntyre","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Kodiak","Mephisto","Miranda Woods","Noble Kale","Steel Vengeance","Steel Wind","Troll (Ghost Rider villain)","Wolff"],"name":"Spirits of Vengeance #7-8","link":"spirits_of_vengeance_7-8","credits":["Adam Kubert","Matthew Morra","Bobbie Chase","William Reinhold","Howard Mackie"],"i":4973},{"year":1993,"characters":["Aleta","Brother Royal","Captain America","Captain Universe (Uni-Power)","Charlie-27","Dormammu","Dr. Druid","Dr. Strange","Jarvis","Major Victory","Nikki","Rintrah","Starhawk","Talon","Yellowjacket (Rita Demara)"],"name":"Guardians of the Galaxy #30-34","link":"guardians_of_the_galaxy_30-34","credits":["Lynaire Brust","Craig Anderson","Steve Montano","Michael Gallagher","Kevin West"],"i":4974},{"year":1992,"characters":["Cardinal","Firestar","Namorita","Nova (Rich Rider)","Sea Urchin","Silhouette","Turbo","Turbo II"],"name":"New Warriors #28","link":"new_warriors_28","credits":["Fabian Nicieza","Danny Fingeroth","Larry Mahlstedt","Darick Robertson","Eric Fein"],"i":4975},{"year":1992,"characters":["Artys-Gran","Baron Blood (Kenneth Falsworth)","Black Moray","Caleb Alexander","Captain America","Carrie Alexander","Colleen Wing","Dr. Doom","Human Torch (Golden Age)","Iron Fist","Llyra","Master Khan","Misty Knight","Namorita","Phoebe Marrs","Spitfire","Sub-Mariner","Tamara Rahn","Warlord Seth"],"name":"Namor #26-33","link":"namor_26-33","credits":["Jeffrey Albrecht","Jae Lee","Bob Harras","John Byrne","Jae Lee -Inker","Mark Powers","Joey Cavalieri","Bob Wiacek","Terry Kavanagh"],"i":4976},{"year":1993,"characters":["Artys-Gran","Byrrah","Colleen Wing","Dara","Iron Fist","Misty Knight","Namorita","Neptune","Phoebe Marrs","Princess Fen","Socus","Sub-Mariner","Tamara Rahn","Tiger Shark","Vashti","Warlord Seth"],"name":"Namor #34-40","link":"namor_34-40","credits":["Bill Sienkiewicz","Christopher Ivy","Jimmy Palmiotti","Jae Lee","Bob Harras","Shawn McManus","Malcom Jones III","Mark Powers","Scott Kolins","Howard Rourke","Terry Kavanagh"],"i":4977},{"year":1993,"characters":["Andrew 'Jock' Jackson","Chloe Tran","Cloak","Dagger","Dementia","Fireworks Fielstein","Mad Dog Rassitano","Marcus Stone","Mary Jane Watson","Mayhem","Mother Majowski","Rigger Ruiz","Seth the Immortal","Shard","Spider-Man","Vortex (Hellbent)"],"name":"Web of Spider-Man annual #9","link":"web_of_spider-man_annual_9","credits":["Don Hudson","Vince Evans","Keith Williams","Bill Anderson","Tim Tuohy","Chris Marrinan","Nelson Ortega","Terry Kavanagh","Eric Fein","Fred Haynes"],"i":4978},{"year":1993,"characters":["Agony","Basilisk (Hellbent)","Black Widow","Chloe Tran","Cover Girl","Deadzone","Don G","Donna Kraft","Frenchie","Gambit","Hawkeye","Junior Birdman","Manx","Marlene Alraune","Mercy (Shadow Cabinet)","Moon Knight","Network","Pang","Penny Annie","Scout","Seth the Immortal","Sheriff","Sigmund","Spider-Man","Thunderstrike","Tombstone","USAgent","Vision","Werewolf By Night"],"name":"Moon Knight #47-50,52-53","link":"moon_knight_47-5052-53","credits":["Christopher Ivy","James Fry","Joey Cavalieri","Sarra Mossoff","Terry Kavanagh"],"i":4979},{"year":1992,"characters":["Boom Boom","Cable (Adult)","Cannonball","Copycat","Crule","Deadpool","Domino","Feral","G.W. Bridge","Genesis","Gideon","Grizzly (Six Pack)","Kane","Pico","Professor","Rictor","Segismund Joshua","Shatterstar","Siryn","Sunspot","Tygerstryke","Warpath","Yeti (Dept K)"],"name":"X-Force #12-15","link":"x-force_12-15","credits":["Rob Liefeld","Mark Pacella","Al Milgrom","Fabian Nicieza","Bob Harras","Suzanne Gaffney","Dan Panosian","Lisa Patrick","Greg Capullo","Terry Shoemaker"],"i":4980},{"year":1992,"characters":["Air-Walker","Firelord","Galactus","Geatar","Jack of Hearts","Morg","Nebula","Nova (Frankie Raye)","Silver Surfer","Terrax"],"name":"Silver Surfer #70-75","link":"silver_surfer_70-75","credits":["Tom Christopher","Ron Lim","Craig Anderson","M.C. Wyman","Ron Marz","John Lewandowski"],"i":4981},{"year":1992,"characters":["Falcon"],"name":"Marvel Super Heroes #12 (Falcon)","link":"marvel_super_heroes_12_falcon","credits":["Marie Severin","Rob Tokar","Dwayne McDuffie","Bob Petrecca","Vincent Colletta","George McNeill"],"i":4982},{"year":1993,"characters":["Carver","Centurious the Soulless Man","Clara Menninger","Deathwatch","Eli McIntyre","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hag","Kodiak","Mephisto","Miranda Woods","Noble Kale","Steel Vengeance","Steel Wind","Timothy Woods","Troll (Ghost Rider villain)","Vengeance","Wolff"],"name":"Spirits of Vengeance #9-10","link":"spirits_of_vengeance_9-10","credits":["Adam Kubert","Klaus Janson","Matthew Morra","Bobbie Chase","William Reinhold","Howard Mackie"],"i":4983},{"year":1993,"characters":["Che","Clementine","De Costa (Warheads)","Duncan (Warheads)","Gregory (Warheads)","Leona McBride","Master Key","Misha (Warheads)","Stacy Arnheim","Tigon Liger"],"name":"Warheads #12-14","link":"warheads_12-14","credits":["Stuart Jennett","John Freeman","Adolfo Buylla","Craig Huston","Ian Rimmer"],"i":4984},{"year":1993,"characters":["Caretaker","Clara Menninger","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Kodiak","Mephisto","Miranda Woods","Noble Kale","Vengeance","Wolff"],"name":"Ghost Rider #39","link":"ghost_rider_39","credits":["Christopher Ivy","Ron Garney","Matthew Morra","Bobbie Chase","Howard Mackie"],"i":4985},{"year":1992,"characters":["Gamora","Pip the Troll","Tricephalous"],"name":"Marvel Comics Presents #112 (Pip)","link":"marvel_comics_presents_112_pip","credits":["Rata Fagiani","Jim Starlin","Mark Powers","Ken Branch","Terry Kavanagh"],"i":4986},{"year":1992,"characters":["Bill Foster","Dr. Nemesis (Pym foe)","Erik Josten"],"name":"Marvel Comics Presents #113-118 (Giant-Man)","link":"marvel_comics_presents_113-118","credits":["Mark Powers","Ron Wilson","Dwayne McDuffie","Terry Kavanagh"],"i":4987},{"year":1992,"characters":["Wendigo V","Werewolf By Night"],"name":"Marvel Comics Presents #113 (Werewolf By Night)","link":"marvel_comics_presents_113_wer","credits":["Christopher Ivy","Vince Mielcarek","Mark Powers","Len Kaminski","Terry Kavanagh"],"i":4988},{"year":1992,"characters":["Arabian Knight"],"name":"Marvel Comics Presents #114 (Arabian Knight)","link":"marvel_comics_presents_114_ara","credits":["James Blackburn","Don Hudson","Gary Barnum","Mark Powers","Terry Kavanagh"],"i":4989},{"year":1992,"characters":["Cloak","Dagger","Father Michael Bowen"],"name":"Marvel Comics Presents #115 (Cloak & Dagger)","link":"marvel_comics_presents_115_clo","credits":["Mark Powers","Terry Kavanagh","Eric Fein","John Stanisci"],"i":4990},{"year":1993,"characters":["Dreamstalker","Eddie Brock (Venom)","Nightmare","Professor X","Venom Symbiote","Wolverine"],"name":"Marvel Comics Presents #117-122 (Wolverine)","link":"marvel_comics_presents_117-122","credits":["Sam Kieth","Mark Powers","Terry Kavanagh","Dwayne Turner","Howard Mackie"],"i":4991},{"year":1993,"characters":["Neal Saroyan","Wonder Man"],"name":"Marvel Comics Presents #119 (Wonder Man)","link":"marvel_comics_presents_119_won","credits":["Dan Slott","Don Hudson","Pete McDonell","Mark Powers","Terry Kavanagh"],"i":4992},{"year":1993,"characters":["Constrictor","Nick Fury"],"name":"Marvel Comics Presents #119-120 (Constrictor)","link":"marvel_comics_presents_119-120","credits":["Tim Tuohy","Terry Kavanagh","Mark Powers","Paula Foye"],"i":4993},{"year":1993,"characters":["J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Spider-Man"],"name":"Marvel Comics Presents #120 (Spider-Man)","link":"marvel_comics_presents_120_spi","credits":["Christopher Ivy","Ed Murr","Kieth Planit","Mark Powers","Terry Kavanagh"],"i":4994},{"year":1993,"characters":["Hotamitanio","Mirage (Dani Moonstar)","Mist"],"name":"Marvel Comics Presents #121 (Mirage)","link":"marvel_comics_presents_121_mir","credits":["Joe Madureira","Hector Collazo","Jaye Gardner","Mark Powers","Terry Kavanagh"],"i":4995},{"year":1993,"characters":["David Bealer","Patty O'Donnels","Rage","Speedball"],"name":"Marvel Comics Presents #122 (Speedball)","link":"marvel_comics_presents_122_spe","credits":["Fabian Nicieza","Paris Karounos","Mark Powers","Ken Branch","Terry Kavanagh"],"i":4996},{"year":1993,"characters":["Adam Crown","Albion","Francesca Grace Lexley","Union Jack (Joey Chapman)"],"name":"Marvel Comics Presents #122 (Pendragons)","link":"marvel_comics_presents_122_pen","credits":["Don Hudson","Skip Dietz","Hoang Nguyen","Mark Powers","Terry Kavanagh"],"i":4997},{"year":1993,"characters":["Clara Menninger","Eli McIntyre","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Kodiak","Miranda Woods","Noble Kale","Quinn McIntyre","Vengeance","Wolff"],"name":"Spirits of Vengeance #12","link":"spirits_of_vengeance_12","credits":["Adam Kubert","Matthew Morra","Bobbie Chase","William Reinhold","Howard Mackie"],"i":4998},{"year":1993,"characters":["Algernon Crowe","Dark Angel","Death's Head II (Minion)","Hercules","Killpower","Motormouth","Psylocke","Sabretooth","Smith","Termagaira","Tuck","Wolverine"],"name":"Battletide #1-4","link":"battletide_1-4","credits":["John Freeman","Jacqui Papp","Geoff Senior","Andy Lanning","Dan Abnett"],"i":4999},{"year":1991,"characters":["Moondragon","Shalla Bal","Silver Surfer"],"name":"Silver Surfer: Homecoming","link":"silver_surfer_homecoming","credits":["Craig Anderson","William Reinhold","Jim Starlin","John Lewandowski"],"i":5000},{"year":1992,"characters":["Captain America","Dr. Druid","Falcon","Kang","Ravonna","Redwing","Sarah Casper","Taskmaster","Vision"],"name":"Captain America annual #11","link":"captain_america_annual_11","credits":["Ralph Macchio","Kathryn Bolinger","Roy Thomas","Larry Alexander","James Brock","Charles Barnett III","Pat Garrahy","Mark Gruenwald"],"i":5001},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Crystal","Dr. Druid","Hercules","Kang","Ravonna","Sersi","Thunderstrike"],"name":"Thor annual #17","link":"thor_annual_17","credits":["Ralph Macchio","Geof Isherwood","Roy Thomas","Fred Fredericks","Bud LaRosa","Pat Garrahy","Kevin Kobasic","John Lewandowski"],"i":5002},{"year":1992,"characters":["Apocryphus","Black Knight (Dane Whitman)","Black Widow","Crystal","Deathunt 9000","Dr. Druid","Franklin Richards","Hercules","Human Torch","Invisible Woman","Kang","Mantis","Moondragon","Mr. Fantastic","Raa","Sersi","Sir Raston","Sssith","Thing","Tyndar","Wildrun"],"name":"Fantastic Four annual #25","link":"fantastic_four_annual_25","credits":["Herb Trimpe","Ralph Macchio","Sonja Ratcliffe","Tom DeFalco","Brad Vancata","Charles Barnett III","Kirk Harvinen","Pat Garrahy","Mark Gruenwald"],"i":5003},{"year":1992,"characters":["Apocryphus","Black Knight (Dane Whitman)","Captain America","Crystal","Deathunt 9000","Dr. Druid","Hercules","Human Torch","Invisible Woman","Kang","Mr. Fantastic","Raa","Ravonna","Sersi","Sir Raston","Sssith","Thing","Thunderstrike","Tyndar","Vision","Wildrun"],"name":"Avengers annual #21","link":"avengers_annual_21","credits":["Herb Trimpe","Ron Lim","Ralph Macchio","Brad Vancata","Charles Barnett III","Dan Panosian","Scott Benson","Pat Garrahy","Mark Gruenwald"],"i":5004},{"year":1992,"characters":["Absorbing Man","Aloysius R. Jamesley","Andrew 'Jock' Jackson","Arko","Balder","Black Knight (Dane Whitman)","Bloodaxe (Jackie Lukus)","Bobby Steele","Captain America","Count Tagar","Deilla","Dr. Strange","Earth-Lord","Ed Marrero","Ego the Living Planet","Enchantress","Fandral","Fireworks Fielstein","Gary Paretsky","Gudrun","Heimdall","Hermod","High Evolutionary","Hogun","Jarvis","Jerry Sapristi","Juvan","Karnilla","Loki","Mad Dog Rassitano","Marcus Stone","Marcy Masterson Steele","Matt Ballors","Mephisto","Mother Majowski","Nightmare","Nobilus","Odin","Recorder","Rigger Ruiz","Shelly Conklin","Sif","Skyhawk","Spider-Man","Susan Austin","Thunderstrike","Titania","Tyr","Ulik","Uroc","Valkyrie","Vizier","Volstagg","Wind Warrior","Zon"],"name":"Thor #447-456","link":"thor_447-456","credits":["Hector Collaz","Al Milgrom","Ralph Macchio","Raymond Kryssing","Gary Hartle","Geof Isherwood","Tom DeFalco","M.C. Wyman","Dan Bulanadi","Ariane Lenshoek","Steve Alexandrov","Kevin Yates","Pat Garrahy","Ron Frenz","Pat Olliffe"],"i":5005},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Carol Danvers","Ch'od","Corsair","Cr'reee","Crystal","Cyclops","Galen Kor","Hepzibah","Hercules","Jarvis","Keith Kincaid","Lockjaw","Luna","Marilla","Professor X","Quicksilver","Raza Longknife","Sersi","Sikorsky","Thunderstrike","Valerie Cooper","Vision","Waldo"],"name":"Avengers #350-351","link":"avengers_350-351","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Bud LaRosa","Pat Garrahy","Kevin West"],"i":5006},{"year":1993,"characters":["Death's Head II (Minion)","Hulk","Killpower","Termagaira","Tuck"],"name":"Battletide II #1-4","link":"battletide_ii_1-4","credits":["Andy Lanning","Dan Abnett","Jacqui Papp","Geoff Senior"],"i":5007},{"year":1993,"characters":["Antibody","Black Knight (Dane Whitman)","Black Widow","Captain Marvel (Monica Rambeau)","Chief Examiner","Donna Maria Puentes","Eon","Erishkigal","Heat-Ray","Hercules","Kayla Ballantine","Kenjiro Tanaka","Kismet (Her)","Makkari","Marvel Boy (Quantum Bander)","Punisher","Quagmire","Quasar","Thanos","Thunderstrike","Vision"],"name":"Quasar #41-43","link":"quasar_41-43","credits":["Michael Rockwitz","Mark Gruenwald","Andy Smith","Barry Dutter","Ralph Cabrera"],"i":5008},{"year":1992,"characters":["Charnel","Death's Head II (Minion)","Evelyn Necker","Serene","Tuck"],"name":"Death's Head II #10-12","link":"deaths_head_ii_6-12","credits":[],"i":5009},{"year":1992,"characters":["Black Widow","Blackwing","Captain America","Captain Marvel (Monica Rambeau)","Crossbones","Cutthroat","Diamondback","Donna Maria Puentes","Dr. Druid","Fabian Stankowicz","Falcon","Guardsman II (Michael O'Brien)","Jack O'Lantern (Steven Levins)","Moonhunter","Mother Night","Quicksilver","Red Skull","She-Hulk"],"name":"Captain America #402-408 (Back-ups)","link":"captain_america_402-408_back-u","credits":["Ralph Macchio","Raymond Kryssing","Larry Alexander","Ariane Lenshoekv","Rodney Ramos","Pat Garrahy","Mark Gruenwald","Rik Levins","Don Huson","Kevin Kobasic"],"i":5010},{"year":1992,"characters":["Blackwing","Brother Inquisitor","Captain America","Crossbones","Cutthroat","D-Man","Diamondback","Donna Maria Puentes","Dr. Druid","Falcon","Fourth Sleeper","Jack O'Lantern (Steven Levins)","Jarvis","Machinesmith","Moonhunter","Mother Night","Red Skull"],"name":"Captain America #409-410","link":"captain_america_409-410","credits":["Rik Levins","Michael Rockwitz","Dan Bulanadi","Mark Gruenwald","Barry Dutter"],"i":5011},{"year":1993,"characters":["Algernon Crowe","Brendan Rathcoole","Bronwen Gryfnn","Cable (Adult)","Che","Dark Angel","Death's Head II (Minion)","Dr. Doom","Eadmund Porlock","Firecrest","Ghost Rider (Danny Ketch)","Gudrun Tyburn","Hatch","Hulk","Noble Kale","Ormond Wychwood","Professor","Rick Jones"],"name":"Shadow Riders #1-4","link":"shadow_riders_1-4","credits":["Stuart Bartlett","Brian Williamson","John Freeman","Ross Dearsley"],"i":5012},{"year":1992,"characters":["Madame Menace (Sunset Bain)","Mary Jane Watson","Spider-Man"],"name":"Spider-Man #26","link":"spider-man_26","credits":["Al Milgrom","Ron Frenz -Layouts","Danny Fingeroth","Tom DeFalco","Josef Rubinstein","Keith Williams","Mark Texeira","Tom Palmer","Klaus Janson","Mark Bagley","Ron Frenz"],"i":5013},{"year":1992,"characters":["Achilles","Ajax","Atalanta","Betty Ross","Doctor Octopus","Hector","Hulk","Jacqueline Shorr","Marlo Chandler","Michael Berengetti","Paris","Punisher","Rick Jones","Suzie Berengetti","Ulysses"],"name":"Hulk #395-396","link":"hulk_395-396","credits":["Peter David","Mark Farmer","Dale Keown","Chris Cooper","Bobbie Chase"],"i":5014},{"year":1992,"characters":["Black Crow","Mary Jane Watson","Puma","Spider-Man"],"name":"Spectacular Spider-Man #191-193","link":"spectacular_spider-man_191-193","credits":["Mike Lackey","Danny Fingeroth","Sal Buscema","J.M. DeMatteis"],"i":5015},{"year":1993,"characters":["Ashley Kafka","Baron Zemo (Helmut)","Daredevil","Mary Jane Watson","Mr. Fantastic","Nocturne (Angela Cairn)","Spider-Man","Vermin"],"name":"Spectacular Spider-Man #194-196","link":"spectacular_spider-man_194-196","credits":["Rob Tokar","Dan Cuddy","Sal Buscema","J.M. DeMatteis"],"i":5016},{"year":1992,"characters":["Constrictor","Jane Dixon","Ken Reid","NFL Superpro"],"name":"NFL Superpro #11","link":"nfl_superpro_11","credits":["Jose Delbo","Mike DeCarlo","David Wohl","Paula Foye"],"i":5017},{"year":1992,"characters":["Vindicator (Heather Hudson)","Wild Child"],"name":"Alpha Flight #113","link":"alpha_flight_113","credits":["E. Craig Brasfield","Dan Cuddy","Frank Turner","Rob Tokar","Sven Larsen"],"i":5018},{"year":1992,"characters":["Spider-Man"],"name":"Spider-Man #27-28","link":"spider-man_27-28","credits":["Keith Williams","Marshall Rogers","Don McGregor","Danny Fingeroth"],"i":5019},{"year":1992,"characters":["Black Knight (Dane Whitman)","Crystal","Grim Reaper","Hercules","Sersi","Vision"],"name":"Avengers #352-354","link":"avengers_352-354","credits":["Ralph Macchio","M.C. Wyman","Tom Palner","Ariane Lenshoek","Steve Alexandrov","Pat Garrahy","Len Kaminski"],"i":5020},{"year":1992,"characters":["Ken Reid","NFL Superpro","Repulsor"],"name":"NFL Superpro #12","link":"nfl_superpro_12","credits":["Evan Skolnick","Don Hudson","Jose Delbo","David Wohl"],"i":5021},{"year":1993,"characters":["Aurora","General Jeremy Clarke","Goblyn","Kane","Manikin","Nemesis II","Northstar","Pathway","Persuasion","Puck","Sasquatch","Talisman","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire","Wyre"],"name":"Alpha Flight #114-117","link":"alpha_flight_114-117","credits":["Simon Furman","Pat Broderick","Bruce D. Patterson","Dan Cuddy","Rob Tokar"],"i":5022},{"year":1992,"characters":["Achilles","Agamemnon","Ajax","Atalanta","Betty Ross","Dr. Strange","General 'Thunderbolt' Ross","Hector","Henry Pym","Hotshot","Hulk","Human Torch","Ironclad","Jacqueline Shorr","Jailbait","Leader","Marlo Chandler","Mr. Fantastic","Ogress","Omnibus","Paris","Prometheus (Pantheon)","Rick Jones","Rock","Scarlet Witch","Soul Man","Suzie Berengetti","Ulysses","Vapor","Vector","Wong","X-Ray"],"name":"Hulk #397-400","link":"hulk_397-400","credits":["Peter David","Mark Farmer","Chris Bachalo","Dale Keown","Matthew Morra","Chris Cooper","Bobbie Chase","Jan Duursema"],"i":5023},{"year":1992,"characters":["Cable (Adult)","Dragoness","Forearm","G.W. Bridge","General Jeremy Clarke","Hammer (Six Pack)","Kamikaze","Kane","Reaper","Rusty Collins","Silver Samurai","Skids","Strobe","Stryfe","Sumo","Tempo","Wildside","Zero"],"name":"Cable #1-2","link":"cable_1-2","credits":["John Romita Jr.","Fabian Nicieza","Bob Harras","Lisa Patrick","Dan Green"],"i":5024},{"year":1993,"characters":["Andrew Chord","Bengal","Father Michael Janes","Gai No Don","Gideon","Lady Lotus","Namorita","Night Thrasher","Nova (Rich Rider)","Silhouette","Speedball","Sprocket","Tantrum","Walter Rosen"],"name":"Night Thrasher #1-4","link":"night_thrasher_1-4","credits":["Don Hudson","Dan Cuddy","Ian Akin","Fabian Nicieza","Danny Fingeroth","Jimmy Palmiotti","Dave Hoover","Keith Williams"],"i":5025},{"year":1993,"characters":["Achilles","Agamemnon","Ajax","Atalanta","Betty Ross","Delphi","Hector","Hotshot","Hulk","Ironclad","Jailbait","Marlo Chandler","Ogress","Omnibus","Paris","Rick Jones","Rock","Ulysses","Vapor","Vector","X-Ray"],"name":"Hulk #401","link":"hulk_401","credits":["Peter David","Brad Vancata","Matthew Morra","Bobbie Chase","Jan Duursema"],"i":5026},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Panther","Black Widow","Crystal","Hercules","Jarvis","Lockjaw","Magdalene","Marilla","Proctor","Sersi","Sloth","Sprite","Swordsman (Gatherers)","Taylor Madison","Thunderstrike","Ute","Vision"],"name":"Avengers #355-356","link":"avengers_355-356","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":5027},{"year":1992,"characters":["Captain America","Hawkeye","Living Lightning","Lou (Superhero Commission)","Mockingbird","Morning Star","Rachel Carpenter","Scarlet Witch","Spider-Man","USAgent","Wolverine","Wonder Man"],"name":"Avengers West Coast #87-88","link":"avengers_west_coast_87-88","credits":["David Ross","Roy Thomas","Nel Yomtov","Tim Dzon","Dann Thomas","John Lewandowski"],"i":5028},{"year":1992,"characters":["Abe Zimmer","Beetle","Bethany Cabe","Black Widow","Blizzard II","Cal Oakley","Captain America","Dr. Doom","Erica Sondheim","Felix Alvarez","Happy Hogan","Hawkeye","Henry Pym","Iron Man","Kathleen Dare","Living Laser","Living Lightning","Marcy Pearson","Morgan Stark","Mrs. Arbogast","Nick Fury","Pepper Potts","Rae LaCoste","Scarlet Witch","Spider-Woman (Julia Carpenter)","Spymaster (Nathon Lemon)","Thunderstrike","Tigra","USAgent","War Machine","Wasp","Whiplash (Blacklash)","Wonder Man"],"name":"Iron Man #284-286","link":"iron_man_284-286","credits":["Mike DeCarlo","Richard Ashford","Kevin Hopgood","Len Kaminski","Nel Yomtov","Andrew Pepoy","John Lewandowski"],"i":5029},{"year":1992,"characters":["Angel","Bishop","Callisto","Charm (Morlock)","Colossus","D'Gard","Healer","Iceman","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Loss","Marilou","Marrow","Mikhail Rasputin","Pain (Morlock)","Professor X","Reverb","Sack","Steven Lang","Storm","Vessel"],"name":"Uncanny X-Men #291-293","link":"uncanny_x-men_291-293","credits":["Tom Raney","Al Milgrom","Bob Harras","Josef Rubinstein","Scott Lobdell","Rurik Tyler","Lisa Patrick","Hilary Barta"],"i":5030},{"year":1993,"characters":["Aunt May","Brainstorm","Captain Zero","Doctor Hope","J. Jonah Jameson","Mary Jane Watson","Spider-Man"],"name":"Spider-Man #29-31","link":"spider-man_29-31","credits":["Danny Fingeroth","Ann Nocenti","Sam DeLaRosa","Mike Lackey","Chris Marrinan"],"i":5031},{"year":1992,"characters":["Aireo","Firebrand II","Firestar","Henry Peter Gyrich","Justice","Namorita","Nova (Rich Rider)","Rage","Silhouette","Speedball","Sprocket","Terraformer","Valerie Cooper","Vanisher","Water Wizard"],"name":"New Warriors #29-30","link":"new_warriors_29-30","credits":["Dan Cuddy","Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Darick Robertson"],"i":5032},{"year":1992,"characters":["Alchemy","Beast","Captain Britain","Cerise","Cyclops","Feron","Gambit","Jester (616 Crazy Gang)","Jubilee","Meggan","Mrs. Jones (Alchemy's mom)","Nightcrawler","Phay","Phee","Phough","Phumm","Phy","Psylocke","Rogue","Shadowcat (Kitty Pryde)","Wolverine"],"name":"Excalibur #57-58","link":"excalibur_57-58","credits":["Josef Rubinstein","Scott Lobdell","Joe Madureira","Hector Collazo","Alan Davis","Mark Powers","Terry Kavanagh"],"i":5033},{"year":1992,"characters":["Agent-X (Next Wave)","Amy Chen","Battlestar","Crippler","Deathlok (Michael Collins)","Dmitri Petrovitch","Doug Powell","Lorna Kleinfeldt","Paladin","Raul Quentino","Sandman","Silver Sable","Snare (Next Wave)","Turk (Next Wave)"],"name":"Silver Sable & the Wild Pack #6-7","link":"silver_sable_the_wild_pack_6-7","credits":["Steve Carr","Deryl Skelton","Lynaire Brust","Steven Butler","Craig Anderson","Jim Sanders III","Gregory Wright"],"i":5034},{"year":1993,"characters":["Alexander Goodwin Pierce","Amy Chen","Battlestar","Ben Jacobs","Clayton Burr","Coldblood","Crippler","Deathlok (Michael Collins)","Doug Powell","Dr. Hu","Dum Dum Dugan LMD","Gabriel Jones","Harlan Ryker","Jesus Badalamente","Jim Dworman","Mainframe","N'Gami","Nick Collins","Nick Fury","Siege","Silver Sable","Stanley Cross","Tracy Collins"],"name":"Deathlok #17-21","link":"deathlok_17-21","credits":["Tom Raney","Jimmy Palmiotti","Greg Adams","J.J. Birch","Gregory Wright","Mark McKenna","Tom Brevoort","Mindy Newell","Kim DeMulder","Walter McDaniel"],"i":5035},{"year":1993,"characters":["Microchip","Payback","Punisher"],"name":"Punisher War Journal #48-49,51","link":"punisher_war_journal_48-4951","credits":["Chuck Dixon","Don Daley","Todd Fox","Fred Fredericks","Tom Tuohy"],"i":5036},{"year":1993,"characters":["Amy Chen","Battlestar","Crippler","Dmitri Petrovitch","Doug Powell","Ivan Trekov","Jacques Girard","Man-Eater","Paladin","Raul Quentino","Sandman","Silver Sable"],"name":"Silver Sable & the Wild Pack #8-9","link":"silver_sable_the_wild_pack_8-9","credits":["Lynaire Brust","Craig Anderson","Steven Butler","Jim Sanders III","Gregory Wright"],"i":5037},{"year":1992,"characters":["Angel","Bishop","Boom Boom","Caliban","Cannonball","Charlotte Jones","Conal Duran","Cyclops","Famine (Horseman of Apocalypse)","Gambit","Iceman","Jean Grey","Lila Cheney","Madrox the Multiple Man","Professor X","Quicksilver","Rictor","Rogue","Siryn","Storm","Strong Guy","Stryfe","Trish Tilby","War (Horseman of Apocalypse)","Warpath"],"name":"Uncanny X-Men #294","link":"uncanny_x-men_294","credits":["Terry Austin","Bob Harras","Scott Lobdell","Brandon Peterson"],"i":5038},{"year":1992,"characters":["Angel","Beast","Bishop","Boom Boom","Caliban","Cannonball","Cyclops","Famine (Horseman of Apocalypse)","Feral","Gambit","Havok","Jean Grey","Madrox the Multiple Man","Mr. Sinister","Pirouette","Polaris","Prodigal","Professor X","Psylocke","Quicksilver","Rictor","Shatterstar","Siryn","Storm","Strong Guy","Sunspot","Taylor (X-Patriot)","Valerie Cooper","War (Horseman of Apocalypse)","Warpath","Wolfsbane","Wolverine"],"name":"X-Factor #84","link":"x-factor_84","credits":["Al Milgrom","Peter David","Kelly Corvese","Jae Lee"],"i":5039},{"year":1992,"characters":["Angel","Apocalypse","Beast","Bishop","Boom Boom","Cable (Adult)","Cannonball","Colossus","Cyclops","Feral","Forearm","Foxbat","Gambit","Gauntlet (Dark Rider)","Hardrive","Havok","Iceman","Jean Grey","Jubilee","Madrox the Multiple Man","Moira MacTaggert","Mr. Sinister","Polaris","Professor","Professor X","Psylocke","Psynapse","Quicksilver","Reaper","Rictor","Rogue","Shatterstar","Siryn","Stevie Hunter","Storm","Strong Guy","Sunspot","Tusk","Valerie Cooper","Warpath","Wolfsbane","Wolverine"],"name":"X-Men #14","link":"x-men_14","credits":["Fabian Nicieza","Bob Harras","Andy Kubert","Lisa Patrick","Mark Pennington"],"i":5040},{"year":1992,"characters":["Angel","Beast","Bishop","Boom Boom","Cable (Adult)","Caliban","Cannonball","Colossus","Cyclops","Famine (Horseman of Apocalypse)","Feral","Forearm","Gambit","Havok","Iceman","Jean Grey","Jubilee","Madrox the Multiple Man","Mr. Sinister","Polaris","Professor","Psylocke","Quicksilver","Rictor","Rogue","Shatterstar","Siryn","Stevie Hunter","Storm","Strong Guy","Stryfe","Sunspot","Valerie Cooper","Warpath","Wolfsbane","Wolverine","Zero"],"name":"X-Force #16","link":"x-force_16","credits":["Fabian Nicieza","Harry Candelario","Bob Harras","Lisa Patrick","Greg Capullo"],"i":5041},{"year":1992,"characters":["Angel","Apocalypse","Beast","Bishop","Boom Boom","Cable (Adult)","Caliban","Cannonball","Colossus","Famine (Horseman of Apocalypse)","Feral","Gambit","Havok","Iceman","Jean Grey","Jubilee","Madrox the Multiple Man","Moira MacTaggert","Polaris","Professor","Professor X","Psylocke","Quicksilver","Rictor","Rogue","Shatterstar","Siryn","Storm","Strong Guy","Stryfe","Sunspot","Valerie Cooper","War (Horseman of Apocalypse)","Warpath","Wolverine"],"name":"Uncanny X-Men #295","link":"uncanny_x-men_295","credits":["Bob Harras","Terry Austin","Scott Lobdell","Lisa Patrick","Brandon Peterson"],"i":5042},{"year":1992,"characters":["Angel","Apocalypse","Bishop","Boom Boom","Cable (Adult)","Cannonball","Cyclops","Dragoness","Forearm","Gambit","Havok","Iceman","Kamikaze","Madrox the Multiple Man","Polaris","Prodigal","Professor","Psylocke","Quicksilver","Reaper","Rogue","Storm","Stryfe","Taylor (X-Patriot)"],"name":"X-Factor #85","link":"x-factor_85","credits":["Al Milgrom","Peter David","Kelly Corvese","Jae Lee"],"i":5043},{"year":1992,"characters":["Angel","Apocalypse","Beast","Bishop","Boom Boom","Cable (Adult)","Cannonball","Colossus","Cyclops","Dragoness","Forearm","Foxbat","Gambit","Gauntlet (Dark Rider)","Hardrive","Havok","Iceman","Jean Grey","Moira MacTaggert","Polaris","Professor X","Psylocke","Psynapse","Quicksilver","Reaper","Rogue","Rusty Collins","Skids","Slab","Storm","Strong Guy","Stryfe","Thumbellina","Tusk","Wolverine","Zero"],"name":"X-Men #15","link":"x-men_15","credits":["Fabian Nicieza","Bob Harras","Andy Kubert","Lisa Patrick","Mark Pennington"],"i":5044},{"year":1992,"characters":["Angel","Apocalypse","Barrage","Beast","Bishop","Boom Boom","Cable (Adult)","Cannonball","Colossus","Cyclops","Feral","Gambit","Gauntlet (Dark Rider)","Hardrive","Havok","Iceman","Jean Grey","Madrox the Multiple Man","Moira MacTaggert","Polaris","Professor","Professor X","Psynapse","Quicksilver","Rictor","Rogue","Shatterstar","Siryn","Stevie Hunter","Storm","Strong Guy","Stryfe","Sunspot","Tusk","Valerie Cooper","Warpath","Wolfsbane","Wolverine"],"name":"X-Force #17","link":"x-force_17","credits":["Fabian Nicieza","Harry Candelario","Bob Harras","Lisa Patrick","Greg Capullo"],"i":5045},{"year":1993,"characters":["Angel","Apocalypse","Barrage","Beast","Bishop","Cable (Adult)","Cannonball","Cyclops","Feral","Foxbat","Gauntlet (Dark Rider)","Hardrive","Havok","Jean Grey","Moira MacTaggert","Polaris","Professor","Professor X","Psynapse","Rictor","Shatterstar","Siryn","Storm","Stryfe","Sunspot","Tusk","Warpath","Wolverine","Zero"],"name":"Uncanny X-Men #296","link":"uncanny_x-men_296","credits":["Terry Austin","Bob Harras","Scott Lobdell","Brandon Peterson"],"i":5046},{"year":1993,"characters":["Angel","Apocalypse","Beast","Bishop","Cable (Adult)","Cannonball","Cyclops","Havok","Iceman","Jean Grey","Madrox the Multiple Man","Moira MacTaggert","Polaris","Professor","Professor X","Psylocke","Storm","Strong Guy","Stryfe","Tusk","Valerie Cooper","Wolfsbane","Wolverine"],"name":"X-Factor #86","link":"x-factor_86","credits":["Al Milgrom","Peter David","Jae Lee","Kelly Corvese","Jaye Gardner"],"i":5047},{"year":1993,"characters":["Angel","Apocalypse","Barrage","Beast","Bishop","Cable (Adult)","Cannonball","Cyclops","Foxbat","Gauntlet (Dark Rider)","Hardrive","Havok","Iceman","Jean Grey","Polaris","Professor X","Psynapse","Storm","Stryfe","Tusk","Wolfsbane","Wolverine","Zero"],"name":"X-Men #16","link":"x-men_16","credits":["Mark Pennington","Bob Harras","Andy Kubert","Fabian Nicieza"],"i":5048},{"year":1993,"characters":["Angel","Apocalypse","Beast","Bishop","Cable (Adult)","Cannonball","Cyclops","Havok","Iceman","Jean Grey","Jubilee","Mr. Sinister","Polaris","Professor X","Psylocke","Storm","Stryfe","Wolverine"],"name":"X-Force #18","link":"x-force_18","credits":["Greg Capullo","Bob Harras","Fabian Nicieza","Harry Candelario"],"i":5049},{"year":1993,"characters":["Angel","Beast","Gambit","Jubilee","Professor X","Rogue"],"name":"Uncanny X-Men #297","link":"uncanny_x-men_297","credits":["Bob Harras","Scott Lobdell","Dan Panosian","Lisa Patrick","Brandon Peterson"],"i":5050},{"year":1992,"characters":["Black Knight (Dane Whitman)","Black Widow","Crystal","Hera","Hercules","Jarvis","Lockjaw","Luna","Marilla","Scanner (Acolyte)","Sersi","Swordsman (Gatherers)","Taylor Madison","Uatu the Watcher","Vision","Zeus"],"name":"Avengers #357","link":"avengers_357","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":5051},{"year":1992,"characters":["Baron Von Strucker","Belial","Blade","Cassandra Romulus","Frank Drake","Garotte (Hydra)","Hannibal King","Innards","Malpractice","Marlene McKenna-Drake","Pyre","Rotwrap","Saltz"],"name":"Nightstalkers #2","link":"nightstalkers_2","credits":["D.G. Chichester","Ron Garney","Bobbie Chase","Tom Palmer"],"i":5052},{"year":1993,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Baron Von Strucker","Captain America","Cassandra Romulus","Clay Quartermain","Contessa Valentina Allegro De La Fontaine","Dino Manelli","Dum Dum Dugan LMD","Gabriel Jones","Gaffer (SHIELD Scientist)","Gail Runciter","Henry Peter Gyrich","Ivory","Izzy Cohen","Jasper Sitwell","Jimmy Woo","Kate Neville","Knockabout","Laura Brown","Lump (Gnobian)","Nick Fury","Percy Pinkerton","Psi-Borg","Red (LMD)","Violence"],"name":"Nick Fury Agent of SHIELD #42-44","link":"nick_fury_agent_of_shield_42-4","credits":["Don Hudson","Mike Rockwitz","John Heebink","Gregory Wright","Barry Dutter"],"i":5053},{"year":1993,"characters":["Alkhema","Consuela","Hawkeye","Henry Pym","Living Lightning","Mockingbird","Mockingbird Skrull","Myron Maclain","Rachel Carpenter","Roberto Carlos","Scarlet Witch","Spider-Woman (Julia Carpenter)","Ultron","USAgent","Vision","War Machine","Wonder Man"],"name":"Avengers West Coast #89-91","link":"avengers_west_coast_89-91","credits":["David Ross","Roy Thomas","Nel Yomtov","Tim Dzon","Dann Thomas","John Lewandowski"],"i":5054},{"year":1993,"characters":["Alexis Primo","Cockroach Hamilton","Piranha Jones","Punisher","Terror (Shreck)"],"name":"Terror Inc. #6-7","link":"terror_inc_6-7","credits":["Jorge Zaffino","D.G. Chichester","Marc McLaurin","Tom Daning","Mark Texeira"],"i":5055},{"year":1993,"characters":["Brady (VIGIL)","Microchip","Mike 'Rusty' Nails","Punisher","Recoil","Riggs (VIGIL)","Taylor Blackwell"],"name":"Punisher #73-75","link":"punisher_73-75","credits":["Jimmy Palmiotti","Don Daley","Josef Rubinstein","Mark McKenna","Rodney Ramos","Sean Hardy","Al Williamson","Andy Lanning","Dan Abnett","Doug Braithwaite"],"i":5056},{"year":1993,"characters":["Andrew (Lotus henchman)","Attractive Lad (Aundray Phelps)","Auteur (Alex Flores)","Buff (Lahoya Scripps)","Dreamer (Jamie Flores)","Glamour Girl (Gloria Angel)","Hawkeye","Lady Lotus","Megan McCambridge","Neal Saroyan","Rampage","Scarlet Witch","Snap (Ginger Beach)","Spider-Woman (Julia Carpenter)","Splice II","Stat (Spider Beach)","USAgent","Visionary (Argus LeVecchio)","Wonder Man"],"name":"Wonder Man #16-18","link":"wonder_man_16-18","credits":["Jeff Johnson","Fabian Nicieza","Carlos Lopez","Mark McKenna","Dan Panosian","Brad Vancata","Gerard Jones","Timothy Hamilton"],"i":5057},{"year":1993,"characters":["Deathlok (Michael Collins)","Digitek"],"name":"Digitek #1-4","link":"digitek_1-4","credits":["Andy Lanning","Dermot Power","Tim Quinn","John Freeman"],"i":5058},{"year":1992,"characters":["Eternity","Living Tribunal"],"name":"Warlock and the Infinity Watch #11","link":"warlock_and_the_infinity_watch_7","credits":["Steve Carr","Deryl Skelton","Lynaire Brust","Craig Anderson","Bob Almond","Jim Starlin"],"i":5059},{"year":1993,"characters":["Agatha Harkness","Darkhold Dwarf","Ebony","Keith Kincaid","Living Lightning","Louise Hastings","Modred the Mystic","Punisher","Randolph DeGuzman","Rev. Styge","Sabretooth","Sam Buchanan","Scarlet Witch","Victoria Montesi","Wasp"],"name":"Darkhold #2-4","link":"darkhold_2-4","credits":["Tony Harris","Jimmy Palmiotti","Mark Mckenna","Norman Felchle","Richard Case","Mark McKenna","Andrew Peopy","Chris Cooper","Bobbie Chase","Hildy Mesnik"],"i":5060},{"year":1992,"characters":["Bucky (Julia Winter)","Ebbtide","Legs","Nomad"],"name":"Nomad #8","link":"nomad_8","credits":["Marc McKenna","Fabian Nicieza","Glenn Herdling","Hector Collazo","Pat Olliffe"],"i":5061},{"year":1993,"characters":["Black Panther","Captain America","Captain Britain","Cerise","Lockheed","Meggan","Nightcrawler","Shadowcat (Kitty Pryde)","War Machine"],"name":"Excalibur #59-60","link":"excalibur_59-60","credits":["Raymond Kryssing","Jon Holdredge","Scott Lobdell","Mark Powers","Scott Kolins","Terry Kavanagh"],"i":5062},{"year":1993,"characters":["Amy Chen","Battlestar","Crippler","Doug Powell","Leviathan (Coven)","Lorna Kleinfeldt","Punisher","Raul Quentino","Silver Sable"],"name":"Silver Sable & the Wild Pack #10","link":"silver_sable_the_wild_pack_10","credits":["Lynaire Brust","Craig Anderson","Steven Butler","Jim Sanders III","Gregory Wright"],"i":5063},{"year":1993,"characters":["Agatha Harkness","Centurious the Soulless Man","Darkhold Dwarf","Dr. Strange","Ebony","Ghost Rider (Danny Ketch)","Louise Hastings","Modred the Mystic","Noble Kale","Punisher","Randolph DeGuzman","Rev. Styge","Sam Buchanan","Scarlet Witch","Speakeasy","Victoria Montesi","Wong"],"name":"Darkhold #5-7","link":"darkhold_5-7","credits":["Al Bigley","Richard Case","Stan Woch","Ariane Lenshoek","Mark McKenna","Rurik Tyler","James Felder","Chris Cooper","Bud LaRosa","Hildy Mesnik"],"i":5064},{"year":1993,"characters":["Darkhold Dwarf","Diabolique","Louise Hastings","Modred the Mystic","Randolph DeGuzman","Sam Buchanan","Samantha Regent","Victoria Montesi","Vittorio Montesi","Will 'Jinx' Hastings"],"name":"Darkhold #8-10","link":"darkhold_8-10","credits":["James Felder","Rurik Tyler","Chris Cooper","Bud LaRosa","Hildy Mesnik"],"i":5065},{"year":1993,"characters":["Baron Von Strucker","Belial","Blade","Frank Drake","Hannibal King","Innards","Keith Roberts","Malpractice","Pyre","Rotwrap"],"name":"Nightstalkers #3-4","link":"nightstalkers_3-4","credits":["D.G. Chichester","Ron Garney","Bobbie Chase","Tom Palmer"],"i":5066},{"year":1993,"characters":["Iron Fist"],"name":"Namor annual #3 (Iron Fist)","link":"namor_annual_3_iron_fist","credits":["Mike Rockwitz","Ron Marz","Brad Vancata","Andy Smith","Joe Andreani"],"i":5067},{"year":1993,"characters":["Air-Walker","Firelord","Galactus","Geatar","Jack of Hearts","Morg","Nebula","Silver Surfer"],"name":"Silver Surfer #76-78","link":"silver_surfer_76-78","credits":["Tom Christopher","Ron Lim","Craig Anderson","Lynaire Brust","Ron Marz"],"i":5068},{"year":1993,"characters":["Agent-X (Next Wave)","Amy Chen","Baron Von Strucker","Battlestar","Cassandra Romulus","Crippler","Dmitri Petrovitch","Doug Powell","Fin (Next Wave)","Ivan Trekov","Jacques Girard","Raul Quentino","Sandman","Siege","Silver Sable","Snare (Next Wave)","Stingray","Turk (Next Wave)"],"name":"Silver Sable & the Wild Pack #11-12","link":"silver_sable_the_wild_pack_11-","credits":["Lynaire Brust","Tom Grindberg","Craig Anderson","Josef Rubinstein","Gregory Wright"],"i":5069},{"year":1993,"characters":["Doc Samson","Havok","Madrox the Multiple Man","Polaris","Quicksilver","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor #87","link":"x-factor_87","credits":["Al Milgrom","Peter David","Kelly Corvese","Joe Quesada"],"i":5070},{"year":1993,"characters":["Al Mackenzie","Alexander Goodwin Pierce","Baron Von Strucker","Cassandra Romulus","Clay Quartermain","Contessa Valentina Allegro De La Fontaine","Crule","Dino Manelli","Dum Dum Dugan LMD","G.W. Bridge","Gabriel Jones","Gaffer (SHIELD Scientist)","Gideon","Izzy Cohen","Jasper Sitwell","Jimmy Woo","Kate Neville","Knockabout","Laura Brown","Lump (Gnobian)","Madame Hydra (Viper)","Network Nina","Nick Fury","Percy Pinkerton","Pit-Viper 12","Psi-Borg","Red (LMD)","Red Skull","Saltz","Solo","Terror (Shreck)","Violence"],"name":"Nick Fury Agent of SHIELD #45-47","link":"nick_fury_agent_of_shield_45-4","credits":["Don Hudson","Mike Rockwitz","John Heebink","Gregory Wright","Barry Dutter"],"i":5071},{"year":1993,"characters":["Arko","Balder","Black Knight (Dane Whitman)","Captain America","Eitri","Enchantress","Fandral","Heimdall","Hercules","Hogun","Jarvis","Kevin Masterson","Marcy Masterson Steele","Odin","Shatterfist","Sif","Sparky","Susan Austin","Thor","Thunderstrike","Volstagg"],"name":"Thor #457-459","link":"thor_457-459","credits":["Ralph Macchio","Al Milgrom","Geof Isherwood","Tom DeFalco","Pat Garrahy","Ron Frenz"],"i":5072},{"year":1993,"characters":["Adam Warlock","Drax the Destroyer","Gamora","Hulk","Moondragon","Pip the Troll","Rick Jones","Soul Gem"],"name":"Warlock and the Infinity Watch #12-13","link":"warlock_and_the_infinity_watch_8","credits":["Tom Raney","Lynaire Brust","Craig Anderson","Keith Williams","Jim Starlin"],"i":5073},{"year":1993,"characters":["Absorbing Man","Anaconda","Angar the Screamer","Asp","Batroc","Battleaxe (Grappler)","Beetle","Black Mamba","Black Panther","Black Talon II","Blizzard II","Boomerang","Boomslang","Brother Inquisitor","Bullet","Captain America","Coachwhip","Constrictor","D-Man","Diamondback","Dragonfly","Drill","Eel II","Electro","Falcon","Firebrand II","Flying Tiger","Frenzy","General Wo","Gladiatrix","Grey Gargoyle","Hammerhead","Hydroman","Impala","Iron Maiden","Jackdaw","Jackhammer","Ka-Zar","Killer Shrike","Klaw","Knick Knack","Knockout","Lady Deathstrike","Lorelei (Savage Land Mutate)","Machete","Mad Dog (Buzz Baxter)","Man-Ape","Man-Bull","Mentallo","Mesmero","MODAM","Moonhunter","Moonstone (Karla Sofen)","Nick Fury","Oddball","Peggy Carter","Piledriver","Poundcakes","Puff Adder","Ramrod (Daredevil villain)","Razorfist III","Rhino","Ringer II","Ringmaster","Rock Python","Scorpion","Sersi","Shang-Chi","Shocker","Shockwave","Slyde","Snapdragon","Songbird (Screaming Mimi)","Speed Demon","Spymaster (Nathon Lemon)","Stiletto","Stilt-Man","Sunstroke","Super-Adaptoid","Superia","Tarantula II","Thermo","Titania","Tombstone","Triple-Iron","Trump","Vertigo (Savage Land Mutate)","Water Wizard","Whiplash (Blacklash)","Whirlwind","Wildfire","Wrecker","Zabu","Zaran"],"name":"Captain America #411-418","link":"captain_america_411-418","credits":["His Friends","Mike Rockwitz","M.C. Wyman","Dan Bulanadi","Barry Dutter","Mark Gruenwald","Rik Levins","Joe Andreani"],"i":5074},{"year":1993,"characters":["Colossus","Cyclops","Elena Ivanova","Iceman","Jean Grey","John Wraith","Jubilee","Maverick","Professor X","Psylocke","Storm","Wolverine"],"name":"Wolverine #66-68","link":"wolverine_66-68","credits":["Steve Biasi","Jimmy Palmiotti","Bob Harras","Mark Texeira","Lisa Patrick","Larry Hama"],"i":5075},{"year":1993,"characters":["Alexandra Rasputina","Beast","Blind Faith","Cannonball","Colonel Alexei Vazhin","Colossus","Crimson Dynamo VI","Cyclops","Darkstar","Gambit","Iceman","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Jubilee","Matsuo Tsurayaba","Nikolai Rasputin","Nyoirin Henecha","Omega Red","Professor X","Psylocke","Revanche","Rogue","Storm","Warpath","Wolverine"],"name":"X-Men #17-19","link":"x-men_17-19","credits":["Fabian Nicieza","Bob Harras","Andy Kubert","Dan Panosian","Lisa Patrick","Bob Wiacek","Mark Pennington"],"i":5076},{"year":1993,"characters":["Cannonball","Cyclops","Empath","Firestar","Justin Baldwin","Laura Dunham","Maddie Baldwin","Magma","Namorita","Nova (Rich Rider)","Rage","Speedball","Sprocket","Warpath"],"name":"New Warriors #31","link":"new_warriors_31","credits":["Rob Tokar","Darick Robertson","Fabian Nicieza","Larry Mahlstedt"],"i":5077},{"year":1993,"characters":["Beast","Boom Boom","Cannonball","Copycat","Feral","G.W. Bridge","General Jeremy Clarke","Henry Peter Gyrich","Lila Cheney","Professor X","Rictor","Shatterstar","Siryn","Stevie Hunter","Storm","Sunspot","Tina Valentino","Warpath"],"name":"X-Force #19","link":"x-force_19","credits":["Fabian Nicieza","Harry Candelario","Bob Harras","Lisa Patrick","Greg Capullo"],"i":5078},{"year":1993,"characters":["Angel","Bishop","Carmella Unuscione","Charlotte Jones","Frenzy","Gambit","Harlan Kleinstock","Jean Grey","Professor X","Senator Kelly","Sharon Friedlander","Storm","Sven Kleinstock","Teddy Matson","Tom Corsi","Trish Tilby"],"name":"Uncanny X-Men #298","link":"uncanny_x-men_298","credits":["Al Milgrom","Bob Harras","Scott Lobdell","Lisa Patrick","Brandon Peterson"],"i":5079},{"year":1993,"characters":["Carnivore (Dick Chalker)","Crystal","Havok","Isolationist","Lukas (X-Patriot)","Madrox the Multiple Man","Moira MacTaggert","Pirouette","Polaris","Prodigal","Quicksilver","Random","Strong Guy","Taylor (X-Patriot)","Valerie Cooper","Wolfsbane"],"name":"X-Factor #88-91","link":"x-factor_88-91","credits":["Al Milgrom","Peter David","Scott Lobdell","Kelly Corvese","Buzz","Chris Batista","Jaye Gardner","Joe Quesada","Jan Duursema"],"i":5080},{"year":1993,"characters":["Amelia Voght","Angel","Anne-Marie Cortez","Beast","Bishop","Carmella Unuscione","Charlotte Jones","Chrome","Colossus","Cyclops","Fabian Cortez","Fatale","Forge","Francisco Milan","Frenzy","Gamesmaster","Graydon Creed","Harlan Kleinstock","Henry Peter Gyrich","Iceman","Illyana Rasputin (Alt-Limbo version)","Isaac Javitz","Jean Grey","Katu Kath","Marco Delgado","Moira MacTaggert","Neophyte","Nightcrawler","Noah Dubois","Professor X","Scanner (Acolyte)","Seamus Mellencamp","Senator Kelly","Senyaka","Shinobi Shaw","Spoor (Acolyte)","Stevie Hunter","Storm","Sven Kleinstock","Teddy Matson","Trevor Fitzroy","Wolverine"],"name":"Uncanny X-Men #299-300","link":"uncanny_x-men_299-300","credits":["Al Milgrom","John Romita Jr.","Bob Harras","Scott Lobdell","Dan Panosian","Lisa Patrick","Dan Green","Brandon Peterson"],"i":5081},{"year":1993,"characters":["Baby Bucky's Mom","Bucky (Julia Winter)","Ebbtide","Giscard Epurer","Horizon","Legs","Nomad"],"name":"Nomad #9","link":"nomad_9","credits":["Mark McKenna","Glenn Herdling","Pat Olliffe","Fabian Nicieza"],"i":5082},{"year":1993,"characters":["Bloodaxe (Jackie Lukus)","Bobby Steele","Carjack","Ed Marrero","Gary Paretsky","Mad Dog Rassitano","Marcus Stone","Marcy Masterson Steele","Mother Majowski","Rigger Ruiz","Samantha Joyce","Stellaris","Susan Austin","Thunderstrike"],"name":"Thunderstrike #1","link":"thunderstrike_1","credits":["Tom DeFalco","Ron Frenz","Al Milgrom","Ralph Macchio"],"i":5083},{"year":1992,"characters":["Alexander Goodwin Pierce","Black Widow","Nick Fury","Punisher"],"name":"Punisher/Black Widow: Spinning Doomsday's Web","link":"punisherblack_widow_spinning_d","credits":["Mark Farmer","D.G. Chichester","Nel Yomtov","Richard Ashford","Larry Stroman"],"i":5084},{"year":1994,"characters":["Adam Warlock","Soul Gem"],"name":"Cyberspace 3000 #6-8","link":"cyberspace_3000_6-8","credits":["Steve Tappin","Michael Bennent","Gary Russell","Michael Eve"],"i":5085},{"year":1993,"characters":["Adam Warlock","Captain Hammer","Count Abyss","Dr. Strange","Drax the Destroyer","Eternity","Gamora","Maya Teraxtola","Mole Man","Moondragon","Pip the Troll","Rintrah","Soul Gem"],"name":"Warlock and the Infinity Watch #14-15","link":"warlock_and_the_infinity_watch_9","credits":["Lynaire Brust","Craig Anderson","Angel Medina","Bob Almond","Jim Starlin"],"i":5086},{"year":1993,"characters":["Antibody","Black Widow","Caregiver","Contemplator Skrull","Devon Ballantine","Dr. Druid","Erishkigal","Hercules","Judicator","Kayla Ballantine","Kenjiro Tanaka","Kismet (Her)","Living Mummy","Makkari","Moondancer","Mr. Ballantine","Neutron","Obliterator","Origin","Peggy Carter","Possessor","Presence","Quagmire","Quasar","Shadowoman","Skull the Slayer","Thunderstrike","Uatu the Watcher","Voyager"],"name":"Quasar #44-48","link":"quasar_44-48","credits":["David Day","Dan Day","Mike Rockwitz","Grant Miehm","Mark Gruenwald","Andy Smith","Barry Dutter","Ralph Cabrera"],"i":5087},{"year":1993,"characters":["Angel","Black Knight (Dane Whitman)","Black Mamba","Charlotte Jones","Cloak","Crystal","Dagger","Darkhawk","Darkling (Asylum)","Dr. Strange","Ecstasy","Firestar","Human Torch","Laura Dunham","Maddie Baldwin","Mary Jane Watson","Namorita","Nova (Rich Rider)","Quagmire","Rage","Sersi","Shroud","Silhouette","Speedball","Spider-Man","Thing","Turbo II","Vanisher"],"name":"New Warriors #32-34","link":"new_warriors_32-34","credits":["Dan Cuddy","Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Darick Robertson"],"i":5088},{"year":1993,"characters":["Andrew Chord","Angel","Cloak","Crystal","Dagger","Darkhawk","Darkling (Asylum)","Dr. Strange","Firestar","Hindsight Lad","Hnang","Kimeiko Ashu","Namorita","Nova (Rich Rider)","Rage","Sersi","Shroud","Silhouette","Speedball","Spider-Man","Sprocket","Thing","Turbo","Turbo II"],"name":"New Warriors annual #3","link":"new_warriors_annual_3","credits":["Dan Cuddy","Ian Akin","Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Javier Saltares","Mark McKenna","Brad Vancata","Darick Robertson","Mannny Galan","Chris Marrinan","Evan Skolnick"],"i":5089},{"year":1993,"characters":["Adam Warlock","Arcanna","Caregiver","Death","Doctor Spectrum","Dr. Druid","Dr. Strange","Epoch","Erishkigal","Human Torch","Hyperion","In-Betweener","Jennifer Kale","Kayla Ballantine","Kenjiro Tanaka","Kismet (Her)","Lady Lark","Lisa Vaughn","Living Mummy","Living Tribunal","Lord Chaos","Man-Thing","Master Order","Modred the Mystic","Moondragon","Mr. Ballantine","Power Princess","Quasar","Shadowoman","Shaman","Silver Surfer","Skull the Slayer","Talisman","Thing","Whizzer (Squadron Supreme)","Wundarr (Aquarian)"],"name":"Quasar #49-50","link":"quasar_49-50","credits":["Michael Rockwitz","Grant Miehm","Mark Gruenwald","Andy Smith","Ralph Cabrera","Joe Andreani"],"i":5090},{"year":1993,"characters":["Adam Warlock","Angler","Arcanna","Blue Shield","Doctor Spectrum","Epoch","Fabrikant","Haywire","Hyperion","Insidio","Ion","Kayla Ballantine","Kismet (Her)","Lady Lark","Moondragon","Myron Wilburn","Power Princess","Quasar","Shape","Skeletron","Whizzer (Squadron Supreme)"],"name":"Quasar #51-53","link":"quasar_51-53","credits":["John Heebink","Michael Rockwitz","Ralph Cabrera","Mark Gruenwald","Michael Avon Oeming","Jim Amash","Joe Andreani"],"i":5091},{"year":1993,"characters":["Basilisk (Morbius foe)","Jacob Weisenthal","Morbius","Simon Stroud","Victor Slaughter"],"name":"Morbius #5-6","link":"morbius_5-6","credits":["Mike Witherby","Matthew Morra","Ron Wagner","Len Kaminski","Bobbie Chase"],"i":5092},{"year":1993,"characters":["Agamotto","Baron Mordo","Clea","Cyttorak","Dormammu","Dr. Strange","Ghost Rider (Danny Ketch)","Hoggoth","Hulk","Ikonn","Noble Kale","Oshtur","Satannish","Silver Surfer","Umar","Wong"],"name":"Doctor Strange #48-50","link":"doctor_strange_48-50","credits":["Don Hudson","Mike Rockwitz","Geof Isherwood","Charles Barnett III","Len Kaminski","Bob Petrecca","Barry Dutter"],"i":5093},{"year":1993,"characters":["Dr. Strange","Rintrah","Wong"],"name":"Doctor Strange #51","link":"doctor_strange_51","credits":["Geof Isherwood","Barry Dutter","Mike Rockwitz"],"i":5094},{"year":1993,"characters":["Bucky (Julia Winter)","Darkhawk","Dr. Strange","Nightmare","Nomad","Spider-Woman (Julia Carpenter)","Wolverine"],"name":"Secret Defenders #1-3","link":"secret_defenders_1-3","credits":["Roy Thomas","Don Hudson","Andre Coates","Mike Rockwitz"],"i":5095},{"year":1993,"characters":["Dr. Strange","Jacob Weisenthal","Mandy Tyler","Morbius","Nightmare","Victor Slaughter"],"name":"Morbius #7-8","link":"morbius_7-8","credits":["Mike Witherby","Matthew Morra","Ron Wagner","Len Kaminski","Bobbie Chase"],"i":5096},{"year":1993,"characters":["Dr. Strange","Morbius","Nightmare"],"name":"Doctor Strange #52","link":"doctor_strange_52","credits":["Mike Rockwitz","Geof Isherwood","Roy Thomas","Len Kaminski","Barry Dutter"],"i":5097},{"year":1993,"characters":["Dr. Strange","Morbius","Nightmare","Victor Slaughter"],"name":"Morbius #9","link":"morbius_9","credits":["Mike Witherby","Gregory Wright","Matthew Morra","Ron Wagner","Bobbie Chase"],"i":5098},{"year":1993,"characters":["Dr. Strange","Dreamstalker","Morbius","Nightmare","Wong"],"name":"Doctor Strange #53","link":"doctor_strange_53","credits":["Geof Isherwood","Roy Thomas","Mike Rockwitz","Joe Andreani"],"i":5099},{"year":1993,"characters":["Agatha Harkness","Alicia Masters","Amy Chen","Andrew 'Jock' Jackson","Aron the Watcher","Battlestar","Ben Urich","Black Bolt","Bridget O'Neil","Crippler","Daredevil","Devos the Devastator","Dr. Doom","Dr. Strange","Ebony","Fireworks Fielstein","Franklin Richards","Ghost Rider (Danny Ketch)","Glory Grant","Gorgon","Hulk","Human Torch","Invisible Woman","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Karnak","Lyja the Lazerfist","Mad Dog Rassitano","Makio Yakaki","Marcus Stone","Medusa","Molecule Man","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Nathaniel Richards","Noble Kale","Paibok the Power Skrull","Puppet Master","Raul Quentino","Rigger Ruiz","Roberta","Silver Sable","Spider-Man","Thing","Triton","Uatu the Watcher","Wolverine"],"name":"Fantastic Four #371-375","link":"fantastic_four_371-375","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":5100},{"year":1993,"characters":["Alistair Smythe","Aunt May","Ben Urich","Black Cat","Eddie Brock (Venom)","Electro","Flash Thompson","Harry Osborn","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Max Young","Richard Parker Duplicate","Scorpion","Spider-Man","Tinkerer","Venom Symbiote"],"name":"Amazing Spider-Man #368-373","link":"amazing_spider-man_368-373","credits":["Al Milgrom","Todd Smith","Don Hudson","Mark Stegbauer","Danny Fingeroth","Mike Lackey","Randy Emberlin","Mark Bagley","David Michelinie","J.M. DeMatteis","Aaron Lopresti"],"i":5101},{"year":1993,"characters":["Amy Chen","Ann Weying","Aunt May","Battlestar","Ben Urich","Chameleon","Crippler","Doug Powell","Eddie Brock (Venom)","Glory Grant","J. Jonah Jameson","Joy Mercado","Kraven the Hunter","Lance Bannon","Man-Wolf (John Jameson)","Mary Jane Watson","Mary Parker Duplicate","Raul Quentino","Richard Parker Duplicate","Silver Sable","Spider-Man","Uncle Morty","Venom Symbiote"],"name":"Amazing Spider-Man #374-375","link":"amazing_spider-man_374-375","credits":["Don Hudson","Danny Fingeroth","Dan Panosian","Randy Emberlin","Mark Bagley","Mike Lackey","David Michelinie","Terry Kavanagh","Eric Fein","Aaron Lopresti"],"i":5102},{"year":1993,"characters":["Black Panther","Human Torch","Invisible Woman","Klaw","Mr. Fantastic","Thing"],"name":"Fantastic Four Unlimited #1","link":"fantastic_four_unlimited_1","credits":["Herb Trimpe","Mike DeCarlo","Mike Rockwitz","Roy Thomas","Dave Hoover","Charles Barnett III"],"i":5103},{"year":1993,"characters":["Daredevil","Foggy Nelson","Karen Page"],"name":"Daredevil #312-313","link":"daredevil_312-313","credits":["Ralph Macchio","D.G. Chichester","Scott McDaniel","Pat Garrahy","Bud LaRosa"],"i":5104},{"year":1993,"characters":["Base","Dark Angel","Ka-Zar","Oonagh Mullarkey","Ormond Wychwood","Ridge","Shift","Sporr","Stinger (Genetix)","Vesper","Wolverine","Zabu"],"name":"Codename: Genetix #1-4","link":"codename_genetix_1-4","credits":["John Freeman","Graham Marks","Gary Russell","Robin Riggs","Kevin Hopgood","Romeo Loez","Phil Gascoine","Andy Lanning","Bambos Georgiou","Michael Eve"],"i":5105},{"year":1993,"characters":["Ahura","Aireo","Black Bolt","Franklin Richards","Gorgon","Human Torch","Invisible Woman","Karnak","Leonus","Lockjaw","Maximus","Medusa","Minxi","Mr. Fantastic","Seeker II (Inhuman)","Thing","Timberius","Triton"],"name":"Fantastic Four Unlimited #2","link":"fantastic_four_unlimited_2","credits":["Herb Trimpe","Roy Thomas","Mike DeCarlo","Mike Rockwitz"],"i":5106},{"year":1993,"characters":["Microchip","Punisher"],"name":"Punisher War Journal #50","link":"punisher_war_journal_50","credits":["Chuck Dixon","Don Daley","Shawn McManus","Tim Touhy","Mark Texeira","Steven Grant"],"i":5107},{"year":1993,"characters":["Annihilus","Blastaar","Brute (Alt. Reed Richards)","Human Torch","Invisible Woman","Mr. Fantastic","Thing"],"name":"Fantastic Four Unlimited #3","link":"fantastic_four_unlimited_3","credits":["Herb Trimpe","Alex Trimpe","Mike Rockwitz","Roy Thomas","Steve Montano","Joe Andreani"],"i":5108},{"year":1994,"characters":["Algernon Crowe","Black Knight (Dane Whitman)","Captain America","Captain Britain","Oonagh Mullarkey","Ormond Wychwood","Silver Surfer"],"name":"Plasmer #1-4","link":"plasmer_1-4","credits":["Jacqui Papp","Glenn Dakin","Sean Hardy","Pascual Ferry"],"i":5109},{"year":1993,"characters":["Ben Urich","Bomblast","Carl Mach (Orange Symbiote)","Carlton Drake","Donna Diego (Scream)","Eddie Brock (Venom)","Firearm","Indigo Symbiote","Lasher","Leslie Gesneria (Violet Symbiote)","Mary Jane Watson","Orange Symbiote","Orwell Taylor","Ramon Hernandez (Lasher)","Ramshot","Roland Treece","Scream","Screech","Sentry (Jury)","Spider-Man","Trevor Cole (Indigo Symbiote)","Venom Symbiote","Violet Symbiote"],"name":"Venom: Lethal Protector #1-6","link":"venom_lethal_protector_1-6","credits":["Ron Lim","Al Milgrom","Danny Fingeroth","Sam DeLaRosa","Mike Lackey","Mark Bagley","David Michelinie"],"i":5110},{"year":1993,"characters":["Aunt May","Ben Urich","Betty Brant","Controller","Doppelganger","Dragon Man","Dreadnaught","Eel II","Fixer","Foreigner","Gauntlet (Alfredo Morelli)","Joe 'Robbie' Robertson","Madame Menace (Sunset Bain)","Mary Jane Watson","Mary Parker Duplicate","Mentallo","Mr. Fear (Alan Fagan)","Nightwatch","Plantman","Richard Fisk","Richard Parker Duplicate","Spider-Man","Vanisher"],"name":"Web of Spider-Man #97-100","link":"web_of_spider-man_97-100","credits":["Don Hudson","Dan Cuddy","Rob Tokar","Josef Rubinstein","Derek Yaniger","Alex Saviuk","Terry Kavanagh"],"i":5111},{"year":1993,"characters":["Arkon","Black Knight (Dane Whitman)","Black Widow","Crystal","Hercules","Jarvis","Karia","Magdalene","Marilla","Proctor","Sersi","Sloth","Swordsman (Gatherers)","Tabula Rasa","Thundra","Vision","Vision (Gatherers)"],"name":"Avengers #358-359","link":"avengers_358-359","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":5112},{"year":2005,"characters":["AC-DC","Alistaire Stuart","Captain Britain","Cerise","Death","Fern","Feron","Gabriel (RCX)","Galactus","Giggles","Kylun","Lockheed","Lump (Warpies)","Mastermind (Computer)","Meggan","Michael (RCX)","Micromax","Nigel Frobisher","Nightcrawler","Phoenix Force","Quill (Warpies)","Rachel Summers","Roma","Shadowcat (Kitty Pryde)","Widget"],"name":"Excalibur #61-65","link":"excalibur_61-65","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":5113},{"year":1993,"characters":["Bantam (XSE)","Siena Blaze","Trevor Fitzroy"],"name":"Uncanny X-Men annual #17 (Siena Blaze)","link":"x-men_annual_17_siena_blaze","credits":["Al Milgrom","Bob Harras","Scott Lobdell","Lisa Patrick","Tom Grummett"],"i":5114},{"year":1993,"characters":["Bodybag","Captain Britain","Cerise","China Doll","Feron","Ferro^2","Gatecrasher","Kylun","Meggan","Nightcrawler","Numbers","Rachel Summers","Ringtoss","Shadowcat (Kitty Pryde)","Waxworks","Yap"],"name":"Excalibur annual #1","link":"excalibur_annual_1","credits":["David Boller","Audwynn Jermaine Newman","Keith Williams","Dan Bulanadi","Kevin Conrad","Mark McKenna","Suzanne Gaffney","Joey Cavalieri","Mark Powers","Chris Marrinan","Evan Skolnick"],"i":5115},{"year":1993,"characters":["Captain Britain","Cerise","Feron","Kylun","Lockheed","Meggan","Nightcrawler","Rachel Summers","Shadowcat (Kitty Pryde)","Widget"],"name":"Excalibur #66-67","link":"excalibur_66-67","credits":["Terry Kavanagh","Alan Davis","Mark Powers","Mark Farmer"],"i":5116},{"year":1993,"characters":["Lance Bannon","Mary Jane Watson","Master of Vengeance","Punisher","Spider-Man"],"name":"Spider-Man #32-34","link":"spider-man_32-34","credits":["Danny Fingeroth","Bob McLeod","Lee Weeks","Bob Mcleod","Mike Lackey","Steven Grant"],"i":5117},{"year":1993,"characters":["Rambo (dog)","Rick Sheridan","Sleepwalker"],"name":"Sleepwalker #30","link":"sleepwalker_30","credits":["Don Daley","Tom Brevoort","Tim Tuohy","Mike Kanterovich","Terry Shoemaker","Dan Green"],"i":5118},{"year":1993,"characters":["Balder","Beta Ray Bill","Odin","Sif","Thor"],"name":"Thor #460-461","link":"thor_460-461","credits":["Mike Rockwitz","Ron Marz","Bruce Zick","Jim Starlin","Steve Montano","Barry Dutter"],"i":5119},{"year":1993,"characters":["Dr. Strange","Imei Chang","Namorita","Punisher","Rick Sheridan","Roadkill","Sleepwalker","Splatt","Wong"],"name":"Secret Defenders #4-5","link":"secret_defenders_4-5","credits":["Don Hudson","Mike Rockwitz","Roy Thomas","Andre Coates","Joe Andreani"],"i":5120},{"year":1993,"characters":["8-Ball","Alyssa Conover","Beetle","Cobweb (Mindscape)","Crossbones","Esk'odin","Ida Epstein","Janine Epstein","Jason Macendale","Master Link","Missing Link (Chain Gang)","Morris Epstein","Mr. Hyde","Psyko","Rambo (dog)","Rick Sheridan","Sk'obe","Sleepwalker","Speed Demon","Sv'ara","T'opali","Uplink","Weak Link","Whitney Cooper"],"name":"Sleepwalker #19-24","link":"sleepwalker_19-24","credits":["Bob Budiansky","Don Daley","John Lowe","Frank Percy","Kelly Krantz","Tim Tuohy","Denis Rodier"],"i":5121},{"year":1993,"characters":["Air-Walker","Beta Ray Bill","Captain Atlas","Doctor Minerva","Firelord","Ganymede","Gladiator (Shiar)","Jack of Hearts","Morg","Oracle","Silver Surfer","Tempest","Terrax","Tyrant"],"name":"Silver Surfer #79-82","link":"silver_surfer_79-82","credits":["Tom Christopher","Ron Lim","Craig Anderson","Lynaire Brust","Ron Marz"],"i":5122},{"year":1993,"characters":["Ares","Cerberus (Greek myth)","Charon","Odin","Pluto","Sif","Thor","Zeus"],"name":"Thor #462","link":"thor_462","credits":["Mike DeCarlo","Mike Rockwitz","Bruce Zick","Jim Starlin","Ron Frenz","Joe Andreani"],"i":5123},{"year":1993,"characters":["Punisher"],"name":"Punisher Holiday Special #1","link":"punisher_holiday_special_1","credits":["Steven Grant","Don Daley","J.J. Birch","Rodney Ramos","Tim Tuohy","John Hebert","Eric Fein"],"i":5124},{"year":1993,"characters":["Daredevil","Doc Samson","Electro","Firestar","Justice","Laura Dunham","Mary Jane Watson","Microchip","Namorita","Night Thrasher","Nova (Rich Rider)","Punisher","Rage","Silhouette","Sister Maggie Murdock","Speedball","Spider-Man","Thanos"],"name":"Marvel Holiday Special #2","link":"marvel_holiday_special_2","credits":["Fred Fredericks","Darick Robertson","Larry Hama","Steve Lightle","Mike DeCarlo","Fabian Nicieza","Terry Austin","Jim Starlin","Stan Lee","Carl Potts","John Herbert","Michael Golden","Ron Lim","Peter David","Tom Grindberg","Larry Mahlstedt","Renee Witterstaetter","Richard Howell","Al Milgrom","Ann Nocenti","Rik Levins"],"i":5125},{"year":1993,"characters":["Alexis Primo","Terror (Shreck)"],"name":"Terror Inc. #8","link":"terror_inc_8","credits":["D.G. Chichester","Horacio Ottolini","Marc McLaurin"],"i":5126},{"year":1993,"characters":["Annex","Billy Connors","Black Cat","Deathstorm","Hillman Barto","J. Jonah Jameson","Lizard","Man-Wolf (John Jameson)","Martha Connors","Mary Jane Watson","Solo","Spider-Man"],"name":"Amazing Spider-Man annual #27","link":"amazing_spider-man_annual_27","credits":["Danny Fingeroth","Scott Hanna","Larry Alexander","Andy Mushynsky","Mike Lackey","Jack C. Harris","Scott Kolins","Bud LaRosa","Tom Lyle","Eric Fein","Aaron Lopresti"],"i":5127},{"year":1993,"characters":["Microchip","Punisher"],"name":"Punisher War Zone #12-16","link":"punisher_war_zone_12-16","credits":["Mick Gray","Don Daley","Mark McKenna","Tim Tuohy","Mike McKone","Andy Lanning","Dan Abnett"],"i":5128},{"year":1993,"characters":["Bucky (Julia Winter)","Lobo (Will Talltree's 2nd Wolf)","Nomad","Red Wolf (Will Talltrees)","Vernon Hatchway"],"name":"Nomad #10","link":"nomad_10","credits":["Fabian Nicieza","Greg Adams","Glenn Herdling","Mark McKenna","Mike Manley","Tom Morgan","Hector Collazo","Pat Garrahy","Pat Olliffe"],"i":5129},{"year":1993,"characters":["Achilles","Agamemnon","Atalanta","Betty Ross","Black Knight (Dane Whitman)","Crystal","Delphi","Doc Samson","Henry Peter Gyrich","Hercules","Hulk","Juggernaut","Keith Chandler","Marlo Chandler","Mentallo","Piecemeal (NWO)","Ray Chandler","Red Skull","Rick Jones","Sersi","Silvermane","Ulysses","Vision"],"name":"Hulk #402-404","link":"hulk_402-404","credits":["Peter David","Mark Farmer","Cam Smith","Matthew Morra","Bobbie Chase","Jan Duursema","Gary Frank"],"i":5130},{"year":1993,"characters":["Frenchie","Moon Knight","Scout"],"name":"Moon Knight #51","link":"moon_knight_51","credits":["Dave Hoover","Keith Williams","Sarra Mossoff","Terry Kavanagh","Joey Calavieri"],"i":5131},{"year":1993,"characters":["Nightwatch"],"name":"Web of Spider-Man annual #9 (Nightwatch)","link":"web_of_spider-man_annual_9_nig","credits":["Terry Kavanagh","Mark Powers","Eric Fein","Hector Collazo"],"i":5132},{"year":1993,"characters":["Angel","Aunt May","Beast","Cyclops","Harry Osborn","Iceman","J. Jonah Jameson","Jean Grey","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Normie Osborn","Professor Power","Richard Parker Duplicate","Spider-Man"],"name":"Spectacular Spider-Man #197-200","link":"spectacular_spider-man_197-200","credits":["Rob Tokar","Dan Cuddy","Sal Buscema","J.M. DeMatteis"],"i":5133},{"year":1993,"characters":["Attractive Lad (Aundray Phelps)","Auteur (Alex Flores)","Buff (Lahoya Scripps)","Dreamer (Jamie Flores)","Glamour Girl (Gloria Angel)","Lady Lotus","Snap (Ginger Beach)","Splice II","Stat (Spider Beach)","Visionary (Argus LeVecchio)","Wonder Man"],"name":"Wonder Man #19","link":"wonder_man_19","credits":["Gerard Jones","Dan Panosian","Jeff Johnson","Fabian Nicieza"],"i":5134},{"year":1993,"characters":["Punisher"],"name":"Punisher #76","link":"punisher_76","credits":["Al Milgrom","Larry Stroman","Don Daley","Mike Baron","Kevin Kobasic"],"i":5135},{"year":1993,"characters":["Bucky (Julia Winter)","Nomad"],"name":"Nomad #11","link":"nomad_11","credits":["Rick Mays","Glenn Herdling","Hector Collazo","Fabian Nicieza"],"i":5136},{"year":1993,"characters":["Ben Urich","Daredevil","Kingpin","Mr. Fear (Alan Fagan)"],"name":"Daredevil #314-315","link":"daredevil_314-315","credits":["Ralph Macchio","D.G. Chichester","Scott McDaniel","Pat Garrahy","Bud LaRosa"],"i":5137},{"year":1993,"characters":["Mike 'Ice' Phillips","Punisher"],"name":"Punisher War Journal #52-53","link":"punisher_war_journal_52-53","credits":["Tim Tuohy","Don Haley","Chuck Dixon","Gary Kwapisz"],"i":5138},{"year":1993,"characters":["Aurora","Bulldozer","Feedback","General Jeremy Clarke","Goblyn","Manikin","Master of the World","Nemesis II","Northstar","Pathway","Persuasion","Piledriver","Puck","Reginald Tork","Robert Hagon","Sasquatch","Shaman","Thunderball","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire","Wrecker","Wyre"],"name":"Alpha Flight #118-120","link":"alpha_flight_118-120","credits":["Simon Furman","Pat Broderick","Bruce D. Patterson","Dan Cuddy","Rob Tokar"],"i":5139},{"year":1993,"characters":["Blade","Frank Drake","Georgianna LaFountaine","Hannibal King","Keith Roberts","Punisher"],"name":"Nightstalkers #5-6","link":"nightstalkers_5-7","credits":["D.G. Chichester","James Felder","Tom Palmer","Ron Garney","Hildy Mesnik"],"i":5140},{"year":1993,"characters":["Alexander Goodwin Pierce","Boom Boom","Cannonball","Copycat","Crule","Deadpool","Domino","Double Trouble","Feral","G.W. Bridge","Gideon","Grizzly (Six Pack)","Hammer (Six Pack)","Henry Peter Gyrich","Killspree","Lila Cheney","Network Nina","Nick Fury","Nicodemus (External)","Professor","Professor X","Rictor","Saul","Shatterstar","Siryn","Sluggo","Sunspot","Tina Valentino","Tygerstryke","Valerie Cooper","War Machine","Warpath","Yeti (Dept K)"],"name":"X-Force #20-23","link":"x-force_20-23","credits":["Fabian Nicieza","Harry Candelario","Kevin Conrad","Bob Harras","Lisa Patrick","Greg Capullo"],"i":5141},{"year":1993,"characters":["Alexis Primo","Boneyard","Brother Randi","Hellfire (Mikal Drakonmegas)","Priapus","Terror (Shreck)","Wolverine"],"name":"Terror Inc. #9-10","link":"terror_inc_9-10","credits":["Jason Temujin","D.G. Chichester","Marc McLaurin","Tom Daning","Richard Pace"],"i":5142},{"year":1993,"characters":["Bogeyman","Coldfire","Contract","Dakota North","James Lucas (Geary)","Karl Malus","Luke Cage","Manslaughter","Randolph Creed","Rick Mason (Agent)","Tinkerer"],"name":"Cage #14","link":"cage_14","credits":["Frank Turner","Marc McLaurin","Scott Benefiel","Chris Cooper","Karl Bollers"],"i":5143},{"year":1993,"characters":["Adam Plunder","Bishop","Cyclops","Gamesmaster","Ka-Zar","Magneto","Psylocke","Shanna the She-Devil","Siena Blaze","Storm"],"name":"X-Men Unlimited #1","link":"x-men_unlimited_1","credits":["Chris Bachalo","Scott Lobdell","Kelly Corvese","Dan Panosian","Jaye Gardner"],"i":5144},{"year":1993,"characters":["Cable (Adult)","G.W. Bridge","Kane","Professor","Sinsear","Weasel"],"name":"Cable #1-3","link":"cable_1-3","credits":["Ron Lim","Al Milgrom","Fabian Nicieza","Harry Candelario","Co.","Bob Harras","Paul Ryan","Paul Smith","Kerry Gammill","Klaus Janson","Ian Churchill","Lisa Patrick","Bob Wiacek","Art Thibert","Brandon Peterson"],"i":5145},{"year":1993,"characters":["Boom Boom","Cannonball","Copycat","Crule","Deadpool","Domino","Feral","Grizzly (Six Pack)","Hammer (Six Pack)","Magneto","Professor X","Rictor","Rusty Collins","Shatterstar","Siryn","Skids","Sluggo","Sunspot","Trish Tilby","Valerie Cooper","Warpath"],"name":"X-Force #24","link":"x-force_24","credits":["Fabian Nicieza","Bob Harras","Lisa Patrick","Greg Capullo","Richard Bennett"],"i":5146},{"year":1993,"characters":["Cable (Adult)","Copycat","Domino","G.W. Bridge","Grizzly (Six Pack)","Hammer (Six Pack)","Kane","Nick Fury","Sinsear"],"name":"Cable #4","link":"cable_4","credits":["Rob Liefeld","Al Milgrom","Fabian Nicieza","Bob Harras","Scott Koblish","James Reddington","Bill Wylie","Art Thibert"],"i":5147},{"year":1993,"characters":["Consuela","Erik Josten","Hawkeye","Kuroko","Living Lightning","Megan McCambridge","Mockingbird Skrull","Rachel Carpenter","Scarlet Witch","Spider-Woman (Julia Carpenter)","USAgent"],"name":"Avengers West Coast #92","link":"avengers_west_coast_92","credits":["David Ross","Roy Thomas","Nel Yomtov","Tim Dzon","Dann Thomas","John Lewandowski"],"i":5148},{"year":1993,"characters":["Abe Zimmer","Erica Sondheim","Firepower","Iron Man","Living Laser","Marcy Pearson","Morgan Stark","Mrs. Arbogast","Osamu Moroboshi","Rae LaCoste","VORTEX","War Machine"],"name":"Iron Man #287-289","link":"iron_man_287-289","credits":["Mike DeCarlo","Christopher Ivy","Brad Vancata","Tom Morgan","Kevin Hopgood","John Lewandowksi","Len Kaminski","Nel Yomtov","Barry Kitson"],"i":5149},{"year":1993,"characters":["Adam Warlock","Death","Drax the Destroyer","Gamora","Mephisto","Moondragon","Pip the Troll","Shalla Bal","Silver Surfer","Soul Gem","Tricephalous"],"name":"Silver Surfer/Warlock: Resurrection #1-4","link":"silver_surferwarlock_resurrect","credits":["Craig Anderson","Terry Austin","Jim Starlin"],"i":5150},{"year":1993,"characters":["Abe Zimmer","Erica Sondheim","Iron Man","Osamu Moroboshi","War Machine"],"name":"Iron Man #290-291","link":"iron_man_290-291","credits":["Steven Mitchell","Kevin Hopgood","John Lewandowksi","Len Kaminski","Nel Yomtov"],"i":5151},{"year":1993,"characters":["Cybertooth","Darkhawk","Doctor Demonicus","Hawkeye","Irezumi","Iron Man","Jawbreaker","Kain","Klaw","Kuroko","Mockingbird Skrull","Morning Star","Scarlet Witch","Spider-Woman (Julia Carpenter)","USAgent","War Machine"],"name":"Avengers West Coast #93-95","link":"avengers_west_coast_93-95","credits":["Aaron McClellan","David Ross","Roy Thomas","Nel Yomtov","Tim Dzon","Dann Thomas","John Lewandowski"],"i":5152},{"year":1993,"characters":["Andrea Strucker","Andreas Strucker","Arcade","Auric","Beast","Beetle","Blackout (Demon)","Caliber","Cobra","Constrictor","Controller","Cyclops","Doctor Octopus","Fixer","Grey Gargoyle","Jack O'Lantern (Steven Levins)","Jason Macendale","Klaw","Living Laser","Mandrill","Mysterio","Nemesis II","Paste Pot Pete","Plantman","Professor X","Puck","Rhino","Ringmaster","Silver","Spider-Man","Stilt-Man","Taskmaster","Valerie Cooper","Vector","Vindicator (Heather Hudson)","Wild Child","Wolverine"],"name":"Alpha Flight #121","link":"alpha_flight_121","credits":["E. Craig Brasfield","Simon Furman","Dan Cuddy","Frank Turner","Rob Tokar"],"i":5153},{"year":1993,"characters":["Alkhema","Hawkeye","Henry Pym","Iron Man","Living Lightning","Mockingbird Skrull","Scarlet Witch","Spider-Woman (Julia Carpenter)","Tigra","Ultron","USAgent","War Machine","Wasp"],"name":"Avengers West Coast annual #8","link":"avengers_west_coast_annual_8","credits":["Don Hudson","John Czop","David Ross","Michael Barreiro","Roy Thomas","Larry Alexander","Kris Renkewitz","John Lowe","Nel Yomtov","Maria Beccari","Fred Fredericks","Scott Kolins","Tim Dzon","Vince Russell","John Lewandowski"],"i":5154},{"year":1993,"characters":["Arex","Black Knight (Dane Whitman)","Black Widow","Captain America","Crystal","Hercules","Ikaris","Karia","Magdalene","Proctor","Sersi","Sloth","Sprite","Swordsman (Gatherers)","Tabula Rasa","Vision","Vision (Gatherers)"],"name":"Avengers #360-361","link":"avengers_360-361","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":5155},{"year":1993,"characters":["Cardinal","Cloak","Dagger","Hindsight Lad","Killer Shrike","Kimeiko Ashu","Namorita","Night Thrasher","Nova (Rich Rider)","Silhouette","Sparrow","Speedball","Spitfire","Tanager","Turbo","Turbo II"],"name":"New Warriors #35","link":"new_warriors_35","credits":["E. Craig Brasfield","Dan Cuddy","Fabian Nicieza","Rob Tokar","Jeffrey Albrech"],"i":5156},{"year":1993,"characters":["Araki","Bill Foster","Black Knight (Dane Whitman)","Black Widow","Captain America","Collector","Crystal","Deathcry","Dylon Cir","Galen Kor","Henry Pym","Hercules","Jarvis","Kona Lor","Lilandra","Luna","Magdalene","Marilla","Proctor","Sersi","Sloth","Swordsman","Tabula Rasa","Talla Ron","Uatu the Watcher","Ute","Vision","Vision (Gatherers)"],"name":"Avengers #362-366","link":"avengers_362-366","credits":["Ralph Macchio","Gordon Purcell","Bob Harras","Glenn Herdling","Tom Palmer","Ariane Lenshoek","Steve Epting","Michael Gustovich","Steve Alexandrov","Fred Fredericks","J.B. Jones","Andrew Paquette","Pat Garrahy"],"i":5157},{"year":1993,"characters":["Aireo","Corruptor","Hindsight Lad","Hybrid (Scott Washington)","Jerry Morgan","Justice","Kimeiko Ashu","Klaw","Krang","Leviathan (Gargantua)","Mad Thinker","Man-Bull","Mandrill","Namorita","Orka","Spitfire","Terraformer","Victor Hasayaba","Warden Jzemlico","Water Wizard","Wizard"],"name":"New Warriors #36","link":"new_warriors_36","credits":["E. Craig Brasfield","Rob Tokar","Jeffrey Albrech","Fabian Nicieza"],"i":5158},{"year":1993,"characters":["Alexis Primo","Brother Randi","Hellfire (Mikal Drakonmegas)","Luke Cage","Priapus","Rekrab","Silver Sable","Terror (Shreck)"],"name":"Terror Inc. #11","link":"terror_inc_11","credits":["Jason Temujin","D.G. Chichester","Marc McLaurin","Tom Daning","Richard Pace"],"i":5159},{"year":1993,"characters":["Dakota North","James Lucas (Geary)","Luke Cage","Micky Hamilton","Priapus","Silver Sable","Terror (Shreck)"],"name":"Cage #15","link":"cage_15","credits":["Frank Turner","Marc McLaurin","Scott Benefiel","Chris Cooper","Karl Bollers"],"i":5160},{"year":1993,"characters":["Luke Cage","Priapus","Silver Sable","Terror (Shreck)","Uncle Morty"],"name":"Silver Sable & the Wild Pack #13","link":"silver_sable_the_wild_pack_13","credits":["Lynaire Brust","Craig Anderson","Steven Butler","Jimmy Palmiotti","Gregory Wright"],"i":5161},{"year":1993,"characters":["Alexis Primo","Boneyard","Libido","Luke Cage","Priapus","Silver Sable","Terror (Shreck)"],"name":"Terror Inc. #12","link":"terror_inc_12","credits":["Jason Temujin","D.G. Chichester","Marc McLaurin","Tom Daning","Bud LaRosa","Kirk Van Wormer","and Steve George"],"i":5162},{"year":1993,"characters":["Analisa Medina","Bogeyman","Carnal Serpent","Daryl 'Troop' Andrews","Libido","Luke Cage","Mr. Drewston","Priapus","Randolph Creed","Silver Sable","Terror (Shreck)"],"name":"Cage #16","link":"cage_16","credits":["Frank Turner","Marc McLaurin","Scott Benefiel","Chris Cooper","Karl Bollers"],"i":5163},{"year":1993,"characters":["Carnal Serpent","Luke Cage","Priapus","Silver Sable","Terror (Shreck)"],"name":"Silver Sable & the Wild Pack #14","link":"silver_sable_the_wild_pack_14","credits":["Lynaire Brust","Craig Anderson","Steven Butler","Pam Eklund","Gregory Wright"],"i":5164},{"year":1993,"characters":["Punisher"],"name":"Punisher #77-79","link":"punisher_77-79","credits":["Val Mayerik","Roger Salick","Tim Tuohy","Don Daley"],"i":5165},{"year":1993,"characters":["Killpower","Motormouth"],"name":"Motormouth & Killpower #10","link":"motormouth_killpower_10","credits":["Rosie Mendoza","Graham Marks","Tim Quinn","John Freeman"],"i":5166},{"year":1993,"characters":["Allegra Bazin","Broderick Bazin","Cheryl Colon","Darkhawk","Dreamkiller","Firestar","Grace Powell","Jason Powell","Justin Baldwin","Maddie Baldwin","Namorita","Night Thrasher","Nova (Rich Rider)","Savage Steel (Arthur Vale)","Savage Steel (Harry Lennox)","Savage Steel (Jimmy Zafar)","Servitor","Silhouette","Speedball","Spider-Man","Steve 'Headset' Rubino","Zarrko the Tomorrow Man"],"name":"Darkhawk #26-29","link":"darkhawk_26-29","credits":["Todd Smith","Al Bigley","Don Hudson","Christopher Ivy","Mike DeCarlo","Danny Fingeroth","Ian Akin","Nel Yomtov","John Lewandowski"],"i":5167},{"year":1993,"characters":["Andrew (Lotus henchman)","Attractive Lad (Aundray Phelps)","Auteur (Alex Flores)","Buff (Lahoya Scripps)","Dreamer (Jamie Flores)","Glamour Girl (Gloria Angel)","Lady Lotus","Rampage","Snap (Ginger Beach)","Splice II","Stat (Spider Beach)","Visionary (Argus LeVecchio)","Wonder Man"],"name":"Wonder Man #20-21","link":"wonder_man_20-21","credits":["Fabian Nicieza","Carlos Lopez","Brad Vancata","Gerard Jones","Timothy Hamilton"],"i":5168},{"year":1993,"characters":["Baby Bucky's Mom","Bart Ingrid","Bucky (Julia Winter)","Giscard Epurer","Hate-Monger (Animus)","Jill Coltrain","Nomad"],"name":"Nomad #12-15","link":"nomad_12-15","credits":["Christopher Ivy","Ricardo Mays","Fabian Nicieza","Rick Mays","Greg Adams","Glenn Herdling","Tom Palmer","Mark McKenna","Bill Anderson","Hector Collazo","Pat Olliffe"],"i":5169},{"year":1993,"characters":["Killpower","Motormouth"],"name":"Motormouth & Killpower #11","link":"motormouth_killpower_11","credits":["Glenn Dakin","Nick Barber","Lesley Dalton","Rosie Mendoza"],"i":5170},{"year":1993,"characters":["Black Panther","Deathlok (616 Luther Manning)","Deathlok (Michael Collins)","Jesus Badalamente","Monica Lynne","Moses Magnum","Nick Collins","Taku","Tracy Collins","Venomm","W'Kabi"],"name":"Deathlok #22-25","link":"deathlok_22-25","credits":["Jimmy Palmiotti","Greg Adams","Chris Wozniak","Al Vey","Dwayne McDuffie","Gregory Wright","Grant Miehm","Brad Vancata","Pete Garcia","Tom Brevoort","Mindy Newell","Walter McDaniel","Kevin Kobasic"],"i":5171},{"year":1993,"characters":["Alec Dalton (Dauntless)","Captain America","Gog (Owen Llewelyn)","Henry Peter Gyrich","Invincible (Joseph Hauer)","Robin Pembridge","Sarah Wilde","Spider-Woman (Julia Carpenter)","USAgent"],"name":"Super Soldiers #1-5","link":"super_soldiers_1-5","credits":["Andrew Currie","Gary Russell","Rodney Ramos","Michael W. Bennentt","Lee Stevens"],"i":5172},{"year":1993,"characters":["Cardiac","J. Jonah Jameson","Joe 'Robbie' Robertson","Mary Jane Watson","Mary Parker Duplicate","Richard Parker Duplicate","Spider-Man","Stone (Spider-Man villain)","Styx"],"name":"Amazing Spider-Man #376-377","link":"amazing_spider-man_376-377","credits":["Al Milgrom","Jeff Johnson","Danny Fingeroth","Dan Panosian","Randy Emberlin","Mike Lackey","David Michelinie","Steven Grant"],"i":5173},{"year":1993,"characters":["Allegra Bazin","Darkhawk","Dreamkiller","Evilhawk","Grace Powell","Jason Powell","Jonathan Powell","Ocsh","Savage Steel (Jimmy Zafar)"],"name":"Darkhawk annual #2","link":"darkhawk_annual_2","credits":["Don Hudson","Steven Mitchell","Ian Akin","Danny Fingeroth","Larry Alexander","Andy Mushynsky","Nel Yomtov","John Lewandowski","Scott Kolins","Tim Dzon","Don Cameron","Aaron Lopresti"],"i":5174},{"year":1993,"characters":["Blade","Frank Drake","Ghost Rider (Danny Ketch)","Hannibal King","Noble Kale","Stonecold"],"name":"Nightstalkers #7","link":"nightstalkers_7","credits":["D.G. Chichester","James Felder","Tom Palmer","Ron Garney","Hildy Mesnik"],"i":5175},{"year":1993,"characters":["Auteur (Alex Flores)","Beast","Black Talon II","Blackheart","Dreamer (Jamie Flores)","Erik Josten","Glamour Girl (Gloria Angel)","Grim Reaper","Hawkeye","Lady Lotus","Man-Ape","Mephisto","Mockingbird Skrull","Neal Saroyan","Scarlet Witch","Snap (Ginger Beach)","Stat (Spider Beach)","USAgent","War Machine","Wonder Man"],"name":"Wonder Man #22-24","link":"wonder_man_22-24","credits":["Jeff Johnson","Fabian Nicieza","Carlos Lopez","Jon Holdredge","Mark McKenna","Dan Panosian","Ter Higgins","Gerard Jones"],"i":5176},{"year":1993,"characters":["Beast","Bob O'Bryan","Diane Cummings","It the Living Colossus Robot","Megan McCambridge","Splice II","Wonder Man"],"name":"Wonder Man annual #2","link":"wonder_man_annual_2","credits":["Dan Slott","Stephen Jones","Bob Dvorak","Ian Akin","Fabian Nicieza","Gordon Purcell","Carlos Lopez","Jon Holdredge","Ron Boyd","Gerard Jones","Barry Dutter"],"i":5177},{"year":1993,"characters":["Angel (Golden Age)","Blowtorch Brand","Domino (Scourge Assistant)","Hawkeye","Matador","Scarlet Witch","Scourge IV","Spider-Woman (Julia Carpenter)","USAgent","Vagabond","War Machine","Wonder Man"],"name":"USAgent #1-4","link":"usagent_1-4","credits":["M.C. Wyman","Keith Williams","Mark Gruenwald","Nel Yomtov","John Lewandowski"],"i":5178},{"year":1993,"characters":["Attractive Lad (Aundray Phelps)","Auteur (Alex Flores)","Beast","Black Talon II","Blackheart","Buff (Lahoya Scripps)","Dreamer (Jamie Flores)","Erik Josten","Glamour Girl (Gloria Angel)","Grim Reaper","Lady Lotus","Man-Ape","Mephisto","Snap (Ginger Beach)","Stat (Spider Beach)","Visionary (Argus LeVecchio)","Wonder Man"],"name":"Wonder Man #25","link":"wonder_man_25","credits":["Fred Reyes","Jeff Johnson","Fabian Nicieza","Carlos Lopez","Jon Holdredge","John Lowe","Ron Boyd","Mark McKenna","Keith Aiken","Dan Panosian","Gerard Jones","Jim Amash","Andrew Pepoy","Fred Haynes"],"i":5179},{"year":1993,"characters":["She-Hulk"],"name":"She-Hulk #51","link":"she-hulk_51","credits":["Renee Witterstaetter","Tom Morgan","Scott Benson"],"i":5180},{"year":1993,"characters":["Microchip","Punisher"],"name":"Punisher War Journal #54-56","link":"punisher_war_journal_54-56","credits":["Tim Tuohy","Don Daley","Chuck Dixon","Gary Kwapisz"],"i":5181},{"year":1993,"characters":["Blade","Darkhold Dwarf","Frank Drake","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hannibal King","Johnny Farmer","Louise Hastings","Morbius","Noble Kale","Sam Buchanan","Victoria Montesi"],"name":"Midnight Sons Unlimited #1","link":"midnight_sons_unlimited_1","credits":["<b>Title:","Jerry Bingham","D.G. Chichester","Josef Rubinstein","<b>Credits:","\"Blood is thicker...\"","James Felder","<em>Morbius<","Chris Cooper","\"On the wings of angels\"","darkness\"","em>","\"From the light","Joe Quesada","Howard Mackie","Jimmy Palmiotti","Cynthia Martin","Len Wein","<em>Nightstalkers<","Klaus Janson","<em>Darkhold<","Hildy Mesnik"],"i":5182},{"year":1993,"characters":["Daredevil","Karen Page"],"name":"Daredevil #316","link":"daredevil_316","credits":["D.G. Chichester","Ralph Macchio","Kevin Kobasic","Bud LaRosa"],"i":5183},{"year":1993,"characters":["Achilles","Ajax","Atalanta","Betty Ross","Doc Samson","Elaine Schoenfeld","Hector","Hulk","Marlo Chandler","Paris","Piecemeal (NWO)","Rick Jones"],"name":"Hulk #405","link":"hulk_405","credits":["Peter David","Matthew Mora","Gary Frank","Bobbie Chase","Cam Smith"],"i":5184},{"year":1993,"characters":["Death's Head II (Minion)","Tuck"],"name":"Incomplete Death's Head #1-12","link":"incomplete_deaths_head_1-12","credits":["Dan Abnett","John Freeman","Simon Coleby"],"i":5185},{"year":1993,"characters":["Amphibius (Savage Land Mutate)","Barbarus","Bishop","Brainchild (Savage Land Mutate)","Equilibrius","Gaza","Jubilee","Professor X","Rogue","Sauron","Storm","Wolverine"],"name":"Wolverine #69-71","link":"wolverine_69-71","credits":["Christopher Ivy","Bob Harras","Josef Rubinstein","Lisa Patrick","Hilary Barta","Larry Hama","Richard Bennett","Dwayne Turner"],"i":5186},{"year":1993,"characters":["Barrage","Beast","Colossus","Cyclops","Deborah Summers","Foxbat","Gambit","Gamesmaster","Gauntlet (Dark Rider)","Hardrive","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Jubilee","Matsuo Tsurayaba","Mesmero","Mr. Sinister","Nyoirin Henecha","Philip Summers","Professor X","Psylocke","Psynapse","Revanche","Rogue","Shinobi Shaw","Silver Samurai","Storm","Tusk","Wolverine"],"name":"X-Men #20-23","link":"x-men_20-23","credits":["Fabian Nicieza","Bob Harras","Andy Kubert","Dan Panosian","Lisa Patrick","Bob Wiacek","Mark Pennington","Brandon Peterson"],"i":5187},{"year":1993,"characters":["Death's Head II (Minion)","Killpower","Motormouth","Time Guardian"],"name":"Motormouth & Killpower #12","link":"motormouth_killpower_12","credits":["Oscar Jimenez","Richard Elson","Ramon Rosanas","John Freeman","Mathew Hyde","Jacqui Papp","Andy Cartnel","Carlos Pacheco"],"i":5188},{"year":1993,"characters":["Cal Oakley","Captain America","Controller","Erica Sondheim","Felix Alvarez","Happy Hogan","Iron Man","Marcy Pearson","Morgan Stark","Mrs. Arbogast","Nick Fury","Osamu Moroboshi","Pepper Potts","Technovore","Veronica Benning","VORTEX"],"name":"Iron Man #292-293","link":"iron_man_292-293","credits":["Steven Mitchell","Kevin Hopgood","Len Kaminski","Nel Yomtov","John Lewandowski"],"i":5189},{"year":1993,"characters":["Carnivore (Dick Chalker)","Havok","Madrox the Multiple Man","Number One Fan (Rick Chalker)","Polaris","Quicksilver","Satannish","Strong Guy","Valerie Cooper","Vic Chalker","Wolfsbane"],"name":"X-Factor annual #8","link":"x-factor_annual_8","credits":["Al Milgrom","Peter David","Skip Dietz","Kelly Corvese","Jeff Albrecht","Mark McKenna","Buzz","Chris Batista","Jaye Gardner","Terry Shoemaker"],"i":5190},{"year":1993,"characters":["Angel","Bishop","Colossus","Iceman","Jean Grey","Mastermind","Storm","Tower","X-Cutioner"],"name":"Uncanny X-Men annual #17","link":"uncanny_x-men_annual_17","credits":["Mark Farmer","Bob Harras","Scott Lobdell","Jason Pearson","Lisa Patrick"],"i":5191},{"year":1993,"characters":["Jubilee","Wolverine"],"name":"Wolverine: Killing","link":"wolverine_killing","credits":["Suzanne Gaffney","John Ney Rieber","Kent Williams"],"i":5192},{"year":1993,"characters":["Blade","Darkhold Dwarf","Ghost Rider (Danny Ketch)","Johnny Farmer","Louise Hastings","Morbius","Noble Kale","Sam Buchanan","Victoria Montesi","Will 'Jinx' Hastings"],"name":"Midnight Sons Unlimited #2","link":"midnight_sons_unlimited_2","credits":["<b>Title:","\"The organ grinder\"","<b>Credits:","James Felder","Chris Cooper","Mort Todd","Brian Garvey","Dan Lawlis","Bart Sears","Malcom Jones III","em>","\"Skin\"","Jimmy Palmiotti","Rurik Tyler","<em>Blade<","Bobbie Chase","Gary Cohn","Kevin Kobasic","\"The lure\"","Mike Esposito","<em>Ghost Rider<","<em>Darkhold<"],"i":5193},{"year":1993,"characters":["Black Tom","Commcast","Copycat","Courier (Jacob Gavin)","Deadpool","Juggernaut","Kane","Slayback","Sluggo","Weasel"],"name":"Deadpool #1-2","link":"deadpool_1-2","credits":["Joe Madureira","Suzanne Gaffney","Mark Farmer","Fabian Nicieza"],"i":5194},{"year":1993,"characters":["Blade","Bloodthirst","Frank Drake","Hannibal King","Jacob Weisenthal","Mandy Tyler","Morbius","Victor Slaughter"],"name":"Morbius #10","link":"morbius_10","credits":["Mike Witherby","Gregory Wright","Matthew Morra","Ron Wagner","Bobbie Chase"],"i":5195},{"year":1993,"characters":["Belial","Blade","Frank Drake","Hannibal King","Innards","Jeb Harlow","Keith Roberts","Malpractice","Morbius","Pyre","Richard Regent","Rotwrap","Samantha Regent","Stonecold","Suze Harlow","Victor Slaughter"],"name":"Nightstalkers #8-9","link":"nightstalkers_8-9","credits":["Mark Pacella","Don Heck","D.G. Chichester","James Felder","Tom Palmer","Ron Garney","Hildy Mesnik"],"i":5196},{"year":1993,"characters":["Agent Barrett","Agent China","Detective Butler","Frank Drake","Hannibal King","Morbius","Simon Stroud","Victor Slaughter"],"name":"Morbius #10-11","link":"morbius_10-11","credits":["Isaac Cordova","Mike Witherby","Gregory Wright","Matthew Morra","Ron Wagner","Bobbie Chase"],"i":5197},{"year":1993,"characters":["Clayton Burr","Deathlok (616 Luther Manning)","Deathlok (Michael Collins)","Jason Macendale","Jesus Badalamente","Misty Knight","Nick Collins","Patricia Collins","Thing","Tracy Collins"],"name":"Deathlok #26","link":"deathlok_26","credits":["Bruce D. Patterson","Dave Ryan","Gregory Wright","Tom Brevoort","Mindy Newell","Kevin Kobasic"],"i":5198},{"year":1994,"characters":["Contessa Valentina Allegro De La Fontaine","Nick Fury","Scorpio III (Mikel Fury)","Wolverine"],"name":"Wolverine & Nick Fury: Scorpio Rising","link":"wolverine_nick_fury_scorpio_ri","credits":["Mike Marts","Nel Yomtov","Howard Chaykin","Shawn McManus"],"i":5199},{"year":1993,"characters":["Andrew 'Jock' Jackson","Aunt May","Black Cat","Cardiac","Carnage Symbiote","Cletus Kasady (Carnage)","Doppelganger","Flash Thompson","J. Jonah Jameson","Joe 'Robbie' Robertson","Kate Cushing","Liz Allan","Mad Dog Rassitano","Marcus Stone","Mary Jane Watson","Molten Man","Mother Majowski","Normie Osborn","Richard Parker Duplicate","Rigger Ruiz","Scorpion","Shriek","Spider-Man"],"name":"Spider-Man Unlimited #1","link":"spider-man_unlimited_1","credits":["Ron Lim","Jerry Bingham","Jim Sanders III","Danny Fingeroth","Tom DeFalco","Tom Palmer","Mark Bagley","Terry Kavanagh","Mike Barr"],"i":5200},{"year":1993,"characters":["Carnage Symbiote","Cletus Kasady (Carnage)","Cloak","Dagger","Demogoblin","Eddie Brock (Venom)","J. Jonah Jameson","Joe 'Robbie' Robertson","Liz Allan","Mary Jane Watson","Normie Osborn","Shriek","Spider-Man","Venom Symbiote"],"name":"Web of Spider-Man #101","link":"web_of_spider-man_101","credits":["Don Hudson","Dan Cuddy","Rob Tokar","Alex Saviuk","Terry Kavanagh"],"i":5201},{"year":1993,"characters":["Carnage Symbiote","Cletus Kasady (Carnage)","Cloak","Demogoblin","Doppelganger","Eddie Brock (Venom)","Mary Jane Watson","Shriek","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #378","link":"amazing_spider-man_378","credits":["Randy Emberlin","Mark Bagley","David Michelinie","Danny Fingeroth"],"i":5202},{"year":1993,"characters":["Aunt May","Black Cat","Carnage Symbiote","Cletus Kasady (Carnage)","Cloak","Demogoblin","Doppelganger","Eddie Brock (Venom)","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Normie Osborn","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Spider-Man #35","link":"spider-man_35","credits":["Danny Fingeroth","Scott Hanna","Mike Lackey","David Michelinie","Tom Lyle"],"i":5203},{"year":1993,"characters":["Aunt May","Black Cat","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Demogoblin","Doppelganger","Eddie Brock (Venom)","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Spectacular Spider-Man #201","link":"spectacular_spider-man_201","credits":["Rob Tokar","Sal Buscema","J.M. DeMatteis"],"i":5204},{"year":1993,"characters":["Black Cat","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Demogoblin","Doppelganger","Eddie Brock (Venom)","Mary Jane Watson","Morbius","Shriek","Spider-Man","Venom Symbiote"],"name":"Web of Spider-Man #102","link":"web_of_spider-man_102","credits":["Don Hduson","Alex Saviuk","Terry Kavanagh","Rob Tokar"],"i":5205},{"year":1993,"characters":["Aunt May","Black Cat","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Deathlok (Michael Collins)","Demogoblin","Doppelganger","Eddie Brock (Venom)","Firestar","Liz Allan","Mary Jane Watson","Morbius","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #379","link":"amazing_spider-man_379","credits":["Randy Emberlin","Mark Bagley","David Micheline","Danny Fingeroth"],"i":5206},{"year":1993,"characters":["Aunt May","Ben Urich","Black Cat","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Deathlok (Michael Collins)","Demogoblin","Doppelganger","Eddie Brock (Venom)","Firestar","Flash Thompson","Iron Fist","J. Jonah Jameson","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Molten Man","Morbius","Normie Osborn","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Spider-Man #36","link":"spider-man_36","credits":["Danny Fingeroth","Scott Hanna","Mike Lackey","Terry Kavanagh","Tom Lyle"],"i":5207},{"year":1993,"characters":["Black Cat","Captain America","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Demogoblin","Doppelganger","Eddie Brock (Venom)","Firestar","Mary Jane Watson","Morbius","Shriek","Spider-Man","Venom Symbiote"],"name":"Spectacular Spider-Man #202","link":"spectacular_spider-man_202","credits":["Rob Tokar","Sal Buscema","J.M. DeMatteis"],"i":5208},{"year":1993,"characters":["Aunt May","Black Cat","Captain America","Carnage Symbiote","Cletus Kasady (Carnage)","Cloak","Deathlok (Michael Collins)","Demogoblin","Doppelganger","Eddie Brock (Venom)","Firestar","Flash Thompson","Iron Fist","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Molten Man","Morbius","Nightwatch","Normie Osborn","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Web of Spider-Man #103","link":"web_of_spider-man_103","credits":["Rob Tokar","Alex Saviuk","Terry Kavanagh","Don Hudson"],"i":5209},{"year":1993,"characters":["Aunt May","Black Cat","Captain America","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Deathlok (Michael Collins)","Demogoblin","Doppelganger","Eddie Brock (Venom)","Firestar","Iron Fist","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Molten Man","Morbius","Nightwatch","Normie Osborn","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Amazing Spider-Man #380","link":"amazing_spider-man_380","credits":["David Micheline","Danny Fingeroth","Mike Lackey","Randy Emberlin","Mark Bagley"],"i":5210},{"year":1993,"characters":["Aunt May","Captain America","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Dagger","Deathlok (Michael Collins)","Demogoblin","Doppelganger","Eddie Brock (Venom)","Firestar","Iron Fist","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Normie Osborn","Richard Parker Duplicate","Shriek","Spider-Man","Venom Symbiote"],"name":"Spider-Man #37","link":"spider-man_37","credits":["Al Milgrom","Danny Fingeroth","Scott Hanna","Mike Lackey","J.M. DeMatteis","Tom Lyle"],"i":5211},{"year":1993,"characters":["Captain America","Carnage Symbiote","Carrion II","Cletus Kasady (Carnage)","Cloak","Dagger","Deathlok (Michael Collins)","Demogoblin","Eddie Brock (Venom)","Firestar","Iron Fist","Shriek","Spider-Man","Venom Symbiote"],"name":"Spectacular Spider-Man #203","link":"spectacular_spider-man_203","credits":["Rob Tokar","Dan Cuddy","Sal Buscema","J.M. DeMatteis"],"i":5212},{"year":1993,"characters":["Aunt May","Black Cat","Carnage Symbiote","Cletus Kasady (Carnage)","Eddie Brock (Venom)","Flash Thompson","Liz Allan","Mary Jane Watson","Mary Parker Duplicate","Morbius","Nightwatch","Normie Osborn","Richard Parker Duplicate","Sersi","Spider-Man","Thunderstrike","Venom Symbiote","Vision"],"name":"Spider-Man Unlimited #2","link":"spider-man_unlimited_2","credits":["Ron Lim","Steven Butler","Jim Sanders III","Kurt Busiek","Danny Fingeroth","Tom DeFalco","Sam DeLaRosa","Mark Bagley","Bud LaRosa- Inker"],"i":5213},{"year":1993,"characters":["Nightwatch"],"name":"Web of Spider-Man #104-106 (Nightwatch)","link":"web_of_spider-man_104-106_nigh","credits":["Bill Wylie","Terry Kavanagh","Tim Tuohy","Eric Fein"],"i":5214},{"year":1993,"characters":["Deathlok (Michael Collins)","Harlan Ryker","Jesus Badalamente","Nick Collins","Patricia Collins","Siege","Tracer","Tracy Collins"],"name":"Deathlok annual #2","link":"deathlok_annual_2","credits":["Steven Butler","Al Vey","Gregory Wright","Sam DeLaRosa","Mark McKenna","Kirk Jarvinen","Tom Brevoort","John Hebert","Mindy Newell","Evan Skolnick","Roy Richardson"],"i":5215},{"year":1993,"characters":["Dr. Strange","Kyllian"],"name":"Dr. Strange annual #3","link":"dr_strange_annual_3","credits":["Dave Simons","Mike Rockwitz","Geof Isherwood","Alfredo P. Alcala","Joe Andreani"],"i":5216},{"year":1994,"characters":["Dr. Strange","Immortalis (Mortigan Goth)","Spitfire"],"name":"Mortigan Goth: Immortalis #1-4","link":"mortigan_goth_immortalis_1-4","credits":["Mark Buckingham","Gary Russell","Nick Vince"],"i":5217},{"year":1993,"characters":["Devil Dinosaur","Ka-Zar","Shanna the She-Devil","Sub-Mariner","Wolverine","Zabu"],"name":"Wolverine: Global Jeopardy","link":"wolverine_global_jeopardy","credits":["Richard Howell","Bill Anderson","Peter David","Glenn Herdlng"],"i":5218},{"year":1993,"characters":["Captain America","Dr. Strange","Melinda Morrison","Scarlet Witch","Spider-Man","Xandu"],"name":"Secret Defenders #6-8","link":"secret_defenders_6-8","credits":["Don Hudson","Roy Thomas","Michael Rockwitz","Andre Coates","Joe Andreani"],"i":5219},{"year":1993,"characters":["Cerise","Ch'od","Corsair","Feron","Hepzibah","Kylun","Lilandra","Lockheed","Meggan","Micromax","Nightcrawler","Rachel Summers","Raza Longknife","Shadowcat (Kitty Pryde)"],"name":"Excalibur #68-70","link":"excalibur_68-70","credits":["Dan Slott","Don Hudson","Richard Parker","Danny Taverna","Harry Candelario","Scott Lobdell","Suzanne Gaffney","Steve Buccellato","Richard Ashford","Evan Skolnick","Ken Lashley","Agop Gemdjian"],"i":5220},{"year":1993,"characters":["Angel","Bantam (XSE)","Bishop","Black Queen (Selene)","Colossus","Fabian Cortez","Forge","Gamesmaster","Graydon Creed","Iceman","Illyana Rasputin (Alt-Limbo version)","Jean Grey","Jubilee","Moira MacTaggert","Mystique","Opal Tanaka","Professor X","Shadowcat (Kitty Pryde)","Shinobi Shaw","Siena Blaze","Storm","Trevor Fitzroy"],"name":"Uncanny X-Men #301-303","link":"uncanny_x-men_301-303","credits":["John Romita Jr.","Bob Harras","Scott Lobdell","Dan Panosian","Lisa Patrick","Richard Bennett","Dan Green"],"i":5221},{"year":1993,"characters":["Blonde Phantom","Captain America","Christina Devasquez Ridge","Daniel 'Zapper' Ridge","Franklin Richards","Hulk","Human Torch","Invisible Woman","Jarvis","Keeper of the Comics Code","Morris Walters","Mr. Fantastic","She-Hulk","Thing","Titania","War Zone","Wyatt Wingfoot"],"name":"She-Hulk #52-57","link":"she-hulk_52-57","credits":["Mike DeCarlo","Art Nichols","Darren Auck","Dave Cockrum","Renee Witterstaetter","Todd Britton","Fred Fredericks","Michael Eury","Pat Olliffe"],"i":5222},{"year":1993,"characters":["Gateway","Jubilee","Wolverine"],"name":"Wolverine #72-74","link":"wolverine_72-74","credits":["Art Nichols","Jim Fern","Bob Harras","Josef Rubinstein","Lisa Patrick","Larry Hama","Dwayne Turner"],"i":5223},{"year":1993,"characters":["Banshee","Beast","Cyclops","Gambit","Jean Grey","Jubilee","Moira MacTaggert","Professor X","Psylocke","Revanche","Rogue","Shadowcat (Kitty Pryde)","Wolverine"],"name":"X-Men #24","link":"x-men_24","credits":["Fabian Nicieza","Bob Harras","Andy Kubert","Lisa Patrick","Andy Kubert and company"],"i":5224},{"year":1993,"characters":["Agatha Harkness","Alicia Masters","Daredevil","Dr. Doom","Franklin Richards","Human Torch","Invisible Woman","Lyja the Lazerfist","Makio Yakaki","Malice (Sue Storm's psionic entity)","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Nathaniel Richards","Psi-Lord","Roberta","Spider-Man","Thing"],"name":"Fantastic Four #376","link":"fantastic_four_376","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":5225},{"year":1993,"characters":["Beyonder","Dennis Bowden","Dreadface","Invisible Woman","Kubik","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Psi-Lord","Thing","Wildstreak"],"name":"Fantastic Four annual #26","link":"fantastic_four_annual_26","credits":["Herb Trimpe","Ralph Macchio","Brian Pelletier","Tom DeFalco","Pat Garrahy","Bud LaRosa","Len Kaminski"],"i":5226},{"year":1993,"characters":["Agatha Harkness","Black Knight (Dane Whitman)","Bridget O'Neil","Crystal","Daredevil","Devos the Devastator","Dr. Doom","Human Torch","Huntara","Invisible Woman","J. Jonah Jameson","Joe 'Robbie' Robertson","Klaw","Lyja the Lazerfist","Malice (Sue Storm's psionic entity)","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Paibok the Power Skrull","Psi-Lord","Sandman","Sersi","Silver Sable","Spider-Man","Thing","Thunderstrike","Vision"],"name":"Fantastic Four #377-378","link":"fantastic_four_377-378","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":5227},{"year":1993,"characters":["Ben Urich","Daredevil","Jet (Wildboy)","Karen Page","Paul Mondat","Pete London","Spit (Wildboy)","Stilt-Man","Taskmaster","Tatterdemalion","Vanessa Fisk"],"name":"Daredevil #317-318","link":"daredevil_317-318","credits":["Ralph Macchio","D.G. Chichester","Greg Adams","Scott McDaniel","Pat Garrahy","Bud LaRosa"],"i":5228},{"year":1993,"characters":["Adam Warlock","Count Abyss","Drax the Destroyer","Gamora","Maxam","Moondragon","Pip the Troll","Soul Gem"],"name":"Warlock and the Infinity Watch #16-17","link":"warlock_and_the_infinity_watch_10","credits":["Lynaire Brust","Tom Grindberg","Craig Anderson","Bob Almond","Keith Williams","Jim Starlin"],"i":5229},{"year":1993,"characters":["Achilles","Ajax","Atalanta","Betty Ross","Captain America","Doc Samson","Elaine Schoenfeld","Hiro (Tourist)","Hulk","Keith Chandler","Larry (Tourist)","Marlo Chandler","Ray Chandler","Rick Jones"],"name":"Hulk #406","link":"hulk_406","credits":["Peter David","Matthew Morra","Gary Frank","Bobbie Chase","Cam Smith"],"i":5230},{"year":1993,"characters":["Amy Chen","Baron Von Strucker","Battlestar","Captain America","Crippler","Doug Powell","Fin (Next Wave)","Jacques Larocque","Lorna Kleinfeldt","Madame Hydra (Viper)","Man-Eater","Paladin","Pit-Viper 12","Raul Quentino","Samantha Powell","Sandman","Silver Sable","Uncle Morty"],"name":"Silver Sable & the Wild Pack #15","link":"silver_sable_the_wild_pack_15","credits":["Lynaire Brust","Craig Anderson","Steven Butler","Pam Eklund","Gregory Wright"],"i":5231},{"year":1993,"characters":["Amy Chen","Battlestar","Bludgeon","Captain America","Doug Powell","Heat-Ray","Madame Hydra (Viper)","Raul Quentino","Razorblade","Red Skull","Silver Sable","Slither"],"name":"Captain America #419","link":"captain_america_419","credits":["Mike Rockwitz","Dan Bulanadi","Mark Gruenwald","Rik Levins","Joe Andreani"],"i":5232},{"year":1993,"characters":["Ben Urich","Calypso","Daredevil","Devourer","Foggy Nelson","Hellspawn","Karen Page","Zombie (Simon Garth)"],"name":"Daredevil annual #9","link":"daredevil_annual_9","credits":["Ralph Macchio","John Heebink","Glenn Herdling","Gregory Wright","Fred Federicks","Andrew Paquette","Bud La Rosa","Scott McDaniel","Pat Garrahy"],"i":5233},{"year":1993,"characters":["Captain Marvel (Genis-vell)","Elysius","Ganymede","Jack of Hearts","Ronan the Accuser","Silver Surfer","Terrax"],"name":"Silver Surfer annual #6","link":"silver_surfer_annual_6","credits":["Dale Eaglesham","Lynaire Brust","Craig Anderson","Ian Akin","Bob Almond","Ron Marz","Sam DeLaRosa","Ariane Lenshoek","Mark McKenna","Jim Hall","Joe Phillips","Pat Redding","Michael Avon Oeming"],"i":5234},{"year":1993,"characters":["Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Noble Kale","Shelob"],"name":"Spirits of Vengeance #11","link":"spirits_of_vengeance_11","credits":["Larry Hama","Bobbie Chase","Matthew Morra","Vincent Giarrano"],"i":5235},{"year":1993,"characters":["Northstar","Puck","Vindicator (Heather Hudson)","Wild Child"],"name":"Alpha Flight #122-123 (Back-up)","link":"alpha_flight_122-123_back-up","credits":["Rob Tokar","Simon Furman","John Stokes","Barry Kitson"],"i":5236},{"year":1993,"characters":["Microchip","Punisher","Sabretooth","Spider-Man"],"name":"Spider-Man/Punisher/Sabretooth: Designer Genes","link":"spider-manpunishersabretooth_d","credits":["Danny Fingeroth","Keith Williams","Mike Lackey","Scott McDaniel","Terry Kavanagh"],"i":5237},{"year":1993,"characters":["Kyllian","Wong"],"name":"Doctor Strange #54-56 (Kyllian)","link":"doctor_strange_54-56_kyllian","credits":["Geof Isherwood","Mike Rockwitz","Joe Andreani"],"i":5238},{"year":1993,"characters":["Agamotto","Dr. Strange","Eternity","Goddess","Hoggoth","Oshtur"],"name":"Doctor Strange #54","link":"doctor_strange_54_1","credits":["Mike Rockwitz","Frank Lopez","Roy Thomas","Geof Isherwood","Joe Andreani"],"i":5239},{"year":1993,"characters":["Agony","Chloe Tran","Donna Kraft","Flare","Frenchie","Marlene Alraune","Mercy (Shadow Cabinet)","Moon Knight","Network","Pang","Seth the Immortal","Stash"],"name":"Moon Knight #54","link":"moon_knight_54","credits":["Christopher Ivy","James Fry","Joey Cavalieri","Sarra Mossoff","Terry Kavanagh"],"i":5240},{"year":1993,"characters":["Adam Warlock","Angel","Beast","Black Knight (Dane Whitman)","Captain America","Crystal","Cyclops","Daredevil","Darklore","Dr. Strange","Drax the Destroyer","Eternity","Firelord","Forge","Gamora","Goddess","Havok","Hercules","Hulk","Iceman","Invisible Woman","Iron Man","Jean Grey","Living Lightning","Madrox the Multiple Man","Maxam","Meer'lyn","Mephisto","Moon Knight","Moondragon","Mr. Fantastic","Namorita","Night Thrasher","Northstar","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Puck","Quicksilver","Rage","Rogue","Sasquatch","Scarlet Witch","Sersi","Shaman","She-Hulk","Silhouette","Silver Surfer","Sleepwalker","Soul Gem","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Talisman","Thing","Thor","USAgent","Valinor","Vindicator (Heather Hudson)","Vision","Wild Child","Windshear","Wolfsbane","Wolverine","Wonder Man"],"name":"Infinity Crusade #1","link":"infinity_crusade_1","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":5241},{"year":1993,"characters":["Abe Zimmer","Felix Alvarez","Goddess","Iron Man","Mrs. Arbogast","Omega Red","Technovore","Veronica Benning"],"name":"Iron Man #294-295","link":"iron_man_294-295","credits":["Nel Tomtov","Steven Mitchell","Kevin Hopgood","Len Kaminski","John Lewandowski"],"i":5242},{"year":1993,"characters":["Aurora","Diamond Lil","Goblyn","Manikin","Northstar","Pathway","Persuasion","Puck","Sasquatch","Shaman","Talisman","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire","Wyre"],"name":"Alpha Flight #122","link":"alpha_flight_122","credits":["Rob Tokar","Simon Furman","Pat Broderick","Bruce D. Patterson"],"i":5243},{"year":1993,"characters":["Alexis Primo","Frank Drake","Ghost Rider (Danny Ketch)","Hellfire (Mikal Drakonmegas)","Noble Kale","Rekrab","Terror (Shreck)"],"name":"Terror Inc. #13","link":"terror_inc_13","credits":["D.G. Chichester","Marc McLaurin","Richard Pace","Jason Temujin"],"i":5244},{"year":1993,"characters":["Goddess","Pluto","Sif","Thor","Zeus"],"name":"Thor #463","link":"thor_463","credits":["Mike DeCarlo","Mike Rockwitz","Ron Marz","Bruce Zick","Joe Andreani"],"i":5245},{"year":1993,"characters":["Agony","Chloe Tran","Cover Girl","Dementia","Donna Kraft","Fingers","Flare","Frenchie","Goddess","Hook","Junior Birdman","Marlene Alraune","Mercy (Shadow Cabinet)","Moon Knight","Penny Annie","Scout","Seth the Immortal","Shard","Shark (Shadow Cabinet)","Sheriff","Sigmund","Stash","Vortex (Hellbent)"],"name":"Moon Knight #55-56","link":"moon_knight_55-56","credits":["Sarra Mossoff","Joey Cavalieri","Terry Kavanagh","Stephen Platt"],"i":5246},{"year":1993,"characters":["Adam Warlock","Darklore","Meer'lyn","Soul Gem"],"name":"Warlock Chronicles #1","link":"warlock_chronicles_1","credits":["Tom Raney","Keith Williams","Jim Starlin","Craig Anderson"],"i":5247},{"year":1993,"characters":["Adam Warlock","Beast","Cyclops","Drax the Destroyer","Firestar","Forge","Gamora","Goddess","Havok","Hulk","Iceman","Iron Man","Maxam","Moondragon","Mr. Fantastic","Night Thrasher","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","She-Hulk","Soul Gem","Speedball","Spider-Woman (Julia Carpenter)","Strong Guy","Thing","Vindicator (Heather Hudson)","Vision","Wolverine"],"name":"Warlock and the Infinity Watch #18","link":"warlock_and_the_infinity_watch_11","credits":["Lynaire Brust","Craig Anderson","Angel Medina","Bob Almond","Jim Starlin"],"i":5248},{"year":1993,"characters":["Andrew 'Jock' Jackson","Black Knight (Dane Whitman)","Black Tom","Bobby Steele","Crystal","Ed Marrero","Fireworks Fielstein","Juggernaut","Kevin Masterson","Mad Dog Rassitano","Marcus Stone","Marcy Masterson Steele","Mother Majowski","Punisher","Rigger Ruiz","Samantha Joyce","Sangre","Sersi","Sif","Stellaris","Susan Austin","Thunderstrike"],"name":"Thunderstrike #2-3","link":"thunderstrike_2-3","credits":["Ralph Macchio","Al Milgrom","Tom DeFalco","Pat Garrahy","Ron Frenz"],"i":5249},{"year":1993,"characters":["Adam Warlock","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Captain America","Cyclops","Daredevil","Darkhawk","Dr. Strange","Firelord","Firestar","Forge","Gamora","Goddess","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","Jean Grey","Living Lightning","Madrox the Multiple Man","Maxam","Mentor","Moon Knight","Moondragon","Namorita","Night Thrasher","Nomad","Northstar","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Puck","Quicksilver","Rage","Rogue","Sasquatch","Scarlet Witch","Sersi","She-Hulk","Silhouette","Silver Surfer","Sleepwalker","Soul Gem","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thing","Thor","Uatu the Watcher","USAgent","Valinor","Vindicator (Heather Hudson)","Vision","Wild Child","Windshear","Wolfsbane","Wolverine","Wonder Man"],"name":"Infinity Crusade #2","link":"infinity_crusade_2","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":5250},{"year":1993,"characters":["Hawkeye","Living Lightning","Mockingbird Skrull","Quantum","Scarlet Witch","Spider-Woman (Julia Carpenter)","USAgent","Vision","War Machine","Wundarr (Aquarian)"],"name":"Avengers West Coast #96-97","link":"avengers_west_coast_96-97","credits":["Don Hudson","Andrew Currie","Roy Thomas","Nel Yomtov","Dann Thomas"],"i":5251},{"year":1993,"characters":["Angel","Ares","Black Knight (Dane Whitman)","Captain America","Colossus","Crystal","Daredevil","Dr. Strange","Goddess","Hercules","Invisible Woman","Jean Grey","Living Lightning","Madrox the Multiple Man","Moon Knight","Moondragon","Namorita","Pluto","Puck","Quicksilver","Sasquatch","Scarlet Witch","Silhouette","Silver Surfer","Sleepwalker","Spider-Man","Storm","Talisman","Thor","USAgent","Windshear","Wolfsbane","Wonder Man"],"name":"Thor #464","link":"thor_464","credits":["Mike DeCarlo","Ron Marz","Bruce Zick","Ralph Macchio"],"i":5252},{"year":1993,"characters":["Angel","Aunt May","Aurora","Beast","Betty Brant","Black Knight (Dane Whitman)","Captain America","Colossus","Cyclops","Daredevil","Darkhawk","Dr. Strange","Drax the Destroyer","Firelord","Forge","Gamora","Goddess","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","J. Jonah Jameson","Joe 'Robbie' Robertson","Living Lightning","Liz Allan","Madrox the Multiple Man","Mary Jane Watson","Maxam","Moon Knight","Moondragon","Mr. Fantastic","Night Thrasher","Normie Osborn","Northstar","Nova (Rich Rider)","Pip the Troll","Professor X","Puck","Quicksilver","Rage","Rogue","Sasquatch","Scarlet Witch","Sersi","She-Hulk","Silhouette","Silver Surfer","Speedball","Spider-Man","Storm","Strong Guy","Thing","Thor","USAgent","Vindicator (Heather Hudson)","Vision","Wild Child","Wolfsbane","Wolverine","Wonder Man"],"name":"Web of Spider-Man #104-105","link":"web_of_spider-man_104-105","credits":["Alex Saviuk","Terry Kavanagh","Don Hudson","Eric Fein"],"i":5253},{"year":1993,"characters":["Angel","Belasco","Goddess","Hercules","Manikin","Northstar","Puck","Sasquatch","Talisman","Vindicator (Heather Hudson)","Wild Child","Windshear","Witchfire","Wyre"],"name":"Alpha Flight #123-124","link":"alpha_flight_123-124","credits":["Rob Tokar","Simon Furman","Pat Broderick","Bruce D. Patterson"],"i":5254},{"year":1993,"characters":["Black Knight (Dane Whitman)","Captain America","Daredevil","Dormammu","Dr. Strange","Gamora","Goddess","Hercules","Invisible Woman","Jean Grey","Madrox the Multiple Man","Moon Knight","Moondragon","Namorita","Quicksilver","Sasquatch","Silhouette","Silver Surfer","Spider-Man","Storm","Thor","Windshear","Wonder Man"],"name":"Doctor Strange #55","link":"doctor_strange_55_1","credits":["Geof Isherwood","Roy Thomas","Mike Rockwitz","Joe Andreani"],"i":5255},{"year":1993,"characters":["Allegra Bazin","Beast","Beetle","Broderick Bazin","Cyclops","Darkhawk","Grace Powell","Hulk","Human Torch","Iceman","Jarvis","Jason Powell","Jonathan Powell","Professor X","Psylocke","Rogue","She-Hulk","Speedball","Spider-Woman (Julia Carpenter)","Strong Guy","Thing","Wolverine"],"name":"Darkhawk #30","link":"darkhawk_30","credits":["Ian Akin","Danny Fingeroth","Anthony Williams","Nel Yomtov","John Lewandowski"],"i":5256},{"year":1993,"characters":["Analisa Medina","Bogeyman","Crusader (Holy Zealot)","Daryl 'Troop' Andrews","Dred","James Lucas (Geary)","Luke Cage","Micky Hamilton","Randolph Creed"],"name":"Cage #17","link":"cage_17","credits":["Frank Turner","Marc McLaurin","Scott Benefiel","Chris Cooper","Karl Bollers"],"i":5257},{"year":1993,"characters":["Adam Warlock","Hulk","Iron Man","Lord Chaos","Master Order","Maxam","Mole Man","Mr. Fantastic","Soul Gem","Thanos","Vindicator (Heather Hudson)","Vision"],"name":"Warlock Chronicles #2","link":"warlock_chronicles_2","credits":["Tom Raney","Keith Williams","Jim Starlin","Craig Anderson"],"i":5258},{"year":1993,"characters":["Adam Warlock","Beast","Captain America","Cyclops","Death","Dr. Strange","Drax the Destroyer","Firestar","Forge","Galactus","Gamora","Goddess","Havok","Hulk","Human Torch","Iceman","Iron Man","Maxam","Mentor","Mole Man","Moondragon","Morg","Mr. Fantastic","Northstar","Nova (Rich Rider)","One Above All","Pip the Troll","Polaris","Professor X","Psylocke","Quicksilver","Rage","Rogue","She-Hulk","Silver Surfer","Speedball","Spider-Woman (Julia Carpenter)","Starfox","Strong Guy","Thanos","Thing","Vindicator (Heather Hudson)","Vision","Wild Child","Wolverine","Ziran"],"name":"Warlock and the Infinity Watch #19","link":"warlock_and_the_infinity_watch_12","credits":["Lynaire Brust","Tom Grindberg","Craig Anderson","Keith Williams","Jim Starlin"],"i":5259},{"year":1993,"characters":["Absorbing Man","Adam Warlock","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Captain America","Crystal","Cyclops","Dr. Strange","Drax the Destroyer","Firelord","Firestar","Forge","Gamora","Goddess","Havok","Hepzibah","Hercules","Hulk","Invisible Woman","Iron Man","Jean Grey","Living Lightning","Madrox the Multiple Man","Maxam","Mephisto","Moon Knight","Moondragon","Mr. Fantastic","Night Thrasher","Nomad","Northstar","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Psylocke","Puck","Quicksilver","Rage","Rambo (dog)","Raza Longknife","Rick Sheridan","Rogue","Sasquatch","Scarlet Witch","Sersi","Shaman","She-Hulk","Silver Surfer","Sleepwalker","Soul Gem","Speedball","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Talisman","Thanos","Thing","Thor","Uatu the Watcher","USAgent","Vindicator (Heather Hudson)","Vision","Wild Child","Windshear","Wolverine","Wonder Man"],"name":"Infinity Crusade #3","link":"infinity_crusade_3","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":5260},{"year":1993,"characters":["Aurora","Baron Blood (Victor Strange)","Captain America","Dr. Strange","Hulk","Imei Chang","Maxam","Moondragon","Morgana Blessing","Mr. Fantastic","Sleepwalker","Talisman","Thor","Vision","Wong"],"name":"Doctor Strange #56","link":"doctor_strange_56_1","credits":["Geof Isherwood","Roy Thomas","Mike Rockwitz","Joe Andreani"],"i":5261},{"year":1993,"characters":["Hermes","Moondragon","Pluto","Super-Skrull","Thor","Zeus"],"name":"Thor #465","link":"thor_465","credits":["Mike DeCarlo","Mike Rockwitz","Ron Marz","Bruce Zick","Joe Andreani"],"i":5262},{"year":1993,"characters":["Diamond Lil","Feedback","Goblyn","Madison Jeffries","Manikin","Master of the World","Nemesis II","Pathway","Persuasion","Reginald Tork","Shaman","Talisman","Wyre"],"name":"Alpha Flight #125-126","link":"alpha_fight_125-126","credits":["Paula Foye","Mark Stegbauer","Simon Furman","Manny Galan","Bruce D. Patterson","Frank Turner","Rob Tokar","James Reddington","Darrio Carrasco"],"i":5263},{"year":1993,"characters":["Alexander Goodwin Pierce","Amy Chen","Baron Von Strucker","Battlestar","Clay Quartermain","Crippler","Doug Powell","Dum Dum Dugan LMD","Fin (Next Wave)","Foreigner","Jacques Girard","Jimmy Woo","Lightbright","Man-Eater","Nick Fury","Paladin","Raul Quentino","Samantha Powell","Sandman","Silver Sable"],"name":"Silver Sable & the Wild Pack #16-17","link":"silver_sable_the_wild_pack_16-","credits":["Lynaire Brust","Craig Anderson","Steven Butler","Pam Eklund","Gregory Wright"],"i":5264},{"year":1993,"characters":["Allegra Bazin","Broderick Bazin","Cyclops","Darkhawk","Firestar","Grace Powell","Havok","Human Torch","Jason Powell","Jonathan Powell","Mr. Fantastic","Night Thrasher","Northstar","Polaris","Psylocke","Spider-Woman (Julia Carpenter)","Strong Guy","Thing","Vision","Wild Child"],"name":"Darkhawk #31","link":"darkhawk_31","credits":["Ian Akin","Danny Fingeroth","Anthony Williams","Nel Yomtov","John Lewandowski"],"i":5265},{"year":1993,"characters":["Adam Warlock","Eternity","Infinity","Mephisto","Soul Gem","Thanos"],"name":"Warlock Chronicles #3","link":"warlock_chronicles_3","credits":["Tom Raney","Keith Williams","Jim Starlin","Craig Anderson"],"i":5266},{"year":1993,"characters":["Adam Warlock","Beast","Drax the Destroyer","Forge","Goddess","Hulk","Iceman","Iron Man","Maxam","Pip the Troll","She-Hulk","Silhouette","Soul Gem","Speedball","Thanos","Vindicator (Heather Hudson)","Wolverine"],"name":"Warlock and the Infinity Watch #20","link":"warlock_and_the_infinity_watch_13","credits":["Lynaire Brust","Craig Anderson","Angel Medina","Bob Almond","Jim Starlin"],"i":5267},{"year":1993,"characters":["Firelord","Silver Surfer","Soul Gem","Thanos"],"name":"Silver Surfer #83","link":"silver_surfer_83","credits":["Tom Christopher","Lynaire Brust","Craig Anderson","Ron Marz","Cully Hamner"],"i":5268},{"year":1993,"characters":["Adam Warlock","Angel","Aurora","Autolycus","Bishop","Black Knight (Dane Whitman)","Captain America","Crystal","Cyclops","Daredevil","Dr. Strange","Gamora","Goddess","Havok","Hercules","Hulk","Invisible Woman","Iron Man","Jean Grey","Kray-Tor","Living Lightning","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Maxam","Moon Knight","Mr. Fantastic","Nomad","Nova (Rich Rider)","Professor X","Puck","Quicksilver","Rambo (dog)","Rick Sheridan","Rogue","Sasquatch","Scarlet Witch","Shaman","Silver Surfer","Sleepwalker","Soul Gem","Spider-Man","Storm","Strong Guy","Talisman","Thanos","Thor","USAgent","Valinor","Vision","Windshear","Wonder Man"],"name":"Infinity Crusade #4","link":"infinity_crusade_4","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":5269},{"year":1993,"characters":["Silver Surfer","Soul Gem","Thanos"],"name":"Silver Surfer #84","link":"silver_surfer_84","credits":["Tom Christopher","Lynaire Brust","Tom Grindberg","Craig Anderson","Ron Marz"],"i":5270},{"year":1993,"characters":["Adam Warlock","Magus (Evil Adam Warlock)","Soul Gem"],"name":"Warlock Chronicles #4","link":"warlock_chronicles_4","credits":["Tom Raney","Keith Williams","Jim Starlin","Craig Anderson"],"i":5271},{"year":1993,"characters":["Silver Surfer","Storm","Wonder Man"],"name":"Silver Surfer #85","link":"silver_surfer_85","credits":["Tom Christopher","Lynaire Brust","Craig Anderson","Scott Koblish","Ron Marz","Maria Beccari","Ernie Stiner","Howard Shum"],"i":5272},{"year":1993,"characters":["Adam Warlock","Angel","Aurora","Beast","Black Knight (Dane Whitman)","Captain America","Cyclops","Daredevil","Darkhawk","Dr. Strange","Drax the Destroyer","Firestar","Forge","Gamora","Goddess","Havok","Hercules","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","Living Lightning","Luke Cage","Madrox the Multiple Man","Maxam","Moon Knight","Moondragon","Mr. Fantastic","Night Thrasher","Nomad","Northstar","Nova (Rich Rider)","Pip the Troll","Polaris","Professor X","Puck","Quicksilver","Rage","Rogue","Sasquatch","Scarlet Witch","Shaman","She-Hulk","Silhouette","Sleepwalker","Soul Gem","Speedball","Spider-Man","Spider-Woman (Julia Carpenter)","Storm","Strong Guy","Thanos","Thing","Thor","USAgent","Valinor","Vindicator (Heather Hudson)","Vision","Windshear","Wolfsbane","Wolverine","Wonder Man"],"name":"Infinity Crusade #5","link":"infinity_crusade_5","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":5273},{"year":1993,"characters":["Agony","Angel","Captain America","Chloe Tran","Crystal","Daredevil","Dementia","Donna Kraft","Frenchie","Gamora","Goddess","Havok","Hercules","Hook","Invisible Woman","Madrox the Multiple Man","Manx","Marlene Alraune","Moon Knight","Moondragon","Puck","Quicksilver","Sasquatch","Scarlet Witch","Seth the Immortal","Shard","Spider-Man","Storm","Thor","USAgent","Vortex (Hellbent)","Wolfsbane","Wonder Man"],"name":"Moon Knight #57","link":"moon_knight_57","credits":["Sarra Mossoff","Terry Kavanagh","Stephen Platt"],"i":5274},{"year":1993,"characters":["Balder","Drax the Destroyer","Fandral","Hogun","Odin","Pluto","Sif","Thor","Volstagg","Zeus"],"name":"Thor #466","link":"thor_466","credits":["Mike DeCarlo","Mike Rockwitz","Ron Marz","Bruce Zick","Joe Andreani"],"i":5275},{"year":1993,"characters":["Drax the Destroyer","Goddess","Hulk","Madrox the Multiple Man","Moondragon","Thor"],"name":"Warlock and the Infinity Watch #21","link":"warlock_and_the_infinity_watch_14","credits":["Lynaire Brust","Tom Grindberg","Craig Anderson","Bob Almond","Jim Starlin"],"i":5276},{"year":1993,"characters":["Angel","Beast","Betty Brant","Black Knight (Dane Whitman)","Captain America","Colossus","Daredevil","Darkhawk","Dr. Strange","Drax the Destroyer","Firestar","Forge","Gamora","Hulk","Human Torch","Invisible Woman","Iron Man","J. Jonah Jameson","Jean Grey","Joe 'Robbie' Robertson","Living Lightning","Madrox the Multiple Man","Maxam","Moon Knight","Moondragon","Nova (Rich Rider)","Puck","Quicksilver","Rogue","Sasquatch","Silver Surfer","Sleepwalker","Soul Gem","Speedball","Spider-Man","Storm","Strong Guy","Talisman","Thanos","Thing","Thor","USAgent","Windshear","Wolverine","Wonder Man"],"name":"Web of Spider-Man #106","link":"web_of_spider-man_106","credits":["Alex Saviuk","Terry Kavanagh","Stephen Baskerville","Eric Fein"],"i":5277},{"year":1993,"characters":["Adam Warlock","Goddess"],"name":"Warlock Chronicles #5","link":"warlock_chronicles_5","credits":["Keith Williams","Kris Renkewitz","Jim Starlin","Craig Anderson"],"i":5278},{"year":1993,"characters":["Adam Warlock","Captain Hammer","Goddess","Man-Beast","Mole Man"],"name":"Warlock and the Infinity Watch #22","link":"warlock_and_the_infinity_watch_15","credits":["Lynaire Brust","Craig Anderson","Angel Medina","Bob Almond","Jim Starlin"],"i":5279},{"year":1993,"characters":["Deathlok (616 Luther Manning)","Deathlok (Michael Collins)","Goddess","Jesus Badalamente","Misty Knight","Nick Collins","Patricia Collins","Siege","Timestream","Tracy Collins","Uatu the Watcher"],"name":"Deathlok #27-29","link":"deathlok_27-29","credits":["Greg Adams","Gregory Wright","John Herbert","Tom Brevoort","Tim Tuohy","Mindy Newell","Roy Richardson","Kevin Kobasic"],"i":5280},{"year":1993,"characters":["Aurora","Captain America","Daredevil","Dr. Strange","Firestar","Hulk","Iron Man","Living Lightning","Moondragon","Northstar","Puck","Sasquatch","Shaman","She-Hulk","Speedball","Spider-Man","Storm","Strong Guy","Talisman","Thing","Vindicator (Heather Hudson)","Vision","Wild Child","Windshear","Wolverine","Wonder Man"],"name":"Alpha Flight #127","link":"alpha_flight_127","credits":["Simon Furman","Bruce D. Patterson","Rob Tokar","Dario Carrasco","Mark McKenna","Keith Pollard","Paula Foye"],"i":5281},{"year":1993,"characters":["Ares","Artemis","Athena","Pluto","Sif","Thor","Zeus"],"name":"Thor #467","link":"thor_467","credits":["Mike DeCarlo","Ron Marz","Mike Rockwitz","Bruce Zick"],"i":5282},{"year":1993,"characters":["Adam Warlock","Aurora","Autolycus","Beast","Black Knight (Dane Whitman)","Captain America","Cyclops","Daredevil","Darkhawk","Deathlok (Michael Collins)","Dr. Strange","Drax the Destroyer","Firelord","Firestar","Forge","Gamora","Goddess","Hepzibah","Hulk","Human Torch","Iceman","Invisible Woman","Iron Man","Jean Grey","Luke Cage","Madrox the Multiple Man","Magus (Evil Adam Warlock)","Maxam","Mephisto","Moon Knight","Moondragon","Mr. Fantastic","Nick Fury","Northstar","Nova (Rich Rider)","Pip the Troll","Professor X","Puck","Quicksilver","Raza Longknife","Rogue","Sasquatch","Scarlet Witch","She-Hulk","Silhouette","Silver Sable","Silver Surfer","Sleepwalker","Soul Gem","Speedball","Spider-Man","Starfox","Storm","Strong Guy","Terror (Shreck)","Thanos","Thing","Thor","Vindicator (Heather Hudson)","Vision","Wolverine","Wonder Man"],"name":"Infinity Crusade #6","link":"infinity_crusade_6","credits":["Ron Lim","Craig Anderson","Al Milgrom","Jim Starlin"],"i":5283},{"year":1993,"characters":["Analisa Medina","Bogeyman","Dakota North","Daryl 'Troop' Andrews","Dred","Human Torch","James Lucas (Geary)","Luke Cage","Micky Hamilton","Randolph Creed","Thing"],"name":"Cage #18-20","link":"cage_18-20","credits":["Brian Pelletier","Frank Turner","Marc McLaurin","Scott Benefiel","Chris Cooper"],"i":5284},{"year":1993,"characters":["Architect (Orville Nugent)","Jack Oonuk","Microchip","Punisher","Wolverine"],"name":"Punisher War Zone #17-19","link":"punisher_war_zone_17-19","credits":["Don Daley","Rodney Ramos","Tim Tuohy","Hugh Haynes","Andy Lanning","Dan Abnett"],"i":5285},{"year":1993,"characters":["Amelia Voght","Carmella Unuscione","Exodus","Fabian Cortez","Frenzy","Harlan Kleinstock","Havok","Isaac Javitz","Katu Kath","Madrox the Multiple Man","Polaris","Quicksilver","Random","Scanner (Acolyte)","Seamus Mellencamp","Senator Kelly","Senyaka","Spoor (Acolyte)","Strong Guy","Sven Kleinstock","Valerie Cooper","Wolfsbane"],"name":"X-Factor #92","link":"x-factor_92","credits":["Al Milgrom","Scott Lobdell","Kelly Corvese","Jaye Gardner","Joe Quesada","J.M. DeMatteis","Cliff Van Meter"],"i":5286},{"year":1993,"characters":["Angel","Ben Locklin","Colossus","Conal Duran","Cyclops","Forge","Havok","Iceman","Lila Cheney","Madrox the Multiple Man","Polaris","Quicksilver","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor #93","link":"x-factor_93","credits":["Al Milgrom","Scott Lobdell","Kelly Corvese","Jaye Gardner","J.M. DeMatteis","Terry Shoemaker"],"i":5287},{"year":1993,"characters":["Boom Boom","Cable (Adult)","Cannonball","Exodus","Feral","Magneto","Professor","Rictor","Rusty Collins","Shatterstar","Siryn","Skids","Sunspot","Warpath"],"name":"X-Force #25","link":"x-force_25","credits":["Al Milgrom","Fabian Nicieza","Jimmy Palmiotti","Scott Hanna","Kevin Conrad","Bob Harras","Paul Ryan","Greg Capullo","Bob Wiacek","Dan Green"],"i":5288},{"year":1993,"characters":["Amelia Voght","Angel","Banshee","Beast","Bishop","Boom Boom","Cannonball","Carmella Unuscione","Colossus","Cyclops","Exodus","Fabian Cortez","Feral","Francisco Milan","Frenzy","Gambit","Harlan Kleinstock","Havok","Iceman","Illyana Rasputin (Alt-Limbo version)","Isaac Javitz","Jean Grey","Jubilee","Katu Kath","Lilandra","Madrox the Multiple Man","Magneto","Nightcrawler","Polaris","Professor X","Psylocke","Quicksilver","Revanche","Rictor","Rogue","Scanner","Senyaka","Shadowcat (Kitty Pryde)","Shatterstar","Storm","Strong Guy","Sunspot","Sven Kleinstock","Warpath","Wolfsbane","Wolverine"],"name":"Uncanny X-Men #304","link":"uncanny_x-men_304","credits":["John Romita Jr.","Jae Lee","Bob Harras","Keith Williams","Scott Lobdell","Terry Austin","Chris Sprouse","Paul Smith","Tom Palmer","Dan Panosian","Lisa Patrick","Dan Green","Brandon Peterson"],"i":5289},{"year":1993,"characters":["Blob","Bova","Colonel Alexei Vazhin","Empyrean","Exodus","Gabrielle Haller","Graydon Creed","Henry Peter Gyrich","Magneto","Moira MacTaggert","Phantazia","Pyro","Toad","Valerie Cooper","Walter Rosen"],"name":"X-Men Unlimited #2","link":"x-men_unlimited_2","credits":["Fabian Nicieza","Jimmy Palmiotti","Keith Williams","Josef Rubinstein","Kelly Corvese","Dan Panosian","Jaye Gardner","Jan Duursema"],"i":5290},{"year":1993,"characters":["Al Shaitan","Avram Siegal","Bruno Coffee","Dr. Strange","Gabriel the Devil Hunter","Gargoyle (Defender)","Hellcat","Hellstorm","Hellstorm Doppelganger","Jack Riley","Satan","Seripha Thames"],"name":"Hellstorm #1-3","link":"hellstorm_1-3","credits":["Carlos Lopez","Michael Bair","Rafael Nieves","Fabian Nicieza"],"i":5291},{"year":1993,"characters":["Punisher"],"name":"Punisher #80","link":"punisher_80","credits":["Tim Tuohy","Dave Hoover","Steven Grant","Don Daley"],"i":5292},{"year":1993,"characters":["De Costa (Warheads)","Duncan (Warheads)","Gregory (Warheads)","Leona McBride","Misha (Warheads)","Stacy Arnheim","Tigon Liger"],"name":"Warheads: Black Dawn #1-2","link":"warheads_black_dawn_1-2","credits":["Michael Bennent","Craig Huston","David Hine","Charles Adlard","James Hodgkins"],"i":5293},{"year":1993,"characters":["Abomination","Hector","Hulk","Leviathan (Gargantua)","Titania","Ulysses"],"name":"Hulk annual #19","link":"hulk_annual_19","credits":["Peter David","Paul Pelletier","Dan Lawlis","Brad Vancata","Bob Cram","Kirk Jarvinen","Matthew Morra","Ron Fortier","Bobbie Chase","Tom Mandrake"],"i":5294},{"year":1993,"characters":["Adam Crown","Albion","Breeze James","Death's Head II (Minion)","Francesca Grace Lexley","Magpie","Red Lord","Sir Gawain","Union Jack (Joey Chapman)"],"name":"Knights of Pendragon #13-15","link":"knights_of_pendragon_13-15","credits":["Stuart Bartlett","Jeff Anderson","John Tomlinson","John Royle","Dan Abnett"],"i":5295},{"year":1993,"characters":["Black Axe"],"name":"Black Axe #4","link":"black_axe_4","credits":["Rodney Ramos","Simon Jowett","Art Nichols","Michael Bennett"],"i":5296},{"year":1993,"characters":["Bart Jones","Charles Rider","Edna Staples","Firestar","Gloria Rider","Hindsight Lad","Johnny Lo","Jupiter (Firestar's friend)","Justin Baldwin","Kimeiko Ashu","Maddie Baldwin","Namorita","Night Thrasher","Nova (Rich Rider)","Rage","Robbie Rider","Silhouette","Speedball","Victor Hasayaba"],"name":"New Warriors #37","link":"new_warriors_37","credits":["Dan Cuddy","Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Darick Robertson"],"i":5297},{"year":1993,"characters":["Andrew Chord","Firestar","Gai No Don","Hnang","Johnny Lo","Kimeiko Ashu","Namorita","Night Thrasher","Nova (Rich Rider)","Silhouette","Speedball","Sprocket","Victor Hasayaba"],"name":"Night Thrasher #1","link":"night_thrasher_1","credits":["Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Javier Saltares","Mark Bagley"],"i":5298},{"year":1993,"characters":["Firestar","Justin Baldwin","Kimeiko Ashu","Namorita","Night Thrasher","Nova (Rich Rider)","Rage","Robbie Rider","Silhouette","Speedball","Sprocket"],"name":"New Warriors #38","link":"new_warriors_38","credits":["Dan Cuddy","Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Darick Robertson"],"i":5299},{"year":1993,"characters":["Apocryphus","Black Knight (Dane Whitman)","Black Widow","Bloodwraith","Brideshead","Catherwood","Chandu","Crystal","Deathunt 9000","Hercules","Le Sabre","Lockjaw","Luna","Maha Yogi","Marilla","Mongu","Professor Gamble","Raa","Ravonna","Sersi","Sir Raston","Sssith","Taylor Madison","Tyndar","Valinor","Victoria Bentley","Vision","Wildrun"],"name":"Avengers annual #22","link":"avengers_annual_22","credits":["Ralph Macchio","Al Milgrom","Mark Stegbauer","Roy Thomas","Glenn Herdling","Ariane Lenshoek","Michael Gustovich","Jean-Marc Lofficier","Pat Garrahy"],"i":5300},{"year":1993,"characters":["Betty Ross","Doc Samson","Hiro (Tourist)","Hulk","Keith Chandler","Killpower","Larry (Tourist)","Madman","Marlo Chandler","Motormouth","Perseus","Piecemeal (NWO)","Ray Chandler","Rick Jones"],"name":"Hulk #407-409","link":"hulk_407-409","credits":["Peter David","James Felder","Bobbie Chase","Matthew Morra","Gary Frank","Cam Smith"],"i":5301},{"year":1993,"characters":["Alyssa Conover","Black Knight (Dane Whitman)","Black Widow","Cecilia Perez","Cobweb (Mindscape)","Crystal","Esk'odin","Flo Sheridan","Hercules","Ida Epstein","Janine Epstein","Morris Epstein","Psyko","Rambo (dog)","Rick Sheridan","Sersi","Sk'obe","Sleepwalker","Sv'ara","T'opali","Vision","William Sheridan"],"name":"Sleepwalker #25-27","link":"sleepwalker_25-27","credits":["Christopher Ivy","Bob Budiansky","Harry Candelario","Don Daley","Scott Koblish","Jon Holdredge","Frank Percy","Frank Percy- Inker","Kelly Krantz","Val Mayerik","Tim Tuohy","Bill Wylie"],"i":5302},{"year":1993,"characters":["Black Axe","Black Panther","Taku"],"name":"Black Axe #5-7","link":"black_axe_5-7","credits":["Rodney Ramos","Michael Bennent","Simon Jowett","Edmund Perryman"],"i":5303},{"year":1993,"characters":["Punisher"],"name":"Punisher Summer Special #3","link":"punisher_summer_special_3","credits":["Steven Grant","Brian Stelfreeze","Tony Harris","Chuck Dixon","Wade Von Grawbadger","Don Daley","Tim Tuohy","Joe Phillips","Tony Skinner","Pat Mills","Joel Thomas"],"i":5304},{"year":1993,"characters":["Death's Head II (Minion)","Die-Cut","Tuck"],"name":"Death's Head & Die-Cut #1-2","link":"deaths_head_die-cut_1-2","credits":["Mike Gonzaga","Glenn Dakin","Jacqui Papp","Sean Hardy","John Royle"],"i":5305},{"year":1993,"characters":["Daredevil","Ghost Rider (Danny Ketch)","Lynn Michaels","Microchip","Noble Kale","Punisher"],"name":"Punisher War Journal #57-58","link":"punisher_war_journal_57-58","credits":["Tim Tuohy","Don Daley","Chuck Dixon","Gary Kwapisz"],"i":5306},{"year":1993,"characters":["Lynn Michaels","Max (Dog)","Mickey Fondozzi","Microchip","Punisher"],"name":"Punisher War Journal #59-60","link":"punisher_war_journal_59-60","credits":["Tim Tuohy","Don Daley","Chuck Dixon","Gary Kwapisz"],"i":5307},{"year":1993,"characters":["Andrew Chord","Bandit","Bloodstrike","Father Michael Janes","Gai No Don","Gloria Hancock","Impulse (Genetech)","Midnight's Fire","Night Thrasher","Silhouette","Silk Fever","Smiling Tiger","Sparrow","Sprocket","Tanager","Tantrum","Turk","Tyger Tiger","Walter Rosen"],"name":"Night Thrasher #2-4","link":"night_thrasher_2-4","credits":["Don Hudson","Fabian Nicieza","Rick Magyar","David Boller","Rob Tokar","Dan Bulanadi","Javier Saltares","and Keith Williams","Rodney Ramos","Jim Amash","Jeffrey Albrech","Ken Branch","Ken Lashley","Keith Aiken","Paula Foye","Fred Haynes"],"i":5308},{"year":1993,"characters":["Avram Siegal","Hellstorm","Jack Riley","Satan","Soulfire"],"name":"Hellstorm #4-5","link":"hellstorm_4-5","credits":["Fabian Nicieza","Carlos Lopez","Peter Gross","Len Kaminski","Michael Bair","Rafael Nieves"],"i":5309},{"year":1994,"characters":["Ben Urich","Crippler","Daito","Daredevil","Doris Urich","Eddie Brock (Venom)","Elektra","Flame (Chaste)","Foggy Nelson","Garotte (Hydra)","Genkotsu","Hellspawn","J. Jonah Jameson","John Garrett","Karen Page","Kingpin","Morbius","Nick Fury","Osaku","Siege","Silver Sable","Sister Maggie Murdock","Stone (Chaste)","Tekagi","Venom Symbiote"],"name":"Daredevil #319-325","link":"daredevil_319-325","credits":["Ralph Macchio","Harry Candelario","D.G. Chichester","Avon","Hector Collazo","Scott McDaniel","Pat Garrahy","Richard Rankin"],"i":5310},{"year":1993,"characters":["Blade","Frank Drake","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hannibal King","Noble Kale","Richard Regent","Samantha Regent"],"name":"Nightstalkers #10","link":"nightstalkers_10","credits":["D.G. Chichester","Kirk Van Wormer","Hildy Mesnik","Mark Badger"],"i":5311},{"year":1993,"characters":["Blade","Demogoblin","Frank Drake","Ghost Rider (Danny Ketch)","Noble Kale","Seer"],"name":"Ghost Rider #40","link":"ghost_rider_40_1","credits":["Matthew Mora","Christopher Ivy","Ron Garney","Bobbie Chase","Howard Mackie"],"i":5312},{"year":1993,"characters":["Blade","Frank Drake","Ghost Rider (Danny Ketch)","Louise Hastings","Modred the Mystic","Noble Kale","Sam Buchanan","Victoria Montesi","Will 'Jinx' Hastings"],"name":"Darkhold #11","link":"darkhold_11","credits":["Bob Downs","James Felder","Rurik Tyler","Chris Cooper","Hildy Mesnik"],"i":5313},{"year":1993,"characters":["Blade","Bloodthirst","Frank Drake","Ghost Rider (Danny Ketch)","Louise Hastings","Mandy Tyler","Morbius","Noble Kale","Sam Buchanan","Werewolf By Night"],"name":"Morbius #12","link":"morbius_12","credits":["Mike Witherby","Gregory Wright","Matthew Morra","Ron Wagner","Bobbie Chase"],"i":5314},{"year":1993,"characters":["Blade","Centurious the Soulless Man","Darkhold Dwarf","Demogoblin","Frank Drake","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hannibal King","Lilith (Demon Mother)","Louise Hastings","Modred the Mystic","Morbius","Noble Kale","Sam Buchanan","Seer","Victoria Montesi"],"name":"Spirits of Vengeance #13","link":"spirits_of_vengeance_13","credits":["Adam Kubert","Frank Spinks","Klaus Janson","Matthew Morra","Joe Kubert","Bobbie Chase","Dan Green","Howard Mackie"],"i":5315},{"year":1993,"characters":["Punisher"],"name":"Punisher #81","link":"punisher_81","credits":["Hoang Nguyen","Don Daley","Tim Tuohy","Steven Grant"],"i":5316},{"year":1993,"characters":["Baby Bucky's Mom","Bucky (Julia Winter)","Gambit","Nomad"],"name":"Nomad #16","link":"nomad_16","credits":["Art Nichols","Fabian Nicieza","Glenn Herdling","Bill Anderson","Hector Collazo"],"i":5317},{"year":1993,"characters":["Microchip","Phalanx","Punisher"],"name":"Punisher War Zone annual #1","link":"punisher_war_zone_annual_1","credits":["Chuck Dixon","John Buscema","Don Daley","Josef Rubinstein","Bill Marimon","Matt Banning","Louis Williams","Tim Tuohy","George Caragonne","Steven Grant"],"i":5318},{"year":1993,"characters":["Sub-Mariner","Vashti","War Machine"],"name":"Namor #41","link":"namor_41","credits":["Michael Rockwitz","Shawn McManus","Mark Powers","Len Kaminski","Jeffry Albrecht"],"i":5319},{"year":1993,"characters":["Punisher"],"name":"Punisher annual #6","link":"punisher_annual_6","credits":["Dale Eaglesham","Chuck Dixon","Don Daley","Dave Hoover","Shawk McManus","Pat Mills","Tim Tuohy","Tony Skinner","Pat Redding","Steven Grant"],"i":5320},{"year":1993,"characters":["Eddie Brock (Venom)","Microchip","Punisher","Venom Symbiote"],"name":"Venom: Funeral Pyre #1-3","link":"venom_funeral_pyre_1-3","credits":["Al Milgrom","Danny Fingeroth","Scott Hanna","Josef Rubinstein","Carl Potts","Mike Lackey","Tom Lyle"],"i":5321},{"year":1993,"characters":["Aunt May","Bernard Scudder","Doc Samson","Hulk","Mary Jane Watson","Mary Parker Duplicate","Orwell Taylor","Richard Parker Duplicate","Spider-Man"],"name":"Amazing Spider-Man #381-382","link":"amazing_spider-man_381-382","credits":["Al Milgrom","Danny Fingeroth","Mike Lackey","Randy Emberlin","Mark Bagley","David Michelinie"],"i":5322},{"year":1993,"characters":["Black Knight (Dane Whitman)","Bloodwraith","Crystal","Deadpool","Valinor","Victoria Bentley","Vision"],"name":"Avengers #366 (Bloodwraith)","link":"avengers_366_bloodwraith","credits":["Ralph Macchio","Glenn Herdling","Ariane Lenshoek","Michael Gustovich","Pat Garrahy"],"i":5323},{"year":1993,"characters":["Algernon Crowe","Angel of Death","Anti-Being","Braxus","Brendan Rathcoole","Bronwen Gryfnn","Bug (Encoders)","Dark Angel","Death's Head II (Minion)","Eadmund Porlock","Gudrun Tyburn","Guide","Ormond Wychwood","Sapphire","Signal","Xena"],"name":"Dark Angel #13-16","link":"dark_angel_13-16","credits":["Salvador Larroca","John Stokes","Bernadette Jaye","David Hine","Bambos Georgiou"],"i":5324},{"year":1993,"characters":["Belial","Blade","Frank Drake","Georgianna LaFountaine","Hannibal King","Innards","Jeb Harlow","Malpractice","Marlene McKenna-Drake","Pyre","Rotwrap","Suze Harlow"],"name":"Nightstalkers #11","link":"nightstalkers_11","credits":["D.G. Chichester","Bill Anderson","Kirk Van Wormer","Hildy Mesnik"],"i":5325},{"year":1993,"characters":["Darkhold Dwarf","Diabolique","Louise Hastings","Modred the Mystic","Sam Buchanan","Victoria Montesi","Will 'Jinx' Hastings"],"name":"Darkhold #12","link":"darkhold_12","credits":["Bob Downs","James Felder","Rurik Tyler","Chris Cooper","Hildy Mesnik"],"i":5326},{"year":1993,"characters":["Commcast","Copycat","Courier (Jacob Gavin)","Deadpool","Kane","Slayback","Weasel","Zero"],"name":"Deadpool #3-4","link":"deadpool_3-4","credits":["Joe Madureira","Suzanne Gaffney","Fabian Nicieza","Harry Candelario"],"i":5327},{"year":1993,"characters":["Andrew Chord","Bart Jones","Edna Staples","Firestar","Jupiter (Firestar's friend)","Justice","Justin Baldwin","Namorita","Night Thrasher","Nova (Rich Rider)","Rage","Robbie Rider","Speedball"],"name":"New Warriors #39","link":"new_warriors_39","credits":["Fabian Nicieza","Larry Mahlstedt","Rob Tokar","Darick Robertson","Paula Foye"],"i":5328},{"year":1993,"characters":["Microchip","Punisher"],"name":"Punisher Back To School Special #2","link":"punisher_back_to_school_specia_1","credits":["Dan Slott","Dale Eaglesham","Don Daley","Josef Rubinstein","Frank Percy","Mike Lackey","Neil Hansen","Tim Tuohy","Ernie Stiner","Pat Redding","Steven Grant","Kevin Kobasic"],"i":5329},{"year":1993,"characters":["Blade","Darkhold Dwarf","Frank Drake","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Hannibal King","J. Jonah Jameson","Mary Jane Watson","Morbius","Noble Kale","Shocker (Paralyzer)","Spider-Man","Victoria Montesi","Will 'Jinx' Hastings","Zzzax"],"name":"Midnight Sons Unlimited #3","link":"midnight_sons_unlimited_3","credits":["John Czop","Ken Meyer Jr.","Lisa Pelosi","Mike Witherby","Javier Saltares","Vincent Giarrano","Hildy Mesnik","Mort Todd","Pat Redding","Mark Pennington","Cam Smith","Doug Braithwaite"],"i":5330},{"year":1993,"characters":["Alec Dalton (Dauntless)","Andre LeRoux (Dragonfly)","Andy Black (Guvnor)","Gog (Owen Llewelyn)","Invincible (Joseph Hauer)","Mandarin","Nick Fury","Sarah Wilde","Shinobi Shaw","Xantia"],"name":"Super Soldiers #6-7","link":"super_soldiers_6-7","credits":["Andrew Currie","Gary Russell","Lee Stevens","Robin Riggs"],"i":5331},{"year":1993,"characters":["Aunt May","Charlie Buchanan","Electro","J. Jonah Jameson","Joe 'Robbie' Robertson","Spider-Man"],"name":"Spider-Man #38-40","link":"spider-man_38-40","credits":["Klaus Janson","Danny Fingeroth","J.M. DeMatteis"],"i":5332},{"year":1994,"characters":["Bella Donna Boudreaux","Candra","Gambit","Gideon","Jean-Luc LeBeau","Julien Boudreaux","Professor X","Rogue","Storm","Tante Mattie","Tithe Collector","Wolverine"],"name":"Gambit #1-4","link":"gambit_1-4","credits":["Bob Harras","Lee Weeks","Klaus Janson","Howard Mackie","Jason Gorder"],"i":5333},{"year":1993,"characters":["Bishop","Iceman","Louis St. Croix","Opal Tanaka","Professor X","Rogue","Senator Kelly"],"name":"Uncanny X-Men #305","link":"uncanny_x-men_305","credits":["Jose Marzan","Bob Harras","Scott Lobdell","Lisa Patrick","Jan Duursema"],"i":5334},{"year":1993,"characters":["Boom Boom","Cable (Adult)","Cannonball","Feral","Forearm","Professor","Reaper","Reignfire","Rictor","Shatterstar","Siryn","Sunspot","Tempo","Warpath","Wildside"],"name":"X-Force #26","link":"x-force_26","credits":["Fabian Nicieza","Scott Hanna","Bob Harras","Matt Broome","Lisa Patrick","Bud LaRosa"],"i":5335},{"year":1993,"characters":["Forge","Havok","Madrox the Multiple Man","Polaris","Quicksilver","Random","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor #94","link":"x-factor_94","credits":["Al Milgrom","Scott Lobdell","Paul Ryan","Kelly Corvese","Jaye Gardner","J.M. DeMatteis"],"i":5336},{"year":1993,"characters":["Angel","Beast","Bishop","Cameron Hodge","Candy Southern","Forge","Jean Grey","Professor X","Quicksilver","Storm"],"name":"Uncanny X-Men #306","link":"uncanny_x-men_306","credits":["John Romita Jr.","Bob Harras","Scott Lobdell","Lisa Patrick","Dan Green"],"i":5337},{"year":1993,"characters":["Black Widow","Captain America","Crystal","Deathcry","Fabian Cortez","Henry Pym","Hercules","Luna","Magdalene","Mutate 682","Swordsman (Gatherers)","Taylor Madison","Vision"],"name":"Avengers #367","link":"avengers_367","credits":["Ralph Macchio","Don Hudson","Bob Harras","Jim Hall","Pat Garrahy"],"i":5338},{"year":1993,"characters":["Adam X","Boom Boom","Cable (Adult)","Cannonball","Feral","Martin Henry Strong","Neurotap","Professor","Rictor","Shatterstar","Siryn","Sunspot","Warpath"],"name":"X-Force annual #2","link":"x-force_annual_2","credits":["Fabian Nicieza","Kevin Conrad","Keith Williams","Antonio Daniel","Brad Vancata","Lisa Patrick","Bob Wiacek","Mark Pennington"],"i":5339},{"year":1993,"characters":["Angel","Banshee","Beast","Bishop","Captain Britain","Carmella Unuscione","Colossus","Cyclops","Exodus","Forge","Frenzy","Gambit","Harlan Kleinstock","Iceman","Isaac Javitz","Jean Grey","Jubilee","Katu Kath","Magneto","Moira MacTaggert","Mr. Fantastic","Nick Fury","Nightcrawler","Professor X","Psylocke","Quicksilver","Revanche","Rogue","Rusty Collins","Scanner (Acolyte)","Skids","Storm","Sunfire","Sven Kleinstock","Thing","Wolverine"],"name":"X-Men #25","link":"x-men_25","credits":["Fabian Nicieza","Bob Harras","Matthew Ryan","Andy Kubert","Lisa Patrick"],"i":5340},{"year":1993,"characters":["Beast","Bishop","Cyclops","Gambit","Iceman","Jean Grey","Jubilee","Moira MacTaggert","Professor X","Psylocke","Quicksilver","Rogue","Shadowcat (Kitty Pryde)","Storm","Wolverine"],"name":"Wolverine #75","link":"wolverine_75","credits":["Adam Kubert","Mark Farmer","Bob Harras","Lisa Patrick","Larry Hama","Mark Pennington","Dan Green"],"i":5341},{"year":1993,"characters":["Amelia Voght","Cable (Adult)","Carmella Unuscione","Colossus","Cyclops","Exodus","Jean Grey","Katu Kath","Moira MacTaggert","Nightcrawler","Professor","Professor X","Rachel Summers","Spoor"],"name":"Excalibur #71","link":"excalibur_71","credits":["Matthew Ryan","Scott Lobdell","Suzanne Gaffney","Randy Emberlin","Mark Nelson","Darick Robertson","Ken Lashley","Randy Elliot","Cam Smith"],"i":5342},{"year":1993,"characters":["Avalanche","Banshee","Beast","Blob","Crimson Commando","Cyclops","Empyrean","Gambit","Henry Peter Gyrich","Jean Grey","Jubilee","Moira MacTaggert","Phantazia","Professor X","Psylocke","Pyro","Revanche","Rogue","Toad","Trish Tilby"],"name":"X-Men annual #2","link":"x-men_annual_2","credits":["Al Milgrom","Fabian Nicieza","Kevin Conrad","Bob Harras","Keith Williams","Scott Lobdell","Ian Churchill","Lisa Patrick","Aron Wiesenfeld","Bob Wiacek"],"i":5343},{"year":1993,"characters":["Abe Brown","Ashley Kafka","Black Crow","D'Spayre","Killer Shrike","Lin Sun","Nocturne (Angela Cairn)","Prowler","Spider-Man","Vermin"],"name":"Spectacular Spider-Man annual #13","link":"spectacular_spider-man_annual_5","credits":["Al Milgrom","Jerry Bingham","M.C. Wyman","Glenn Herdling","Keith Williams","John Romita Sr.","Hector Collazo","\"Company\"","J.M. DeMatteis","Eric Fein"],"i":5344},{"year":1993,"characters":["Bantam","Captain America","Karl Malus"],"name":"Captain America annual #12","link":"captain_america_annual_12","credits":["Mike Rockwitz","M.C. Wyman","Grant Miehm","Charles Barnett III","David Wohl","Mark Gruenwald","Barry Dutter"],"i":5345},{"year":1993,"characters":["Hellstorm"],"name":"Hellstorm #6","link":"hellstorm_6","credits":["Carlos Lopez","Michael Bair","Rafael Nieves","Fabian Nicieza"],"i":5346},{"year":1993,"characters":["Babet","Gale Patric","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Gun Runner","Noble Kale","Shakata"],"name":"Gun Runner #1-2","link":"gun_runner_1-2","credits":["Terry Clark","Adolfo Buylla","Jeff Anderson","Bambos Georgiou","Anthony Williams","Andy Lanning","Dan Abnett"],"i":5347},{"year":1993,"characters":["Black Cat","Flash Thompson","Hammerhead","J. Jonah Jameson","Joe 'Robbie' Robertson","Lance Bannon","Liz Allan","Mary Jane Watson","Molten Man","Nick Katzenberg","Normie Osborn","Spider-Man","Tombstone"],"name":"Spectacular Spider-Man #204-206","link":"spectacular_spider-man_204-206","credits":["Mark Powers","Steven Grant","Sal Buscema"],"i":5348},{"year":1993,"characters":["Glory Grant","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Lance Bannon","Marla Madison Jameson","Martha Robertson"],"name":"Spectacular Spider-Man #205-207 (backup)","link":"spectacular_spider-man_205-207","credits":["Vince Evans","Sam DeLaRosa","Matt Banning","Mark Powers","Walter McDaniel","Steven Grant"],"i":5349},{"year":1993,"characters":["Ghost Rider (Danny Ketch)","Night Terror","Noble Kale","Seer"],"name":"Ghost Rider annual #1","link":"ghost_rider_annual_1","credits":["Chris Bachalo","Mark Buckingham","James Felder","Brad Vancata","Evan Skolnick","Isaac Cordova","Kirk Van Wormer","Joey Cavalieri","Bobbie Chase","Bud LaRosa","Howard Mackie"],"i":5350},{"year":1993,"characters":["Blackout (Demon)","Carver","Centurious the Soulless Man","Doris Ketch","Fang (Lilan)","Ghost Rider (Danny Ketch)","Lilith (Demon Mother)","Meatmarket","Nakota","Noble Kale","Outcast (Lilan)","Pilgrim","Seer","Steel Wind"],"name":"Ghost Rider #41","link":"ghost_rider_41","credits":["Christopher Ivy","James Felder","Ron Garney","Bobbie Chase","Howard Mackie"],"i":5351},{"year":1993,"characters":["Caretaker","Carver","Centurious the Soulless Man","Doris Ketch","Fang (Lilan)","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Kodiak","Lilith (Demon Mother)","Nakota","Noble Kale","Outcast (Lilan)","Pilgrim","Seer","Skinner","Steel Wind","Wolff"],"name":"Spirits of Vengeance #14","link":"spirits_of_vengeance_14","credits":["Jeffrey Albrecht","Thomas Palmer","James Felder","Mike Manley","Tim Tuohy","Bobbie Chase","Ralph Cabrera","Howard Mackie"],"i":5352},{"year":1993,"characters":["Blackout (Demon)","Caretaker","Carver","Centurious the Soulless Man","Deathwatch","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Lilith (Demon Mother)","Noble Kale","Seer","Skinner","Steel Wind"],"name":"Ghost Rider #42","link":"ghost_rider_42","credits":["Christopher Ivy","James Felder","Ron Garney","Bobbie Chase","Howard Mackie"],"i":5353},{"year":1993,"characters":["Caretaker","Centurious the Soulless Man","Clara Menninger","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Kodiak","Lilith (Demon Mother)","Miranda Woods","Noble Kale","Quinn McIntyre","Seer","Vengeance","Wolff"],"name":"Spirits of Vengeance #15","link":"spirits_of_vengeance_15","credits":["James Felder","Tom Palmer","Mike Manley","Bobbie Chase","Howard Mackie"],"i":5354},{"year":1993,"characters":["Blackout (Demon)","Caretaker","Centurious the Soulless Man","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Kodiak","Lilith (Demon Mother)","Miranda Woods","Noble Kale","Outcast (Lilan)","Seer","Vengeance","Wolff","Zarathos"],"name":"Ghost Rider #43","link":"ghost_rider_43","credits":["Bobbie Chase","Ron Garney","Christopher Ivy","Howard Mackie"],"i":5355},{"year":1993,"characters":["Caretaker","Centurious the Soulless Man","Clara Menninger","Doris Ketch","Ghost Rider (Danny Ketch)","Ghost Rider (Johnny Blaze)","Kodiak","Lilith (Demon Mother)","Miranda Woods","Nakota","Noble Kale","Pilgrim","Seer","Vengeance","Wolff","Zarathos"],"name":"Spirits of Vengeance #16","link":"spirits_of_vengeance_16","credits":["Keith Williams","James Felder","Henry Martinez","Bobbie Chase","Howard Mackie"],"i":5356},{"year":1993,"characters":["Darkhold Dwarf","Diabolique","Ghost Rider (Johnny Blaze)","Louise Hastings","Modred the Mystic","Nash Salvato","Sam Buchanan","Victoria Montesi","Will 'Jinx' Hastings"],"name":"Darkhold #13-14","link":"darkhold_13-14","credits":["Bob Downs","Lia Pelosi","Rurik Tyler","Chris Cooper","Hildy Mesnik"],"i":5357},{"year":1994,"characters":["Alyssa Conover","Cobweb (Mindscape)","Psyko","Rambo (dog)","Rick Sheridan","Sleepwalker","Spectra","Spider-Man"],"name":"Sleepwalker #28-29,31-33","link":"sleepwalker_28-2931-","credits":["Christopher Ivy","Bob Budiansky","Tim Tuhoy","Don Daley","Jon Holdredge","Kelly Krantz","Don Lomax","Val Mayerik"],"i":5358},{"year":1993,"characters":["Bloodthirst","Darkhold Dwarf","Dr. Strange","Lilith (Demon Mother)","Louise Hastings","Martine Bancroft","Morbius","Nakota","Parasite","Sam Buchanan","Victoria Montesi","Werewolf By Night"],"name":"Morbius #13","link":"morbius_13","credits":["Gregory Wright","Sam DeLaRosa","James Felder","Ron Wagner","Henry Martinez","Bobbie Chase","Andrew Pepoy"],"i":5359},{"year":1993,"characters":["Baby Bucky's Mom","Bart Ingrid","Bucky (Julia Winter)","Giscard Epurer","Jill Coltrain","Mary Ellen Monroe","Nomad"],"name":"Nomad #17","link":"nomad_17","credits":["Fabian Nicieza","Rick Mays","Greg Adams","Glenn Herdling","Hector Collazo"],"i":5360},{"year":1993,"characters":["Dr. Strange","Kyllian","Urthona","Wong"],"name":"Doctor Strange #57-59","link":"doctor_strange_57-59_1","credits":["Geof Isherwood","Sandu Florea","Mike Rockwitz","Joe Andreani"],"i":5361},{"year":1993,"characters":["Beta Ray Bill","Dargo Ktor","Eternity","Kargul","Kevin Masterson","Thor","Thunderstrike"],"name":"Thor Corps #1-4","link":"thor_corps_1-4","credits":["Tom DeFalco","Romeo Tanghal","Pat Olliffe","Mike Rockwitz"],"i":5362},{"year":1993,"characters":["Ast (Time-Keeper)","Brideshead","Captain America","Deathunt 9000","Immortus","Iron Man","Kang","Marcus Immortus","Ravonna","Tempus","Thor","Thunderstrike","USAgent","Vort (Time-Keeper)","War Machine","Zanth (Time-Keeper)"],"name":"Avengers: The Terminatrix Objective #1-4","link":"avengers_the_terminatrix_objec","credits":["Ralph Macchio","Don Hudson","Dell Barras","Warren Martineck","Pat Garrahy","Michael Gustovich","Bud LaRosa","Mark Gruenwald","Don Huson"],"i":5363},{"year":1994,"characters":["Angel","Beast","Bishop","Gambit","Jason Macendale","Mary Jane Watson","Rogue","Spider-Man"],"name":"Spider-Man: The Mutant Agenda #1-3","link":"spider-man_the_mutant_agenda_1","credits":["Mark Bernardo","Danny Fingeroth","Sam DeLaRosa","Scott Kolins","Steven Grant"],"i":5364},{"year":1993,"characters":["Hawkeye","Inazuma","Iron Man","Kaminari","Kaze","Kaze II","War Machine"],"name":"Iron Man annual #14","link":"iron_man_annual_14","credits":["John Czop","Kris Renkewitz","Frank Percy","Nel Yomtov","Brad Vancata","Fred Fredericks","Tom Morgan","Scott Benson","Len Kaminski","Tim Dzon","John Lewandowski"],"i":5365},{"year":1993,"characters":["Captain America","Coldsteel","Hangman II","Hate-Monger (Animus)","Hawkeye","Living Lightning","Mephisto","Mockingbird Skrull","Satannish","Scarlet Witch","Spider-Woman (Julia Carpenter)","Stella Houston","Tigra","USAgent","War Machine","Zyklon"],"name":"Avengers West Coast #98-100","link":"avengers_west_coast_98-100","credits":["Don Hudson","David Ross","Roy Thomas","Len Kaminkski","Avon","Nel Yomtov","Charles Barnett III","James Novak","Don Cameron","Tom Morgan","Tom Tenney","Tim Dzon","John Lewandowski"],"i":5366},{"year":1993,"characters":["Brady (VIGIL)","Letz (Vigil)","Microchip","Punisher","Riggs (VIGIL)","Taylor Blackwell"],"name":"Punisher #82-84","link":"punisher_82-84","credits":["Mick Gray","Don Daley","Mark McKenna","Hugh Haynes","Andy Lanning","Dan Abnett"],"i":5367},{"year":1993,"characters":["Diane Arliss","Orka","Stingray","Sub-Mariner"],"name":"Namor #42-43","link":"namor_42-43","credits":["Brian Garvey","Mike Rockwitz","M.C. Wyman","Roy Thomas","Bud LaRosa","Joe Andreani"],"i":5368},{"year":1993,"characters":["Abe Zimmer","Bethany Cabe","Eddie March","Erica Sondheim","Felix Alvarez","Guardsman II (Michael O'Brien)","Happy Hogan","Iron Man","Marty March","MODAM","Mrs. Arbogast","Omega Red","Pepper Potts","Rae LaCoste","Roxanne Gilbert","Super-Adaptoid","Veronica Benning"],"name":"Iron Man #296-297","link":"iron_man_296-297","credits":["Steven Mitchell","Len Kaminksi","Kevin Hopgood","Nel Yomtov","John Lewandowski"],"i":5369},{"year":1994,"characters":["Abe Zimmer","Bethany Cabe","Cal Oakley","Eddie March","Erica Sondheim","Felix Alvarez","Force","Happy Hogan","HOMER","Iron Man","Marcy Pearson","Mrs. Arbogast","Pepper Potts","Raven","Ultimo","Veronica Benning","VORTEX","War Machine"],"name":"Iron Man #298-300","link":"iron_man_298-300","credits":["Steven Mitchell","Avon","Nel Yomtov","Len Kaminksi","Tom Morgan","Kevin Hopgood","Steve Ellis","Tom Tenney","Don Cameron","John Lewandowski"],"i":5370},{"year":1993,"characters":["Forge","Havok","Madrox the Multiple Man","Polaris","Random","Strong Guy","Wolfsbane"],"name":"X-Factor #95","link":"x-factor_95","credits":["Al Milgrom","Kelly Corvese","Scott Lobdell","J.M. DeMatteis","Greg Luzniak"],"i":5371},{"year":1993,"characters":["Devos the Devastator","Dr. Doom","General Kalamari","Human Torch","Huntara","Invisible Woman","Klaw","Lyja the Lazerfist","Malice (Sue Storm's psionic entity)","Mr. Fantastic","Ms. Marvel (Sharon Ventura)","Nathaniel Richards","Paibok the Power Skrull","Psi-Lord","S'Byll","Thing"],"name":"Fantastic Four #379-383","link":"fantastic_four_379-383","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":5372},{"year":1993,"characters":["Achilles","Ajax","Atalanta","Delphi","Hector","Hulk","Human Torch","Invisible Woman","Kala","Mole Man","Paris","Thing"],"name":"Fantastic Four Unlimited #4","link":"fantastic_four_unlimited_4","credits":["Herb Trimpe","Roy Thomas","Mike Rockwitz","Steve Montano"],"i":5373},{"year":1994,"characters":["Ant-Man (Scott Lang)","Human Torch","Igor (Super Ape)","Invisible Woman","Klaw","Mikhlo (Super Ape)","Ms. Marvel (Sharon Ventura)","Peator (Super Ape)","Red Ghost","Thing","Wizard"],"name":"Fantastic Four Unlimited #5","link":"fantastic_four_unlimited_5","credits":["Herb Trimpe","Roy Thomas","Mike Rockwitz","Joe Andreani"],"i":5374},{"year":1994,"characters":["Ant-Man (Scott Lang)","Human Torch","Invisible Woman","Lyja the Lazerfist","Malice (Sue Storm's psionic entity)","Psi-Lord","Roberta","Thing"],"name":"Fantastic Four #384","link":"fantastic_four_384","credits":["Ralph Macchio","Tom DeFalco","Paul Ryan","Dan Bulanadi","Pat Garrahy"],"i":5375},{"year":1994,"characters":["Flash Thompson","Forge","Havok","J. Jonah Jameson","Joe 'Robbie' Robertson","Joy Mercado","Madrox the Multiple Man","Polaris","Spider-Man","Strong Guy","Wolfsbane"],"name":"Spider-Man/X-Factor: Shadowgames #1-3","link":"spider-manx-factor_shadowgames","credits":["Kurt Busiek","Pat Broderick","Bruce D. Patterson","Danny Fingeroth"],"i":5376},{"year":1993,"characters":["Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Captain America","Crystal","Cyclops","Fabian Cortez","Gambit","Hawkeye","Henry Peter Gyrich","Henry Pym","Hercules","Iceman","Jean Grey","Jennifer Ransome","Luna","Marilla","Mutate 682","Nick Fury","Phillip Moreau","Professor X","Quicksilver","Rogue","Scarlet Witch","Sersi","Spider-Woman (Julia Carpenter)","Storm","Trish Tilby","USAgent","Valerie Cooper","Vision","War Machine"],"name":"Avengers #368","link":"avengers_368","credits":["Ralph Macchio","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy"],"i":5377},{"year":1993,"characters":["Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Captain America","Colossus","Crystal","Cyclops","Dum Dum Dugan","Exodus","Fabian Cortez","Gambit","Hawkeye","Henry Peter Gyrich","Hercules","Iceman","Jean Grey","Jennifer Ransome","Luna","Magneto","Nick Fury","Phillip Moreau","Professor X","Quicksilver","Renee Majcomb","Revanche","Rogue","Scarlet Witch","Sersi","Spider-Woman (Julia Carpenter)","Storm","Trish Tilby","USAgent","Vision","War Machine"],"name":"X-Men #26","link":"x-men_26","credits":["Fabian Nicieza","Bob Harras","Matthew Ryan","Andy Kubert","Lisa Patrick"],"i":5378},{"year":1993,"characters":["Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Captain America","Crystal","Cyclops","Exodus","Fabian Cortez","Gambit","Hawkeye","Henry Pym","Hercules","Iceman","Jean Grey","Professor X","Quicksilver","Rogue","Scarlet Witch","Sersi","Skelter","Storm","Syth","USAgent","Vision","War Machine"],"name":"Avengers West Coast #101","link":"avengers_west_coast_101","credits":["David Ross","Roy Thomas","Nel Yomtov","Tim Dzon","John Lewandowski"],"i":5379},{"year":1993,"characters":["Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Captain America","Crystal","Cyclops","Exodus","Fabian Cortez","Gambit","Hawkeye","Henry Pym","Hercules","Iceman","Jean Grey","Jennifer Ransome","Luna","Phillip Moreau","Professor X","Quicksilver","Renee Majcomb","Revanche","Rogue","Scarlet Witch","Sersi","Spider-Woman (Julia Carpenter)","Storm","USAgent","Vision","War Machine"],"name":"Uncanny X-Men #307","link":"uncanny_x-men_307","credits":["John Romita Jr.","Bob Harras","Scott Lobdell","Lisa Patrick","Dan Green"],"i":5380},{"year":1993,"characters":["Angel","Beast","Bishop","Black Knight (Dane Whitman)","Black Widow","Captain America","Crystal","Cyclops","Exodus","Fabian Cortez","Gambit","Hawkeye","Henry Pym","Hercules","Iceman","Jean Grey","Jennifer Ransome","Luna","Nick Fury","Phillip Moreau","Professor X","Psylocke","Quicksilver","Renee Majcomb","Revanche","Rogue","Scarlet Witch","Sersi","Storm","Trish Tilby","USAgent","Vision","War Machine"],"name":"Avengers #369","link":"avengers_369","credits":["Ralph Macchio","Don Hudson","Bob Harras","Tom Palmer","Steve Epting","Pat Garrahy","Jan Duursema"],"i":5381},{"year":1994,"characters":["Forge","Haven","Havok","Madrox the Multiple Man","Polaris","Professor X","Random","Strong Guy","Valerie Cooper","Wolfsbane"],"name":"X-Factor #96-100","link":"x-factor_96-100","credits":["Al Milgrom","Kelly Corvese","Jaye Gardner","J.M. DeMatteis","Jan Duursema","Greg Luzniak"],"i":5382},{"year":1993,"characters":["Boom Boom","Cable (Adult)","Cannonball","Feral","Forearm","Forge","Henry Peter Gyrich","Locus","Mirage (Dani Moonstar)","Nick Fury","Professor X","Reaper","Reignfire","Rictor","Shatterstar","Siryn","Sunspot","Tempo","Valerie Cooper","Warpath","Wildside"],"name":"X-Force #27-28","link":"x-force_27-28","credits":["Fabian Nicieza","Kevin Conrad","Bob Harras","Matt Broome","Antonio Daniel","Lisa Patrick","Bud LaRosa"],"i":5383},{"year":1993,"characters":["Bloodthirst","D'Spayre","Ghost Rider (Danny Ketch)","Jacob Weisenthal","Lilith (Demon Mother)","Mandy Tyler","Martine Bancroft","Morbius","Noble Kale","Parasite","Werewolf By Night"],"name":"Morbius #14-15","link":"morbius_14-15","credits":["Ron Wagner","Melvin Rubi","Gregory Wright","James Felder","Isaac Cordova","Bobbie Chase","Andrew Pepoy"],"i":5384},{"year":1993,"characters":["Andrew Chord","Bandit","Cardinal","Father Michael Janes","Gai No Don","Gloria Hancock","Night Thrasher","Silhouette","Sparrow","Tanager","Walter Rosen"],"name":"Night Thrasher #5","link":"night_thrasher_5","credits":["Paula Foye","Rob Tokar","Fabian Nicieza","Javier Saltares"],"i":5385},{"year":1993,"characters":["Auteur (Alex Flores)","Dreamer (Jamie Flores)","Hulk","Neal Saroyan","Snap (Ginger Beach)","Stat (Spider Beach)","Wonder Man"],"name":"Wonder Man #26-27","link":"wonder_man_26-27","credits":["Brad Joyce","Tim Hamilton","Gerard Jones","Nel Yomtov","John Lewandowski"],"i":5386},{"year":1994,"characters":["Amon (Demon Steed)","Avram Siegal","Gabriel the Devil Hunter","Gargoyle (Defender)","Hecate (Demon Steed)","Hellcat","Hellstorm","Satan","Satana","Set (Demon Steed)"],"name":"Hellstorm #7-11","link":"hellstorm_7-11","credits":["Marie Javins","Fabian Nicieza","Carlos Lopez","Peter Gross","Mark Badger","Kevin Somers","Leonardo Manco","Len Kaminski"],"i":5387},{"year":1993,"characters":["Broderick Bazin","Darkhawk","Grace Powell","Jason Powell","Jonathan Powell","Savage Steel (Jimmy Zafar)","Steve 'Headset' Rubino"],"name":"Darkhawk #32","link":"darkhawk_32","credits":["Mick Gray","Nel Tomtov","Ian Akin","Danny Fingeroth","Anthony Williams","John Lewandowski"],"i":5388},{"year":1993,"characters":["Alexander Goodwin Pierce","Brothers Grimm III","Captain America","Clay Quartermain","Digger (Night Shift)","Dr. Faustus","Gabriel Jones","Gail Runciter","Giscard Epurer","Jimmy Woo","Machinesmith","Misfit","Needle","Nick Fury","Peggy Carter","Quasar","Red Skull","Skull the Slayer"],"name":"Captain America #420","link":"captain_america_420","credits":["Mike Rockwitz","Dan Bulanadi","Mark Gruenwald","Rik Levins","Joe Andreani"],"i":5389},{"year":1993,"characters":["Bart Ingrid","Billy (The Wanderers)","Captain America","Chisel","Dr. Faustus","Fastback","Flintlock","Folio","Giscard Epurer","Hardhat","Jill Coltrain","Nomad","Outback","Slug (Crimelord)","Transom","Zaran"],"name":"Nomad #18","link":"nomad_18","credits":["Fabian Nicieza","Rick Mays","Greg Adams","Glenn Herdling","Hector Collazo"],"i":5390},{"year":1993,"characters":["Billy (The Wanderers)","Captain America","Chisel","Fastback","Flintlock","Folio","Hardhat","Nomad","Outback","Slug (Crimelord)","Transom"],"name":"Captain America #421","link":"captain_america_421","credits":["Dan Day","Brian Garvey","Mike Rockwitz","Dan Bulanadi","Mark Gruenwald","Rik Levins","Joe Andreani"],"i":5391},{"year":1993,"characters":["Bart Ingrid","Billy (The Wanderers)","Captain America","Chisel","Dr. Faustus","Flintlock","Jill Coltrain","Nomad"],"name":"Nomad #19","link":"nomad_19","credits":["Fabian Nicieza","Greg Adams","Scott Koblish","Glenn Herdling","Bill Wylie"],"i":5392},{"year":1994,"characters":["Albion","Clementine","Dark Angel","Death's Head II (Minion)","Killpower","Motormouth","Stacy Arnheim","Tigon Liger","Time Guardian"],"name":"Dark Guard #1-4","link":"dark_guard_1-4","credits":["Oscar Jimenez","Carlos Pacheco","Dan Abnett","Stuart Bartlett"],"i":5393},{"year":1993,"characters":["Achilles","Ajax","Atalanta","Betty Ross","Black Knight (Dane Whitman)","Black Widow","Delphi","Hector","Marlo Chandler","Nick Fury","Rick Jones","She-Hulk","Ulysses","USAgent"],"name":"Hulk #410-411","link":"hulk_410-411","credits":["Peter David","James Felder","Gary Frank","Bobbie Chase","Cam Smith"],"i":5394},{"year":1994,"characters":["Algernon Crowe","Automaton","Base","Cat (Gene Dogs)","Eagle","Harvester","Howitzer","Hurricane","Ridge","Stinger (Genetix)","Tanuta Umbotha","Tyr (Gene Dogs)","Vesper","Victor Sternwood"],"name":"Gene Dogs #1-4","link":"gene_dogs_1-4","credits":["David Taylor","Bambos Georgiou","Stephen Baskerville","John Freeman"],"i":5395},{"year":1993,"characters":["General Nguyen Coy","Microchip","Punisher","Tai (Madripoor police)","Tyger Tiger"],"name":"Punisher War Zone #20-22","link":"punisher_war_zone_20-22","credits":["Larry Hama","Don Daley","Hoang Nguyen","Tim Tuohy"],"i":5396},{"year":1993,"characters":["Blade","Frank Drake","Hannibal King","Stonecold"],"name":"Nightstalkers #12-13","link":"nightstalkers_12-13","credits":["James Felder","Vincent Giarrano","Bill Anderson","Hildy Mesnik","Kirk Van Wormer","Steven Grant"],"i":5397},{"year":1993,"characters":["Alec Dalton (Dauntless)","Andy Black (Guvnor)","Dragonfly (Andre LeRoux)","Gog (Owen Llewelyn)","Invincible (Joseph Hauer)","Punisher","Robin Pembridge","Sarah Wilde","Xantia"],"name":"Super Soldiers #8","link":"super_soldiers_8","credits":["Robin Riggs","Gary Russell","Lee Stevens","Mike Ratera"],"i":5398},{"year":1993,"characters":["Cable (Adult)","Cannonball","Sinsear","Siryn"],"name":"Cable #5","link":"cable_5","credits":["Fabian Nicieza","Bob Harras","Jonathan Holdredge","Lisa Patrick","Darick Robertson"],"i":5399},{"year":1994,"characters":["Antro","Arachne (Deathweb)","Consuela","Elizabeth Cornwall","Manipulator III","Mike Clemson","Rachel Carpenter","Spider-Woman (Julia Carpenter)","Therak","USAgent","Valerie Cooper","Walter Cornwall","War Machine"],"name":"Spider-Woman #1-4","link":"spider-woman_1-4","credits":["John Czop","Roy Thomas","Fred Fredericks","Steve Ellis","Nel Yomtov","Dann Thomas"],"i":5400},{"year":1994,"characters":["Beast","Die-Cut","Red Skull","Spider-Man"],"name":"Die-Cut #1-4","link":"die-cut_1-4","credits":["Paul Scott","Glenn Dakin","Bernard Custodio","Jacqui Papp"],"i":5401},{"year":1993,"characters":["Allegra Bazin","Andrew Bazin","Black Widow","Broderick Bazin","Captain America","Crystal","Darkhawk","Grace Powell","Hercules","Jason Powell","Jonathan Powell","Mike Powell","Steve 'Headset' Rubino"],"name":"Darkhawk #33-34","link":"darkhawk_33-34","credits":["Todd Smith","Ian Akin","Danny Fingeroth","Nel Yomtov","John Lewandowski"],"i":5402},{"year":1993,"characters":["Albion","Brendan Rathcoole","Die-Cut","Francesca Grace Lexley","Time Guardian"],"name":"Die-Cut vs. G-Force #1-2","link":"die-cut_vs_g-force_1-2","credits":["Stuart Bartlett","John Royle","John Freeman","Tim Perkins"],"i":5403},{"year":1993,"characters":["Beta Ray Bill","Flame (Asgardian)"],"name":"Thor annual #18","link":"thor_annual_18","credits":["Tom Raney","Don Hudson","Tom Grindberg","Mike Rockwitz","Ron Marz","John Nyberg","Joe Andreani"],"i":5404},{"year":1994,"characters":["Betty Brant","Cardiac","J. Jonah Jameson","Joe 'Robbie' Robertson","Marla Madison Jameson","Mary Jane Watson","Quicksand","Sandman","Scorpion","Spider-Man"],"name":"Web of Spider-Man #107-108","link":"web_of_spider-man_107-108","credits":["Stephen Baskerville","Jesse Orozco","Carl Potts","Fred Frederick","Tim Tuohy","Bill Wylie","Alex Saviuk","Terry Kavanagh","Eric Fein"],"i":5405},{"year":1994,"characters":["Aunt May","Bernard Scudder","Bomblast","Evan Swann","Firearm","Mary Jane Watson","Mary Parker Duplicate","Nick Katzenberg","Nova (Rich Rider)","Orwell Taylor","Ramshot","Richard Parker Duplicate","Screech","Sentry (Jury)","Spider-Man"],"name":"Amazing Spider-Man #383-385","link":"amazing_spider-man_383-385","credits":["Mark Bernardo","Danny Fingeroth","Randy Emberlin","Mark Bagley","David Michelinie"],"i":5406},{"year":1994,"characters":["Beck Underwood","Black Tom","Dusk (Demon)","Eddie Brock (Venom)","Juggernaut","Necromancer (Demon)","Venom Symbiote"],"name":"Venom: The Madness #1-3","link":"venom_the_madness_1-3","credits":["Al Milgrom","Mark Bernardo","Danny Fingeroth","Ann Nocenti","Kelley Jones","Keith Williams","John Beatty"],"i":5407},{"year":1994,"characters":["Babet","Gale Patric","Gun Runner","Shakata","Smith"],"name":"Gun Runner #3-6","link":"gun_runner_3-6","credits":["Colin Fawcett","Bambos Georgiou","Anthony Williams","Andy Lanning","Dan Abnett"],"i":5408},{"year":1993,"characters":["Death's Head II (Minion)","Tuck"],"name":"Death's Head II #13-15","link":"deaths_head_ii_13-15","credits":["Stuart Bartlett","Paul Scott","Colin Fawcett","Salvador Larroca","Dan Abnett","David Leach"],"i":5409},{"year":1993,"characters":["Dr. Strange","Geatar","Nebula","Silver Surfer","Thunderstrike","War Machine","Wong"],"name":"Secret Defenders #9-10","link":"secret_defenders_9-10","credits":["Don Hudson","Tom Grindberg","Mike Rockwitz","Ron Marz","Joe Andreani"],"i":5410},{"year":1993,"characters":["Attuma","Black Bolt","Diane Arliss","Gorgon","Karnak","Lockjaw","Medusa","Stingray","Sub-Mariner","Sunfire","Triton"],"name":"Namor #45","link":"namor_45","credits":["Geof Isherwood","Glenn Herdling","Mike Rockwitz","Joe Andreani"],"i":5411},{"year":1994,"characters":["Adora","Andrew Chord","Bernie Dillon","Caps Cooper","Charles Rider","Firestar","Ginger Jaye-Firestone","Gladiator (Shiar)","Gloria Rider","Laura Dunham","Night Thrasher","Nova (Rich Rider)","Robbie Rider","Silhouette","Speedball","Super-Nova"],"name":"Nova #1","link":"nova_1_2","credits":["Mark Stegbauer","Fabian Nicieza","Rob Tokar","Chris Marrinan","Paula Foye"],"i":5412}]

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(107);


/***/ })
/******/ ]);